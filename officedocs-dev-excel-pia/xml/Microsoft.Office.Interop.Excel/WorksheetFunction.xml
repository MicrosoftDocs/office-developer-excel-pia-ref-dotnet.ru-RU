<Type Name="WorksheetFunction" FullName="Microsoft.Office.Interop.Excel.WorksheetFunction">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0e8779a13b1ae831ceba99e1523c885328838f42" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="09/17/2018" />
    <Meta Name="ms.locfileid" Value="20574615" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface WorksheetFunction" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract WorksheetFunction" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.WorksheetFunction" />
  <TypeSignature Language="VB.NET" Value="Public Interface WorksheetFunction" />
  <TypeSignature Language="C++ CLI" Value="public interface class WorksheetFunction" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00020845-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Используется в качестве контейнера для функции листа Excel, которые могут вызываться из Visual Basic.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="_WSFunction">
      <MemberSignature Language="C#" Value="public object _WSFunction (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _WSFunction([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction._WSFunction(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _WSFunction (Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(169)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Зарезервировано для внутреннего использования.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccrInt">
      <MemberSignature Language="C#" Value="public double AccrInt (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 AccrInt([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.AccrInt(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AccrInt (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Arg5 As Object, Arg6 As Object, Optional Arg7 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16853)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Дата - выпуска ценных бумаг дата выпуска.</param>
        <param name="Arg2">Первый процент - дата первой выплаты по безопасности.</param>
        <param name="Arg3">Сопоставление - бумаг</param>
        <param name="Arg4">Частота — годовая купон ставка.</param>
        <param name="Arg5">Параметр-имеет параметр имеет ценных бумаг.</param>
        <param name="Arg6">Частота — количество выплат купон в год.</param>
        <param name="Arg7">Основы - способ вычисления дня.</param>
        <summary>Возвращает начисления процента для безопасности, который составляет периодический процент.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Важно</b>: ввода дат с помощью функции Дата или как результат других формул и функций. Например следует используйте Дата(2008;5;23) для 23-мая 2008 г. Если даты вводятся как текст, могут возникнуть проблемы.</para>
          <para>В следующей таблице описаны значения, которые можно использовать для <paramref name="Arg5" />.</para>
          <list type="table">
            <item>
              <term>0 или опущен</term>
              <description>"МНЕ НРАВИТСЯ" (NASD) 30/360</description>
            </item>
            <item>
              <term>1</term>
              <description>Фактический</description>
            </item>
            <item>
              <term>2</term>
              <description>Фактический/360</description>
            </item>
            <item>
              <term>3</term>
              <description>Фактический/365</description>
            </item>
            <item>
              <term>4</term>
              <description>Европейский 30/360</description>
            </item>
          </list>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccrIntM">
      <MemberSignature Language="C#" Value="public double AccrIntM (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 AccrIntM([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.AccrIntM(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AccrIntM (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Optional Arg5 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16854)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Дата выпуска ценных бумаг.</param>
        <param name="Arg2">Срока.</param>
        <param name="Arg3">Годовая купон ставка.</param>
        <param name="Arg4">Параметр имеет значение безопасности. Если опустить параметр имеет ACCRINTM использует 1000 долларов США.</param>
        <param name="Arg5">Тип вычисления дня.</param>
        <summary>Возвращает начисления процента для безопасности, который составляет доход в роста.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Важно</b>: ввода дат с помощью функции Дата или как результат других формул и функций. Например следует используйте Дата(2008;5;23) для 23-мая 2008 г. Если даты вводятся как текст, могут возникнуть проблемы.</para>
          <para>В следующей таблице описаны значения, которые можно использовать для <paramref name="Arg5" />.</para>
          <list type="table">
            <item>
              <term>0 или опущен</term>
              <description>"МНЕ НРАВИТСЯ" (NASD) 30/360</description>
            </item>
            <item>
              <term>1</term>
              <description>Фактический</description>
            </item>
            <item>
              <term>2</term>
              <description>Фактический/360</description>
            </item>
            <item>
              <term>3</term>
              <description>Фактический/365</description>
            </item>
            <item>
              <term>4</term>
              <description>Европейский 30/360</description>
            </item>
          </list>
          <para>Следующий список содержит сведения, которые необходимо учитывать при работе с ACCRINTM:</para>
          <list type="bullet">
            <item>
              <description>Microsoft Excel хранит даты как целые числа, поэтому они могут использоваться в расчетах. По умолчанию 1 января 1900 — серийный номер 1, а 1 января 2008 — номер 39448, так как интервал в днях 1 января 1900. </description>
            </item>
            <item>
              <description>Проблемы, роста и основы усекаются до целых. </description>
            </item>
            <item>
              <description>Если проблема или роста не допустимая дата, ACCRINTM приведет к ошибке. </description>
            </item>
            <item>
              <description>Если ставка ≤ 0 или если параметр имеет ≤ 0, ACCRINTM приведет к возникновению ошибки. </description>
            </item>
            <item>
              <description>Если основа &lt; 0 или, если основа &gt; 4, ACCRINTM приведет к возникновению ошибки. </description>
            </item>
            <item>
              <description>Если проблема ≥ роста, ACCRINTM приведет к ошибке. </description>
            </item>
            <item>
              <description>ACCRINTM рассчитывается следующим образом: </description>
            </item>
          </list>
          <para>где:</para>
          <para>A = количество дней начисления в соответствии с ежемесячно. Число дней между датой выпуска срок погашения используется для дохода на.</para>
          <para>D = ежегодные год.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Acos">
      <MemberSignature Language="C#" Value="public double Acos (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Acos([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Acos(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Acos (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Acos(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16483)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Косинус угла должна быть от -1 до 1.</param>
        <summary>Возвращает арккосинус или арккосинус числа. Арккосинус — угол, косинус которого равен <paramref name="Arg1" />. Угол дается в радианах в диапазоне от 0 (ноль) до pi.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если вы хотите преобразовать в результате радианов в градусы, умножьте его на 180/pi или используйте метод градусов.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Acosh">
      <MemberSignature Language="C#" Value="public double Acosh (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Acosh([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Acosh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Acosh (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Acosh(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16617)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Любое действительное число равно или больше, чем 1.</param>
        <summary>Возвращает обратный гиперболический косинус числа. Номер должен быть больше или равно 1. Гиперболический арккосинус — это значение, гиперболический косинус которого равен <paramref name="Arg1" />, так что ACOSH(COSH(число)) равняется <paramref name="Arg1" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Acot">
      <MemberSignature Language="C#" Value="public double Acot (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Acot([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Acot(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Acot (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Acot(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16932)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Котангенс искомого угла.</param>
        <summary>Возвращает для вычисления арккотангенса числа, в радианах в диапазоне от 0 до пи.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Acoth">
      <MemberSignature Language="C#" Value="public double Acoth (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Acoth([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Acoth(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Acoth (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Acoth(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16933)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Гиперболический котангенс угла, который будет.</param>
        <summary>Возвращает обратный гиперболический котангенс числа.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Aggregate">
      <MemberSignature Language="C#" Value="public double Aggregate (double Arg1, double Arg2, Microsoft.Office.Interop.Excel.Range Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Aggregate([in]float64 Arg1, [in]float64 Arg2, [in]class Microsoft.Office.Interop.Excel.Range Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Aggregate(System.Double,System.Double,Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Aggregate (Arg1 As Double, Arg2 As Double, Arg3 As Range, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16869)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Номер_функции — число от 1 до 19, которое указывает, какую функцию использовать.</param>
        <param name="Arg2">Параметры — числовое значение, определяющее, какие значения, следует ли игнорировать в расчет диапазона для функции.</param>
        <param name="Arg3">Аргументов ссылка1 - первый числовой аргумент для функции, которые принимают несколько числовых аргументов, для которых требуется статистического значения.</param>
        <param name="Arg4">Ref2 - Ref30 - 2 до 30 для которого вы хотите статистического значения аргументов.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Возвращает сводное значение в списке или базы данных.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Аргументы Ref (Arg3 - аргумент 30), на основе значения <b>Номер_функции</b> применяются следующие ограничения.</para>
          <list type="table">
            <item>
              <term>1-13</term>
              <description>Допустимые типы: любую ячейку ссылок на определенные пересечения объединения имена типов referencesInvalid структурные: фактические данные массивов</description>
              <description>Допустимые типы: любую ячейку ссылок на определенные пересечения объединения имена типов referencesInvalid структурные: фактические данные массивов</description>
              <description>Допустимые типы: любую ячейку ссылок на определенные пересечения объединения имена типов referencesInvalid структурные: фактические данные массивов</description>
            </item>
            <item>
              <term>14-17</term>
              <description>Допустимые типы: любой ссылка на ячейку объединения пересечения определенные имена структурированные ссылки массивов фактических данных</description>
              <description>Допустимые типы: любой ссылка на ячейку объединения пересечения определенные имена структурированные ссылки массивов фактических данных</description>
              <description>Нет ссылки разрешены</description>
            </item>
          </list>
          <para>Если второй аргумент ref требуется, но не указан, выполняется статистическая ОБРАБОТКА возвращает #VALUE! Ошибка.</para>
          <para>Если один или несколько ссылок есть трехмерные ссылки, выполняется статистическая ОБРАБОТКА возвращает #VALUE! значение ошибки.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AmorDegrc">
      <MemberSignature Language="C#" Value="public double AmorDegrc (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 AmorDegrc([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.AmorDegrc(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AmorDegrc (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Arg5 As Object, Arg6 As Object, Optional Arg7 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16850)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Затраты на приобретение актива.</param>
        <param name="Arg2">Дата приобретения актива.</param>
        <param name="Arg3">Дата окончания первого периода.</param>
        <param name="Arg4">Стоимость в конце жизненного цикла актива.</param>
        <param name="Arg5">Период.</param>
        <param name="Arg6">Ставка амортизации.</param>
        <param name="Arg7">За основу года для использования.</param>
        <summary>Возвращает значение амортизации для каждого периода. Эта функция предназначена для французской системы бухгалтерского учета.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если актив приобретается в середине бухгалтерского периода, пропорционально амортизации учитывается. Метод аналогичен <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.AmorLinc(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />, за исключением того, что Коэффициент амортизации применяется в расчет в зависимости от того, срок эксплуатации. В следующей таблице описаны значения, используемые в <paramref name="Arg7" />.</para>
          <list type="table">
            <item>
              <term>0 или опущен</term>
              <description>360 дней (метод NASD)</description>
            </item>
            <item>
              <term>1</term>
              <description>Фактический</description>
            </item>
            <item>
              <term>3</term>
              <description>365 дней в году</description>
            </item>
            <item>
              <term>4</term>
              <description>360 дней в году (европейский метод)</description>
            </item>
          </list>
          <para>Microsoft Excel хранит даты как целые числа, поэтому они могут использоваться в расчетах. По умолчанию 1 января 1900 — серийный номер 1, а 1 января 2008 — номер 39448, так как интервал в днях 1 января 1900. Microsoft Excel для Macintosh использует другую систему дат по умолчанию.</para>
          <para>Эта функция возвращает амортизацию вплоть до последнего периода амортизации или пока суммарная величина амортизации больше, чем затраты на активы минус стоимость.</para>
          <para>Коэффициенты амортизации являются:</para>
          <list type="table">
            <item>
              <term>От 4 до 3 лет</term>
              <description>1.5</description>
            </item>
            <item>
              <term>От 5 до 6 лет</term>
              <description>2</description>
            </item>
            <item>
              <term>Более 6 лет</term>
              <description>2.5</description>
            </item>
          </list>
          <para>Ставка амортизации будет увеличен до 50 процентов для предыдущего периода последнего периода и будут расти до 100 процентов для последнего периода.</para>
          <para>Если срок эксплуатации находится в пределах нуль (0) и 1, 1 и 2, 2 и 3, или 4 и 5, #NUM! возвращается ошибка.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AmorLinc">
      <MemberSignature Language="C#" Value="public double AmorLinc (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 AmorLinc([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.AmorLinc(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AmorLinc (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Arg5 As Object, Arg6 As Object, Optional Arg7 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16851)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Затраты на приобретение актива.</param>
        <param name="Arg2">Дата приобретения актива.</param>
        <param name="Arg3">Дата окончания первого периода.</param>
        <param name="Arg4">Стоимость в конце жизненного цикла актива.</param>
        <param name="Arg5">Период.</param>
        <param name="Arg6">Ставка амортизации.</param>
        <param name="Arg7">За основу года для использования.</param>
        <summary>Возвращает значение амортизации для каждого периода. Эта функция предназначена для французской системы бухгалтерского учета.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если актив приобретается в середине бухгалтерского периода, пропорционально амортизации учитывается. В следующей таблице описаны значения, используемые для <paramref name="Arg7" />.</para>
          <list type="table">
            <item>
              <term>0 или опущен</term>
              <description>360 дней (метод NASD)</description>
            </item>
            <item>
              <term>1</term>
              <description>Фактический</description>
            </item>
            <item>
              <term>3</term>
              <description>365 дней в году</description>
            </item>
            <item>
              <term>4</term>
              <description>360 дней в году (европейский метод)</description>
            </item>
          </list>
          <para>
            <b>Важно</b>: ввода дат с помощью функции Дата или как результат других формул и функций. Например следует используйте Дата(2008;5;23) для 23-мая 2008 г. Если даты вводятся как текст, могут возникнуть проблемы.</para>
          <para>Microsoft Excel хранит даты как целые числа, поэтому они могут использоваться в расчетах. По умолчанию 1 января 1900 — серийный номер 1, а 1 января 2008 — номер 39448, так как интервал в днях 1 января 1900. Microsoft Excel для Macintosh использует другую систему дат по умолчанию.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="And">
      <MemberSignature Language="C#" Value="public bool And (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool And([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.And(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function And (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16420)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">1 до 30 условий, которое требуется проверить, может быть значение <b>true</b> или <b>false</b>.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Возвращает <b>значение true,</b> Если все аргументы имеют <b>значение true</b>; Возвращает <b>значение false</b> , если один или несколько аргумент имеет <b>значение false</b>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Аргументы должны принимать логические значения, такие как <b>true</b> или <b>false</b>или аргументы должны быть массивами или ссылками, которые содержат логические значения. </para>
          <para>Если аргумент массива или ссылки содержит текст или пустые ячейки, эти значения игнорируются. </para>
          <para>Если указанный диапазон не содержит логических значений, этот метод создает код ошибки.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.WorksheetFunction.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>При использовании без квалификатор объекта, данное свойство возвращает <see cref="T:Microsoft.Office.Interop.Excel.Application" /> объект, представляющий приложение Microsoft Excel. При использовании с квалификатор объекта, данное свойство возвращает <see cref="T:Microsoft.Office.Interop.Excel.Application" /> объекта, представляющего создателя указанный объект. Это свойство можно использовать с помощью объекта OLE-автоматизации возвращает приложение этого объекта. Только для чтения.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Arabic">
      <MemberSignature Language="C#" Value="public double Arabic (string Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Arabic([in]string Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Arabic(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Arabic (Arg1 As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Arabic(System::String ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16967)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Arg1">Цифра Roman, которое требуется преобразовать.</param>
        <summary>Преобразование цифры Roman арабские числа.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Asc">
      <MemberSignature Language="C#" Value="public string Asc (string Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Asc([in]string Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Asc(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Asc (Arg1 As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Asc(System::String ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16598)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Arg1">Текст или ссылка на ячейку, которая содержит текст, который требуется изменить. Если текст не содержит все буквы полной ширины, он не изменяется.</param>
        <summary>Двухбайтовых кодировка (DBCS) языков, изменения полной ширины (двухбайтовые) символы символов (однобайтовые) половинной ширины.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Asin">
      <MemberSignature Language="C#" Value="public double Asin (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Asin([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Asin(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Asin (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Asin(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16482)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Синус угла должна быть от -1 до 1.</param>
        <summary>Возвращает арксинус или арксинус числа. Арксинус — угол, синус которого равен <paramref name="Arg1" />. Угол дается в радианах в диапазоне от-пи/2 до пи/2.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Чтобы выразить арксинус в градусы, умножьте результат на 180/ПИ () или используйте <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Degrees(System.Double)" /> метод.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Asinh">
      <MemberSignature Language="C#" Value="public double Asinh (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Asinh([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Asinh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Asinh (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Asinh(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16616)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Любое действительное число.</param>
        <summary>Возвращает гиперболический арксинус числа. Гиперболический арксинус — это значение, гиперболический синус равен <paramref name="Arg1" />, так что Asinh(SINH(число)) равняется <paramref name="Arg1" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Atan2">
      <MemberSignature Language="C#" Value="public double Atan2 (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Atan2([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Atan2(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Atan2 (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Atan2(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16481)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">X координата точки.</param>
        <param name="Arg2">Координата y точки.</param>
        <summary>Возвращает арктангенс, или обратный тангенс, из указанного x и y координаты. Арктангенс — это угол от оси x строку, содержащую координат (0, 0) и в радианах (x, y). Угол задается в радианах между - Пи и пи, исключая - Пи.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Положительных представляет против угол от оси x; отрицательным представляет часовой угол. </para>
          <para>
            <b>ATAN2(x;y)</b> равняется <b>Atan(b/a)</b>, за исключением, равен 0 в <b>функции Atan2</b>. </para>
          <para>Если оба <paramref name="Arg1" /> и <paramref name="Arg2" /> 0, то функция Atan2 возвращает код ошибки. </para>
          <para>Чтобы выразить арктангенс в градусы, умножьте результат на 180/ПИ () или используйте <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Degrees(System.Double)" /> метод.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Atanh">
      <MemberSignature Language="C#" Value="public double Atanh (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Atanh([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Atanh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Atanh (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Atanh(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16618)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Действительное число от 1 до -1.</param>
        <summary>Возвращает гиперболический арктангенс числа. Номер должен быть от -1 до 1 (исключая -1 и 1).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Гиперболический арктангенс числа — это значение, гиперболический тангенс которого равен <b>Arg1</b>, так что <b>ATANH(TANH(x))</b> равняется <paramref name="Arg1" />.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AveDev">
      <MemberSignature Language="C#" Value="public double AveDev (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 AveDev([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.AveDev(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AveDev (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16653)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">1 до 30 аргументов, для которых требуется среднее абсолютных отклонений. Можно также использовать массив или ссылку на массив вместо аргументов, разделенных запятыми.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Возвращает среднее абсолютных значений отклонений точек данных от среднего. СРОТКЛ позволяет оценить особенностей в наборе данных.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>СРОТКЛ влияют единицы измерения входных данных.</b>
          </para>
          <para>Аргументы должны быть номера или имена, массивы или ссылки, которые содержат цифры. </para>
          <para>Учитываются логические значения и текст представления чисел, введите непосредственно в списке аргументов. </para>
          <para>Если аргумент массива или ссылки содержит текст, логические значения или пустые ячейки, эти значения игнорируются; Тем не менее включаются ячейки с помощью нулевое значение. </para>
          <para>Формула для среднего значения отклонения — это:</para>
          <para>На рисунке 1: Формула для среднего значения отклонения</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public double Average (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Average([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Average(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Average (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16389)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">1 до 30 числовых аргументов, для которых требуется среднего.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Возвращает среднее (арифметическое) аргументов.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Аргументы могут быть числа или имена, массивы или ссылки, которые содержат цифры. </para>
          <para>Учитываются логические значения и текст представления чисел, введите непосредственно в списке аргументов. </para>
          <para>Если аргумент массива или ссылки содержит текст, логические значения или пустые ячейки, эти значения игнорируются; Тем не менее включаются ячейки с помощью нулевое значение. </para>
          <para>Аргументы, которые являются значениями ошибки или текст, который не может быть переведены вызывают ошибки. Если вы хотите включить в ссылку на логические значения и текста в процессе вычисления, используйте функцию СРЗНАЧА. </para>
          <para>
            <b>Среднее значение</b> метод меры центральной тенденции, в которой находится центр группы номеров в статистического распределения. Три большинство общие показатели из центральной тенденции являются:</para>
          <list type="bullet">
            <item>
              <description>Среднего геометрического, и подсчитывается путем добавления группы чисел и затем разделив count этих номеров. Например среднем по 2, 3, 3, 5, 7 и 10: 30 разделенные на 6, которого равно 5. </description>
            </item>
            <item>
              <description>Медиана средней числом группы номеров; то есть наполовину номера имеют значения, которые больше, чем Медиана и половину номера имеют значения, которые меньше, чем Медиана. Например медиана 2, 3, 3, 5, 7 и 10 — 4.</description>
            </item>
            <item>
              <description>Режим, который является номером наиболее часто встречающееся в группе номеров. Например режим 2, 3, 3, 5, 7 и 10 — 3.</description>
            </item>
          </list>
          <para>Симметричная распространению набор чисел эти три меры центральной тенденции применяются все. Для наклоном распределения набор чисел они могут быть разными.</para>
          <para>Если средние значения ячеек, имейте в виду различие между пустые ячейки и содержащие нулевые значения, особенно в том случае, если вы не был выбран нулевые значения флажок на вкладке Вид (команда "Параметры", меню "Сервис"). Пустые ячейки не учитываются, но являются нулевые значения.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AverageIf">
      <MemberSignature Language="C#" Value="public double AverageIf (Microsoft.Office.Interop.Excel.Range Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 AverageIf([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.AverageIf(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AverageIf (Arg1 As Range, Arg2 As Object, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16867)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Одна или несколько ячеек в средний.</param>
        <param name="Arg2">Критерий в форме числа, выражения, ссылка на ячейку или текста, который определяет ячеек, которые содержат среднее значение. Например, критерий может быть выражен как 32, «32», "&gt;32", «apples» или B4.</param>
        <param name="Arg3">Фактический набор ячеек, чтобы средний. Если этот параметр опущен, используется диапазон.</param>
        <summary>Возвращает среднее арифметические операторы значение всех ячеек в диапазоне, которые соответствуют заданному критерию.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>В диапазоне ячеек, содержащих <b>true</b> или <b>false</b> , игнорируются. </para>
          <para>Если ячейки в диапазоне или average_range пустые ячейки, <b>СРЗНАЧЕСЛИ</b> игнорирует его. </para>
          <para>Если ячейка в условия пустое, <b>СРЗНАЧЕСЛИ</b> обрабатывает ее как значение 0. </para>
          <para>Если ни одной ячейки в диапазоне соответствуют критериям <b>СРЗНАЧЕСЛИ</b> создает код ошибки. </para>
          <para>Можно использовать подстановочные знаки, вопросительные знаки (?) и звездочки (*) в условия. Вопросительный знак соответствует любой отдельный знак; Звездочка соответствует любой последовательности символов. Если вы хотите найти вопросительный знак или звездочка, введите тильдой (~) перед знаком. </para>
          <para>Average_range не нужно быть размера и формы как диапазон. Фактические ячейки, которые содержат среднее значение определяется с помощью верхней, левой ячейки в average_range как начало ячейки, а затем Включение в размеру и форме диапазоном ячеек, которые соответствуют. Пример:</para>
          <list type="table">
            <item>
              <term>ЯЧЕЙКИ A1: A5</term>
              <description>B1: B5.</description>
              <description>B1: B5.</description>
            </item>
            <item>
              <term>ЯЧЕЙКИ A1: A5</term>
              <description>B1: B3</description>
              <description>B1: B5.</description>
            </item>
            <item>
              <term>A1: B4</term>
              <description>C1:D4</description>
              <description>C1:D4</description>
            </item>
            <item>
              <term>A1: B4</term>
              <description>C1:C2</description>
              <description>C1:D4</description>
            </item>
          </list>
          <para>
            <b>СРЗНАЧЕСЛИ</b> метод меры центральной тенденции, в которой находится центр группы номеров в статистического распределения. Три большинство общие показатели из центральной тенденции являются:</para>
          <list type="bullet">
            <item>
              <description>Среднего геометрического, и подсчитывается путем добавления группы чисел и затем разделив count этих номеров. Например среднем по 2, 3, 3, 5, 7 и 10: 30 разделенные на 6, которого равно 5. </description>
            </item>
            <item>
              <description>Медиана средней числом группы номеров; то есть наполовину номера имеют значения, которые больше, чем Медиана и половину номера имеют значения, которые меньше, чем Медиана. Например медиана 2, 3, 3, 5, 7 и 10 — 4.</description>
            </item>
            <item>
              <description>Режим, который является номером наиболее часто встречающееся в группе номеров. Например режим 2, 3, 3, 5, 7 и 10 — 3.</description>
            </item>
          </list>
          <para>Симметричная распространению набор чисел эти три меры центральной тенденции применяются все. Для наклоном распределения набор чисел они могут быть разными.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AverageIfs">
      <MemberSignature Language="C#" Value="public double AverageIfs (Microsoft.Office.Interop.Excel.Range Arg1, Microsoft.Office.Interop.Excel.Range Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 AverageIfs([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]class Microsoft.Office.Interop.Excel.Range Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.AverageIfs(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AverageIfs (Arg1 As Range, Arg2 As Range, Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16868)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Один или несколько диапазонов в котором для оценки связанных критериев.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <summary>Возвращает среднее арифметические операторы значение всех ячеек, которые соответствуют несколько условий.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если ячейки в average_range пустую ячейку, <b>AverageIfs</b> игнорирует его. </para>
          <para>Если пустые ячейки в диапазоне условий, <b>AverageIfs</b> обрабатывает ее как значение 0. </para>
          <para>В диапазоне ячеек, которые содержат <b>значение true,</b> интерпретируются как 1. в диапазоне ячеек, которые содержат <b>значение false</b> , интерпретируются как нуль (0). </para>
          <para>Каждой ячейки в average_range используется в расчета среднего только при выполнении все соответствующие условиям, указанным в этой ячейке. </para>
          <para>Если ячеек в average_range пустой или содержит текстовые значения, которые не могут быть преобразованы в числа, <b>AverageIfs</b> приводит к ошибке. </para>
          <para>Если нет ячеек, которые соответствуют условиям, <b>AverageIfs</b> генерирует ошибку. </para>
          <para>Можно использовать подстановочные знаки, вопросительные знаки (?) и звездочки (*) в условия. Вопросительный знак соответствует любой отдельный знак; Звездочка соответствует любой последовательности символов. Если вы хотите найти вопросительный знак или звездочка, введите тильдой (~) перед знаком. </para>
          <para>Каждый criteria_range не нужно быть размера и формы как average_range. Фактические ячейки, которые содержат среднее значение определяется с помощью верхней, левой ячейки в этой criteria_range как начало ячейки, а затем Включение в размеру и форме диапазоном ячеек, которые соответствуют. Пример:</para>
          <list type="table">
            <item>
              <term>ЯЧЕЙКИ A1: A5</term>
              <description>B1: B5.</description>
              <description>B1: B5.</description>
            </item>
            <item>
              <term>ЯЧЕЙКИ A1: A5</term>
              <description>B1: B3</description>
              <description>B1: B5.</description>
            </item>
            <item>
              <term>A1: B4</term>
              <description>C1:D4</description>
              <description>C1:D4</description>
            </item>
            <item>
              <term>A1: B4</term>
              <description>C1:C2</description>
              <description>C1:D4</description>
            </item>
          </list>
          <para>
            <b>AverageIfs</b> функция меры центральной тенденции, в которой находится центр группы номеров в статистического распределения. Три большинство общие показатели из центральной тенденции являются:</para>
          <list type="bullet">
            <item>
              <description>Среднего геометрического, и подсчитывается путем добавления группы чисел и затем разделив count этих номеров. Например среднем по 2, 3, 3, 5, 7 и 10: 30 разделенные на 6, которого равно 5. </description>
            </item>
            <item>
              <description>Медиана средней числом группы номеров; то есть наполовину номера имеют значения, которые больше, чем Медиана и половину номера имеют значения, которые меньше, чем Медиана. Например медиана 2, 3, 3, 5, 7 и 10 — 4.</description>
            </item>
            <item>
              <description>Режим, который является номером наиболее часто встречающееся в группе номеров. Например режим 2, 3, 3, 5, 7 и 10 — 3.</description>
            </item>
          </list>
          <para>Симметричная распространению набор чисел эти три меры центральной тенденции применяются все. Для наклоном распределения набор чисел они могут быть разными.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BahtText">
      <MemberSignature Language="C#" Value="public string BahtText (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string BahtText([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.BahtText(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function BahtText (Arg1 As Double) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ BahtText(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16752)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Номер, который требуется преобразовать в текст или ссылка на ячейку, содержащую число, либо формула, которое оценивается как число.</param>
        <summary>Преобразует число тайский текст и Добавление суффикса «Бат».</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Base">
      <MemberSignature Language="C#" Value="public string Base (double Arg1, double Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Base([in]float64 Arg1, [in]float64 Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Base(System.Double,System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Base (Arg1 As Double, Arg2 As Double, Optional Arg3 As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16955)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Номер, который требуется преобразовать.</param>
        <param name="Arg2">Базовый представление, которое требуется преобразовать число в.</param>
        <param name="Arg3">Минимальная длина Возвращенная строка. Если этот параметр опущен нуля в начале не добавляются.</param>
        <summary>Преобразует число в текстовое представление с заданным представление (базовый).</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BesselI">
      <MemberSignature Language="C#" Value="public double BesselI (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 BesselI([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.BesselI(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BesselI (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double BesselI(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16812)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Значение, для которого вычисляется функция.</param>
        <param name="Arg2">Порядок функции Бесселя. Если n не является целым числом, оно сокращается.</param>
        <summary>Возвращает функцию Бесселя, что эквивалентно функции Бесселя для чисто мнимого аргумента.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если x не число, то БЕССЕЛЬ возвращает #VALUE! значение ошибки. </para>
          <para>Если n не число, то БЕССЕЛЬ создает код ошибки. </para>
          <para>При n &lt; 0, то БЕССЕЛЬ генерирует ошибку. </para>
          <para>N й порядок изменения Бесселя функции переменной x — это:</para>
          <para>На рисунке 1: Функция Бесселя переменной x</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BesselJ">
      <MemberSignature Language="C#" Value="public double BesselJ (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 BesselJ([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.BesselJ(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BesselJ (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double BesselJ(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16809)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Значение, для которого вычисляется функция.</param>
        <param name="Arg2">Порядок функции Бесселя. Если n не является целым числом, оно сокращается.</param>
        <summary>Возвращает функцию Бесселя.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если x не число, <b>то БЕССЕЛЬ</b> генерирует ошибку. </para>
          <para>Если n не число, <b>то БЕССЕЛЬ</b> возвращает генерирует ошибку. </para>
          <para>При n &lt; 0, <b>то БЕССЕЛЬ</b> генерирует ошибку. </para>
          <para>N-порядка функция Бесселя переменной x — это: </para>
          <para>На рисунке 1: Функция Бесселя переменной x</para>
          <para></para>
          <para></para>
          <para>где:</para>
          <para>На рисунке 2: Гамма-функция</para>
          <para></para>
          <para></para>
          <para>— это Гамма-функция.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BesselK">
      <MemberSignature Language="C#" Value="public double BesselK (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 BesselK([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.BesselK(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BesselK (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double BesselK(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16810)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Значение, для которого вычисляется функция.</param>
        <param name="Arg2">Порядок функции. Если n не является целым числом, оно сокращается.</param>
        <summary>Возвращает функцию Бесселя, что эквивалентно функции Бесселя для чисто мнимого аргумента.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если x является числом, <b>BesselK</b> генерирует ошибку. </para>
          <para>Если n является числом, <b>BesselK</b> генерирует ошибку. </para>
          <para>При n &lt; 0, <b>BesselK</b> генерирует ошибку. </para>
          <para>N й порядок изменения Бесселя функции переменной x — это: </para>
          <para>На рисунке 1: Функция Бесселя переменной x</para>
          <para></para>
          <para></para>
          <para>где Jn и Yn являются функциями Бесселя J и Y, соответственно.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BesselY">
      <MemberSignature Language="C#" Value="public double BesselY (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 BesselY([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.BesselY(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BesselY (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double BesselY(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16811)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Значение, для которого вычисляется функция.</param>
        <param name="Arg2">Порядок функции. Если n не является целым числом, оно сокращается.</param>
        <summary>Возвращает функция Бесселя, которая также называется функцией Вебера или функцией Неймана.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если x является числом, <b>BesselY</b> генерирует ошибку. </para>
          <para>Если n является числом, <b>BesselY</b> генерирует ошибку. </para>
          <para>При n &lt; 0, <b>BesselY</b> генерирует ошибку. </para>
          <para>N-порядка функция Бесселя переменной x — это: </para>
          <para>На рисунке 1: Функция Бесселя переменной x</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Beta_Dist">
      <MemberSignature Language="C#" Value="public double Beta_Dist (double Arg1, double Arg2, double Arg3, bool Arg4, object Arg5, object Arg6);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Beta_Dist([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]bool Arg4, [in]object Arg5, [in]object Arg6) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Beta_Dist(System.Double,System.Double,System.Double,System.Boolean,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Beta_Dist (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Boolean, Optional Arg5 As Object, Optional Arg6 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16909)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Boolean" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Значение в интервале между A и B, для которого вычисляется функция.</param>
        <param name="Arg2">Параметр буква распределения.</param>
        <param name="Arg3">Параметр бета-версии распределения.</param>
        <param name="Arg4">Накопительный пакет — логическое значение, определяющее форму функции. Если накопительный пакет — это <b>значение true</b>, бета-версии. Возвращает ДИСТ расчета интегральной функции распределения; Если <b>значение false</b>, то возвращается весовая функция распределения.</param>
        <param name="Arg5">Это необязательная нижняя граница интервала изменения x.</param>
        <param name="Arg6">Необязательная верхняя граница интервала изменения x.</param>
        <summary>Возвращает бета-версии интегральной функции распределения.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Бета-распределение обычно используется для изучения вариации в процентах какой-либо величины, например доли дня, которую люди проводят у телевизора:</para>
          <list type="bullet">
            <item>
              <description>Если аргумент не является числом, <b>Beta_Dist</b> возвращает #VALUE! значение ошибки.</description>
            </item>
            <item>
              <description>Если альфа ≤ 0 или бета ≤ 0, <b>Beta_Dist</b> генерирует ошибку.</description>
            </item>
            <item>
              <description>Если x &lt; A, x &gt; B или A = B, <b>Beta_Dist</b> генерирует ошибку.</description>
            </item>
            <item>
              <description>Если опустить значения для A и B (нижней или верхней границы), <b>Beta_Dist</b> использует стандартные интегральное бета-распределение, так что A = 0 и B = 1.</description>
            </item>
          </list>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Beta_Inv">
      <MemberSignature Language="C#" Value="public double Beta_Inv (double Arg1, double Arg2, double Arg3, object Arg4, object Arg5);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Beta_Inv([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]object Arg4, [in]object Arg5) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Beta_Inv(System.Double,System.Double,System.Double,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Beta_Inv (Arg1 As Double, Arg2 As Double, Arg3 As Double, Optional Arg4 As Object, Optional Arg5 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16910)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Вероятность, связанная с бета-версии.</param>
        <param name="Arg2">Параметр буква распределения.</param>
        <param name="Arg3">Параметр бета-версии распределения.</param>
        <param name="Arg4">Это необязательная нижняя граница интервала изменения x.</param>
        <param name="Arg5">Необязательная верхняя граница интервала изменения x.</param>
        <summary>Возвращает обратное расчета интегральной функции распределения для указанного бета-распределения. То есть если вероятность = Beta_Dist(x,...), то Beta_Inv(probability,...) = x.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Бета-распределение можно использовать в планирование времени возможного завершения модели проекта данное время завершения ожидаемых и особенностей:</para>
          <list type="bullet">
            <item>
              <description>Если аргумент не является числом, <b>Beta_Inv</b> генерирует ошибку.</description>
            </item>
            <item>
              <description>Если альфа ≤ 0 или бета ≤ 0, <b>Beta_Inv</b> генерирует ошибку.</description>
            </item>
            <item>
              <description>Если вероятность ≤ 0 или вероятность &gt; 1, <b>Beta_Inv</b> генерирует ошибку.</description>
            </item>
            <item>
              <description>Если опустить значения для A и B (нижней или верхней границы), <b>Beta_Inv</b> использует стандартные интегральное бета-распределение, так что A = 0 и B = 1.</description>
            </item>
          </list>
          <para>Задано значение вероятности, <b>Beta_Inv</b> ищет значение x, Beta_Dist (x, альфа, бета-версии, значение TRUE, A, B) = вероятность. Таким образом, точность <b>Beta_Inv</b> зависит от точности типа <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Beta_Dist(System.Double,System.Double,System.Double,System.Boolean,System.Object,System.Object)" />. <b>Beta_Inv</b> использует метод последовательного поиска.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BetaDist">
      <MemberSignature Language="C#" Value="public double BetaDist (double Arg1, double Arg2, double Arg3, object Arg4, object Arg5);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 BetaDist([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]object Arg4, [in]object Arg5) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.BetaDist(System.Double,System.Double,System.Double,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BetaDist (Arg1 As Double, Arg2 As Double, Arg3 As Double, Optional Arg4 As Object, Optional Arg5 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16654)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Значение в интервале между A и B, для которого вычисляется функция.</param>
        <param name="Arg2">Параметр распределения.</param>
        <param name="Arg3">Параметр распределения.</param>
        <param name="Arg4">Это необязательная нижняя граница интервала изменения x.</param>
        <param name="Arg5">Необязательная верхняя граница интервала изменения x.</param>
        <summary>Возвращает бета-версии интегральной функции распределения.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Внимание!</b>: Эта функция была заменена один или несколько новых функций, который может предоставлять улучшенные точность и лучше, имена которых отражают их использования. Эта функция по-прежнему доступна для обеспечения совместимости с предыдущими версиями Excel. Тем не менее если обратной совместимости не требуется, можно теперь с помощью новых функций, так как они более точно описывает их функциональных возможностей. Дополнительные сведения о новой функции можно <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Beta_Dist(System.Double,System.Double,System.Double,System.Boolean,System.Object,System.Object)" /> метод.</para>
          <para>Бета-распределение обычно используется для изучения вариации в процентах какой-либо величины, например доли дня, которую люди проводят у телевизора.</para>
          <list type="bullet">
            <item>
              <description>Если аргумент не является числом, <b>БЕТАРАСП</b> возвращает #VALUE! значение ошибки.</description>
            </item>
            <item>
              <description>Если альфа ≤ 0 или бета ≤ 0, <b>то функция БЕТАРАСП</b> генерирует ошибку.</description>
            </item>
            <item>
              <description>Если x &lt; A, x &gt; B или A = B, <b>БЕТАРАСП</b> генерирует ошибку.</description>
            </item>
            <item>
              <description>Если опустить значения для A и B, <b>БЕТАРАСП</b> использует стандартные интегральное бета-распределение, так что A = 0 и B = 1.</description>
            </item>
          </list>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BetaInv">
      <MemberSignature Language="C#" Value="public double BetaInv (double Arg1, double Arg2, double Arg3, object Arg4, object Arg5);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 BetaInv([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]object Arg4, [in]object Arg5) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.BetaInv(System.Double,System.Double,System.Double,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BetaInv (Arg1 As Double, Arg2 As Double, Arg3 As Double, Optional Arg4 As Object, Optional Arg5 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16656)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Вероятность, связанная с бета-версии.</param>
        <param name="Arg2">Параметр буква распределения.</param>
        <param name="Arg3">Параметр бета-версии распределения.</param>
        <param name="Arg4">Это необязательная нижняя граница интервала изменения x.</param>
        <param name="Arg5">Необязательная верхняя граница интервала изменения x.</param>
        <summary>Возвращает обратное расчета интегральной функции распределения для указанного бета-распределения. То есть если вероятность = БЕТАРАСП(x;...), то БЕТАОБР(вероятность;...) = x.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Внимание!</b>: Эта функция была заменена один или несколько новых функций, который может предоставлять улучшенные точность и лучше, имена которых отражают их использования. Эта функция по-прежнему доступна для обеспечения совместимости с предыдущими версиями Excel. Тем не менее если обратной совместимости не требуется, можно теперь с помощью новых функций, так как они более точно описывает их функциональных возможностей. Дополнительные сведения о новой функции можно <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Beta_Inv(System.Double,System.Double,System.Double,System.Object,System.Object)" /> метод.</para>
          <para>Бета-распределение можно использовать в планирование времени возможного завершения модели проекта данное время завершения ожидаемых и особенностей.</para>
          <list type="bullet">
            <item>
              <description>Если аргумент не является числом, <b>БЕТАОБР</b> генерирует ошибку.</description>
            </item>
            <item>
              <description>Если альфа ≤ 0 или бета ≤ 0, <b>то функция БЕТАОБР</b> генерирует ошибку. </description>
            </item>
            <item>
              <description>Если вероятность ≤ 0 или вероятность &gt; 1, <b>БЕТАОБР</b> генерирует ошибку. </description>
            </item>
            <item>
              <description>Если опустить значения для A и B, <b>БЕТАОБР</b> использует стандартные интегральное бета-распределение, так что A = 0 и B = 1.</description>
            </item>
          </list>
          <para>Задано значение вероятности, <b>то функция БЕТАОБР</b> ищет значение x, БЕТАРАСП (x, альфа, бета-версии, A, B) = вероятность. Таким образом, точность <b>функции БЕТАОБР</b> зависит от точности типа <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.BetaDist(System.Double,System.Double,System.Double,System.Object,System.Object)" />. <b>БЕТАОБР</b> использует метод последовательного поиска. Если поиск не завершено после 100 итераций, функция создает код ошибки.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Bin2Dec">
      <MemberSignature Language="C#" Value="public string Bin2Dec (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Bin2Dec([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Bin2Dec(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Bin2Dec (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Bin2Dec(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16777)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Двоичное число, которое требуется преобразовать. Число не может содержать более 10 знаков (10 бит). Старший бит числа является знаков. Остальные 9 бит являются бит величины. Отрицательные числа, представленные в дополнительном формате.</param>
        <summary>Преобразует двоичное число знаков после запятой.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если число не является допустимым двоичным числом или содержит более 10 знаков (10 бит), Bin2Dec генерирует ошибку.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Bin2Hex">
      <MemberSignature Language="C#" Value="public string Bin2Hex (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Bin2Hex([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Bin2Hex(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Bin2Hex (Arg1 As Object, Optional Arg2 As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16779)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Двоичное число, которое требуется преобразовать. Число не может содержать более 10 знаков (10 бит). Старший бит числа является знаков. Остальные 9 бит являются бит величины. Отрицательные числа, представленные в дополнительном формате.</param>
        <param name="Arg2">Число символов, которые будут использовать. Если опущен местах, <b>Bin2Hex</b> использует минимальное необходимое количество знаков. Местах полезен для заполнения возвращаемое значение с начальные нули.</param>
        <summary>Преобразует двоичное число в шестнадцатеричном представлении.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если число не является допустимым двоичным числом или содержит более 10 знаков (10 бит), <b>Bin2Hex</b> приводит к ошибке. </para>
          <para>Если число отрицательно, <b>Bin2Hex</b> игнорирует местах и возвращает 10-разрядное шестнадцатеричное число. </para>
          <para>Если <b>Bin2Hex</b> требуется большее число помещает символов, приведет к ошибке. </para>
          <para>Если местах не является целым числом, оно сокращается. </para>
          <para>Если аргумент является местах, <b>Bin2Hex</b> приводит к ошибке. </para>
          <para>Если отрицательно местах <b>Bin2Hex</b> приводит к ошибке.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Bin2Oct">
      <MemberSignature Language="C#" Value="public string Bin2Oct (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Bin2Oct([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Bin2Oct(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Bin2Oct (Arg1 As Object, Optional Arg2 As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16778)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Двоичное число, которое требуется преобразовать. Число не может содержать более 10 знаков (10 бит). Старший бит числа является знаков. Остальные 9 бит являются бит величины. Отрицательные числа, представленные в дополнительном формате.</param>
        <param name="Arg2">Число символов, которые будут использовать. Если опущен местах, <b>Bin2Oct</b> использует минимальное необходимое количество знаков. Местах полезен для заполнения возвращаемое значение с начальные нули.</param>
        <summary>Преобразование двоичных числа в восьмеричном формате.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если число не является допустимым двоичным числом или содержит более 10 знаков (10 бит), <b>Bin2Oct</b> приводит к ошибке. </para>
          <para>Если число отрицательно, <b>Bin2Oct</b> игнорирует местах и возвращает 10-значное число восьмеричном формате. </para>
          <para>Если <b>Bin2Oct</b> требуется большее число помещает символов, приведет к ошибке. </para>
          <para>Если местах не является целым числом, оно сокращается. </para>
          <para>Если аргумент является местах, <b>Bin2Oct</b> приводит к ошибке. </para>
          <para>Если отрицательно местах <b>Bin2Oct</b> приводит к ошибке.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Binom_Dist">
      <MemberSignature Language="C#" Value="public double Binom_Dist (double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Binom_Dist([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]bool Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Binom_Dist(System.Double,System.Double,System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Binom_Dist (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Binom_Dist(double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16870)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Arg1">Указанного — количество успешных испытаний.</param>
        <param name="Arg2">Ознакомительные версии — число независимых испытаний.</param>
        <param name="Arg3">Данной - вероятность успеха каждого испытания.</param>
        <param name="Arg4">Накопительный пакет — логическое значение, определяющее форму функции. Если накопительный пакет имеет <b>значение True</b>, а затем <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Binom_Dist(System.Double,System.Double,System.Double,System.Boolean)" /> метод возвращает расчета интегральной функции распределения, который является вероятность того, что в большинстве указанного успешных запросов; Если <b>значение False</b>, возвращается функция распределения, то есть вероятность того, что указанного успешных запросов.</param>
        <summary>Возвращает отдельные биномиальное распределение.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Используйте метод <b>Binom_Dist</b> проблемы с фиксированным числом тестов или испытаний, когда результатом любого испытания только успешное или неудачное, испытания независимы и вероятность успеха постоянной в течение эксперимент. Например метод <b>Binom_Dist</b> можно рассчитать вероятность того, что два из трех следующих новорожденных штекер. </para>
          <list type="bullet">
            <item>
              <description>Указанного и пробные версии усекаются до целых. </description>
            </item>
            <item>
              <description>Если указанного, пробные версии или данной является числом, метод <b>Binom_Dist</b> приводит к ошибке. </description>
            </item>
            <item>
              <description>Если указанного &lt; 0 или указанного &gt; пробные версии, метод <b>Binom_Dist</b> создает сообщение об ошибке. </description>
            </item>
            <item>
              <description>Если данной &lt; 0 или данной &gt; 1, метод <b>Binom_Dist</b> создает сообщение об ошибке. Биноминальная весовая функция — это: </description>
            </item>
          </list>
          <para>Где:</para>
          <para>На рисунке 2: формула</para>
          <para></para>
          <para></para>
          <para>— Это COMBIN(n,x).</para>
          <para>Интегральное биномиальное распределение — это:</para>
          <para>На рисунке 3: Интегральное биномиальное распределение</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Binom_Dist_Range">
      <MemberSignature Language="C#" Value="public double Binom_Dist_Range (double Arg1, double Arg2, double Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Binom_Dist_Range([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Binom_Dist_Range(System.Double,System.Double,System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Binom_Dist_Range (Arg1 As Double, Arg2 As Double, Arg3 As Double, Optional Arg4 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16958)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число независимых испытаний.</param>
        <param name="Arg2">Вероятность успеха каждого испытания.</param>
        <param name="Arg3">Число успешных испытаний.</param>
        <param name="Arg4">Если этот параметр указан, эта функция возвращает вероятность, что число успешных испытаний должен находиться между Arg3 и Arg4.</param>
        <summary>Возвращает вероятность пробного результатов с помощью биномиальное распределение.</summary>
        <returns>Double</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Binom_Inv">
      <MemberSignature Language="C#" Value="public double Binom_Inv (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Binom_Inv([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Binom_Inv(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Binom_Inv (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Binom_Inv(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16871)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Ознакомительные версии - число Бернулли.</param>
        <param name="Arg2">Данной - вероятность успеха каждого испытания.</param>
        <param name="Arg3">Альфа - это значение критерия.</param>
        <summary>Возвращает значение обратное вероятности биномиальное распределение отдельных терминов.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если пробные версии, данной или буква является числом, метод <b>Binom_Inv</b> приводит к ошибке. </para>
          <para>Ознакомительные версии не является целым числом, усекается. </para>
          <para>Если пробные версии &lt; 0, метод <b>Binom_Inv</b> создает сообщение об ошибке. </para>
          <para>Если данной &lt; 0 или данной &gt; 1, метод <b>Binom_Inv</b> создает сообщение об ошибке. </para>
          <para>Если альфа &lt; 0 или альфа &gt; 1, метод <b>Binom_Inv</b> создает сообщение об ошибке.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BinomDist">
      <MemberSignature Language="C#" Value="public double BinomDist (double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 BinomDist([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]bool Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.BinomDist(System.Double,System.Double,System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function BinomDist (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double BinomDist(double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16657)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число успешных испытаний.</param>
        <param name="Arg2">Число независимых испытаний.</param>
        <param name="Arg3">Вероятность успеха каждого испытания.</param>
        <param name="Arg4">Логическое значение, определяющее форму функции. Если накопительный пакет равно <b>true</b>, <b>БИНОМРАСП</b> возвращает расчета интегральной функции распределения, являющийся вероятность того, что не более указанного успешных запросов; Если <b>значение false</b>, возвращается функция распределения, то есть вероятность того, что указанного успешных запросов.</param>
        <summary>Возвращает отдельные биномиальное распределение.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Используйте <b>БИНОМРАСП</b> проблемы с фиксированным числом тестов или испытаний, когда результатом любого испытания только успешное или неудачное, испытания независимы и вероятность успеха постоянной в течение эксперимент. Например <b>БИНОМРАСП</b> может вычислить вероятность того, что два из трех следующих новорожденных штекер. </para>
          <para>Указанного и пробные версии усекаются до целых. </para>
          <para>Если указанного, пробные версии или данной является числом, <b>БИНОМРАСП</b> приводит к ошибке. </para>
          <para>Если указанного &lt; 0 или указанного &gt; пробные версии, <b>БИНОМРАСП</b> , приведет к ошибке. </para>
          <para>Если данной &lt; 0 или данной &gt; 1, <b>БИНОМРАСП</b> , приведет к ошибке. </para>
          <para>Биноминальная весовая функция — это: </para>
          <para>На рисунке 1: Биноминальная весовая функция распределения</para>
          <para></para>
          <para></para>
          <para>Где:</para>
          <para>На рисунке 2: формула</para>
          <para></para>
          <para></para>
          <para>— Это COMBIN(n,x).</para>
          <para>Интегральное биномиальное распределение — это:</para>
          <para>На рисунке 3: Интегральное биномиальное распределение</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Bitand">
      <MemberSignature Language="C#" Value="public double Bitand (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Bitand([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Bitand(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Bitand (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Bitand(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16946)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Десятичное представление двоичных номер, необходимый для оценки.</param>
        <param name="Arg2">Десятичное представление двоичных номер, необходимый для оценки.</param>
        <summary>Возвращает «Побитовое и» двух чисел.</summary>
        <returns>ДАННЫЕ ТИПА DOUBLE</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bitlshift">
      <MemberSignature Language="C#" Value="public double Bitlshift (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Bitlshift([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Bitlshift(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Bitlshift (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Bitlshift(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16949)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Десятичное представление двоичных номер, необходимый для оценки.</param>
        <param name="Arg2">Число бит, которые вы хотите shift Arg1 влево.</param>
        <summary>Возвращает число значение сдвинуто влево на shift_amount бит.</summary>
        <returns>ДАННЫЕ ТИПА DOUBLE</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bitor">
      <MemberSignature Language="C#" Value="public double Bitor (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Bitor([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Bitor(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Bitor (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Bitor(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16947)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Десятичное представление двоичных номер, необходимый для оценки.</param>
        <param name="Arg2">Десятичное представление двоичных номер, необходимый для оценки.</param>
        <summary>Возвращает Побитовое OR для двух чисел.</summary>
        <returns>ДАННЫЕ ТИПА DOUBLE</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bitrshift">
      <MemberSignature Language="C#" Value="public double Bitrshift (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Bitrshift([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Bitrshift(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Bitrshift (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Bitrshift(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16950)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Десятичное представление двоичных номер, необходимый для оценки.</param>
        <param name="Arg2">Число бит, которые вы хотите сместиться Arg1 вправо.</param>
        <summary>Возвращает значение числа сдвинуто вправо биты shift_amount.</summary>
        <returns>ДАННЫЕ ТИПА DOUBLE</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bitxor">
      <MemberSignature Language="C#" Value="public double Bitxor (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Bitxor([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Bitxor(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Bitxor (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Bitxor(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16948)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Десятичное представление двоичных номер, необходимый для оценки.</param>
        <param name="Arg2">Десятичное представление двоичных номер, необходимый для оценки.</param>
        <summary>Возвращает побитовое «исключительных или» двух чисел.</summary>
        <returns>ДАННЫЕ ТИПА DOUBLE</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ceiling">
      <MemberSignature Language="C#" Value="public double Ceiling (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Ceiling([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Ceiling(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ceiling (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Ceiling(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16672)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Номер — значение, которое требуется округлить.</param>
        <param name="Arg2">Значение - множитель для которого требуется округлить.</param>
        <summary>Возвращает число, округленное, от нуля до ближайшего имеет значения.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Внимание!</b>: Эта функция была заменена один или несколько новых функций, который может предоставлять улучшенные точность и лучше, имена которых отражают их использования. Эта функция по-прежнему доступна для обеспечения совместимости с предыдущими версиями Excel. Тем не менее если обратной совместимости не требуется, можно теперь с помощью новых функций, так как они более точно описывает их функциональных возможностей. Дополнительные сведения о новой функции можно <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Ceiling_Precise(System.Double,System.Object)" /> метод.</para>
          <para>К примеру Если необходимо запретить использование пенсов в своих ценах и продукта — это 442, используйте формулу Ceiling(4.42,0.05) чтобы округлить цену ближайшего 10.</para>
          <para>Если аргумент не является числом, <b>потолок</b> приводит к ошибке. </para>
          <para>Независимо от знака числа, оно будет округлено после адаптации от нуля. Если число равняется точное несколькими имеет значения, то округления не производится. </para>
          <para>Если число и точность имеют различные знаки, <b>потолок</b> приводит к ошибке.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Ceiling_Math">
      <MemberSignature Language="C#" Value="public double Ceiling_Math (double Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Ceiling_Math([in]float64 Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Ceiling_Math(System.Double,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ceiling_Math (Arg1 As Double, Optional Arg2 As Object, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16975)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Значение, которое требуется округлить.</param>
        <param name="Arg2">Множитель для которого требуется округлить.</param>
        <param name="Arg3">Когда заданного и ненулевое значение, эта функция будет округления от нуля.</param>
        <summary>Округляет число до ближайшего целого числа или значения.</summary>
        <returns>ДАННЫЕ ТИПА DOUBLE</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ceiling_Precise">
      <MemberSignature Language="C#" Value="public double Ceiling_Precise (double Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Ceiling_Precise([in]float64 Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Ceiling_Precise(System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ceiling_Precise (Arg1 As Double, Optional Arg2 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16930)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Номер — значение, которое требуется округлить.</param>
        <param name="Arg2">Значение - множитель для которого требуется округлить.</param>
        <summary>Возвращает заданное число округляется до ближайшего имеет значения.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>К примеру Если необходимо запретить использование пенсов в своих ценах и продукта — это 442, используйте формулу Ceiling(4.42,0.05) чтобы округлить цену ближайшего 10.</para>
          <para>В зависимости от входа число и точность аргументов метод <b>Ceiling_Precise</b> округляет от или к нулю.</para>
          <list type="table">
            <item>
              <term>-/-</term>
              <description>Округляет число до нуля.</description>
            </item>
            <item>
              <term>+/+</term>
              <description>Округляет от нуля.</description>
            </item>
            <item>
              <term>-/+</term>
              <description>Округляет число до нуля.</description>
            </item>
            <item>
              <term>+/-</term>
              <description>Округляет от нуля.</description>
            </item>
          </list>
          <para>Если аргумент не является числом, <b>Ceiling_Precise</b> приводит к ошибке. </para>
          <para>Если число равняется точное несколькими имеет значения, то округления не производится.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChiDist">
      <MemberSignature Language="C#" Value="public double ChiDist (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ChiDist([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiDist(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChiDist (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double ChiDist(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16658)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Значение, для которого требуется вычислить распределение.</param>
        <param name="Arg2">Число степеней свободы.</param>
        <summary>Возвращает одностороннюю вероятность распределения хи-квадрат.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Внимание!</b>: Эта функция была заменена один или несколько новых функций, который может предоставлять улучшенные точность и лучше, имена которых отражают их использования. Эта функция по-прежнему доступна для обеспечения совместимости с предыдущими версиями Excel. Тем не менее если обратной совместимости не требуется, можно теперь с помощью новых функций, так как они более точно описывает их функциональных возможностей. Дополнительные сведения о новых функциях можно <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiSq_Dist_RT(System.Double,System.Double)" /> и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiSq_Dist(System.Double,System.Double,System.Boolean)" /> методы.</para>
          <para>Распределение χ2 связано с χ2 тестирования. Использование тестового χ2 для сравнения предполагаемых и наблюдаемых значений.</para>
          <para>Например генетическую эксперимента может гипотеза, что следующее поколение растений будет обладать определенной цветов. Сравнивая наблюдаемых результатов с ожидаемыми, можно ли исходная гипотеза допустимый.</para>
          <para>Если аргумент не является числом, <b>Хи2расп</b> приводит к ошибке. </para>
          <para>Если x отрицательно, <b>Хи2расп</b> приводит к ошибке. </para>
          <para>Если степени_свободы не является целым числом, оно сокращается. </para>
          <para>Если степени_свободы &lt; 1 или степени_свободы &gt; 10 ^ 10, <b>Хи2расп</b> , приведет к ошибке. </para>
          <para>
            <b>Хи2расп</b> вычисляется как Хи2расп = P (X&gt;x), где X — это случайная величина χ2.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChiInv">
      <MemberSignature Language="C#" Value="public double ChiInv (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ChiInv([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiInv(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChiInv (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double ChiInv(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16659)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Вероятность, связанная с распределением хи-квадрат.</param>
        <param name="Arg2">Число степеней свободы.</param>
        <summary>Возвращает обратное значение для односторонней вероятности распределения хи-квадрат.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Внимание!</b>: Эта функция была заменена один или несколько новых функций, который может предоставлять улучшенные точность и лучше, имена которых отражают их использования. Эта функция по-прежнему доступна для обеспечения совместимости с предыдущими версиями Excel. Тем не менее если обратной совместимости не требуется, можно теперь с помощью новых функций, так как они более точно описывает их функциональных возможностей. Дополнительные сведения о новых функциях можно <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiSq_Inv_RT(System.Double,System.Double)" /> и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiSq_Inv(System.Double,System.Double)" /> методы.</para>
          <para>Если вероятность = Хи2расп(x;...), то Хи2обр(вероятность;...) = x. Эта функция используется для сравнения наблюдаемых результатов с ожидаемыми, чтобы проверить правильность исходной гипотезы.</para>
          <para>Если аргумент не является числом, <b>Хи2обр</b> приводит к ошибке. </para>
          <para>Если вероятность &lt; 0 или вероятность &gt; 1, <b>Хи2обр</b> создает сообщение об ошибке. </para>
          <para>Если степени_свободы не является целым числом, оно сокращается. </para>
          <para>Если степени_свободы &lt; 1 или степени_свободы ≥ 10 ^ 10, <b>Хи2обр</b> создает сообщение об ошибке.</para>
          <para>Задано значение вероятности, <b>Хи2обр</b> ищет значение x, Хи2расп (x, степень_свободы) = вероятность. Таким образом, точности <b>Хи2обр</b> зависит от точности типа <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiDist(System.Double,System.Double)" />. <b>Хи2обр</b> использует метод последовательного поиска. Если поиск не завершено после 64 итераций, функция приводит к ошибке.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChiSq_Dist">
      <MemberSignature Language="C#" Value="public double ChiSq_Dist (double Arg1, double Arg2, bool Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ChiSq_Dist([in]float64 Arg1, [in]float64 Arg2, [in]bool Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiSq_Dist(System.Double,System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChiSq_Dist (Arg1 As Double, Arg2 As Double, Arg3 As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double ChiSq_Dist(double Arg1, double Arg2, bool Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16911)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Arg1">X — значение, для которого требуется вычислить распределение.</param>
        <param name="Arg2">Степени_свободы — число степеней свободы.</param>
        <param name="Arg3">Накопительный пакет — логическое значение, определяющее форму функции. Если накопительный пакет имеет <b>значение true</b>, CHISQ_DIST возвращает расчета интегральной функции распределения; Если <b>значение false</b>, то возвращается весовая функция распределения.</param>
        <summary>Возвращает распределения хи-квадрат.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если аргумент не является числом, CHISQ_DIST возвращает #VALUE! значение ошибки. </para>
          <para>Если x отрицательно, CHISQ_DIST возвращает #NUM! значение ошибки. </para>
          <para>Если степени_свободы не является целым числом, оно сокращается. </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChiSq_Dist_RT">
      <MemberSignature Language="C#" Value="public double ChiSq_Dist_RT (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ChiSq_Dist_RT([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiSq_Dist_RT(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChiSq_Dist_RT (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double ChiSq_Dist_RT(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16912)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Значение, для которого требуется вычислить распределение.</param>
        <param name="Arg2">Число степеней свободы.</param>
        <summary>Возвращает правом-вероятности распределения хи-квадрат.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Распределение χ2 связано с χ2 тестирования. Использование тестового χ2 для сравнения предполагаемых и наблюдаемых значений.</para>
          <para>Например генетическую эксперимента может гипотеза, что следующее поколение растений будет обладать определенной цветов. Сравнивая наблюдаемых результатов с ожидаемыми, можно ли исходная гипотеза допустимый.</para>
          <para>Если аргумент не является числом, <b>ChiSq_Dist_RT</b> приводит к ошибке. </para>
          <para>Если x отрицательно, <b>ChiSq_Dist_RT</b> приводит к ошибке. </para>
          <para>Если степени_свободы не является целым числом, оно сокращается. </para>
          <para>Если степени_свободы &lt; 1 или степени_свободы &gt; 10 ^ 10, <b>ChiSq_Dist_RT</b> создает сообщение об ошибке. <b>ChiSq_Dist_RT</b> рассчитывается как ChiSq_Dist_RT = P (X&gt;x), где X — это случайная величина χ2.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChiSq_Inv">
      <MemberSignature Language="C#" Value="public double ChiSq_Inv (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ChiSq_Inv([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiSq_Inv(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChiSq_Inv (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double ChiSq_Inv(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16913)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Вероятность — вероятность, связанная с распределением хи-квадрат.</param>
        <param name="Arg2">Степени_свободы — число степеней свободы.</param>
        <summary>Возвращает значение обратное слева-вероятности распределения хи-квадрат.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если аргумент не является числом, <b>ChiSq_Inv</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если вероятность &lt; 0 или вероятность &gt; 1, <b>ChiSq_Inv</b> возвращает #NUM! значение ошибки. </para>
          <para>Если степени_свободы не является целым числом, оно сокращается. </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChiSq_Inv_RT">
      <MemberSignature Language="C#" Value="public double ChiSq_Inv_RT (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ChiSq_Inv_RT([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiSq_Inv_RT(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChiSq_Inv_RT (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double ChiSq_Inv_RT(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16914)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Вероятность, связанная с распределением хи-квадрат.</param>
        <param name="Arg2">Число степеней свободы.</param>
        <summary>Возвращает значение обратное правом-вероятности распределения хи-квадрат.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если вероятность = ChiSq_Dist_RT(x,...), то ChiSq_Inv_RT(probability,...) = x. Эта функция используется для сравнения наблюдаемых результатов с ожидаемыми, чтобы проверить правильность исходной гипотезы.</para>
          <para>Если аргумент не является числом, <b>ChiSq_Inv_RT</b> приводит к ошибке. </para>
          <para>Если вероятность &lt; 0 или вероятность &gt; 1, <b>ChiSq_Inv_RT</b> создает сообщение об ошибке. </para>
          <para>Если степени_свободы не является целым числом, оно сокращается. </para>
          <para>Если степени_свободы &lt; 1 или степени_свободы ≥ 10 ^ 10, <b>ChiSq_Inv_RT</b> создает сообщение об ошибке.</para>
          <para>Задано значение вероятности, <b>ChiSq_Inv_RT</b> ищет значение x, ChiSq_Dist_RT (x, степень_свободы) = вероятность. Таким образом, точность <b>ChiSq_Inv_RT</b> зависит от точности типа <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiSq_Dist_RT(System.Double,System.Double)" />. <b>ChiSq_Inv_RT</b> использует метод последовательного поиска. Если поиск не завершено после 64 итераций, функция приводит к ошибке.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChiSq_Test">
      <MemberSignature Language="C#" Value="public double ChiSq_Test (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ChiSq_Test([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiSq_Test(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChiSq_Test (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double ChiSq_Test(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16874)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Диапазон данных, которые содержат наблюдения, подлежащие с ожидаемыми значениями.</param>
        <param name="Arg2">Диапазон данных, который содержит отношение продукта итоги строк и столбцов итогов в итог.</param>
        <summary>Возвращает тест на независимость.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>ChiSq_Test</b> возвращает значение для статистики и соответствующие степеней свободы распределения хи-квадрат (χ2). Χ2 тесты можно использовать для определения ли гипотеза эксперимента проверяются результаты.</para>
          <para>Если Фактический_интервал и Ожидаемый_интервал имеют различное число точек данных, <b>ChiSq_Test</b> возвращает значение ошибки # н/д. </para>
          <para>Χ2 сначала вычисляет χ2 статистику, используя формулу: </para>
          <para>На рисунке 1: Формула для теста хи-квадрат</para>
          <para></para>
          <para></para>
          <para>где:</para>
          <list type="bullet">
            <item>
              <description>Aij = фактическая частота в i го строке, j ом столбце</description>
            </item>
            <item>
              <description>Eij = ожидаемая частота в i го строке, j ом столбце</description>
            </item>
            <item>
              <description>r = число строк</description>
            </item>
            <item>
              <description>c = число столбцов</description>
            </item>
          </list>
          <para>Низкое значение χ2 является индикатором независимости. Как видно из формулы, χ2 всегда больше или равно 0 и равно 0, только в том случае, если Aij = Eij при каждом i, j.</para>
          <para>Возвращает 
            <b>ChiSq_Test</b> вероятность, что значение χ2 статистики по крайней мере высокое, как рассчитать с приведенной выше формулы может произойти при условии независимости случайно. В этом вероятность, <b>ChiSq_Test</b> использует χ2 рассылки с соответствующим числом степеней свободы df. Если r &gt; 1 и c &gt; 1, а затем df = (r - 1)(c-1). Если r = 1 и c &gt; 1, а затем df = c - 1 или, если r &gt; 1 и c = 1, то df = r - 1. r = c = 1 не допускается и создает сообщение об ошибке.</para>
          <para>Использовать <b>ChiSq_Test</b> лучше всего при Eij не слишком маленький. Некоторые специалисты по статистике предложить, что каждое значение Eij должно быть больше или равно 5.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChiTest">
      <MemberSignature Language="C#" Value="public double ChiTest (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ChiTest([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiTest(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChiTest (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double ChiTest(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16690)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Диапазон данных, которые содержат наблюдения, подлежащие с ожидаемыми значениями.</param>
        <param name="Arg2">Функция ImportantThis заменена один или несколько новых функций, который может предоставлять улучшенные точность и, имена которых лучше отразить их использования. Эта функция по-прежнему доступна для обеспечения совместимости с предыдущими версиями Excel. Тем не менее если обратной совместимости не требуется, можно теперь с помощью новых функций, так как они более точно описывает их функциональных возможностей. Дополнительные сведения о новой функции можно <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiSq_Test(System.Object,System.Object)" /> метод. Диапазон данных, который содержит отношение продукта итоги строк и столбцов итогов в итог.</param>
        <summary>Возвращает тест на независимость.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Хи2тест</b> возвращает значение для статистики и соответствующие степеней свободы распределения хи-квадрат (χ2). Χ2 тесты можно использовать для определения ли гипотеза эксперимента проверяются результаты.</para>
          <para>Если Фактический_интервал и Ожидаемый_интервал имеют различное число точек данных, <b>Хи2тест</b> возвращает значение ошибки # н/д. </para>
          <para>Χ2 сначала вычисляет χ2 статистику, используя формулу: </para>
          <para>На рисунке 1: Формула для теста хи-квадрат</para>
          <para></para>
          <para></para>
          <para>где:</para>
          <list type="bullet">
            <item>
              <description>Aij = фактическая частота в i го строке, j ом столбце</description>
            </item>
            <item>
              <description>Eij = ожидаемая частота в i го строке, j ом столбце</description>
            </item>
            <item>
              <description>r = число строк</description>
            </item>
            <item>
              <description>c = число столбцов</description>
            </item>
          </list>
          <para></para>
          <para>Низкое значение χ2 является индикатором независимости. Как видно из формулы, χ2 всегда больше или равно 0 и равно 0, только в том случае, если Aij = Eij при каждом i, j.</para>
          <para>
            <b>Хи2тест</b> возвращает вероятность того, что значение χ2 статистики по крайней мере высокое, как рассчитать с приведенной выше формулы может произойти при условии независимости случайно. Эту вероятность, <b>Хи2тест</b> использует распределение χ2 с соответствующим числом степеней свободы df. Если r &gt; 1 и c &gt; 1, а затем df = (r - 1)(c-1). Если r = 1 и c &gt; 1, а затем df = c - 1 или, если r &gt; 1 и c = 1, то df = r - 1. r = c = 1 не допускается и создает сообщение об ошибке.</para>
          <para>Использовать <b>ХИ2ТЕСТ</b> лучше всего при Eij не слишком маленький. Некоторые специалисты по статистике предложить, что каждое значение Eij должно быть больше или равно 5.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Choose">
      <MemberSignature Language="C#" Value="public object Choose (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Choose([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Choose(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Choose (Arg1 As Object, Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16484)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Указывает, какие значение аргумента установлен. Arg1 должно быть числом между 1 и 29, или формулу или ссылка на ячейку, содержащую число в диапазоне от 1 до 29.</param>
        <param name="Arg2">1 аргументы из которых Choose выбирает значение или действие, выполняемое на основании Arg1. Аргументы могут быть номера, ссылки на ячейки, определенных имен, формулы, функции или текст.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Использует <paramref name="Arg1" /> как индекс для возврата значение из списка аргументов.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если <paramref name="Arg1" /> — 1, <b>Выбор</b> возвращает значение1; Если это 2 <b>Выбор</b> возвращает значение2; и так далее. </para>
          <para>Если <paramref name="Arg1" /> меньше 1 или больше, чем номер последнего значения в списке, <b>выберите</b> создает сообщение об ошибке. </para>
          <para>Если <paramref name="Arg1" /> — это дроби, оно сокращается до меньшего целого перед использованием. </para>
          <para>Если <paramref name="Arg1" /> представляет собой массив каждое значение вычисляется при выполнении функции <b>Выбор</b> . </para>
          <para>Аргумент для <b>выбора</b> может быть диапазон ссылки, а также одного значения. Например, формулу:</para>
          <para>= СУММ (Выбор (2, a1: a10, интервал B1: B10, C1:C10))</para>
          <para>оценивается как:</para>
          <para>=SUM(B1:B10)</para>
          <para>Затем, которая возвращает значение на основании значений в диапазоне B1: B10.</para>
          <para>Функция <b>Choose</b> вычисляется во-первых, возвращает ссылку на интервал B1: B10. Затем вычисляется функцию сумм, используя интервал B1: B10, результат функции <b>Выбор</b> , в качестве аргумента.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clean">
      <MemberSignature Language="C#" Value="public string Clean (string Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Clean([in]string Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Clean(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Clean (Arg1 As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Clean(System::String ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16546)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Arg1">Какие-либо сведения листа, из которой требуется удалить скрытые символы.</param>
        <summary>Удаляет все скрытые знаки из текста.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Функция <b>Clean</b> используется для текста, импортированные из других приложений, который содержит символы, которые не напечатано с операционной системой. Например можно использовать <b>Clean</b> для удаления компьютерных кодов нижнего уровня, часто встречаются в начале и в конце файла данных и не удается напечатать.</para>
          <para>
            <b>Важно</b>: функция <b>Clean</b> был разработан для удаления первые 32 непечатаемые символы в коде ASCII 7-битовое (значения 0 до 31) из текста. В кодировке Unicode существуют дополнительные непечатаемые символы (значения 127, 129, 141, 143, 144 и 157). Сам по себе функцию <b>Очистить</b> не удаляет эти дополнительные непечатаемых знаков.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Combin">
      <MemberSignature Language="C#" Value="public double Combin (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Combin([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Combin(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Combin (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Combin(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16660)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Количество элементов.</param>
        <param name="Arg2">Количество элементов в каждой комбинации.</param>
        <summary>Возвращает количество комбинаций для заданного числа элементов. Функция <b>ЧИСЛКОМБ</b> используется для определения общее число групп для заданного числа элементов.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Числовые аргументы усекаются до целых. </para>
          <para>Если аргумент не является числом, <b>ЧИСЛКОМБ</b> приводит к ошибке. </para>
          <para>Если число &lt; 0, число_выбранных &lt; 0 или номер &lt; число_выбранных <b>ЧИСЛКОМБ</b> создает сообщение об ошибке. </para>
          <para>Сочетание — это любое множество или подмножество элементов, независимо от их порядку. Комбинации отличаются от перестановок, для которых внутренний порядок имеет значение. </para>
          <para>Количество комбинаций выглядит следующим образом, где число = n и число_выбранных = k: </para>
          <para>На рисунке 1: Количество комбинаций</para>
          <para></para>
          <para></para>
          <para>Где:</para>
          <para>На рисунке 2: формула</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Combina">
      <MemberSignature Language="C#" Value="public double Combina (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Combina([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Combina(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Combina (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Combina(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16952)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Общее число элементов.</param>
        <param name="Arg2">Количество элементов в каждой комбинации.</param>
        <summary>Возвращает количество комбинаций с повторений для заданного числа элементов.</summary>
        <returns>ДАННЫЕ ТИПА DOUBLE</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Complex">
      <MemberSignature Language="C#" Value="public string Complex (object Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Complex([in]object Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Complex (Arg1 As Object, Arg2 As Object, Optional Arg3 As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16795)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Реальные коэффициент комплексного числа.</param>
        <param name="Arg2">Мнимая часть комплексного числа.</param>
        <param name="Arg3">Суффикс мнимая комплексного числа. Если этот параметр опущен, суффикс считается «i».</param>
        <summary>Преобразует коэффициенты действительной и мнимой в форме x + ий или x + yj комплексного числа.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Все функции комплексного числа принимать «я» и «j» для суффикс, но не заданы параметры «Я» или «J». Использование верхнего регистра приводит к ошибке. Все функции, которые принимают более двух комплексных чисел требуется соответствие всех суффиксов.</para>
          <para>Если <paramref name="Arg1" /> является числом, <b>сложных</b> создает сообщение об ошибке. </para>
          <para>Если <paramref name="Arg2" /> является числом, <b>сложных</b> создает сообщение об ошибке. </para>
          <para>Если <paramref name="Arg3" /> не «i» или «j» <b>сложных</b> создает сообщение об ошибке.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Confidence">
      <MemberSignature Language="C#" Value="public double Confidence (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Confidence([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Confidence(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Confidence (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Confidence(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16661)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Уровень важности, используемый для вычисления уровня надежности. Уровень надежности равняется 100 *(1-alpha), или, иными словами, альфа равное 0,05 означает уровень вероятности 95%.</param>
        <param name="Arg2">Стандартное отклонение совокупности для интервала данных, предполагается известным.</param>
        <param name="Arg3">Размер выборки.</param>
        <summary>Возвращает значение, которое можно использовать для доверительный интервал для совокупности.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Внимание!</b>: Эта функция была заменена один или несколько новых функций, который может предоставлять улучшенные точность и лучше, имена которых отражают их использования. Эта функция по-прежнему доступна для обеспечения совместимости с предыдущими версиями Excel. Тем не менее если обратной совместимости не требуется, можно теперь с помощью новых функций, так как они более точно описывает их функциональных возможностей. Дополнительные сведения о новых функциях можно <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Confidence_Norm(System.Double,System.Double,System.Double)" /> и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Confidence_T(System.Double,System.Double,System.Double)" /> методы.</para>
          <para>Доверительный интервал — это к диапазону значений. Выборочное среднее x, — в центре этот диапазон, а диапазон — x ± <b>вероятности</b>. Например если x — выборочное среднее время доставки товаров, заказанных по почте, x ± <b>вероятности</b> будет диапазон совокупности. Для любого математического μ0 в этот диапазон, вероятность того, выборочное среднее отличается от μ0 превышает x больше, чем буква; для любого математического μ0, не входящие в этот диапазон вероятность того, выборочное среднее отличается от μ0 превышает x меньше, чем буква. Другими словами, предположим, что мы используем x, стандартного отклонения и размер для построения двустороннее теста в уровня значимости альфа, что превышает μ0. Затем мы будет не Отклонить эту гипотезу Если μ0 доверительный интервал и будет отклонять эту гипотезу, если не доверительный интервал μ0. Доверительный интервал не позволяет нам предполагать, что вероятность 1 – альфа, что наш следующего пакета займет доверительный интервал время доставки. </para>
          <para>Если аргумент не является числом, <b>вероятности</b> приведет к ошибке. </para>
          <para>Если альфа ≤ 0 или альфа ≥ 1, <b>вероятности</b> приведет к ошибке. </para>
          <para>Если стандартное_откл ≤ 0, <b>вероятности</b> приведет к ошибке. </para>
          <para>Если размер не является целым числом, оно сокращается. </para>
          <para>Если размер &lt; 1, <b>вероятности</b> , приведет к ошибке. </para>
          <para>Если предположить альфа равняется 0,05, то нужно определить область стандартной нормальной кривой, равняется (1 - альфа) или 95%. Это значение равно ± 1,96. Доверительный интервал — таким образом: </para>
          <para>На рисунке 1: доверительный интервал</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Confidence_Norm">
      <MemberSignature Language="C#" Value="public double Confidence_Norm (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Confidence_Norm([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Confidence_Norm(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Confidence_Norm (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Confidence_Norm(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16872)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Уровень важности, используемый для вычисления уровня надежности. Уровень надежности равняется 100 *(1-alpha), или, иными словами, альфа равное 0,05 означает уровень вероятности 95%.</param>
        <param name="Arg2">Стандартное отклонение совокупности для интервала данных, предполагается известным.</param>
        <param name="Arg3">Размер выборки.</param>
        <summary>Возвращает значение, которое можно использовать для доверительный интервал для совокупности.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Доверительный интервал — это к диапазону значений. Выборочное среднее x, — в центре этот диапазон, а диапазон — x ± <b>Confidence_Norm</b>. Например если x — выборочное среднее время доставки товаров, заказанных по почте, x ± <b>Confidence_Norm</b> — это диапазон совокупности. Для любого математического μ0 в этот диапазон, вероятность того, выборочное среднее отличается от μ0 превышает x больше, чем буква; для любого математического μ0, не входящие в этот диапазон вероятность того, выборочное среднее отличается от μ0 превышает x меньше, чем буква. Другими словами, предположим, что x стандартного отклонения, а размер используется для создания двустороннее теста в уровня значимости альфа, что превышает μ0. Затем мы будет не Отклонить эту гипотезу Если μ0 доверительный интервал и будет отклонять эту гипотезу, если не доверительный интервал μ0. Доверительный интервал не разрешает вывод, что существует вероятность 1 – альфа, что далее пакет будет иметь доверительный интервал время доставки.</para>
          <para>Если аргумент не является числом, <b>Confidence_Norm</b> приводит к ошибке. </para>
          <para>Если альфа ≤ 0 или альфа ≥ 1, <b>Confidence_Norm</b> приводит к ошибке. </para>
          <para>Если стандартное_откл ≤ 0, <b>Confidence_Norm</b> приводит к ошибке. </para>
          <para>Если размер не является целым числом, оно сокращается. </para>
          <para>Если размер &lt; 1, <b>Confidence_Norm</b> создает сообщение об ошибке. </para>
          <para>Если предполагается, что альфа равняется 0,05, вычисление области в разделе стандартные normal кривой, равняется (1 - альфа) или 95%. Это значение равно ± 1,96. Доверительный интервал — таким образом: </para>
          <para>На рисунке 1: доверительный интервал</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Confidence_T">
      <MemberSignature Language="C#" Value="public double Confidence_T (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Confidence_T([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Confidence_T(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Confidence_T (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Confidence_T(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16873)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Альфа - уровень важности, используемый для вычисления уровня надежности. Уровень надежности равняется 100 *(1-alpha), или, иными словами, альфа равное 0,05 означает уровень вероятности 95%.</param>
        <param name="Arg2">Стандартного отклонения - стандартное отклонение совокупности для интервала данных, предполагается известным.</param>
        <param name="Arg3">Размер — размер выборки.</param>
        <summary>Возвращает доверительный интервал для математического с помощью распределение Стьюдента.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если аргумент не является числом, <b>Confidence_T</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если альфа ≤ 0 или альфа ≥ 1, <b>Confidence_T</b> возвращает #NUM! значение ошибки. </para>
          <para>Если стандартное_откл ≤ 0, <b>Confidence_T</b> возвращает #NUM! значение ошибки. </para>
          <para>Если размер не является целым числом, оно сокращается. </para>
          <para>Если размер имеет значение 1, <b>Confidence_T</b> возвращает #DIV/0! значение ошибки. </para>
          <para>Если размер имеет значение 1, <b>Confidence_T</b> возвращает #DIV/0! значение ошибки.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public double Convert (object Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Convert([in]object Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Convert(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Convert (Arg1 As Object, Arg2 As Object, Arg3 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Convert(System::Object ^ Arg1, System::Object ^ Arg2, System::Object ^ Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16852)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Значение в исходных единицах измерения для преобразования.</param>
        <param name="Arg2">Единиц измерения для кода.</param>
        <param name="Arg3">Единицы измерения для результата. <b>Преобразование</b> принимает следующие текстовые значения (в кавычках) для аргументов старые_единицы и новые_единицы которой перечислены в в примечания.</param>
        <summary>Преобразует число из одной системы мер в другую. Например <b>Преобразование</b> может перевести таблицу расстояний в милях в таблицу расстояний в километров.</summary>
        <returns>To be added.</returns>
        <remarks>
          <list type="table">
            <item>
              <term>Грамматики</term>
              <description>«g»</description>
            </item>
            <item>
              <term>Служебная</term>
              <description>«sg»</description>
            </item>
            <item>
              <term>Фунт (эвердьюпойс)</term>
              <description>«lbm»</description>
            </item>
            <item>
              <term>U (подразделения массовые дальтонах)</term>
              <description>«u»</description>
            </item>
            <item>
              <term>Еще немного (эвердьюпойс)</term>
              <description>«ozm»</description>
            </item>
          </list>
          <list type="table">
            <item>
              <term>Индикатор</term>
              <description>«m»</description>
            </item>
            <item>
              <term>Статутных милю</term>
              <description>«mi»</description>
            </item>
            <item>
              <term>Миля</term>
              <description>«Nmi»</description>
            </item>
            <item>
              <term>Дюйм</term>
              <description>«в»</description>
            </item>
            <item>
              <term>Фута</term>
              <description>«ft»</description>
            </item>
            <item>
              <term>Метр</term>
              <description>«yd»</description>
            </item>
            <item>
              <term>Ангстрема</term>
              <description>«Энг»</description>
            </item>
            <item>
              <term>Пика (1/72 дюйма)</term>
              <description>«Пика»</description>
            </item>
          </list>
          <list type="table">
            <item>
              <term>Year</term>
              <description>«год»</description>
            </item>
            <item>
              <term>Day</term>
              <description>«день»</description>
            </item>
            <item>
              <term>Час</term>
              <description>«управления персоналом»</description>
            </item>
            <item>
              <term>Минута</term>
              <description>«mn»</description>
            </item>
            <item>
              <term>Второй </term>
              <description>«сек»</description>
            </item>
          </list>
          <list type="table">
            <item>
              <term>Pascal</term>
              <description>«Приостановить» (или «p»)</description>
            </item>
            <item>
              <term>Атмосферу</term>
              <description>«atm» (или «в»)</description>
            </item>
            <item>
              <term>мм ртутного</term>
              <description>мм рт «.»</description>
            </item>
          </list>
          <list type="table">
            <item>
              <term>Ньютона</term>
              <description>«N»</description>
            </item>
            <item>
              <term>Динах</term>
              <description>«dyn» (или «дн»)</description>
            </item>
            <item>
              <term>Фунт силы</term>
              <description>«lbf»</description>
            </item>
          </list>
          <list type="table">
            <item>
              <term>Джоуль</term>
              <description>«J»</description>
            </item>
            <item>
              <term>Erg</term>
              <description>«e»</description>
            </item>
            <item>
              <term>Термодинамическая калория</term>
              <description>«c»</description>
            </item>
            <item>
              <term>Калория</term>
              <description>«cal»</description>
            </item>
            <item>
              <term>Электронные в</term>
              <description>«высокой надежности» (или «высокой надежности»)</description>
            </item>
            <item>
              <term>Мощность час</term>
              <description>«HPh» (или «hh»)</description>
            </item>
            <item>
              <term>Watt-Hour</term>
              <description>«Что такое» (или «что такое»)</description>
            </item>
            <item>
              <term>Foot-pound</term>
              <description>«flb»</description>
            </item>
            <item>
              <term>БТЕ</term>
              <description>«БТЕ» (или «БТЕ»)</description>
            </item>
          </list>
          <list type="table">
            <item>
              <term>Мощность</term>
              <description>«HP» (или «h»)</description>
            </item>
            <item>
              <term>Вт</term>
              <description>«W» (или «w»)</description>
            </item>
          </list>
          <list type="table">
            <item>
              <term>Теслах</term>
              <description>«T»</description>
            </item>
            <item>
              <term>Гауссах</term>
              <description>«глобальный администратор»</description>
            </item>
          </list>
          <list type="table">
            <item>
              <term>Градусы Цельсия степень</term>
              <description>«C» (или «сотовый»)</description>
            </item>
            <item>
              <term>Степень Фаренгейта</term>
              <description>«F» (или «fah»)</description>
            </item>
            <item>
              <term>Кельвина</term>
              <description>«K» (или «kel»)</description>
            </item>
          </list>
          <list type="table">
            <item>
              <term>Чайная</term>
              <description>«tsp»</description>
            </item>
            <item>
              <term>Ложках</term>
              <description>«tbs»</description>
            </item>
            <item>
              <term>Еще немного уровень жидкости</term>
              <description>«г»</description>
            </item>
            <item>
              <term>Чашка</term>
              <description>«Чашка»</description>
            </item>
            <item>
              <term>Пинта США.</term>
              <description>«пт» (или «us_pt»)</description>
            </item>
            <item>
              <term>ВЕЛИКОБРИТАНИЯ пинта</term>
              <description>«uk_pt»</description>
            </item>
            <item>
              <term>Часть</term>
              <description>«qt»</description>
            </item>
            <item>
              <term>Галлон</term>
              <description>«из глобального списка адресов»</description>
            </item>
            <item>
              <term>Литр</term>
              <description>символ «l» (или «lt»)</description>
            </item>
          </list>
          <para>Следующие префиксы сокращенный могут быть использованы для любой метрической единицей.</para>
          <list type="table">
            <item>
              <term>exa</term>
              <description>1E + 18</description>
              <description>«E»</description>
            </item>
            <item>
              <term>peta</term>
              <description>1E + 15</description>
              <description>«P»</description>
            </item>
            <item>
              <term>Tera</term>
              <description>1E + 12</description>
              <description>«T»</description>
            </item>
            <item>
              <term>Giga</term>
              <description>1E + 09</description>
              <description>«G»</description>
            </item>
            <item>
              <term>мегабайт</term>
              <description>1E + 06</description>
              <description>«M»</description>
            </item>
            <item>
              <term>килограмм</term>
              <description>1E + 03</description>
              <description>«k»</description>
            </item>
            <item>
              <term>hecto</term>
              <description>1E + 02</description>
              <description>«h»</description>
            </item>
            <item>
              <term>dekao</term>
              <description>1E + 01</description>
              <description>«e»</description>
            </item>
            <item>
              <term>deci</term>
              <description>1E-01</description>
              <description>«d»</description>
            </item>
            <item>
              <term>сотых</term>
              <description>1E-02</description>
              <description>«c»</description>
            </item>
            <item>
              <term>передачи</term>
              <description>1E-03</description>
              <description>«m»</description>
            </item>
            <item>
              <term>Micro</term>
              <description>1E-06</description>
              <description>«u»</description>
            </item>
            <item>
              <term>nano</term>
              <description>1E 09</description>
              <description>«n»</description>
            </item>
            <item>
              <term>pico</term>
              <description>1E-12</description>
              <description>«p»</description>
            </item>
            <item>
              <term>femto</term>
              <description>1E 15</description>
              <description>«f»</description>
            </item>
            <item>
              <term>ATTO</term>
              <description>1E 18</description>
              <description>«»</description>
            </item>
          </list>
          <para>Если типы входных данных являются неправильными, <b>Преобразование</b> приводит к ошибке. </para>
          <para>Если элемент не существует, <b>Преобразование</b> приводит к ошибке. </para>
          <para>Если модуль не поддерживает сокращенный префикс, <b>Преобразование</b> приводит к ошибке. </para>
          <para>Если единицы измерения относятся к разным группам, <b>Преобразование</b> приводит к ошибке. </para>
          <para>Названия устройств и префиксов, которые зависят от регистра символов.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Correl">
      <MemberSignature Language="C#" Value="public double Correl (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Correl([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Correl(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Correl (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Correl(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16691)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Диапазон значений.</param>
        <param name="Arg2">Второй диапазон значений.</param>
        <summary>Возвращает коэффициент корреляции <paramref name="Arg1" /> и <paramref name="Arg2" /> ячейка диапазонов.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Коэффициент корреляции используется для определения связи между двумя свойствами. Например можно проверить связь между средней температуры расположение и использованием кондиционера.</para>
          <para>Если аргумент массива или ссылки содержит текст, логические значения или пустые ячейки, эти значения игнорируются; Тем не менее включаются ячейки с помощью нулевое значение. </para>
          <para>Если <paramref name="Arg1" /> и <paramref name="Arg2" /> содержат различное число точек данных, <b>КОРРЕЛ</b> создает сообщение об ошибке. </para>
          <para>Если <paramref name="Arg1" /> или <paramref name="Arg2" /> пуст, или если s (стандартное отклонение) их значений равно нулю, <b>КОРРЕЛ</b> создает сообщение об ошибке. </para>
          <para>Формула для расчета коэффициента корреляции — это:</para>
          <para>На рисунке 1: Формула для расчета коэффициента корреляции</para>
          <para></para>
          <para></para>
          <para>где x и y — выборочные средние Average(Arg1) и Average(Arg2).</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cosh">
      <MemberSignature Language="C#" Value="public double Cosh (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Cosh([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Cosh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Cosh (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Cosh(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16614)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Любое действительное число, для которого требуется найти гиперболический косинус.</param>
        <summary>Возвращает гиперболический косинус числа.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Формула для расчета гиперболического косинуса имеет вид: </para>
          <para>На рисунке 1: Формула для расчета гиперболического косинуса</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cot">
      <MemberSignature Language="C#" Value="public double Cot (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Cot([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Cot(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Cot (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Cot(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16934)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Угол в радианах, для которых требуется котангенс.</param>
        <summary>Возвращает котангенс угла.</summary>
        <returns>ДАННЫЕ ТИПА DOUBLE</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Coth">
      <MemberSignature Language="C#" Value="public double Coth (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Coth([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Coth(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Coth (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Coth(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16935)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Угол в радианах, для которых требуется гиперболический котангенс.</param>
        <summary>Возвращает гиперболический котангенс числа.</summary>
        <returns>ДАННЫЕ ТИПА DOUBLE</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public double Count (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Count([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Count(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Count (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16384)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">1 до 30 аргументов, которые могут содержать или ссылаться на различных типов данных, но только числа учитываются.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Подсчитывает число ячеек, которые содержат цифры и число чисел в списке аргументов.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Используйте <b>Count</b> , чтобы получить число записей в поле номер, который находится в массив или диапазон. </para>
          <para>Учитываются аргументы, которые являются числа, даты или текст представление чисел. </para>
          <para>Учитываются логические значения и текст представления чисел, введите непосредственно в списке аргументов. </para>
          <para>Аргументы, которые являются значениями ошибки или текст, который не может быть преобразован в числа, игнорируются. </para>
          <para>Если аргумент является массив или ссылка, учитываются только числа в этом массив или ссылку. Пустые ячейки, логические значения, текст или значения ошибок в массиве или ссылке игнорируются. </para>
          <para>Чтобы подсчитать количество логические значения, текст или ошибочных значений, используйте <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.CountA(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> функции.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CountA">
      <MemberSignature Language="C#" Value="public double CountA (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 CountA([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.CountA(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CountA (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16553)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">1 до 30 аргументов, представляющий значения нужно подсчитать.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Подсчитывает число ячеек, которые не являются пустыми и значений в списке аргументов.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Функция <b>СЧЁТЗ используется</b> для определения числа ячеек, содержащих данные в диапазон или массив.</para>
          <para>Значение является любой тип данных, включая ошибочные значения и пустой текст (»»). Значение не включает пустые ячейки. </para>
          <para>Если аргумент является массив или ссылка, будут использоваться только значения в этом массив или ссылку. Пустые ячейки и текст в массиве или ссылке игнорируются. </para>
          <para>Если вам не требуется для подсчета логические значения, текст или ошибочных значений, используйте <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Count(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> функции.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CountBlank">
      <MemberSignature Language="C#" Value="public double CountBlank (Microsoft.Office.Interop.Excel.Range Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 CountBlank([in]class Microsoft.Office.Interop.Excel.Range Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.CountBlank(Microsoft.Office.Interop.Excel.Range)" />
      <MemberSignature Language="VB.NET" Value="Public Function CountBlank (Arg1 As Range) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double CountBlank(Microsoft::Office::Interop::Excel::Range ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16731)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
      </Parameters>
      <Docs>
        <param name="Arg1">Диапазон, из которого вы хотите подсчитать пустые ячейки.</param>
        <summary>Подсчитывает пустых ячеек в заданном диапазоне ячеек.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Ячейки с формулами, которые возвращают «» (пустая строка) также учитываются. Нулевых значений, не учитываются.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CountIf">
      <MemberSignature Language="C#" Value="public double CountIf (Microsoft.Office.Interop.Excel.Range Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 CountIf([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.CountIf(Microsoft.Office.Interop.Excel.Range,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CountIf (Arg1 As Range, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double CountIf(Microsoft::Office::Interop::Excel::Range ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16730)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Диапазон ячеек, из которых вы хотите подсчитать ячейки.</param>
        <param name="Arg2">Критерий в форме числа, выражения, ссылка на ячейку или текста, который определяет ячеек, которые будут учитываться. Например, критерий может быть выражен как 32, «32», "&gt;32", «apples» или B4.</param>
        <summary>Подсчитывает число ячеек в диапазоне, удовлетворяющие заданным условиям.</summary>
        <returns>Возвращает <see cref="T:System.Double" />.</returns>
        <remarks>
          <para>Можно использовать подстановочные знаки, вопросительные знаки (?) и звездочки (*) для критериев. Вопросительный знак соответствует любой отдельный знак; Звездочка соответствует любой последовательности символов. Если вы хотите найти вопросительный знак или звездочка, введите тильдой (~) перед знаком.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CountIfs">
      <MemberSignature Language="C#" Value="public double CountIfs (Microsoft.Office.Interop.Excel.Range Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 CountIfs([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.CountIfs(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CountIfs (Arg1 As Range, Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16865)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Один или несколько диапазонов в котором для оценки связанных критериев.</param>
        <param name="Arg2">Одно или несколько условий в виде числа, выражения, ссылка на ячейку или текста, которые определяют ячеек, которые будут учитываться. Например, критерий может быть выражен как 32, «32», "&gt;32", «apples» или B4.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Подсчитывает число в диапазоне ячеек, которые соответствуют несколько условий.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Каждой ячейки в диапазоне учитывается только в том случае, если выполняются все соответствующие заданным условиям условия для этой ячейки. </para>
          <para>Если ячейка в аргументах пустую ячейку, <b>CountIfs</b> обрабатывает ее как значение 0. </para>
          <para>Можно использовать подстановочные знаки, вопросительные знаки (?) и звездочки (*) в условия. Вопросительный знак соответствует любой отдельный знак; Звездочка соответствует любой последовательности символов. Если вы хотите найти вопросительный знак или звездочка, введите тильдой (~) перед знаком.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CoupDayBs">
      <MemberSignature Language="C#" Value="public double CoupDayBs (object Arg1, object Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 CoupDayBs([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.CoupDayBs(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CoupDayBs (Arg1 As Object, Arg2 As Object, Arg3 As Object, Optional Arg4 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16836)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Дата сопоставления безопасности. Дата сопоставления безопасности — это дата после даты выпуска, если передается безопасности покупателю.</param>
        <param name="Arg2">Срока. Соответствует дата истечения срока действия безопасности.</param>
        <param name="Arg3">Число купон платежей за год. Для ежегодных выплат частота = 1; для полугодовых выплат периодичность = 2; для квартальное, частота = 4.</param>
        <param name="Arg4">Тип вычисления дня.</param>
        <summary>Возвращает число дней с начала периода купон до даты соглашения.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Следующая таблица содержит список значений для <paramref name="Arg4" />.</para>
          <list type="table">
            <item>
              <term>0 или опущен</term>
              <description>"МНЕ НРАВИТСЯ" (NASD) 30/360</description>
            </item>
            <item>
              <term>1</term>
              <description>Фактический</description>
            </item>
            <item>
              <term>2</term>
              <description>Фактический/360</description>
            </item>
            <item>
              <term>3</term>
              <description>Фактический/365</description>
            </item>
            <item>
              <term>4</term>
              <description>Европейский 30/360</description>
            </item>
          </list>
          <para>Microsoft Excel хранит даты как целые числа, поэтому они могут использоваться в расчетах. По умолчанию 1 января 1900 — серийный номер 1, а 1 января 2008 — номер 39448, так как интервал в днях 1 января 1900. Microsoft Excel для Macintosh использует другую систему дат по умолчанию. </para>
          <para>Дата соглашения — это дата продажи покупателю купон, такие как действия. Срок платежа — это дата истечения срока действия купон. Предположим, например, сроком действия 30 лет выпущена 1 января 2008 года и приобретена покупателем через шесть месяцев после. Датой выпуска будет являться 1 января 2008, Дата соглашения равен 1 июля 2008 г., и срок погашения равен 1 января 2038, 30 лет после даты выпуска 1 января 2008 г. </para>
          <para>Все аргументы усекаются до целых. </para>
          <para>Если сопоставления или роста не является допустимой датой, <b>то функция ДНЕЙКУПОНДО</b> приводит к ошибке. </para>
          <para>Если частота — любое число отличное от 1, 2 или 4, <b>то функция ДНЕЙКУПОНДО</b> приводит к ошибке. </para>
          <para>Если основа &lt; 0 или, если основа &gt; 4, <b>то функция ДНЕЙКУПОНДО</b> создает сообщение об ошибке. </para>
          <para>Если сопоставления ≥ роста, <b>то функция ДНЕЙКУПОНДО</b> приводит к ошибке.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CoupDays">
      <MemberSignature Language="C#" Value="public double CoupDays (object Arg1, object Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 CoupDays([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.CoupDays(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CoupDays (Arg1 As Object, Arg2 As Object, Arg3 As Object, Optional Arg4 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16837)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Дата сопоставления безопасности. Дата сопоставления безопасности — это дата после даты выпуска, если передается безопасности покупателю.</param>
        <param name="Arg2">Срока. Соответствует дата истечения срока действия безопасности.</param>
        <param name="Arg3">Число купон платежей за год. Для ежегодных выплат частота = 1; для полугодовых выплат периодичность = 2; для квартальное, частота = 4.</param>
        <param name="Arg4">Тип вычисления дня.</param>
        <summary>Возвращает число дней в период купон, который содержит дату соглашения.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Важно</b>: ввода дат с помощью функции Дата или как результат других формул и функций. Например следует используйте Дата(2008;5;23) для 23-мая 2008 г. Если даты вводятся как текст, могут возникнуть проблемы.</para>
          <para>В следующей таблице приведены значения, используемые в <paramref name="Arg4" />.</para>
          <list type="table">
            <item>
              <term>0 или опущен</term>
              <description>"МНЕ НРАВИТСЯ" (NASD) 30/360</description>
            </item>
            <item>
              <term>1</term>
              <description>Фактический</description>
            </item>
            <item>
              <term>2</term>
              <description>Фактический/360</description>
            </item>
            <item>
              <term>3</term>
              <description>Фактический/365</description>
            </item>
            <item>
              <term>4</term>
              <description>Европейский 30/360</description>
            </item>
          </list>
          <para>Microsoft Excel хранит даты как целые числа, поэтому они могут использоваться в расчетах. По умолчанию 1 января 1900 — серийный номер 1, а 1 января 2008 — номер 39448, так как интервал в днях 1 января 1900. Microsoft Excel для Macintosh использует другую систему дат по умолчанию. </para>
          <para>Дата соглашения — это дата продажи покупателю купон, такие как действия. Срок платежа — это дата истечения срока действия купон. Предположим, например, сроком действия 30 лет выпущена 1 января 2008 года и приобретена покупателем через шесть месяцев после. Дата выпуска будет являться 1 января 2008, даты соглашения равен 1 июля 2008 г., и соответствует 1 января 2038, 30 лет после даты выпуска 1 января 2008 г. </para>
          <para>Все аргументы усекаются до целых. </para>
          <para>Если сопоставления или роста не является допустимой датой, <b>то функция ДНЕЙКУПОН</b> приводит к ошибке. </para>
          <para>Если частота — любое число отличное от 1, 2 или 4, <b>то функция ДНЕЙКУПОН</b> приводит к ошибке. </para>
          <para>Если основа &lt; 0 или, если основа &gt; 4, <b>ДНЕЙКУПОН</b> создает сообщение об ошибке. </para>
          <para>Если сопоставления ≥ роста, <b>ДНЕЙКУПОН</b> приводит к ошибке.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CoupDaysNc">
      <MemberSignature Language="C#" Value="public double CoupDaysNc (object Arg1, object Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 CoupDaysNc([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.CoupDaysNc(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CoupDaysNc (Arg1 As Object, Arg2 As Object, Arg3 As Object, Optional Arg4 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16838)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Дата сопоставления безопасности. Дата сопоставления безопасности — это дата после даты выпуска, если передается безопасности покупателю.</param>
        <param name="Arg2">Срока. Соответствует дата истечения срока действия безопасности.</param>
        <param name="Arg3">Число купон платежей за год. Для ежегодных выплат частота = 1; для полугодовых выплат периодичность = 2; для квартальное, частота = 4.</param>
        <param name="Arg4">Тип вычисления дня.</param>
        <summary>Возвращает число дней от даты соглашения до даты следующего купон.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Важно</b>: ввода дат с помощью функции Дата или как результат других формул и функций. Например следует используйте Дата(2008;5;23) для 23-мая 2008 г. Если даты вводятся как текст, могут возникнуть проблемы.</para>
          <para>В следующей таблице приведены значения, используемые в <paramref name="Arg4" />.</para>
          <list type="table">
            <item>
              <term>0 или опущен</term>
              <description>"МНЕ НРАВИТСЯ" (NASD) 30/360</description>
            </item>
            <item>
              <term>1</term>
              <description>Фактический</description>
            </item>
            <item>
              <term>2</term>
              <description>Фактический/360</description>
            </item>
            <item>
              <term>3</term>
              <description>Фактический/365</description>
            </item>
            <item>
              <term>4</term>
              <description>Европейский 30/360</description>
            </item>
          </list>
          <para>Microsoft Excel хранит даты как целые числа, поэтому они могут использоваться в расчетах. По умолчанию 1 января 1900 — серийный номер 1, а 1 января 2008 — номер 39448, так как интервал в днях 1 января 1900. Microsoft Excel для Macintosh использует другую систему дат по умолчанию. </para>
          <para>Дата соглашения — это дата продажи покупателю купон, такие как действия. Срок платежа — это дата истечения срока действия купон. Предположим, например, сроком действия 30 лет выпущена 1 января 2008 года и приобретена покупателем через шесть месяцев после. Дата выпуска будет являться 1 января 2008, Дата соглашения равен 1 июля 2008 г., и срок погашения будет равен 1 января 2038, который — 30 лет после даты выпуска 1 января 2008 года. </para>
          <para>Все аргументы усекаются до целых. </para>
          <para>Если сопоставления или роста не является допустимой датой, <b>то функция ДНЕЙКУПОНПОСЛЕ</b> приводит к ошибке. </para>
          <para>Если частота — любое число отличное от 1, 2 или 4, <b>то функция ДНЕЙКУПОНПОСЛЕ</b> приводит к ошибке. </para>
          <para>Если основа &lt; 0 или, если основа &gt; 4, <b>то функция ДНЕЙКУПОНПОСЛЕ</b> создает сообщение об ошибке. </para>
          <para>Если сопоставления ≥ роста, <b>то функция ДНЕЙКУПОНПОСЛЕ</b> приводит к ошибке.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CoupNcd">
      <MemberSignature Language="C#" Value="public double CoupNcd (object Arg1, object Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 CoupNcd([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.CoupNcd(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CoupNcd (Arg1 As Object, Arg2 As Object, Arg3 As Object, Optional Arg4 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16839)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Дата сопоставления безопасности. Дата сопоставления безопасности — это дата после даты выпуска, если передается безопасности покупателю.</param>
        <param name="Arg2">Срока. Соответствует дата истечения срока действия безопасности.</param>
        <param name="Arg3">Число купон платежей за год. Для ежегодных выплат частота = 1; для полугодовых выплат периодичность = 2; для квартальное, частота = 4.</param>
        <param name="Arg4">Тип вычисления дня.</param>
        <summary>Возвращает число, представляющее дату следующего купон даты соглашения.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Важно</b>: ввода дат с помощью функции Дата или как результат других формул и функций. Например следует используйте Дата(2008;5;23) для 23-мая 2008 г. Если даты вводятся как текст, могут возникнуть проблемы.</para>
          <para>В следующей таблице приведены значения, используемые в <paramref name="Arg4" />.</para>
          <list type="table">
            <item>
              <term>0 или опущен</term>
              <description>"МНЕ НРАВИТСЯ" (NASD) 30/360</description>
            </item>
            <item>
              <term>1</term>
              <description>Фактический</description>
            </item>
            <item>
              <term>2</term>
              <description>Фактический/360</description>
            </item>
            <item>
              <term>3</term>
              <description>Фактический/365</description>
            </item>
            <item>
              <term>4</term>
              <description>Европейский 30/360</description>
            </item>
          </list>
          <para>Microsoft Excel хранит даты как целые числа, поэтому они могут использоваться в расчетах. По умолчанию 1 января 1900 — серийный номер 1, а 1 января 2008 — номер 39448, так как интервал в днях 1 января 1900. Microsoft Excel для Macintosh использует другую систему дат по умолчанию. </para>
          <para>Дата соглашения — это дата продажи покупателю купон, такие как действия. Срок платежа — это дата истечения срока действия купон. Предположим, например, сроком действия 30 лет выпущена 1 января 2008 года и приобретена покупателем через шесть месяцев после. Дата выпуска будет являться 1 января 2008, Дата соглашения равен 1 июля 2008 г., и срок погашения будет равен 1 января 2038, который — 30 лет после даты выпуска 1 января 2008 года. </para>
          <para>Все аргументы усекаются до целых. </para>
          <para>Если сопоставления или роста не является допустимой датой, <b>то функция ДАТАКУПОНПОСЛЕ</b> приводит к ошибке. </para>
          <para>Если частота — любое число отличное от 1, 2 или 4, <b>то функция ДАТАКУПОНПОСЛЕ</b> приводит к ошибке. </para>
          <para>Если основа &lt; 0 или, если основа &gt; 4, <b>то функция ДАТАКУПОНПОСЛЕ</b> создает сообщение об ошибке. </para>
          <para>Если сопоставления ≥ роста, <b>то функция ДАТАКУПОНПОСЛЕ</b> приводит к ошибке.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CoupNum">
      <MemberSignature Language="C#" Value="public double CoupNum (object Arg1, object Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 CoupNum([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.CoupNum(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CoupNum (Arg1 As Object, Arg2 As Object, Arg3 As Object, Optional Arg4 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16840)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Дата сопоставления безопасности. Дата сопоставления безопасности — это дата после даты выпуска, если передается безопасности покупателю.</param>
        <param name="Arg2">Срока. Соответствует дата истечения срока действия безопасности.</param>
        <param name="Arg3">Число купон платежей за год. Для ежегодных выплат частота = 1; для полугодовых выплат периодичность = 2; для квартальное, частота = 4.</param>
        <param name="Arg4">Тип вычисления дня.</param>
        <summary>Возвращает число купонов с поставщиками между датой соглашения и датой погашения, округлено до ближайшего большего всей купон.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Важно</b>: ввода дат с помощью функции Дата или как результат других формул и функций. Например следует используйте Дата(2008;5;23) для 23-мая 2008 г. Если даты вводятся как текст, могут возникнуть проблемы.</para>
          <para>В следующей таблице приведены значения, используемые в <paramref name="Arg4" />.</para>
          <list type="table">
            <item>
              <term>0 или опущен</term>
              <description>"МНЕ НРАВИТСЯ" (NASD) 30/360</description>
            </item>
            <item>
              <term>1</term>
              <description>Фактический</description>
            </item>
            <item>
              <term>2</term>
              <description>Фактический/360</description>
            </item>
            <item>
              <term>3</term>
              <description>Фактический/365</description>
            </item>
            <item>
              <term>4</term>
              <description>Европейский 30/360</description>
            </item>
          </list>
          <para>Microsoft Excel хранит даты как целые числа, поэтому они могут использоваться в расчетах. По умолчанию 1 января 1900 — серийный номер 1, а 1 января 2008 — номер 39448, так как интервал в днях 1 января 1900. Microsoft Excel для Macintosh использует другую систему дат по умолчанию. </para>
          <para>Дата соглашения — это дата продажи покупателю купон, такие как действия. Срок платежа — это дата истечения срока действия купон. Предположим, например, сроком действия 30 лет выпущена 1 января 2008 года и приобретена покупателем через шесть месяцев после. Дата выпуска будет являться 1 января 2008, Дата соглашения равен 1 июля 2008 г., и срок погашения будет равен 1 января 2038, который — 30 лет после даты выпуска 1 января 2008 года. </para>
          <para>Все аргументы усекаются до целых. </para>
          <para>Если сопоставления или роста не является допустимой датой, <b>то функция ЧИСЛКУПОН</b> приводит к ошибке. </para>
          <para>Если частота — любое число отличное от 1, 2 или 4, <b>то функция ЧИСЛКУПОН</b> приводит к ошибке. </para>
          <para>Если основа &lt; 0 или, если основа &gt; 4, <b>ЧИСЛКУПОН</b> создает сообщение об ошибке. </para>
          <para>Если сопоставления ≥ роста, <b>ЧИСЛКУПОН</b> приводит к ошибке.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CoupPcd">
      <MemberSignature Language="C#" Value="public double CoupPcd (object Arg1, object Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 CoupPcd([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.CoupPcd(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CoupPcd (Arg1 As Object, Arg2 As Object, Arg3 As Object, Optional Arg4 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16841)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Дата сопоставления безопасности. Дата сопоставления безопасности — это дата после даты выпуска, если передается безопасности покупателю.</param>
        <param name="Arg2">Срока. Соответствует дата истечения срока действия безопасности.</param>
        <param name="Arg3">Число купон платежей за год. Для ежегодных выплат частота = 1; для полугодовых выплат периодичность = 2; для квартальное, частота = 4.</param>
        <param name="Arg4">Тип вычисления дня.</param>
        <summary>Возвращает предыдущие Дата купон до даты соглашения.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Важно</b>: ввода дат с помощью функции Дата или как результат других формул и функций. Например следует используйте Дата(2008;5;23) для 23-мая 2008 г. Если даты вводятся как текст, могут возникнуть проблемы.</para>
          <para>В следующей таблице приведены значения, используемые в <paramref name="Arg4" />.</para>
          <list type="table">
            <item>
              <term>0 или опущен</term>
              <description>"МНЕ НРАВИТСЯ" (NASD) 30/360</description>
            </item>
            <item>
              <term>1</term>
              <description>Фактический</description>
            </item>
            <item>
              <term>2</term>
              <description>Фактический/360</description>
            </item>
            <item>
              <term>3</term>
              <description>Фактический/365</description>
            </item>
            <item>
              <term>4</term>
              <description>Европейский 30/360</description>
            </item>
          </list>
          <para>Microsoft Excel хранит даты как целые числа, поэтому они могут использоваться в расчетах. По умолчанию 1 января 1900 — серийный номер 1, а 1 января 2008 — номер 39448, так как интервал в днях 1 января 1900. Microsoft Excel для Macintosh использует другую систему дат по умолчанию. </para>
          <para>Дата соглашения — это дата продажи покупателю купон, такие как действия. Срок платежа — это дата истечения срока действия купон. Предположим, например, сроком действия 30 лет выпущена 1 января 2008 года и приобретена покупателем через шесть месяцев после. Дата выпуска будет являться 1 января 2008, Дата соглашения равен 1 июля 2008 г., и срок погашения будет равен 1 января 2038, который — 30 лет после даты выпуска 1 января 2008 года. </para>
          <para>Все аргументы усекаются до целых. </para>
          <para>Если сопоставления или роста не является допустимой датой, <b>то функция ДАТАКУПОНДО</b> приводит к ошибке. </para>
          <para>Если частота — любое число отличное от 1, 2 или 4, <b>то функция ДАТАКУПОНДО</b> приводит к ошибке. </para>
          <para>Если основа &lt; 0 или, если основа &gt; 4, <b>то функция ДАТАКУПОНДО</b> создает сообщение об ошибке. </para>
          <para>Если сопоставления ≥ роста, <b>то функция ДАТАКУПОНДО</b> приводит к ошибке.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Covar">
      <MemberSignature Language="C#" Value="public double Covar (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Covar([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Covar(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Covar (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Covar(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16692)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Первый диапазон ячеек целых чисел.</param>
        <param name="Arg2">Второй диапазон целых чисел.</param>
        <summary>Возвращает ковариантности среднего продуктов отклонений для каждой пары точек данных.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Внимание!</b>: Эта функция была заменена один или несколько новых функций, который может предоставлять улучшенные точность и лучше, имена которых отражают их использования. Эта функция по-прежнему доступна для обеспечения совместимости с предыдущими версиями Excel. Тем не менее если обратной совместимости не требуется, можно теперь с помощью новых функций, так как они более точно описывает их функциональных возможностей. Дополнительные сведения о новых функциях можно <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Covariance_P(System.Object,System.Object)" /> и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Covariance_S(System.Object,System.Object)" /> метод.</para>
          <para>Используйте расчета ковариантности, чтобы определить отношение между двух наборов данных. Например можно проверить ли более высокому уровню доходов более высокий уровень образования. </para>
          <para>Аргументы должны быть номера или имена, массивы или ссылки, которые содержат цифры. </para>
          <para>Если аргумент массива или ссылки содержит текст, логические значения или пустые ячейки, эти значения игнорируются; Тем не менее включаются ячейки с помощью нулевое значение. </para>
          <para>Если <paramref name="Arg1" /> и <paramref name="Arg2" /> иметь разные номера точек данных <b>КОВАР</b> создает сообщение об ошибке. </para>
          <para>Если <paramref name="Arg1" /> или <paramref name="Arg2" /> является пустой, <b>КОВАР</b> создает сообщение об ошибке. </para>
          <para>— Это расчета ковариантности: </para>
          <para>На рисунке 1: Формула для расчета ковариантности</para>
          <para></para>
          <para></para>
          <para>где x и y — выборочные средние значения СРЗНАЧ(массив1) и СРЗНАЧ(массив2), а n — размер выборки.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Covariance_P">
      <MemberSignature Language="C#" Value="public double Covariance_P (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Covariance_P([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Covariance_P(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Covariance_P (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Covariance_P(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16876)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Первый диапазон ячеек целых чисел.</param>
        <param name="Arg2">Второй диапазон целых чисел.</param>
        <summary>Возвращает расчета ковариантности совокупности, среднее продуктов отклонений для каждой пары точек данных.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Используйте <b>Covariance_P</b> , чтобы определить отношение между двух наборов данных. Например можно проверить ли более высокому уровню доходов более высокий уровень образования.</para>
          <para>Аргументы должны быть номера или имена, массивы или ссылки, которые содержат цифры. </para>
          <para>Если аргумент массива или ссылки содержит текст, логические значения или пустые ячейки, эти значения игнорируются; Тем не менее включаются ячейки с помощью нулевое значение. </para>
          <para>Если <paramref name="Arg1" /> и <paramref name="Arg2" /> иметь разные номера точек данных <b>Covariance_P</b> создает сообщение об ошибке. </para>
          <para>Если <paramref name="Arg1" /> или <paramref name="Arg2" /> является пустой, <b>Covariance_P</b> создает сообщение об ошибке. </para>
          <para>— Это расчета ковариантности: </para>
          <para>На рисунке 1: Формула для расчета ковариантности</para>
          <para></para>
          <para></para>
          <para>где x и y — выборочные средние значения СРЗНАЧ(массив1) и СРЗНАЧ(массив2), а n — размер выборки.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Covariance_S">
      <MemberSignature Language="C#" Value="public double Covariance_S (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Covariance_S([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Covariance_S(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Covariance_S (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Covariance_S(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16877)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Массив1 — первый диапазон ячеек целых чисел.</param>
        <param name="Arg2">Массив2 - это второй интервал ячеек.</param>
        <summary>Возвращает пример расчета ковариантности, среднее продуктов отклонений для каждой пары точек данных в двух наборов данных.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Аргументы должны быть номера или имена, массивы или ссылки, которые содержат цифры. </para>
          <para>Если аргумент массива или ссылки содержит текст, логические значения или пустые ячейки, эти значения игнорируются; Тем не менее включаются ячейки с помощью нулевое значение. </para>
          <para>Если массив1 и массив2 имеют различное число точек данных, <b>Covariance_S</b> возвращает значение ошибки # н/д. </para>
          <para>Если массив1 либо массив2 пуст или содержит точки только 1 данных каждого, <b>Covariance_S</b> возвращает #DIV/0! значение ошибки.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.WorksheetFunction.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает 32-битное целое число, указывающее на приложение, в котором объект был создан. Только для чтения <b>Integer</b> (целое в C#).</summary>
        <value>To be added.</value>
        <remarks>
          <para>Если объект был создан в Microsoft Excel, данное свойство возвращает строку XCEL, что эквивалентно шестнадцатеричный номер 5843454C. Свойство <b>создателя</b> предназначено для использования в Microsoft Excel для Macintosh, где каждое приложение имеет код создателя четырех символов. Например Microsoft Excel содержит код создателя XCEL.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CritBinom">
      <MemberSignature Language="C#" Value="public double CritBinom (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 CritBinom([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.CritBinom(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function CritBinom (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double CritBinom(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16662)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число Бернулли.</param>
        <param name="Arg2">Вероятность успеха каждого испытания.</param>
        <param name="Arg3">Значение критерия.</param>
        <summary>Возвращает наименьшее значение, для которого интегральное биномиальное распределение больше или равно заданному критерию.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Используйте эту функцию для приложений контролю качества. К примеру функция <b>КРИТБИНОМ</b> используется для определения больше всего дефектное части, в которых разрешен будто выполняться без отклонение всего много линии.</para>
          <para>Если аргумент не является числом, <b>КРИТБИНОМ</b> приводит к ошибке. </para>
          <para>Ознакомительные версии не является целым числом, усекается. </para>
          <para>Если пробные версии &lt; 0, <b>КРИТБИНОМ</b> создает сообщение об ошибке. </para>
          <para>Если данной &lt; 0 или данной &gt; 1, <b>КРИТБИНОМ</b> создает сообщение об ошибке. </para>
          <para>Если альфа &lt; 0 или альфа &gt; 1, <b>КРИТБИНОМ</b> создает сообщение об ошибке.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Csc">
      <MemberSignature Language="C#" Value="public double Csc (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Csc([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Csc(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Csc (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Csc(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16936)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Угол в радианах, для которых требуется косеканс.</param>
        <summary>Возвращает косеканс угла.</summary>
        <returns>
          <b>ДАННЫЕ ТИПА DOUBLE</b>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Csch">
      <MemberSignature Language="C#" Value="public double Csch (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Csch([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Csch(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Csch (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Csch(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16937)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Угол в радианах, для которых требуется гиперболический косеканс.</param>
        <summary>Возвращает гиперболический косеканс угла.</summary>
        <returns>
          <b>ДАННЫЕ ТИПА DOUBLE</b>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CumIPmt">
      <MemberSignature Language="C#" Value="public double CumIPmt (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 CumIPmt([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.CumIPmt(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CumIPmt (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Arg5 As Object, Arg6 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double CumIPmt(System::Object ^ Arg1, System::Object ^ Arg2, System::Object ^ Arg3, System::Object ^ Arg4, System::Object ^ Arg5, System::Object ^ Arg6);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16832)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Процентной ставки.</param>
        <param name="Arg2">Общее число периодов.</param>
        <param name="Arg3">Текущая стоимость.</param>
        <param name="Arg4">Первый период в расчет. Периоды выплат нумеруются, начиная с 1.</param>
        <param name="Arg5">Последний период в расчет.</param>
        <param name="Arg6">Выбор времени платежа.</param>
        <summary>Возвращает накопительных доход на заем между двумя периодами.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>В следующей таблице перечислены значения, используемые в <paramref name="Arg6" />.</para>
          <list type="table">
            <item>
              <term>нуль (0)</term>
              <description>Оплата в конце периода</description>
            </item>
            <item>
              <term>1</term>
              <description>Оплаты в начале периода</description>
            </item>
          </list>
          <para>Убедитесь в том, что вы являетесь согласованные единицы измерения, которая будет использоваться для определения скорости и nper. Если ежемесячных выплатах на заем 4 года в 12 процентов годовых, используйте 12% / 12 для скорости и 4 * 12 для <paramref name="Arg2" />. Если производится ежегодных выплат на одном кредита, используйте 12% для скорости и 4 для <paramref name="Arg2" />. </para>
          <para>
            <paramref name="Arg2" />, <paramref name="Arg4" />, <paramref name="Arg5" />, и тип усекаются до целых. </para>
          <para>Если ставка ≤ 0, <paramref name="Arg2" /> ≤ 0, или <paramref name="Arg3" /> ≤ 0, <b>то функция ОБЩПЛАТ</b> создает сообщение об ошибке. </para>
          <para>Если <paramref name="Arg4" /> &lt; 1, <paramref name="Arg5" /> &lt; 1, или <paramref name="Arg4" /> &gt; <paramref name="Arg5" />, <b>то функция ОБЩПЛАТ</b> создает сообщение об ошибке. </para>
          <para>Если <paramref name="Arg6" /> — это любое число отличное от 0 или 1, <b>то функция ОБЩПЛАТ</b> создает сообщение об ошибке.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CumPrinc">
      <MemberSignature Language="C#" Value="public double CumPrinc (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 CumPrinc([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.CumPrinc(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CumPrinc (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Arg5 As Object, Arg6 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double CumPrinc(System::Object ^ Arg1, System::Object ^ Arg2, System::Object ^ Arg3, System::Object ^ Arg4, System::Object ^ Arg5, System::Object ^ Arg6);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16831)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Процентной ставки.</param>
        <param name="Arg2">Общее число периодов.</param>
        <param name="Arg3">Текущая стоимость.</param>
        <param name="Arg4">Первый период в расчет. Периоды выплат нумеруются, начиная с 1.</param>
        <param name="Arg5">Последний период в расчет.</param>
        <param name="Arg6">Последний период в расчет.</param>
        <summary>Возвращает основные выплаты на заем между двумя периодами.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>В следующей таблице перечислены значения, используемые в <paramref name="Arg6" />.</para>
          <list type="table">
            <item>
              <term>нуль (0)</term>
              <description>Оплата в конце периода</description>
            </item>
            <item>
              <term>1</term>
              <description>Оплаты в начале периода</description>
            </item>
          </list>
          <para>Убедитесь в том, что вы являетесь согласованные единицы измерения, которая будет использоваться для определения скорости и nper. Если ежемесячных выплатах на заем 4 года в 12 процентов годовых, используйте 12% / 12 для скорости и 4 * 12 для <paramref name="Arg2" />. Если производится ежегодных выплат на одном кредита, используйте 12% для скорости и 4 для <paramref name="Arg2" />. </para>
          <para>
            <paramref name="Arg2" />, <paramref name="Arg4" />, <paramref name="Arg5" />, и тип усекаются до целых. </para>
          <para>Если ставка ≤ 0, <paramref name="Arg2" /> ≤ 0, или <paramref name="Arg3" /> ≤ 0, <b>то функция ОБЩДОХОД</b> создает сообщение об ошибке. </para>
          <para>Если <paramref name="Arg4" /> &lt; 1, <paramref name="Arg5" /> &lt; 1, или <paramref name="Arg4" /> &gt; <paramref name="Arg5" />, <b>то функция ОБЩДОХОД</b> создает сообщение об ошибке. </para>
          <para>Если <paramref name="Arg6" /> — это любое число отличное от 0 или 1, <b>то функция ОБЩДОХОД</b> создает сообщение об ошибке.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DAverage">
      <MemberSignature Language="C#" Value="public double DAverage (Microsoft.Office.Interop.Excel.Range Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 DAverage([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DAverage(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DAverage (Arg1 As Range, Arg2 As Object, Arg3 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double DAverage(Microsoft::Office::Interop::Excel::Range ^ Arg1, System::Object ^ Arg2, System::Object ^ Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16426)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Диапазон ячеек, формирующих список или базу данных. Базы данных — это список связанных данных, в котором строки являются записями, а столбцы данных — это поля. Первая строка списка содержит заголовки для каждого столбца.</param>
        <param name="Arg2">Указывает столбец, используемый в функции. Введите название столбца, заключенные в двойные кавычки, например «Возраст» или «Доход» или номер (без кавычек), который представляет положение столбца в списке: 1 для первого столбца, 2-для второго столбца и т. д.</param>
        <param name="Arg3">Диапазон ячеек, который содержит условия укажите. Можно использовать любой диапазон для аргумента условий, при условии, что он содержит по крайней мере одно название столбца и по крайней мере одну ячейку под названием столбца, в котором укажите условие для столбца.</param>
        <summary>Значения в столбце списка или базы данных, которые соответствуют условиям, указанным в среднем имеет.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Так как знак равенства используется для обозначения формулы, введите текст или значение в ячейке, Microsoft Excel оценивает введенные; Тем не менее это может привести к результатам непредвиденные фильтра. Чтобы указать оператор сравнения равенства текст или значение, введите условие в виде строкового выражения в соответствующую ячейку в диапазоне условий: </para>
          <para>='' = запись ''</para>
          <para>Где entryis текст или значение, который требуется найти. Пример:</para>
          <list type="table">
            <item>
              <term>= «= Белова»</term>
              <description>= Даволио</description>
            </item>
            <item>
              <term>= «= 3000»</term>
              <description>= 3000</description>
            </item>
          </list>
          <para>При фильтрации текстовых данных Excel не различения прописных и строчных букв. Тем не менее можно использовать формулы для выполнения поиска с учетом регистра.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Days">
      <MemberSignature Language="C#" Value="public double Days (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Days([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Days(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Days (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Days(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16957)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">start_date(arg2) и кон_дата (Arg1) — две даты, между которыми необходимо узнать число дней.</param>
        <param name="Arg2">start_date(arg2) и кон_дата (Arg1) — две даты, между которыми необходимо узнать число дней.</param>
        <summary>Возвращает число дней между двумя датами.</summary>
        <returns>
          <b>ДАННЫЕ ТИПА DOUBLE</b>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Days360">
      <MemberSignature Language="C#" Value="public double Days360 (object Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Days360([in]object Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Days360(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Days360 (Arg1 As Object, Arg2 As Object, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16604)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Двумя датами, между которыми необходимо узнать число дней. Если (Arg1) нач_дата кон_дата (Arg2), дней360 возвращает отрицательное значение. Даты должны вводиться с использованием функции Дата или как результат других формул и функций.</param>
        <param name="Arg2">Двумя датами, между которыми необходимо узнать число дней. Если (Arg1) нач_дата кон_дата (Arg2), дней360 возвращает отрицательное значение. Даты должны вводиться с использованием функции Дата или как результат других формул и функций.</param>
        <param name="Arg3">Логическое значение, указывающее, следует ли использовать метод Европы или США в расчет.</param>
        <summary>Возвращает число дней между двумя датами на основе 360-дневного года (двенадцать 30-дневной месяцев), который используется в некоторых вычислений бухгалтерского учета.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Эта функция используется для расчета платежей, если в системе бухгалтерского учета основано на 12 месяцев 30-дневной. В таблицах ниже указаны значения для <paramref name="Arg3" />.</para>
          <list type="table">
            <item>
              <term>
                <b>значение false</b> или опущен</term>
              <description>Метод США (NASD). Если начальная дата является 31-м месяца, он становится равен 30 тот же месяц. Если конечная дата является 31-м месяц и Дата начала является более ранней, чем 30-ое число месяца, дату окончания становится равен 1st следующего месяца; в противном случае — дата окончания становится равен 30 того же месяца.</description>
            </item>
            <item>
              <term>
                <b>значение true</b>
              </term>
              <description>Европейский метод. Начальная и конечная даты, которые приходятся на 31-ое число месяца становится равен 30 тот же месяц.</description>
            </item>
          </list>
          <para>Microsoft Excel хранит даты как целые числа, поэтому они могут использоваться в расчетах. По умолчанию 1 января 1900 — серийный номер 1, а 1 января 2008 — номер 39448, так как интервал в днях 1 января 1900. Microsoft Excel для Macintosh использует другую систему дат по умолчанию.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Db">
      <MemberSignature Language="C#" Value="public double Db (double Arg1, double Arg2, double Arg3, double Arg4, object Arg5);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Db([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]float64 Arg4, [in]object Arg5) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Db(System.Double,System.Double,System.Double,System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Db (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Double, Optional Arg5 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16631)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Double" />
        <Parameter Name="Arg5" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Затраты - начальная стоимость актива.</param>
        <param name="Arg2">Восстановленной - значение в конце амортизации (иногда называется стоимость актива).</param>
        <param name="Arg3">Срок - число периодов, за которые актива (иногда называется периодом амортизации).</param>
        <param name="Arg4">Период — период, для которого требуется для вычисления амортизации. Период необходимо использовать как жизненного одной единицы.</param>
        <param name="Arg5">Месяц - число месяцев в течение первого года. Если месяц опущен, то предполагается, что оно является 12.</param>
        <summary>Возвращает снижение стоимости актива за указанный период с помощью метода баланс фиксированного уменьшения.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Метод фиксированного уменьшения распределения вычисляет амортизацию фиксированную процентную ставку. База данных с помощью следующей формулы для вычисления амортизации за период:</para>
          <para>(затраты - суммарная амортизация за предшествующие периоды) * ставка</para>
          <para>где:</para>
          <para>скорость = 1 - ((salvage / cost) ^ (1 / жизненного)), округленное до трех десятичных разрядов</para>
          <para>Амортизация для первого и последнего периоды представляет собой особый случай. Для первого периода доб использует эту формулу:</para>
          <para>стоимость * ставка * месяц / 12</para>
          <para>Для последнего периода доб использует эту формулу:</para>
          <para>((амортизация - всего за предшествующие периоды) * ставка * (12 - месяц)) / 12</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dbcs">
      <MemberSignature Language="C#" Value="public string Dbcs (string Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Dbcs([in]string Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Dbcs(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dbcs (Arg1 As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Dbcs(System::String ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16599)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Arg1">Текст или ссылка на ячейку, которая содержит текст, который требуется изменить.</param>
        <summary>Преобразует буквы половинной ширины (однобайтовые) в строке знаков (двухбайтовые) символы полной ширины. Имя этой функции (и символы, которые он преобразует) зависит от языковых параметров.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DCount">
      <MemberSignature Language="C#" Value="public double DCount (Microsoft.Office.Interop.Excel.Range Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 DCount([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DCount(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DCount (Arg1 As Range, Arg2 As Object, Arg3 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double DCount(Microsoft::Office::Interop::Excel::Range ^ Arg1, System::Object ^ Arg2, System::Object ^ Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16424)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">База данных - диапазон базы данных. Базы данных — это список связанных данных, в котором строки являются записями, а столбцы данных — это поля. Первая строка списка содержит заголовки для каждого столбца.</param>
        <param name="Arg2">Field — показывает столбец, используемый в функции. Введите название столбца, заключенные в двойные кавычки, например «Возраст» или «Доход» или номер (без кавычек), который представляет положение столбца в списке: 1 для первого столбца, 2-для второго столбца и т. д.</param>
        <param name="Arg3">Критерии - диапазон ячеек, содержащий условия, которые можно указать. Можно использовать любой диапазон для аргумента условий, при условии, что аргумент содержит по крайней мере одно название столбца и по крайней мере одну ячейку под названием столбца, в котором укажите условие для столбца.</param>
        <summary>Подсчитывает ячейки, содержащие числа в столбце списка или базы данных, соответствующие условия, которые можно указать.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Так как знак равенства используется для обозначения формулы, введите текст или значение в ячейке, Microsoft Excel оценивает введенные; Тем не менее это может привести к результатам непредвиденные фильтра. Чтобы указать оператор сравнения равенства текст или значение, введите условие в виде строкового выражения в соответствующую ячейку в диапазоне условий: </para>
          <para>='' = запись ''</para>
          <para>Где запись — это текст или значение, которое требуется найти. Пример:</para>
          <list type="table">
            <item>
              <term>= «= Белова»</term>
              <description>= Даволио</description>
            </item>
            <item>
              <term>= «= 3000»</term>
              <description>= 3000</description>
            </item>
          </list>
          <para>При фильтрации текстовых данных Excel не различения прописных и строчных букв. Тем не менее можно использовать формулы для выполнения поиска с учетом регистра.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DCountA">
      <MemberSignature Language="C#" Value="public double DCountA (Microsoft.Office.Interop.Excel.Range Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 DCountA([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DCountA(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DCountA (Arg1 As Range, Arg2 As Object, Arg3 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double DCountA(Microsoft::Office::Interop::Excel::Range ^ Arg1, System::Object ^ Arg2, System::Object ^ Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16583)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">База данных - диапазон базы данных. Базы данных — это список связанных данных, в котором строки являются записями, а столбцы данных — это поля. Первая строка списка содержит заголовки для каждого столбца.</param>
        <param name="Arg2">Field — показывает столбец, используемый в функции. Введите название столбца, заключенные в двойные кавычки, например «Возраст» или «Доход» или номер (без кавычек), который представляет положение столбца в списке: 1 для первого столбца, 2-для второго столбца и т. д.</param>
        <param name="Arg3">Критерии - диапазон ячеек, содержащий условия, которые можно указать. Можно использовать любой диапазон для аргумента условий, при условии, что он содержит по крайней мере одно название столбца и по крайней мере одну ячейку под названием столбца, в котором укажите условие для столбца.</param>
        <summary>Подсчет непустых ячеек в столбце списка или базы данных, которые соответствуют условиям, которые можно указать.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Так как знак равенства используется для обозначения формулы, введите текст или значение в ячейке, Microsoft Excel оценивает введенные; Тем не менее это может привести к результатам непредвиденные фильтра. Чтобы указать оператор сравнения равенства текст или значение, введите условие в виде строкового выражения в соответствующую ячейку в диапазоне условий: </para>
          <para>='' = запись ''</para>
          <para>Где запись — это текст или значение, которое требуется найти. Пример:</para>
          <list type="table">
            <item>
              <term>= «= Белова»</term>
              <description>= Даволио</description>
            </item>
            <item>
              <term>= «= 3000»</term>
              <description>= 3000</description>
            </item>
          </list>
          <para>При фильтрации текстовых данных Excel не различения прописных и строчных букв. Тем не менее можно использовать формулы для выполнения поиска с учетом регистра.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Ddb">
      <MemberSignature Language="C#" Value="public double Ddb (double Arg1, double Arg2, double Arg3, double Arg4, object Arg5);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Ddb([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]float64 Arg4, [in]object Arg5) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Ddb(System.Double,System.Double,System.Double,System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ddb (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Double, Optional Arg5 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16528)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Double" />
        <Parameter Name="Arg5" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Затраты - начальная стоимость актива.</param>
        <param name="Arg2">Восстановленной - значение в конце амортизации (иногда называется стоимость актива). Это значение может быть 0.</param>
        <param name="Arg3">Срок - число периодов, за которые актива (иногда называется периодом амортизации).</param>
        <param name="Arg4">Период — период, для которого требуется для вычисления амортизации. Период необходимо использовать как жизненного одной единицы.</param>
        <param name="Arg5">Коэффициент - скорость из участников отклоняет баланс. Если коэффициент указан, то предполагается, что оно является 2 (метод двойной амортизации убывающего баланса).</param>
        <summary>Возвращает снижение стоимости актива за указанный период, используя метод двойной амортизации убывающего баланса или другой указанный метод.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Важно</b>: все пять аргументов должны быть положительными числами.</para>
          <para>Метод двойной амортизации убывающего баланса вычисляет амортизацию, используя увеличенный коэффициент. Амортизация максимальна в первый период и уменьшается в последующие. <b>DDB</b> использует следующую формулу для вычисления амортизации за период:</para>
          <code>Min( (cost - total depreciation from prior periods) * (factor/life), (cost - salvage -  total depreciation from prior periods) )
</code>
          <para>Измените коэффициент, если вы не хотите использовать метод двойной амортизации убывающего баланса. </para>
          <para>Использование <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Vdb(System.Double,System.Double,System.Double,System.Double,System.Double,System.Object,System.Object)" /> работать, если вы хотите переключиться в метод линейное снижение, когда амортизация превышает вычисленную.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dec2Bin">
      <MemberSignature Language="C#" Value="public string Dec2Bin (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Dec2Bin([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Dec2Bin(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dec2Bin (Arg1 As Object, Optional Arg2 As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16771)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Номер - десятичное число, которое требуется преобразовать. Если число отрицательно, действительный месте значения игнорируются и <b>Dec2Bin</b> возвращает 10 символов (10-бит) двоичное число, в котором старший бит является знаков. Остальные 9 бит являются бит величины. Отрицательные числа, представленные в дополнительном формате.</param>
        <param name="Arg2">Окружение - число символов для использования. Если опущен местах, <b>Dec2Bin</b> использует минимальное необходимое количество знаков. Местах полезен для заполнения возвращаемое значение с начальные нули.</param>
        <summary>Преобразует десятичное число в двоичное.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если число &lt; -512 или если число &gt; 511, <b>Dec2Bin</b> возвращает #NUM! значение ошибки. </para>
          <para>Если номер является числом, <b>Dec2Bin</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если <b>Dec2Bin</b> требуется большее число помещает символов, она возвращает #NUM! значение ошибки. </para>
          <para>Если местах не является целым числом, оно сокращается. </para>
          <para>Если аргумент является местах, <b>Dec2Bin</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если местах нуля или отрицательным, <b>Dec2Bin</b> возвращает #NUM! значение ошибки.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dec2Hex">
      <MemberSignature Language="C#" Value="public string Dec2Hex (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Dec2Hex([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Dec2Hex(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dec2Hex (Arg1 As Object, Optional Arg2 As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16772)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Номер - десятичное число, которое требуется преобразовать. Если число отрицательно, местах игнорируется и <b>Dec2Hex</b> возвращает 10 символов (40-бит) шестнадцатеричное число, в котором старший бит является знаков. Остальные 39 бит являются бит величины. Отрицательные числа, представленные в дополнительном формате.</param>
        <param name="Arg2">Окружение - число символов для использования. Если опущен местах, <b>Dec2Hex</b> использует минимальное необходимое количество знаков. Местах полезен для заполнения возвращаемое значение с начальные нули.</param>
        <summary>Преобразует десятичное число в шестнадцатеричном представлении.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если число &lt; -549,755,813,888 или если число &gt; 549,755,813,887, <b>Dec2Hex</b> возвращает #NUM! значение ошибки. </para>
          <para>Если номер является числом, <b>Dec2Hex</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если <b>Dec2Hex</b> требуется большее число помещает символов, она возвращает #NUM! значение ошибки. </para>
          <para>Если местах не является целым числом, оно сокращается. </para>
          <para>Если аргумент является местах, <b>Dec2Hex</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если отрицательно местах, <b>Dec2Hex</b> возвращает #NUM! значение ошибки.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dec2Oct">
      <MemberSignature Language="C#" Value="public string Dec2Oct (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Dec2Oct([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Dec2Oct(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dec2Oct (Arg1 As Object, Optional Arg2 As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16773)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Номер - десятичное число, которое требуется преобразовать. Если число отрицательно, местах игнорируется и <b>Dec2Oct</b> возвращает 10 символов (30-разрядная версия) восьмеричном формате номер, в котором старший бит является знаков. Остальные 29 бит — бит величины. Отрицательные числа, представленные в дополнительном формате.</param>
        <param name="Arg2">Окружение - число символов для использования. Если опущен местах, <b>Dec2Oct</b> использует минимальное необходимое количество знаков. Местах полезен для заполнения возвращаемое значение с начальные нули.</param>
        <summary>Преобразует десятичного числа в восьмеричном формате.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если число &lt; -536 870 912 или если число &gt; 536 870 911, <b>Dec2Oct</b> возвращает #NUM! значение ошибки. </para>
          <para>Если номер является числом, <b>Dec2Oct</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если <b>Dec2Oct</b> требуется большее число помещает символов, она возвращает #NUM! значение ошибки. </para>
          <para>Если местах не является целым числом, оно сокращается. </para>
          <para>Если аргумент является местах, <b>Dec2Oct</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если отрицательно местах, <b>Dec2Oct</b> возвращает #NUM! значение ошибки.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Decimal">
      <MemberSignature Language="C#" Value="public double Decimal (string Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Decimal([in]string Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Decimal(System.String,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Decimal (Arg1 As String, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Decimal(System::String ^ Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16956)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Номер, который требуется преобразовать.</param>
        <param name="Arg2">Базовый представление номера телефона преобразования.</param>
        <summary>Преобразует текстовое представление числа в базовой в десятичное число.</summary>
        <returns>
          <b>ДАННЫЕ ТИПА DOUBLE</b>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Degrees">
      <MemberSignature Language="C#" Value="public double Degrees (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Degrees([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Degrees(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Degrees (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Degrees(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16727)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Угол — угол в радианах, которое требуется преобразовать.</param>
        <summary>Преобразует радианах в градусы.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delta">
      <MemberSignature Language="C#" Value="public double Delta (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Delta([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Delta(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Delta (Arg1 As Object, Optional Arg2 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16802)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число1 — первый номер.</param>
        <param name="Arg2">Число2 - второй номер. Если не указано, предполагается, что число2 быть равно нулю.</param>
        <summary>Проверяет равенство двух значений. Возвращает значение 1, если Число1 = число2; в противном случае возвращает значение 0.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Используйте эту функцию для фильтрации набор значений. Например суммируются несколько функций <b>дельта</b> , можно подсчитать равно пар. Эта функция также называется дельта-функция Кронекера.</para>
          <para>Если аргумент число1 не <b>дельта</b> возвращает #VALUE!. значение ошибки. </para>
          <para>Если аргумент число2 не <b>дельта</b> возвращает #VALUE!. значение ошибки.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DevSq">
      <MemberSignature Language="C#" Value="public double DevSq (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 DevSq([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DevSq(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DevSq (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16702)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число1, число2,... - — 1 до 30 аргументов, для которых требуется для вычисления суммы квадратичных отклонений. Можно также использовать массив или ссылку на массив вместо аргументов, разделенных запятыми.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Возвращает сумму квадратов отклонений точек данных от их среднего.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Аргументы могут быть числа или имена, массивы или ссылки, которые содержат цифры. </para>
          <para>Учитываются логические значения и текст представления чисел, введите непосредственно в списке аргументов. </para>
          <para>Если аргумент массива или ссылки содержит текст, логические значения или пустые ячейки, эти значения игнорируются; Тем не менее включаются ячейки с помощью нулевое значение. </para>
          <para>Аргументы, которые являются значениями ошибки или текст, который не может быть переведены вызывают ошибки. </para>
          <para>Формула для расчета суммы квадратичных отклонений — это: </para>
          <para>На рисунке 1: Формула для расчета суммы квадратичных отклонений</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DGet">
      <MemberSignature Language="C#" Value="public object DGet (Microsoft.Office.Interop.Excel.Range Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DGet([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DGet(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DGet (Arg1 As Range, Arg2 As Object, Arg3 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ DGet(Microsoft::Office::Interop::Excel::Range ^ Arg1, System::Object ^ Arg2, System::Object ^ Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16619)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">База данных - диапазон базы данных. Базы данных — это список связанных данных, в котором строки являются записями, а столбцы данных — это поля. Первая строка списка содержит заголовки для каждого столбца.</param>
        <param name="Arg2">Field — показывает столбец, используемый в функции. Введите название столбца, заключенные в двойные кавычки, например «Возраст» или «Доход» или номер (без кавычек), который представляет положение столбца в списке: 1 для первого столбца, 2-для второго столбца и т. д.</param>
        <param name="Arg3">Критерии - диапазон ячеек, содержащий условия, которые можно указать. Можно использовать любой диапазон для аргумента условий, при условии, что он содержит по крайней мере одно название столбца и по крайней мере одну ячейку под названием столбца, в котором укажите условие для столбца.</param>
        <summary>Извлекает отдельное значение из столбце списка или базы данных, которая соответствует условиям, указанных.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Так как знак равенства используется для обозначения формулы, введите текст или значение в ячейке, Microsoft Excel оценивает введенные; Тем не менее это может привести к результатам непредвиденные фильтра. Чтобы указать оператор сравнения равенства текст или значение, введите условие в виде строкового выражения в соответствующую ячейку в диапазоне условий: </para>
          <para>='' = запись ''</para>
          <para>Где запись — это текст или значение, которое требуется найти. Пример:</para>
          <list type="table">
            <item>
              <term>= «= Белова»</term>
              <description>= Даволио</description>
            </item>
            <item>
              <term>= «= 3000»</term>
              <description>= 3000</description>
            </item>
          </list>
          <para>При фильтрации текстовых данных Excel не различения прописных и строчных букв. Тем не менее можно использовать формулы для выполнения поиска с учетом регистра.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Disc">
      <MemberSignature Language="C#" Value="public double Disc (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Disc([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Disc(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Disc (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Optional Arg5 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16819)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Сопоставление - Дата сопоставления безопасности. Дата сопоставления безопасности — это дата после даты выпуска, если передается безопасности покупателю.</param>
        <param name="Arg2">Роста - срока. Соответствует дата истечения срока действия безопасности.</param>
        <param name="Arg3">Цена — цена безопасности на лицевой значение 100 долларов США.</param>
        <param name="Arg4">Погашения - ценных погашения за лицевой значение 100 долларов США.</param>
        <param name="Arg5">Основы - способ вычисления дня.</param>
        <summary>Возвращает норму скидки для безопасности.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Важно</b>: ввода дат с помощью функции Дата или как результат других формул и функций. Например следует используйте Дата(2008;5;23) для 23-мая 2008 г. Если даты вводятся как текст, могут возникнуть проблемы. </para>
          <para>Microsoft Excel хранит даты как целые числа, поэтому они могут использоваться в расчетах. По умолчанию 1 января 1900 — серийный номер 1, а 1 января 2008 — номер 39448, так как интервал в днях 1 января 1900. Microsoft Excel для Macintosh использует другую систему дат по умолчанию. </para>
          <para>Дата соглашения — это дата продажи покупателю купон, такие как действия. Срок платежа — это дата истечения срока действия купон. Предположим, например, сроком действия 30 лет выпущена 1 января 2008 года и приобретена покупателем через шесть месяцев после. Датой выпуска будет являться 1 января 2008, Дата соглашения равен 1 июля 2008 г., и срок погашения равен 1 января 2038, 30 лет после даты выпуска 1 января 2008 г. </para>
          <para>Сопоставления, роста и основы усекаются до целых. </para>
          <para>Если сопоставления или роста не является допустимым номером, <b>компакт-диска</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если цена ≤ 0 или погашения ≤ 0, <b>компакт-диска</b> возвращает #NUM! значение ошибки. </para>
          <para>Если основа &lt; 0 или, если основа &gt; 4, <b>компакт-диска</b> возвращает #NUM! значение ошибки. </para>
          <para>Если сопоставления ≥ роста, <b>компакт-диска</b> возвращает #NUM! значение ошибки. </para>
          <para>
            <b>Компакт-диска</b> рассчитывается следующим образом: </para>
          <para>На рисунке 1: Формула для расчета метода компакт-диска</para>
          <para></para>
          <para></para>
          <para>где:</para>
          <para>B = число дней в году, в зависимости от того, за основу года.</para>
          <para>DSM = число дней между сопоставления и роста.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DMax">
      <MemberSignature Language="C#" Value="public double DMax (Microsoft.Office.Interop.Excel.Range Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 DMax([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DMax(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DMax (Arg1 As Range, Arg2 As Object, Arg3 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double DMax(Microsoft::Office::Interop::Excel::Range ^ Arg1, System::Object ^ Arg2, System::Object ^ Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16428)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">База данных - диапазон базы данных. Базы данных — это список связанных данных, в котором строки являются записями, а столбцы данных — это поля. Первая строка списка содержит заголовки для каждого столбца.</param>
        <param name="Arg2">Field — показывает столбец, используемый в функции. Введите название столбца, заключенные в двойные кавычки, например «Возраст» или «Доход» или номер (без кавычек), который представляет положение столбца в списке: 1 для первого столбца, 2-для второго столбца и т. д.</param>
        <param name="Arg3">Критерии - диапазон ячеек, содержащий условия, которые можно указать. Можно использовать любой диапазон для аргумента условий, при условии, что он содержит по крайней мере одно название столбца и по крайней мере одну ячейку под названием столбца, в котором укажите условие для столбца.</param>
        <summary>Возвращает наибольшее число в столбце списка или базы данных, которая соответствует условия, укажите.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Так как знак равенства используется для обозначения формулы, введите текст или значение в ячейке, Microsoft Excel оценивает введенные; Тем не менее это может привести к результатам непредвиденные фильтра. Чтобы указать оператор сравнения равенства текст или значение, введите условие в виде строкового выражения в соответствующую ячейку в диапазоне условий: </para>
          <para>='' = запись ''</para>
          <para>Где запись — это текст или значение, которое требуется найти. Пример:</para>
          <list type="table">
            <item>
              <term>= «= Белова»</term>
              <description>= Даволио</description>
            </item>
            <item>
              <term>= «= 3000»</term>
              <description>= 3000</description>
            </item>
          </list>
          <para>При фильтрации текстовых данных Excel не различения прописных и строчных букв. Тем не менее можно использовать формулы для выполнения поиска с учетом регистра.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DMin">
      <MemberSignature Language="C#" Value="public double DMin (Microsoft.Office.Interop.Excel.Range Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 DMin([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DMin(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DMin (Arg1 As Range, Arg2 As Object, Arg3 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double DMin(Microsoft::Office::Interop::Excel::Range ^ Arg1, System::Object ^ Arg2, System::Object ^ Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16427)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">База данных - диапазон базы данных. Базы данных — это список связанных данных, в котором строки являются записями, а столбцы данных — это поля. Первая строка списка содержит заголовки для каждого столбца.</param>
        <param name="Arg2">Field — показывает столбец, используемый в функции. Введите название столбца, заключенные в двойные кавычки, например «Возраст» или «Доход» или номер (без кавычек), который представляет положение столбца в списке: 1 для первого столбца, 2-для второго столбца и т. д.</param>
        <param name="Arg3">Критерии - диапазон ячеек, содержащий условия, которые можно указать. Можно использовать любой диапазон для аргумента условий, при условии, что он содержит по крайней мере одно название столбца и по крайней мере одну ячейку под названием столбца, в котором укажите условие для столбца.</param>
        <summary>Возвращает наименьшее число в столбце списка или базы данных, которая соответствует условиям, указанных.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Так как знак равенства используется для обозначения формулы, введите текст или значение в ячейке, Microsoft Excel оценивает введенные; Тем не менее это может привести к результатам непредвиденные фильтра. Чтобы указать оператор сравнения равенства текст или значение, введите условие в виде строкового выражения в соответствующую ячейку в диапазоне условий: </para>
          <para>='' = запись ''</para>
          <para>Где запись — это текст или значение, которое требуется найти. Пример:</para>
          <list type="table">
            <item>
              <term>= «= Белова»</term>
              <description>= Даволио</description>
            </item>
            <item>
              <term>= «= 3000»</term>
              <description>= 3000</description>
            </item>
          </list>
          <para>При фильтрации текстовых данных Excel не различения прописных и строчных букв. Тем не менее можно использовать формулы для выполнения поиска с учетом регистра.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dollar">
      <MemberSignature Language="C#" Value="public string Dollar (double Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Dollar([in]float64 Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Dollar(System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dollar (Arg1 As Double, Optional Arg2 As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16397)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Номер - номер, ссылку на ячейку, содержащую число, либо формула, вычисляющий значение числа.</param>
        <param name="Arg2">Разрядов — количество цифр справа от десятичной запятой. Если разрядов является отрицательным, оно округляется слева от десятичной запятой. Если опустить разрядов предполагается иметь значение 2.</param>
        <summary>Функции, описанные в этом разделе преобразует число в текстовый формат и применяет символ валюты. Имя этой функции (и символ, применяемый) зависит от языковых параметров.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Основное различие между форматированием ячейки, содержащей число, с помощью команды ячейки (меню "Формат") и форматированием числа непосредственно с помощью функции <b>РУБЛЬ</b> — это, что <b>РУБЛЬ</b> преобразовывает результат в текст. Номер, отформатированный с помощью команды ячеек по-прежнему является числом. Можно продолжить использовать числа, отформатированные функцией <b>РУБЛЬ</b> в формулах, потому что Microsoft Excel преобразует числа, введенные в виде текстовых значений на номера, при расчете.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DollarDe">
      <MemberSignature Language="C#" Value="public double DollarDe (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 DollarDe([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DollarDe(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DollarDe (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double DollarDe(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16827)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Дроб_руб — это число, выраженное в виде дроби.</param>
        <param name="Arg2">Доля - целое число для использования в делителя дроби.</param>
        <summary>Преобразует цену доллар, выраженное в виде дроби в цену доллара в виде десятичного числа. Функция РУБЛЬ.ДЕС используется для преобразования дробная, например стоимости ценных бумаг, в десятичное число.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если часть не является целым числом, оно сокращается. </para>
          <para>Если дроби меньше 0, <b>функция РУБЛЬ.ДЕС</b> возвращает #NUM! значение ошибки. </para>
          <para>Если дроби равно 0, <b>функция РУБЛЬ.ДЕС</b> возвращает #DIV/0! значение ошибки.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DollarFr">
      <MemberSignature Language="C#" Value="public double DollarFr (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 DollarFr([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DollarFr(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DollarFr (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double DollarFr(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16828)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Дес_руб - — десятичное число.</param>
        <param name="Arg2">Доля - целое число для использования в делителя дроби.</param>
        <summary>Преобразует цену доллар, выраженными в виде десятичного числа в цену доллар, выраженное в виде дроби. Функция РУБЛЬ.дробь используется для преобразования десятичных чисел в дробная, такие как стоимость ценных бумаг.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если часть не является целым числом, оно сокращается. </para>
          <para>Если дроби меньше 0, <b>функция РУБЛЬ.дробь</b> возвращает #NUM! значение ошибки. </para>
          <para>Если дроби равно 0, <b>функция РУБЛЬ.дробь</b> возвращает #DIV/0! значение ошибки.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DProduct">
      <MemberSignature Language="C#" Value="public double DProduct (Microsoft.Office.Interop.Excel.Range Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 DProduct([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DProduct(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DProduct (Arg1 As Range, Arg2 As Object, Arg3 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double DProduct(Microsoft::Office::Interop::Excel::Range ^ Arg1, System::Object ^ Arg2, System::Object ^ Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16573)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">База данных — диапазон базы данных. Базы данных — это список связанных данных, в котором строки являются записями, а столбцы данных — это поля. Первая строка списка содержит заголовки для каждого столбца.</param>
        <param name="Arg2">Поле указывает, столбец, используемый в функции. Введите название столбца, заключенные в двойные кавычки, например «Возраст» или «Доход» или номер (без кавычек), который представляет положение столбца в списке: 1 для первого столбца, 2-для второго столбца и т. д.</param>
        <param name="Arg3">Критерий — диапазон ячеек, содержащий условия, которые можно указать. Можно использовать любой диапазон для аргумента условий, при условии, что он содержит по крайней мере одно название столбца и по крайней мере одну ячейку под названием столбца, в котором укажите условие для столбца.</param>
        <summary>Умножает значения в столбце списка или базы данных, которые соответствуют условиям, которые можно указать.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Так как знак равенства используется для обозначения формулы, введите текст или значение в ячейке, Microsoft Excel оценивает введенные; Тем не менее это может привести к результатам непредвиденные фильтра. Чтобы указать оператор сравнения равенства текст или значение, введите условие в виде строкового выражения в соответствующую ячейку в диапазоне условий: </para>
          <para>='' = запись ''</para>
          <para>Где запись — это текст или значение, которое требуется найти. Пример:</para>
          <list type="table">
            <item>
              <term>= «= Белова»</term>
              <description>= Даволио</description>
            </item>
            <item>
              <term>= «= 3000»</term>
              <description>= 3000</description>
            </item>
          </list>
          <para>При фильтрации текстовых данных Excel не различения прописных и строчных букв. Тем не менее можно использовать формулы для выполнения поиска с учетом регистра.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DStDev">
      <MemberSignature Language="C#" Value="public double DStDev (Microsoft.Office.Interop.Excel.Range Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 DStDev([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DStDev(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DStDev (Arg1 As Range, Arg2 As Object, Arg3 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double DStDev(Microsoft::Office::Interop::Excel::Range ^ Arg1, System::Object ^ Arg2, System::Object ^ Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16429)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">База данных - диапазон базы данных. Базы данных — это список связанных данных, в котором строки являются записями, а столбцы данных — это поля. Первая строка списка содержит заголовки для каждого столбца.</param>
        <param name="Arg2">Field — показывает столбец, используемый в функции. Введите название столбца, заключенные в двойные кавычки, например «Возраст» или «Доход» или номер (без кавычек), который представляет положение столбца в списке: 1 для первого столбца, 2-для второго столбца и т. д.</param>
        <param name="Arg3">Критерии - диапазон ячеек, содержащий условия, которые можно указать. Можно использовать любой диапазон для аргумента условий, при условии, что он содержит по крайней мере одно название столбца и по крайней мере одну ячейку под названием столбца, в котором укажите условие для столбца.</param>
        <summary>Оценивает стандартное отклонение совокупности, используя числа в столбце списка или базы данных, которые соответствуют условиям, указанных на примере.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Так как знак равенства используется для обозначения формулы, введите текст или значение в ячейке, Microsoft Excel оценивает введенные; Тем не менее это может привести к результатам непредвиденные фильтра. Чтобы указать оператор сравнения равенства текст или значение, введите условие в виде строкового выражения в соответствующую ячейку в диапазоне условий: </para>
          <para>='' = запись ''</para>
          <para>Где запись — это текст или значение, которое требуется найти. Пример:</para>
          <list type="table">
            <item>
              <term>= «= Белова»</term>
              <description>= Даволио</description>
            </item>
            <item>
              <term>= «= 3000»</term>
              <description>= 3000</description>
            </item>
          </list>
          <para>При фильтрации текстовых данных Excel не различения прописных и строчных букв. Тем не менее можно использовать формулы для выполнения поиска с учетом регистра.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DStDevP">
      <MemberSignature Language="C#" Value="public double DStDevP (Microsoft.Office.Interop.Excel.Range Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 DStDevP([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DStDevP(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DStDevP (Arg1 As Range, Arg2 As Object, Arg3 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double DStDevP(Microsoft::Office::Interop::Excel::Range ^ Arg1, System::Object ^ Arg2, System::Object ^ Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16579)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Базы данных - является диапазон базы данных. Базы данных — это список связанных данных, в котором строки являются записями, а столбцы данных — это поля. Первая строка списка содержит заголовки для каждого столбца.</param>
        <param name="Arg2">Field — показывает столбец, используемый в функции. Введите название столбца, заключенные в двойные кавычки, например «Возраст» или «Доход» или номер (без кавычек), который представляет положение столбца в списке: 1 для первого столбца, 2-для второго столбца и т. д.</param>
        <param name="Arg3">Критерии - диапазон ячеек, содержащий условия, которые можно указать. Можно использовать любой диапазон для аргумента условий, при условии, что он содержит по крайней мере одно название столбца и по крайней мере одну ячейку под названием столбца, в котором укажите условие для столбца.</param>
        <summary>Вычисляет стандартное отклонение совокупности, используя числа в столбце списка или базы данных, которые соответствуют условиям, указанных в совокупности.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Так как знак равенства используется для обозначения формулы, введите текст или значение в ячейке, Microsoft Excel оценивает введенные; Тем не менее это может привести к результатам непредвиденные фильтра. Чтобы указать оператор сравнения равенства текст или значение, введите условие в виде строкового выражения в соответствующую ячейку в диапазоне условий: </para>
          <para>='' = запись ''</para>
          <para>Где запись — это текст или значение, которое требуется найти. Пример:</para>
          <list type="table">
            <item>
              <term>= «= Белова»</term>
              <description>= Даволио</description>
            </item>
            <item>
              <term>= «= 3000»</term>
              <description>= 3000</description>
            </item>
          </list>
          <para>При фильтрации текстовых данных Excel не различения прописных и строчных букв. Тем не менее можно использовать формулы для выполнения поиска с учетом регистра.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DSum">
      <MemberSignature Language="C#" Value="public double DSum (Microsoft.Office.Interop.Excel.Range Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 DSum([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DSum(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DSum (Arg1 As Range, Arg2 As Object, Arg3 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double DSum(Microsoft::Office::Interop::Excel::Range ^ Arg1, System::Object ^ Arg2, System::Object ^ Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16425)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">База данных - диапазон базы данных. Базы данных — это список связанных данных, в котором строки являются записями, а столбцы данных — это поля. Первая строка списка содержит заголовки для каждого столбца.</param>
        <param name="Arg2">Field — показывает столбец, используемый в функции. Введите название столбца, заключенные в двойные кавычки, например «Возраст» или «Доход» или номер (без кавычек), который представляет положение столбца в списке: 1 для первого столбца, 2-для второго столбца и т. д.</param>
        <param name="Arg3">Критерии - диапазон ячеек, содержащий условия, которые можно указать. Можно использовать любой диапазон для аргумента условий, при условии, что он содержит по крайней мере одно название столбца и по крайней мере одну ячейку под названием столбца, в котором укажите условие для столбца.</param>
        <summary>Складывает числа в столбце списка или базы данных, соответствующие условия, которые можно указать.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Так как знак равенства используется для обозначения формулы, введите текст или значение в ячейке, Microsoft Excel оценивает введенные; Тем не менее это может привести к результатам непредвиденные фильтра. Чтобы указать оператор сравнения равенства текст или значение, введите условие в виде строкового выражения в соответствующую ячейку в диапазоне условий: </para>
          <para>='' = запись ''</para>
          <para>Где запись — это текст или значение, которое требуется найти. Пример:</para>
          <list type="table">
            <item>
              <term>= «= Белова»</term>
              <description>= Даволио</description>
            </item>
            <item>
              <term>= «= 3000»</term>
              <description>= 3000</description>
            </item>
          </list>
          <para>При фильтрации текстовых данных Excel не различения прописных и строчных букв. Тем не менее можно использовать формулы для выполнения поиска с учетом регистра.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy19">
      <MemberSignature Language="C#" Value="public object Dummy19 (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy19([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Dummy19(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy19 (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2827)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Зарезервировано для внутреннего использования.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy21">
      <MemberSignature Language="C#" Value="public double Dummy21 (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Dummy21([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Dummy21(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy21 (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Dummy21(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2826)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <summary>Зарезервировано для внутреннего использования.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public double Duration (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Duration([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Duration(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Duration (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Arg5 As Object, Optional Arg6 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16842)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Сопоставление - Дата сопоставления безопасности. Дата сопоставления безопасности — это дата после даты выпуска, если передается безопасности покупателю.</param>
        <param name="Arg2">Роста - срока. Соответствует дата истечения срока действия безопасности.</param>
        <param name="Arg3">Купон — годовая процентная ставка.</param>
        <param name="Arg4">Доход — годовой доход по ценным бумагам.</param>
        <param name="Arg5">Частота — количество выплат купон в год. Для ежегодных выплат частота = 1; для полугодовых выплат периодичность = 2; для квартальное, частота = 4.</param>
        <param name="Arg6">Основы - способ вычисления дня.</param>
        <summary>Возвращает длительность макалея для предполагаемой параметр имеет значение 100 долларов США. Продолжительность определяется как Средневзвешенная текущее значение движения денежных средств и используется в качестве меры цены связь ответ на изменения в доход.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Важно</b>: ввода дат с помощью функции Дата или как результат других формул и функций. Например следует используйте Дата(2008;5;23) для 23-мая 2008 г. Если даты вводятся как текст, могут возникнуть проблемы.</para>
          <list type="table">
            <item>
              <term>0 или опущен</term>
              <description>"МНЕ НРАВИТСЯ" (NASD) 30/360</description>
            </item>
            <item>
              <term>1</term>
              <description>Фактический</description>
            </item>
            <item>
              <term>2</term>
              <description>Фактический/360</description>
            </item>
            <item>
              <term>3</term>
              <description>Фактический/365</description>
            </item>
            <item>
              <term>4</term>
              <description>Европейский 30/360</description>
            </item>
          </list>
          <para>Microsoft Excel хранит даты как целые числа, поэтому они могут использоваться в расчетах. По умолчанию 1 января 1900 — серийный номер 1, а 1 января 2008 — номер 39448, так как интервал в днях 1 января 1900. Microsoft Excel для Macintosh использует другую систему дат по умолчанию. </para>
          <para>Дата соглашения — это дата продажи покупателю купон, такие как действия. Срок платежа — это дата истечения срока действия купон. Предположим, например, сроком действия 30 лет выпущена 1 января 2008 года и приобретена покупателем через шесть месяцев после. Дата выпуска будет являться 1 января 2008, Дата соглашения равен 1 июля 2008 г., и срок погашения будет равен 1 января 2038, который — 30 лет после даты выпуска 1 января 2008 года. </para>
          <para>Сопоставления, роста, частоту и основы усекаются до целых. </para>
          <para>Если сопоставления или роста не допустимая дата, <b>продолжительность</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если купон &lt; 0 или, если доход &lt; 0, <b>длительность</b> возвращает #NUM! значение ошибки. </para>
          <para>
            <b>Если частота — любое число, отличное от 1, 2 или 4, возвращает #NUM!</b> значение ошибки. </para>
          <para>Если основа &lt; 0 или, если основа &gt; 4, <b>длительность</b> возвращает #NUM! значение ошибки. </para>
          <para>Если сопоставления ≥ роста, <b>длительность</b> возвращает #NUM! значение ошибки.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DVar">
      <MemberSignature Language="C#" Value="public double DVar (Microsoft.Office.Interop.Excel.Range Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 DVar([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DVar(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DVar (Arg1 As Range, Arg2 As Object, Arg3 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double DVar(Microsoft::Office::Interop::Excel::Range ^ Arg1, System::Object ^ Arg2, System::Object ^ Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16431)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">База данных - диапазон базы данных. Базы данных — это список связанных данных, в котором строки являются записями, а столбцы данных — это поля. Первая строка списка содержит заголовки для каждого столбца.</param>
        <param name="Arg2">Field — показывает столбец, используемый в функции. Введите название столбца, заключенные в двойные кавычки, например «Возраст» или «Доход» или номер (без кавычек), который представляет положение столбца в списке: 1 для первого столбца, 2-для второго столбца и т. д.</param>
        <param name="Arg3">Критерии - диапазон ячеек, содержащий условия, которые можно указать. Можно использовать любой диапазон для аргумента условий, при условии, что он содержит по крайней мере одно название столбца и по крайней мере одну ячейку под названием столбца, в котором укажите условие для столбца.</param>
        <summary>Оценивает дисперсию совокупности, используя числа в столбце списка или базы данных, которые соответствуют условиям, указанных на примере.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Так как знак равенства используется для обозначения формулы, введите текст или значение в ячейке, Microsoft Excel оценивает введенные; Тем не менее это может привести к результатам непредвиденные фильтра. Чтобы указать оператор сравнения равенства текст или значение, введите условие в виде строкового выражения в соответствующую ячейку в диапазоне условий: </para>
          <para>='' = запись ''</para>
          <para>Где запись — это текст или значение, которое требуется найти. Пример:</para>
          <list type="table">
            <item>
              <term>= «= Белова»</term>
              <description>= Даволио</description>
            </item>
            <item>
              <term>= «= 3000»</term>
              <description>= 3000</description>
            </item>
          </list>
          <para>При фильтрации текстовых данных Excel не различения прописных и строчных букв. Тем не менее можно использовать формулы для выполнения поиска с учетом регистра.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DVarP">
      <MemberSignature Language="C#" Value="public double DVarP (Microsoft.Office.Interop.Excel.Range Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 DVarP([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DVarP(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DVarP (Arg1 As Range, Arg2 As Object, Arg3 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double DVarP(Microsoft::Office::Interop::Excel::Range ^ Arg1, System::Object ^ Arg2, System::Object ^ Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16580)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">База данных - диапазон базы данных. Базы данных — это список связанных данных, в котором строки являются записями, а столбцы данных — это поля. Первая строка списка содержит заголовки для каждого столбца.</param>
        <param name="Arg2">Field — показывает столбец, используемый в функции. Введите название столбца, заключенные в двойные кавычки, например «Возраст» или «Доход» или номер (без кавычек), который представляет положение столбца в списке: 1 для первого столбца, 2-для второго столбца и т. д.</param>
        <param name="Arg3">Критерии - диапазон ячеек, содержащий условия, которые можно указать. Можно использовать любой диапазон для аргумента условий, при условии, что он содержит по крайней мере одно название столбца и по крайней мере одну ячейку под названием столбца, в котором укажите условие для столбца.</param>
        <summary>Вычисляет дисперсию совокупности, используя числа в столбце списка или базы данных, которые соответствуют условиям, указанных в совокупности.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Так как знак равенства используется для обозначения формулы, введите текст или значение в ячейке, Microsoft Excel оценивает введенные; Тем не менее это может привести к результатам непредвиденные фильтра. Чтобы указать оператор сравнения равенства текст или значение, введите условие в виде строкового выражения в соответствующую ячейку в диапазоне условий: </para>
          <para>='' = запись ''</para>
          <para>Где запись — это текст или значение, которое требуется найти. Пример:</para>
          <list type="table">
            <item>
              <term>= «= Белова»</term>
              <description>= Даволио</description>
            </item>
            <item>
              <term>= «= 3000»</term>
              <description>= 3000</description>
            </item>
          </list>
          <para>При фильтрации текстовых данных Excel не различения прописных и строчных букв. Тем не менее можно использовать формулы для выполнения поиска с учетом регистра.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EDate">
      <MemberSignature Language="C#" Value="public double EDate (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 EDate([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.EDate(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function EDate (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double EDate(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16833)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Нач_дата — Дата, которая представляет дату начала. Даты должны вводиться с использованием функции Дата или как результат других формул и функций. Например следует используйте Дата(2008;5;23) для 23-мая 2008 г. Если даты вводятся как текст, могут возникнуть проблемы.</param>
        <param name="Arg2">Месяцы - число месяцев до или после нач_дата. Положительное значение месяцев уступает будущие даты; отрицательное значение уступает срока в прошлом.</param>
        <summary>Возвращает число, представляющее дату, указанное число месяцев до или после указанной даты (начальной). Функция ДАТАМЕС используется для вычисления срока погашения или даты выполнения, которые могут быть разделены на тот же день месяца в виде дату выпуска.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Microsoft Excel хранит даты как целые числа, поэтому они могут использоваться в расчетах. По умолчанию 1 января 1900 — серийный номер 1, а 1 января 2008 — номер 39448, так как интервал в днях 1 января 1900. Microsoft Excel для Macintosh использует другую систему дат по умолчанию. </para>
          <para>Если нач_дата не является допустимой датой, <b>то функция ДАТАМЕС</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если месяцев не является целым числом, оно сокращается.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Effect">
      <MemberSignature Language="C#" Value="public double Effect (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Effect([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Effect(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Effect (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Effect(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16830)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Номинальная_ставка - номинальный процентной ставки.</param>
        <param name="Arg2">Кпер_год - число периодов в год.</param>
        <summary>Возвращает фактическую годовую процентную ставку, заданным номинальный годовую процентную ставку и число периодов в год.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Аргумент Периодов_в_году усекается до целого числа. </para>
          <para>Если аргумент не является числом, <b>эффект</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если номинальная_ставка ≤ 0 или если кпер_год &lt; 1, <b>влияние</b> возвращает #NUM! значение ошибки. </para>
          <para>
            <b>Влияние</b> рассчитывается следующим образом: </para>
          <para>На рисунке 1: Формула для расчета метода Effect</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeURL">
      <MemberSignature Language="C#" Value="public object EncodeURL (string Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EncodeURL([in]string Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.EncodeURL(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EncodeURL (Arg1 As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ EncodeURL(System::String ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16981)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Arg1">Текст для кодирования.</param>
        <summary>URL-адрес кодирует аргумента.</summary>
        <returns>
          <b>ДАННЫЕ ТИПА DOUBLE</b>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EoMonth">
      <MemberSignature Language="C#" Value="public double EoMonth (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 EoMonth([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.EoMonth(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function EoMonth (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double EoMonth(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16834)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Нач_дата — Дата, соответствующая начальной даты. Даты должны вводиться с использованием функции Дата или как результат других формул и функций. Например следует используйте Дата(2008;5;23) для 23-мая 2008 г. Если даты вводятся как текст, могут возникнуть проблемы.</param>
        <param name="Arg2">Месяцы - число месяцев до или после нач_дата. Положительное значение месяцев уступает будущие даты; отрицательное значение уступает срока в прошлом.</param>
        <summary>Возвращает последний день месяца, указанное число месяцев до или после нач_дата серийный номер. Функция КОНМЕСЯЦА используется для вычисления срока погашения или даты выполнения, которые могут быть разделены на последний день месяца.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Microsoft Excel хранит даты как целые числа, поэтому они могут использоваться в расчетах. По умолчанию 1 января 1900 — серийный номер 1, а 1 января 2008 — номер 39448, так как интервал в днях 1 января 1900. Microsoft Excel для Macintosh использует другую систему дат по умолчанию. </para>
          <para>Если нач_дата не является допустимой датой, <b>то КОНМЕСЯЦА</b> возвращает #NUM! значение ошибки. </para>
          <para>Если нач_дата плюс месяцев дают недопустимую дату, <b>то КОНМЕСЯЦА</b> возвращает #NUM! значение ошибки.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Erf">
      <MemberSignature Language="C#" Value="public double Erf (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Erf([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Erf(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Erf (Arg1 As Object, Optional Arg2 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16807)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Нижний_предел - нижнюю границу по интеграции <b>Erf</b>.</param>
        <param name="Arg2">Верхний_предел - верхнюю границу для интеграции <b>Erf</b>. Если этот параметр опущен, Erf интегрирует от 0 до нижний_предел.</param>
        <summary>Возвращает ошибки функцию между нижний_предел и верхний_предел.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Внимание!</b>: Эта функция была заменена один или несколько новых функций, который может предоставлять улучшенные точность и лучше, имена которых отражают их использования. Эта функция по-прежнему доступна для обеспечения совместимости с предыдущими версиями Excel. Тем не менее если обратной совместимости не требуется, можно теперь с помощью новых функций, так как они более точно описывает их функциональных возможностей. Дополнительные сведения о новой функции можно <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Erf_Precise(System.Object)" /> метод.</para>
          <para>Если нижний_предел не является числом, <b>Erf</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если нижний_предел отрицательно, <b>Erf</b> возвращает #NUM! значение ошибки. </para>
          <para>Если верхний_предел не является числом, <b>Erf</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если верхний_предел отрицательно, <b>Erf</b> возвращает #NUM! значение ошибки. </para>
          <para>На рисунке 1: Формула для расчета метода Erf</para>
          <para></para>
          <para></para>
          <para>На рисунке 2: Формула для расчета метода Erf</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Erf_Precise">
      <MemberSignature Language="C#" Value="public double Erf_Precise (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Erf_Precise([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Erf_Precise(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Erf_Precise (Arg1 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Erf_Precise(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16927)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Нижний_предел - нижнюю границу по интеграции ERF.</param>
        <summary>Возвращает ошибки функцию от 0 до нижний_предел.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если нижний_предел не является числом, <b>Erf_Precise</b> приводит к ошибке. Если нижний_предел отрицательно, <b>Erf_Precise</b> приводит к ошибке.</para>
          <para>На рисунке 1: Формула для расчета метода Erf_Precise</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ErfC">
      <MemberSignature Language="C#" Value="public double ErfC (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ErfC([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ErfC(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ErfC (Arg1 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double ErfC(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16808)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Первый аргумент.</param>
        <summary>Возвращает функция от указанного параметра и infinity.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Внимание!</b>: Эта функция была заменена один или несколько новых функций, который может предоставлять улучшенные точность и лучше, имена которых отражают их использования. Эта функция по-прежнему доступна для обеспечения совместимости с предыдущими версиями Excel. Тем не менее если обратной совместимости не требуется, можно теперь с помощью новых функций, так как они более точно описывает их функциональных возможностей. Дополнительные сведения о новой функции можно <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ErfC_Precise(System.Object)" /> метод.</para>
          <para>Если эта функция не поддерживается и возвращает #NAME? Ошибка, необходимо для установки и загрузки надстройки пакета анализа.</para>
          <para>Если параметр не является числом, <b>то ДФОШ</b> возвращает #VALUE! значение ошибки.</para>
          <para>Если параметр отрицательно, <b>то ДФОШ</b> возвращает #NUM! значение ошибки.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ErfC_Precise">
      <MemberSignature Language="C#" Value="public double ErfC_Precise (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ErfC_Precise([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ErfC_Precise(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ErfC_Precise (Arg1 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double ErfC_Precise(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16928)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Значение для вычисления от.</param>
        <summary>Возвращает дополнительная функция ошибки от указанного значения и infinity.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если указанное значение не является числом, <b>ErfC_Precise</b> приводит к ошибке.</para>
          <para>Если указанное значение является отрицательным, <b>ErfC_Precise</b> приводит к ошибке.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Even">
      <MemberSignature Language="C#" Value="public double Even (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Even([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Even(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Even (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Even(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16663)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число — значение для округления.</param>
        <summary>Возвращает число, округленное до ближайшего четного целого. Эта функция используется для обработки элементов, которые поступают парами. Например ящик упаковки принимает строки одним или двумя элементами. Ящик заполнен, если количество элементов, округлено до ближайшего два, соответствия вместимости.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если номер является числом, <b>ЧЁТН</b> возвращает #VALUE! значение ошибки. </para>
          <para>Независимо от знака числа, оно будет округлено после адаптации от нуля. Если число равняется даже целое число, то округления не производится.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Expon_Dist">
      <MemberSignature Language="C#" Value="public double Expon_Dist (double Arg1, double Arg2, bool Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Expon_Dist([in]float64 Arg1, [in]float64 Arg2, [in]bool Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Expon_Dist(System.Double,System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Expon_Dist (Arg1 As Double, Arg2 As Double, Arg3 As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Expon_Dist(double Arg1, double Arg2, bool Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16878)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Arg1">X — значение функции.</param>
        <param name="Arg2">Лямбда - значение параметра.</param>
        <param name="Arg3">Накопительный пакет — логическое значение, которое указывает, какую форму экспоненциальная функция для предоставления. Если накопительный пакет имеет <b>значение true</b>, <b>Expon_Dist</b> возвращает расчета интегральной функции распределения; Если <b>значение false</b>, то возвращается весовая функция распределения.</param>
        <summary>Возвращает экспоненциальное распределение. Используйте EXPON_DIST для моделирования интервал между событиями, например, сколько времени занимает автоматический банковского служащего денежный. Например можно использовать EXPON_DIST для определения вероятность, что этот процесс займет не более 1 минуты.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если x или лямбда не является числом, <b>Expon_Dist</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если x &lt; 0, <b>Expon_Dist</b> возвращает #NUM! значение ошибки. </para>
          <para>Если лямбда ≤ 0, <b>Expon_Dist</b> возвращает #NUM! значение ошибки. </para>
          <para>Формула для расчета весовой функции распределения — это: </para>
          <para>На рисунке 1: Формула для расчета весовой функции распределения</para>
          <para></para>
          <para></para>
          <para>Формула для расчета интегральной функции распределения — это:</para>
          <para>На рисунке 2: Формула для расчета интегральной функции распределения</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExponDist">
      <MemberSignature Language="C#" Value="public double ExponDist (double Arg1, double Arg2, bool Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ExponDist([in]float64 Arg1, [in]float64 Arg2, [in]bool Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ExponDist(System.Double,System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExponDist (Arg1 As Double, Arg2 As Double, Arg3 As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double ExponDist(double Arg1, double Arg2, bool Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16664)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Arg1">X — значение функции.</param>
        <param name="Arg2">Лямбда - значение параметра.</param>
        <param name="Arg3">Накопительный пакет — логическое значение, которое указывает, какую форму экспоненциальная функция для предоставления. Если накопительный пакет имеет <b>значение true</b>, <b>ЭКСПРАСП</b> возвращает расчета интегральной функции распределения; Если <b>значение false</b>, то возвращается весовая функция распределения.</param>
        <summary>Возвращает экспоненциальное распределение. Использование <b>ЭКСПРАСП</b> для моделирования интервал между событиями, например, сколько времени занимает автоматический банковского служащего денежный. Например <b>ЭКСПРАСП</b> можно использовать для определения вероятность, что этот процесс займет не более 1 минуты.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Внимание!</b>: Эта функция была заменена один или несколько новых функций, который может предоставлять улучшенные точность и лучше, имена которых отражают их использования. Эта функция по-прежнему доступна для обеспечения совместимости с предыдущими версиями Excel. Тем не менее если обратной совместимости не требуется, можно теперь с помощью новых функций, так как они более точно описывает их функциональных возможностей. Дополнительные сведения о новой функции можно <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Expon_Dist(System.Double,System.Double,System.Boolean)" /> метод.</para>
          <para>Если x или лямбда не является числом, <b>то функция ЭКСПРАСП</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если x &lt; 0, <b>то функция ЭКСПРАСП</b> возвращает #NUM! значение ошибки. </para>
          <para>Если лямбда ≤ 0, <b>то функция ЭКСПРАСП</b> возвращает #NUM! значение ошибки. </para>
          <para>Формула для расчета весовой функции распределения — это: </para>
          <para>На рисунке 1: Формула для расчета весовой функции распределения</para>
          <para></para>
          <para></para>
          <para>Формула для расчета интегральной функции распределения — это:</para>
          <para>На рисунке 2: Формула для расчета интегральной функции распределения</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="F_Dist">
      <MemberSignature Language="C#" Value="public double F_Dist (double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 F_Dist([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]bool Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.F_Dist(System.Double,System.Double,System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function F_Dist (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double F_Dist(double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16915)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Arg1">X — значение, для которого вычисляется функция.</param>
        <param name="Arg2">Степени_свободы1 - степеней свободы.</param>
        <param name="Arg3">Степени_свободы2 - делителя степеней свободы.</param>
        <param name="Arg4">Накопительный пакет — логическое значение, определяющее форму функции. Если накопительный пакет имеет <b>значение true</b>, <b>F_Dist</b> возвращает расчета интегральной функции распределения; Если <b>значение false</b>, то возвращается весовая функция распределения.</param>
        <summary>Возвращает F-распределение вероятности.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если аргумент не является числом, <b>F_Dist</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если x отрицательно, <b>F_Dist</b> возвращает #NUM! значение ошибки. </para>
          <para>Если степени_свободы1 или степени_свободы2 не является целым числом, оно сокращается. </para>
          <para>Если степени_свободы1 &lt; 1, <b>F_Dist</b> возвращает #NUM! значение ошибки. </para>
          <para>Если степени_свободы &lt; 1, <b>F_Dist</b> возвращает #NUM! значение ошибки.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="F_Dist_RT">
      <MemberSignature Language="C#" Value="public double F_Dist_RT (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 F_Dist_RT([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.F_Dist_RT(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function F_Dist_RT (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double F_Dist_RT(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16916)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">X — значение, для которого вычисляется функция.</param>
        <param name="Arg2">Степени_свободы1 - степеней свободы.</param>
        <param name="Arg3">Степени_свободы2 - делителя степеней свободы.</param>
        <summary>Возвращает двустороннее право F-распределение вероятности. Эта функция используется для определения, имеют ли два множества данных различные степени плотности. Например можно проверить результаты тестирования и Девочки, поступающих школе и определить, является ли разброс отличается от, обнаруженных в мужчины.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если аргумент не является числом, <b>F_Dist_RT</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если x отрицательно, <b>F_Dist_RT</b> возвращает #NUM! значение ошибки. </para>
          <para>Если степени_свободы1 или степени_свободы2 не является целым числом, оно сокращается. </para>
          <para>Если степени_свободы1 &lt; 1 или степени_свободы1 ≥ 10 ^ 10, <b>F_Dist_RT</b> возвращает #NUM! значение ошибки. </para>
          <para>Если степени_свободы2 &lt; 1 или степени_свободы2 ≥ 10 ^ 10, <b>F_Dist_RT</b> возвращает #NUM! значение ошибки. </para>
          <para>
            <b>F_Dist_RT</b> рассчитывается как F_DIST_RT = P (F&gt;x), где F — это случайная величина, которая имеет F-распределение с степеней свободы степени_свободы1 и степени_свободы2.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="F_Inv">
      <MemberSignature Language="C#" Value="public double F_Inv (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 F_Inv([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.F_Inv(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function F_Inv (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double F_Inv(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16917)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Вероятность — вероятность, связанная с F-распределением.</param>
        <param name="Arg2">Степени_свободы1 - степеней свободы.</param>
        <param name="Arg3">Степени_свободы2 - делителя степеней свободы.</param>
        <summary>Возвращает обратное F-распределение вероятности.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если аргумент не является числом, <b>F_Inv</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если вероятность &lt; 0 или вероятность &gt; 1, <b>F_Inv</b> возвращает #NUM! значение ошибки. </para>
          <para>Если степени_свободы1 или степени_свободы2 не является целым числом, оно сокращается. </para>
          <para>Если степени_свободы1 &lt; 1 или степени_свободы2 &lt; 1, <b>F_Inv</b> возвращает #NUM! значение ошибки. </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="F_Inv_RT">
      <MemberSignature Language="C#" Value="public double F_Inv_RT (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 F_Inv_RT([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.F_Inv_RT(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function F_Inv_RT (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double F_Inv_RT(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16918)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Вероятность — вероятность, связанная с F-распределением.</param>
        <param name="Arg2">Степени_свободы1 - степеней свободы.</param>
        <param name="Arg3">Степени_свободы2 - делителя степеней свободы.</param>
        <summary>Возвращает обратное двустороннее право F-распределение вероятности. Если p = F_DIST_RT(x,...), то F_INV_RT(p,...) = x.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>F-распределение можно использовать в F-тесте, который сравнивает степени особенностей в двух наборов данных. Например можно проанализировать распределение доходов США и Канады, чтобы определить, имеют ли две страны подобные степени плотности доходов.</para>
          <para>Если аргумент не является числом, <b>F_Inv_RT</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если вероятность &lt; 0 или вероятность &gt; 1, <b>F_Inv_RT</b> возвращает #NUM! значение ошибки. </para>
          <para>Если степени_свободы1 или степени_свободы2 не является целым числом, оно сокращается. </para>
          <para>Если степени_свободы1 &lt; 1 или степени_свободы1 ≥ 10 ^ 10, <b>F_Inv_RT</b> возвращает #NUM! значение ошибки. </para>
          <para>Если степени_свободы2 &lt; 1 или степени_свободы2 ≥ 10 ^ 10, <b>F_Inv_RT</b> возвращает #NUM! значение ошибки.</para>
          <para>
            <b>F_Inv_RT</b> можно использовать для возвращения критические значения F-распределения. К примеру вывода дисперсионного анализа обычно включает в себя данные для F-статистики, F-вероятности и F-критическое значение с уровнем значимости 0,05. Чтобы вернуть критическое значение F, используйте в качестве аргумента вероятность для <b>F_Inv_RT</b>уровня значимости.</para>
          <para>Задано значение вероятности, <b>F_Inv_RT</b> ищет значение x, F_DIST_RT (x, степени_свободы1, степени_свободы2) = вероятность. Таким образом, точность <b>F_Inv_RT</b> зависит от точности типа <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.F_Dist_RT(System.Double,System.Double,System.Double)" />. <b>F_Inv_RT</b> использует метод последовательного поиска. Если поиск не завершено после 64 итераций, функция возвращает значение ошибки # н/д.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="F_Test">
      <MemberSignature Language="C#" Value="public double F_Test (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 F_Test([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.F_Test(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function F_Test (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double F_Test(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16875)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Массив1 — первый массив или диапазон данных.</param>
        <param name="Arg2">Массив2 — второй массив или диапазон данных.</param>
        <summary>Возвращает результат F-теста. F-тест возвращает двустороннюю вероятность того, что различия в массив1 и массив2 различаются несущественно. Эта функция используется для определения, имеют ли две выборки различные отклонения. Например даны результаты тестирования для частных и общественных школ, вы можете проверить ли эти школы имеют различные уровни разнородности.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Аргументы должны быть числа или имена, массивы или ссылки, которые содержат цифры. </para>
          <para>Если аргумент массива или ссылки содержит текст, логические значения или пустые ячейки, эти значения игнорируются; Тем не менее включаются ячейки с помощью нулевое значение. </para>
          <para>Если число точек данных в аргументе массив1 или массив2 меньше 2 или отклонение массив1 или массив2 равно нулю, <b>F_Test</b> возвращает #DIV/0! значение ошибки.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fact">
      <MemberSignature Language="C#" Value="public double Fact (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Fact([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Fact(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Fact (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Fact(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16568)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число — неотрицательное число, факториал из. Если число не является целым числом, оно сокращается.</param>
        <summary>Возвращает факториал числа. Факториал числа равен 1*2*3 *...* номер.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FactDouble">
      <MemberSignature Language="C#" Value="public double FactDouble (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 FactDouble([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.FactDouble(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FactDouble (Arg1 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double FactDouble(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16799)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Номер — значение, для которого выполняется двойной факториал. Если число не является целым числом, оно сокращается.</param>
        <summary>Возвращает двойной факториал числа.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если номер является числом, <b>то ДВФАКТР</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если число отрицательно, <b>то ДВФАКТР</b> возвращает #NUM! значение ошибки. </para>
          <para>Даже если число равняется: </para>
          <para>На рисунке 1: Формула для четных чисел</para>
          <para></para>
          <para></para>
          <para>Если число нечетное:</para>
          <para>На рисунке 2: Формула для нечетных чисел</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FDist">
      <MemberSignature Language="C#" Value="public double FDist (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 FDist([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.FDist(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function FDist (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double FDist(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16665)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">X — значение, для которого вычисляется функция.</param>
        <param name="Arg2">Степени_свободы1 - степеней свободы.</param>
        <param name="Arg3">Степени_свободы2 - делителя степеней свободы.</param>
        <summary>Возвращает F-распределение вероятности. Эта функция используется для определения, имеют ли два множества данных различные степени плотности. Например можно проверить результаты тестирования и Девочки, поступающих школе и определить, является ли разброс отличается от, обнаруженных в мужчины.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Внимание!</b>: Эта функция была заменена один или несколько новых функций, который может предоставлять улучшенные точность и лучше, имена которых отражают их использования. Эта функция по-прежнему доступна для обеспечения совместимости с предыдущими версиями Excel. Тем не менее если обратной совместимости не требуется, можно теперь с помощью новых функций, так как они более точно описывает их функциональных возможностей. Дополнительные сведения о новых функциях можно <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.F_Dist_RT(System.Double,System.Double,System.Double)" /> и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.F_Dist(System.Double,System.Double,System.Double,System.Boolean)" /> методы.</para>
          <para>Если аргумент не является числом, <b>FРАСП</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если x отрицательно, <b>FРАСП</b> возвращает #NUM! значение ошибки. </para>
          <para>Если степени_свободы1 или степени_свободы2 не является целым числом, оно сокращается. </para>
          <para>Если степени_свободы1 &lt; 1 или степени_свободы1 ≥ 10 ^ 10, <b>FРАСП</b> возвращает #NUM! значение ошибки. </para>
          <para>Если степени_свободы2 &lt; 1 или степени_свободы2 ≥ 10 ^ 10, <b>FРАСП</b> возвращает #NUM! значение ошибки. </para>
          <para>
            <b>FРАСП</b> вычисляется следующим образом: FРАСП = P (F&gt;x), где F — это случайная величина, которая имеет F-распределение с степеней свободы степени_свободы1 и степени_свободы2.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterXML">
      <MemberSignature Language="C#" Value="public object FilterXML (string Arg1, string Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FilterXML([in]string Arg1, [in]string Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.FilterXML(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FilterXML (Arg1 As String, Arg2 As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FilterXML(System::String ^ Arg1, System::String ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16979)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
        <Parameter Name="Arg2" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Arg1">Допустимый XML-строка.</param>
        <param name="Arg2">Строка запроса XPath.</param>
        <summary>Получение определенных данных из возвращаемого XML, обычно из вызова функции <b>WebService</b> .</summary>
        <returns>
          <b>VARIANT</b>
        </returns>
        <remarks>
          <para>Параметр XPath ограничено до 1024 символов.</para>
          <para>Функция <b>FILTERXML</b> возвращает результаты, выполняется синтаксический анализ с помощью указанных данных операционной системы.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public double Find (string Arg1, string Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Find([in]string Arg1, [in]string Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Find(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (Arg1 As String, Arg2 As String, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16508)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
        <Parameter Name="Arg2" Type="System.String" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Имя листа.</param>
        <param name="Arg2">Имя диапазона.</param>
        <param name="Arg3">Имя аргумента, чтобы уточнить поиск.</param>
        <summary>Находит конкретные сведения на листе.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindB">
      <MemberSignature Language="C#" Value="public double FindB (string Arg1, string Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 FindB([in]string Arg1, [in]string Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.FindB(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindB (Arg1 As String, Arg2 As String, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16589)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
        <Parameter Name="Arg2" Type="System.String" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Искомого - текст, который требуется найти.</param>
        <param name="Arg2">Левого края текста - текст, содержащий текст, который требуется найти.</param>
        <param name="Arg3">Начальная позиция - задает символ, с которого следует начать поиск. Первый знак имеет позицию номер 1. Если номер опущен, то предполагается, что оно является 1.</param>
        <summary>
          <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Find(System.String,System.String,System.Object)" />и <b>НАЙТИБ</b> найдите одной текстовой строки в другую текстовую строку и возвращения положение начала первой текстовой строки второй текстовой строки.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Важно</b>: <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Find(System.String,System.String,System.Object)" /> предназначена для применения с языками, использующими однобайтовых знаков задано (их Изготовителей), а <b>НАЙТИБ</b> предназначена для использования с языками, использующими набор двухбайтовых знаков (DBCS). Язык по умолчанию на вашем компьютере влияет на возвращаемое значение следующим образом:</para>
          <list type="bullet">
            <item>
              <description>
                <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Find(System.String,System.String,System.Object)" />всегда подсчитывает каждый знак как однобайтовые, так и двухбайтовые, как 1, независимо от значения языка по умолчанию.</description>
            </item>
            <item>
              <description>Если разрешено редактирование для языка, поддерживающего DBCS и его настройка в качестве языка по умолчанию, 
                <b>функция НАЙТИБ</b> подсчитывает каждого двухбайтовой как 2. В противном случае <b>НАЙТИБ</b> подсчитывает каждый знак как 1.</description>
            </item>
          </list>
          <para>Языки, которые поддерживают Кодировки включают японский, китайский (упрощенное письмо), китайский (традиционное письмо) и корейского языка. </para>
          <para>
            <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Find(System.String,System.String,System.Object)" />и <b>НАЙТИБ</b> учитывают регистр и не допускает подстановочных знаков. Если не требуется выполнять с учетом регистра поиска или использование подстановочных знаков, можно использовать <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Search(System.String,System.String,System.Object)" /> и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SearchB(System.String,System.String,System.Object)" />. </para>
          <para>Если искомого «» (пустая строка), <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Find(System.String,System.String,System.Object)" /> совпадает с первым символом в строке поиска (то есть, знак с номером Начальная позиция или 1). </para>
          <para>Искомого не может содержать любые подстановочные знаки. </para>
          <para>Если искомого не отображается в левого края текста, <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Find(System.String,System.String,System.Object)" /> и <b>НАЙТИБ</b> возвращают #VALUE! значение ошибки. </para>
          <para>Если начальная позиция не больше нуля, <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Find(System.String,System.String,System.Object)" /> и <b>НАЙТИБ</b> возвращают #VALUE! значение ошибки. </para>
          <para>Если начальная позиция больше, чем длина от левого края текста, <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Find(System.String,System.String,System.Object)" /> и <b>НАЙТИБ</b> возвращают #VALUE! значение ошибки. </para>
          <para>Используйте Начальная позиция пропустить указанное количество символов. С помощью <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Find(System.String,System.String,System.Object)" /> в качестве примера предположим, вы работаете с текстовая строка «AYF0093. YoungMensApparel». Чтобы найти номер первого «Y» в описательную часть текстовой строки, производиться 8, чтобы поиск серийный номер часть текста не выполняется. <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Find(System.String,System.String,System.Object)" />начинается с символа 8, поиск искомого на следующий символ и возвращает число 9. <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Find(System.String,System.String,System.Object)" />всегда возвращает число знаков от начала от левого края текста, подсчет знаков, которое можно пропустить, если начальная позиция больше, чем 1.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FInv">
      <MemberSignature Language="C#" Value="public double FInv (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 FInv([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.FInv(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function FInv (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double FInv(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16666)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Вероятность — вероятность, связанная с F-распределением.</param>
        <param name="Arg2">Степени_свободы1 - степеней свободы.</param>
        <param name="Arg3">Степени_свободы2 — — делителя степеней свободы.</param>
        <summary>Возвращает обратное F-распределение вероятности. Если p = FDIST(x,...), то FINV(p,...) = x.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Внимание!</b>: Эта функция была заменена один или несколько новых функций, который может предоставлять улучшенные точность и лучше, имена которых отражают их использования. Эта функция по-прежнему доступна для обеспечения совместимости с предыдущими версиями Excel. Тем не менее если обратной совместимости не требуется, можно теперь с помощью новых функций, так как они более точно описывает их функциональных возможностей. Дополнительные сведения о новых функциях можно <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.F_Inv_RT(System.Double,System.Double,System.Double)" /> и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.F_Inv(System.Double,System.Double,System.Double)" /> методы.</para>
          <para>F-распределение можно использовать в F-тесте, который сравнивает степени особенностей в двух наборов данных. Например можно проанализировать распределение доходов США и Канады, чтобы определить, имеют ли две страны подобные степени плотности доходов.</para>
          <para>Если аргумент не является числом, <b>FРАСПОБР</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если вероятность &lt; 0 или вероятность &gt; 1, <b>FРАСПОБР</b> возвращает #NUM! значение ошибки. </para>
          <para>Если степени_свободы1 или степени_свободы2 не является целым числом, оно сокращается. </para>
          <para>Если степени_свободы1 &lt; 1 или степени_свободы1 ≥ 10 ^ 10, <b>FРАСПОБР</b> возвращает #NUM! значение ошибки. </para>
          <para>Если степени_свободы2 &lt; 1 или степени_свободы2 ≥ 10 ^ 10, <b>FРАСПОБР</b> возвращает #NUM! значение ошибки.</para>
          <para>
            <b>То функция FРАСПОБР</b> можно использовать для возвращения критические значения F-распределения. К примеру вывода дисперсионного анализа обычно включает в себя данные для F-статистики, F-вероятности и F-критическое значение с уровнем значимости 0,05. Чтобы вернуть критическое значение F, используйте в качестве аргумента вероятность для <b>FРАСПОБР</b>уровня значимости.</para>
          <para>Задано значение вероятности, <b>то функция FРАСПОБР</b> ищет значение x, которого функция FРАСП (x, степени_свободы1, степени_свободы2) = вероятность. Таким образом, точность <b>функции FРАСПОБР</b> зависит от точности типа <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.FDist(System.Double,System.Double,System.Double)" />. <b>FРАСПОБР</b> использует метод последовательного поиска. Если поиск не завершено после 64 итераций, функция возвращает значение ошибки # н/д.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fisher">
      <MemberSignature Language="C#" Value="public double Fisher (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Fisher([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Fisher(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Fisher (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Fisher(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16667)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">x - числовое значение, для которого требуется преобразовать.</param>
        <summary>Возвращает преобразование Фишера для x. При преобразовании получается функция, которая является обычно распределена, чем несимметрична. Эта функция используется для проверки коэффициента корреляции.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если x не является числом, <b>Фишера</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если x ≤ -1 или x ≥ 1 <b>Фишера</b> возвращает #NUM! значение ошибки. </para>
          <para>Уравнение для преобразования Фишера имеет следующий вид:</para>
          <para>На рисунке 1: Формула для преобразования Фишера</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FisherInv">
      <MemberSignature Language="C#" Value="public double FisherInv (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 FisherInv([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.FisherInv(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function FisherInv (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double FisherInv(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16668)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">y — значение, для которого требуется выполнить обратное преобразование.</param>
        <summary>Возвращает обратное преобразование Фишера. Это преобразование используется при анализе корреляции между массивах данных. Если y = ФИШЕР(x), то ФИШЕРОБР(y) = x.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если y не является числом, <b>функция ФИШЕРОБР</b> возвращает #VALUE! значение ошибки. </para>
          <para>Уравнение для обратного преобразования Фишера имеет следующий вид:</para>
          <para>На рисунке 1: Формула для обратного преобразования Фишера</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fixed">
      <MemberSignature Language="C#" Value="public string Fixed (double Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Fixed([in]float64 Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Fixed(System.Double,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Fixed (Arg1 As Double, Optional Arg2 As Object, Optional Arg3 As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16398)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Number - номер, который нужно округлить и преобразовать в текст.</param>
        <param name="Arg2">Разрядов — количество цифр справа от десятичной запятой.</param>
        <param name="Arg3">Без_разделителей — логическое значение, которое, если <b>значение true</b>, не позволяет <b>Фиксированная</b> в возвращаемый текст.</param>
        <summary>Округляет число до указанного количества десятичных разрядов, форматирует число в десятичном формате с использованием запятых и и возвращает результат в виде текста.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Числа в Microsoft Excel не могут иметь более 15 значащих цифр, но разрядов может быть задано как 127. </para>
          <para>Если разрядов является отрицательным, оно округляется слева от десятичной запятой. </para>
          <para>Если опустить разрядов предполагается иметь значение 2. </para>
          <para>Если без_разделителей имеет <b>значение false</b> или опущен, затем возвращаемый текст обычно содержит запятые. </para>
          <para>Основное различие между форматирования ячейки кодом с помощью команды ячейки (меню "Формат") и форматированием числа непосредственно с ФИКСИРОВАННОЙ функции — это, что <b>фиксированный</b> преобразует свой результат в текст. Номер, отформатированный с помощью команды ячеек по-прежнему является числом.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Floor">
      <MemberSignature Language="C#" Value="public double Floor (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Floor([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Floor(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Floor (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Floor(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16669)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Номер — числовое значение, которое требуется округлить.</param>
        <param name="Arg2">Значение - множитель для которого требуется округлить.</param>
        <summary>Округляет число до нуля, до ближайшего имеет значения.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Внимание!</b>: Эта функция была заменена один или несколько новых функций, который может предоставлять улучшенные точность и лучше, имена которых отражают их использования. Эта функция по-прежнему доступна для обеспечения совместимости с предыдущими версиями Excel. Тем не менее если обратной совместимости не требуется, можно теперь с помощью новых функций, так как они более точно описывает их функциональных возможностей. Дополнительные сведения о новой функции можно <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Floor_Precise(System.Double,System.Object)" /> метод.</para>
          <para>Если аргумент не является числом, <b>этажа</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если число и точность имеют различные знаки, <b>этажа</b> возвращает #NUM! значение ошибки. </para>
          <para>Независимо от знака числа значение округляется с избытком. Если число равняется точное несколькими имеет значения, то округления не производится.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Floor_Math">
      <MemberSignature Language="C#" Value="public double Floor_Math (double Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Floor_Math([in]float64 Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Floor_Math(System.Double,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Floor_Math (Arg1 As Double, Optional Arg2 As Object, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16976)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Значение, которое требуется округлить.</param>
        <param name="Arg2">Множитель для которого требуется округлить.</param>
        <param name="Arg3">Когда задан ненулевое значение, эта функция будет округления к нулю.</param>
        <summary>Округляет число вниз ближайшего целого числа или значения.</summary>
        <returns>
          <b>ДАННЫЕ ТИПА DOUBLE</b>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Floor_Precise">
      <MemberSignature Language="C#" Value="public double Floor_Precise (double Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Floor_Precise([in]float64 Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Floor_Precise(System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Floor_Precise (Arg1 As Double, Optional Arg2 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16931)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Номер — числовое значение, которое требуется округлить.</param>
        <param name="Arg2">Значение - множитель для которого требуется округлить.</param>
        <summary>Округляет заданное число до ближайшего имеет значения.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>В зависимости от входа число и точность аргументов метод <b>Floor_Precise</b> округляет от или к нулю.</para>
          <list type="table">
            <item>
              <term>-/-</term>
              <description>Округляет от нуля.</description>
            </item>
            <item>
              <term>+/+</term>
              <description>Округляет число до нуля.</description>
            </item>
            <item>
              <term>-/+</term>
              <description>Округляет от нуля.</description>
            </item>
            <item>
              <term>+/-</term>
              <description>Округляет число до нуля.</description>
            </item>
          </list>
          <para>Если аргумент не является числом, метод <b>Floor_Precise</b> приводит к ошибке. </para>
          <para>Если число равняется точное несколькими имеет значения, то округления не производится.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Forecast">
      <MemberSignature Language="C#" Value="public double Forecast (double Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Forecast([in]float64 Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Forecast(System.Double,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Forecast (Arg1 As Double, Arg2 As Object, Arg3 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Forecast(double Arg1, System::Object ^ Arg2, System::Object ^ Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16693)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">X - точка данных, для которого необходимо создать прогноз значение.</param>
        <param name="Arg2">Known_y's - зависимый массив или диапазон данных.</param>
        <param name="Arg3">Известные_значения_x, в - независимый массив или диапазон данных.</param>
        <summary>Вычисляет или прогнозирует будущее значение с учетом существующих значений. Прогнозируемое значение — это значение "y" для заданного значения "x". Известные значения — это уже имеющиеся значения "x" и "y", а новое значение прогнозируется с использованием линейной регрессии. Вы можете использовать эту функцию для прогнозирования будущих продаж, необходимого запаса товара или тенденций потребительских предпочтений.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если x не является числом, <b>Прогноз</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если известные_значения_y и известные_значения_x, в пусты или содержат различное число точек данных, <b>Прогноз</b> возвращает значение ошибки # н/д. </para>
          <para>Если отклонение данных равно нулю, то <b>Прогноз</b> возвращает #DIV/0!. значение ошибки. </para>
          <para>Формула для <b>прогноза</b> является + bx, где: </para>
          <para>На рисунке 1: Формула для расчета метода Forecast</para>
          <para></para>
          <para></para>
          <para>И:</para>
          <para>На рисунке 2: Формула для расчета метода Forecast</para>
          <para></para>
          <para></para>
          <para>и где x и y — выборочные средние значения СРЗНАЧ(массив1) и среднее (известную отправлять).</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Frequency">
      <MemberSignature Language="C#" Value="public object Frequency (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Frequency([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Frequency(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Frequency (Arg1 As Object, Arg2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Frequency(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16636)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Массив_данных — массив или ссылку на набор значений, для которых требуется частоты. Если массив_данных не содержит значений, <b>Частота</b> возвращает массив нулей.</param>
        <param name="Arg2">Массив_карманов — массив или ссылка на интервалы времени, в которые нужно сгруппировать значения аргумента массив_данных. Если массив_карманов не содержит значений, <b>Частота</b> возвращает число элементов в аргументе массив_данных.</param>
        <summary>Вычисляет частоту появления значений в диапазон значений, а затем возвращает массив цифр. Например используйте <b>Частота</b> для определения числа результатов тестирования, попадающих в интервалы результатов. Поскольку <b>Частота</b> возвращает массив, оно должно вводится как формулы массива.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Частота</b> вводится как формула массива, после выбора диапазона смежных ячеек, в которые нужно возвращенные рассылки отображаться. </para>
          <para>Количество элементов в возвращаемом массиве — это один больше, чем количество элементов в массив_карманов. Дополнительный элемент в возвращаемом массиве возвращает количество значений, над максимальный интервал. К примеру при инвентаризации три диапазоны значений (интервалов), введенных в три ячейки, убедитесь, что выберите <b>частоту</b> в четыре ячейки для результатов. Дополнительная ячейка возвращает число значений в массив_данных, больше, чем значение границы третьего интервала. </para>
          <para>
            <b>Частота</b> игнорирует пустые ячейки и текст. </para>
          <para>При вводе формул, которые возвращают массивы должны быть формул массива.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FTest">
      <MemberSignature Language="C#" Value="public double FTest (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 FTest([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.FTest(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FTest (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double FTest(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16694)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Массив1 — первый массив или диапазон данных.</param>
        <param name="Arg2">Массив2 — второй массив или диапазон данных.</param>
        <summary>Возвращает результат F-теста. F-тест возвращает двустороннюю вероятность того, что различия в массив1 и массив2 различаются несущественно. Эта функция используется для определения, имеют ли две выборки различные отклонения. Например даны результаты тестирования для частных и общественных школ, вы можете проверить ли эти школы имеют различные уровни разнородности.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Внимание!</b>: Эта функция была заменена один или несколько новых функций, который может предоставлять улучшенные точность и лучше, имена которых отражают их использования. Эта функция по-прежнему доступна для обеспечения совместимости с предыдущими версиями Excel. Тем не менее если обратной совместимости не требуется, можно теперь с помощью новых функций, так как они более точно описывает их функциональных возможностей. Дополнительные сведения о новой функции можно <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.F_Test(System.Object,System.Object)" /> метод.</para>
          <para>Аргументы должны быть числа или имена, массивы или ссылки, которые содержат цифры. </para>
          <para>Если аргумент массива или ссылки содержит текст, логические значения или пустые ячейки, эти значения игнорируются; Тем не менее включаются ячейки с помощью нулевое значение. </para>
          <para>Если число точек данных в аргументе массив1 или массив2 меньше 2 или отклонение массив1 или массив2 равно нулю, <b>f-теста</b> возвращает #DIV/0! значение ошибки.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fv">
      <MemberSignature Language="C#" Value="public double Fv (double Arg1, double Arg2, double Arg3, object Arg4, object Arg5);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Fv([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]object Arg4, [in]object Arg5) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Fv(System.Double,System.Double,System.Double,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Fv (Arg1 As Double, Arg2 As Double, Arg3 As Double, Optional Arg4 As Object, Optional Arg5 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16441)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Частота - процентную ставку за период.</param>
        <param name="Arg2">NPer — общее число периодов выплат аннуитета.</param>
        <param name="Arg3">Pmt - платеж каждый период; его нельзя изменить на протяжении всего периода выплат. Как правило, pmt участника и процент, но не содержит других сборов или налоги. Если опущен, необходимо включить в аргументе pv.</param>
        <param name="Arg4">PV - текущая стоимость или общая сумма всех будущих платежей с стоит на данный момент. Если pv указан, он считается нуль (0) и должно включать аргумент.</param>
        <param name="Arg5">Тип — число 0 или 1, обозначающее, когда срок выполнения. Если тип указан, то предполагается, что оно является 0.</param>
        <summary>Возвращает значение будущих инвестиций на основе периодических постоянных выплат и постоянной процентной ставки.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Более подробное описание аргументов в <b>БЗ</b> и Дополнительные сведения о функциях выплат, увидеть <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Pv(System.Double,System.Double,System.Double,System.Object,System.Object)" />.</para>
          <list type="table">
            <item>
              <term>0</term>
              <description>В конце периода</description>
            </item>
            <item>
              <term>1</term>
              <description>С начала периода</description>
            </item>
          </list>
          <para>Убедитесь в том, что вы являетесь согласованные единицы измерения, которая будет использоваться для определения скорости и nper. Если ежемесячных выплатах на заем 4 года в 12 процентов годовых, используйте 12% / 12 для скорости и 4 * 12 для nper. Если производится ежегодных выплат на одном кредита, используйте 12% для скорости и 4 для nper. </para>
          <para>Все аргументы денежные средства, такие как вклады в сбережения, представляются отрицательными числами; полученные деньги, такие как дивидендов, представлены положительными числами.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FVSchedule">
      <MemberSignature Language="C#" Value="public double FVSchedule (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 FVSchedule([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.FVSchedule(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FVSchedule (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double FVSchedule(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16860)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Участник — это текущая стоимость.</param>
        <param name="Arg2">Расписание - массив ставки процента вступили в силу.</param>
        <summary>Возвращает будущее значение первоначальной основной суммы после применения ряда сложных процентов. Функция БЗРАСПИС используется для вычисления будущего значения инвестиции с переменной скорости.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Значения в расписание могут быть числами или пустыми ячейками; любое другое значение создает #VALUE! значение ошибки для <b>БЗРАСПИС</b>. Пустые ячейки, взяты как нули (нет дохода).</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Gamma">
      <MemberSignature Language="C#" Value="public double Gamma (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Gamma([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Gamma(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Gamma (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Gamma(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16959)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Значение, для которого требуется вычислить гамма.</param>
        <summary>Возвращает значение гамма-функции.</summary>
        <returns>
          <b>ДАННЫЕ ТИПА DOUBLE</b>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Gamma_Dist">
      <MemberSignature Language="C#" Value="public double Gamma_Dist (double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Gamma_Dist([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]bool Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Gamma_Dist(System.Double,System.Double,System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Gamma_Dist (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Gamma_Dist(double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16879)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Arg1">X — значение, для которого требуется вычислить распределение.</param>
        <param name="Arg2">Альфа - параметр распределения.</param>
        <param name="Arg3">Бета-версия — параметр распределения. Если бета-версия = 1, <b>Gamma_Dist</b> возвращает стандартное гамма-распределение.</param>
        <param name="Arg4">Накопительный пакет — логическое значение, определяющее форму функции. Если накопительный пакет имеет <b>значение true</b>, <b>Gamma_Dist</b> возвращает расчета интегральной функции распределения; Если <b>значение false</b>, то возвращается весовая функция распределения.</param>
        <summary>Возвращает гамма-распределение. Эта функция используется для изучения переменных, которые могут иметь наклоном рассылки. Гамма-распределение обычно используется в теории очередей.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если x, альфа, или бета-версии не является числом, <b>Gamma_Dist</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если x &lt; 0, <b>Gamma_Dist</b> возвращает #NUM! значение ошибки. </para>
          <para>Если альфа ≤ 0 или бета ≤ 0, <b>Gamma_Dist</b> возвращает #NUM! значение ошибки. </para>
          <para>Уравнение для гамма-функция распределения вероятности имеет следующий вид: </para>
          <para>На рисунке 1: Гамма весовая функция распределения</para>
          <para></para>
          <para></para>
          <para>— Это стандартные гамма-функция плотности:</para>
          <para>На рисунке 2: Стандартное гамма весовая функция распределения</para>
          <para></para>
          <para></para>
          <para>Если альфа = 1, <b>Gamma_Dist</b> возвращает экспоненциальное распределение:</para>
          <para>На рисунке 3: формула</para>
          <para></para>
          <para></para>
          <para>N положительное целое число, при альфа = n/2, бета-версия = 2 и накопительным = <b>true</b>, возвращает <b>Gamma_Dist</b> (1 - ХИ2РАСП(x)) с n степеней свободы. </para>
          <para>При альфа — это положительное целое число, <b>Gamma_Dist</b> также называется распределением Эрланга.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Gamma_Inv">
      <MemberSignature Language="C#" Value="public double Gamma_Inv (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Gamma_Inv([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Gamma_Inv(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Gamma_Inv (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Gamma_Inv(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16880)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Вероятность — вероятность, связанная с гамма-распределение.</param>
        <param name="Arg2">Альфа - параметр распределения.</param>
        <param name="Arg3">Бета-версия — параметр распределения. Если бета-версия = 1, <b>Gamma_Inv</b> возвращает стандартное гамма-распределение.</param>
        <summary>Возвращает обратное гамма-распределение. Если p = GAMMA_DIST(x,...), то GAMMA_INV(p,...) = x.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Эта функция может исказиться, распределение переменных.</para>
          <para>Если аргумент не является текст, <b>Gamma_Inv</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если вероятность &lt; 0 или вероятность &gt; 1, <b>Gamma_Inv</b> возвращает #NUM! значение ошибки. </para>
          <para>Если альфа ≤ 0 или бета ≤ 0, <b>Gamma_Inv</b> возвращает #NUM! значение ошибки.</para>
          <para>Задано значение вероятности, <b>Gamma_Inv</b> ищет значение x, GAMMA_DIST (x, альфа, бета, ИСТИНА) = вероятность. Таким образом, точность <b>Gamma_Inv</b> зависит от точности типа <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Gamma_Dist(System.Double,System.Double,System.Double,System.Boolean)" />. <b>Gamma_Inv</b> использует метод последовательного поиска. Если поиск не завершено после 100 итераций, функция возвращает значение ошибки # н/д.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GammaDist">
      <MemberSignature Language="C#" Value="public double GammaDist (double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 GammaDist([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]bool Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.GammaDist(System.Double,System.Double,System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GammaDist (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GammaDist(double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16670)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Arg1">X — значение, для которого требуется вычислить распределение.</param>
        <param name="Arg2">Альфа - параметр распределения.</param>
        <param name="Arg3">Бета-версия — параметр распределения. Если бета-версия = 1, <b>ГАММАРАСП</b> возвращает стандартное гамма-распределение.</param>
        <param name="Arg4">Накопительный пакет — логическое значение, определяющее форму функции. Если накопительный пакет имеет <b>значение true</b>, <b>ГАММАРАСП</b> возвращает расчета интегральной функции распределения; Если <b>значение false</b>, то возвращается весовая функция распределения.</param>
        <summary>Возвращает гамма-распределение. Эта функция используется для изучения переменных, которые могут иметь наклоном рассылки. Гамма-распределение обычно используется в теории очередей.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Внимание!</b>: Эта функция была заменена один или несколько новых функций, который может предоставлять улучшенные точность и лучше, имена которых отражают их использования. Эта функция по-прежнему доступна для обеспечения совместимости с предыдущими версиями Excel. Тем не менее если обратной совместимости не требуется, можно теперь с помощью новых функций, так как они более точно описывает их функциональных возможностей. Дополнительные сведения о новой функции можно <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Gamma_Dist(System.Double,System.Double,System.Double,System.Boolean)" /> метод.</para>
          <para>Если x, альфа, или бета-версии не является числом, <b>ГАММАРАСП</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если x &lt; 0, <b>ГАММАРАСП</b> возвращает #NUM! значение ошибки. </para>
          <para>Если альфа ≤ 0 или бета ≤ 0, <b>ГАММАРАСП</b> возвращает #NUM! значение ошибки. </para>
          <para>Уравнение для гамма-функция распределения вероятности имеет следующий вид: </para>
          <para>На рисунке 1: Гамма весовая функция распределения</para>
          <para></para>
          <para></para>
          <para>— Это стандартные гамма-функция плотности:</para>
          <para>На рисунке 2: Стандартное гамма весовая функция распределения</para>
          <para></para>
          <para></para>
          <para>Если альфа = 1, <b>ГАММАРАСП</b> возвращает экспоненциальное распределение:</para>
          <para>На рисунке 3: формула</para>
          <para></para>
          <para></para>
          <para>N положительное целое число, при альфа = n/2, бета-версия = 2 и накопительным = <b>true</b>, <b>ГАММАРАСП</b> возвращает (1 - ХИ2РАСП(x)) с n степеней свободы. </para>
          <para>При альфа — это положительное целое число, <b>ГАММАРАСП</b> также называется распределением Эрланга.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GammaInv">
      <MemberSignature Language="C#" Value="public double GammaInv (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 GammaInv([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.GammaInv(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function GammaInv (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GammaInv(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16671)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Вероятность — вероятность, связанная с гамма-распределение.</param>
        <param name="Arg2">Альфа - параметр распределения.</param>
        <param name="Arg3">Бета-версия — параметр распределения. Если бета-версия = 1, <b>ГАММАОБР</b> возвращает стандартное гамма-распределение.</param>
        <summary>Возвращает обратное гамма-распределение. Если p = ГАММАРАСП(x;...), то ГАММАОБР(p;...) = x.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Внимание!</b>: Эта функция была заменена один или несколько новых функций, который может предоставлять улучшенные точность и лучше, имена которых отражают их использования. Эта функция по-прежнему доступна для обеспечения совместимости с предыдущими версиями Excel. Тем не менее если обратной совместимости не требуется, можно теперь с помощью новых функций, так как они более точно описывает их функциональных возможностей. Дополнительные сведения о новой функции можно <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Gamma_Inv(System.Double,System.Double,System.Double)" /> метод.</para>
          <para>Эта функция может исказиться, распределение переменных.</para>
          <para>Если аргумент не является текст, <b>ГАММАОБР</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если вероятность &lt; 0 или вероятность &gt; 1, <b>ГАММАОБР</b> возвращает #NUM! значение ошибки. </para>
          <para>Если альфа ≤ 0 или бета ≤ 0, <b>ГАММАОБР</b> возвращает #NUM! значение ошибки.</para>
          <para>Задано значение вероятности, <b>ГАММАОБР</b> ищет значение x, ГАММАРАСП (x, альфа, бета, ИСТИНА) = вероятность. Таким образом, точность <b>функции ГАММАОБР</b> зависит от точности типа <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.GammaDist(System.Double,System.Double,System.Double,System.Boolean)" />. <b>ГАММАОБР</b> использует метод последовательного поиска. Если поиск не завершено после 64 итераций, функция возвращает значение ошибки # н/д.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GammaLn">
      <MemberSignature Language="C#" Value="public double GammaLn (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 GammaLn([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.GammaLn(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function GammaLn (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GammaLn(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16655)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">X — значение, для которого требуется вычислить GAMMALN.</param>
        <summary>Возвращает натуральный логарифм гамма-функция Γ(x).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Внимание!</b>: Эта функция была заменена один или несколько новых функций, который может предоставлять улучшенные точность и лучше, имена которых отражают их использования. Эта функция по-прежнему доступна для обеспечения совместимости с предыдущими версиями Excel. Тем не менее если обратной совместимости не требуется, можно теперь с помощью новых функций, так как они более точно описывает их функциональных возможностей. Дополнительные сведения о новой функции можно <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.GammaLn_Precise(System.Double)" /> метод.</para>
          <para>Если x не является числом, <b>GammaLn</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если x ≤ 0, <b>GammaLn</b> возвращает #NUM! значение ошибки. </para>
          <para>Возвращает число e, возведенное в степень ГАММАНЛОГ(i), где i — целое число, и тот же результат (i - 1). </para>
          <para>
            <b>GammaLn</b> рассчитывается следующим образом: </para>
          <para>На рисунке 1: Формула для расчета метода GammaLn</para>
          <para></para>
          <para></para>
          <para>Где:</para>
          <para>На рисунке 2: формула</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GammaLn_Precise">
      <MemberSignature Language="C#" Value="public double GammaLn_Precise (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 GammaLn_Precise([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.GammaLn_Precise(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function GammaLn_Precise (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GammaLn_Precise(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16929)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">X — значение, для которого требуется вычислить GAMMALN.</param>
        <summary>Возвращает натуральный логарифм гамма-функция Γ(x).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если x является числом, метода <b>GammaLn_Precise</b> приводит к ошибке. </para>
          <para>Если x ≤ 0, метода <b>GammaLn_Precise</b> приводит к ошибке. </para>
          <para>Возвращает число e, возведенное в степень ГАММАНЛОГ(i), где i — целое число, и тот же результат (i - 1). </para>
          <para>GAMMALN рассчитывается следующим образом: </para>
          <para>На рисунке 1: Формула для расчета метода GammaLn_Precise</para>
          <para></para>
          <para></para>
          <para>Где:</para>
          <para>На рисунке 2: формула</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Gauss">
      <MemberSignature Language="C#" Value="public double Gauss (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Gauss([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Gauss(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Gauss (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Gauss(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16961)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Значение, для которого вы хотите распределения.</param>
        <summary>Возвращает 0,5 меньше, чем стандартное нормальное интегральное распределение.</summary>
        <returns>
          <b>ДАННЫЕ ТИПА DOUBLE</b>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Gcd">
      <MemberSignature Language="C#" Value="public double Gcd (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Gcd([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Gcd(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Gcd (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16857)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число1, число2,... - 1 до 29 значений. Если любое значение не является целым числом, оно сокращается.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Возвращает наибольшего общего делителя двух или более целых чисел. Наибольшего общего делителя — наибольшее целое число, которое делятся Число1 и число2 без оставшейся.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если аргумент не является числом, <b>то НОД</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если любой из аргументов меньше нуля, <b>то НОД</b> возвращает #NUM! значение ошибки. </para>
          <para>Один равномерно делит любое значение. </para>
          <para>Простое число имеет только себя и как делителей.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GeoMean">
      <MemberSignature Language="C#" Value="public double GeoMean (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 GeoMean([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.GeoMean(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GeoMean (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16703)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число1, число2,... - 1 до 30 аргументов, для которых требуется вычислить среднее. Можно также использовать массив или ссылку на массив вместо аргументов, разделенных запятыми.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Возвращает среднее геометрическое массив или диапазон положительных данных. Например функция СРГЕОМ можно использовать для вычисления средних темпов роста данной процентной ставке.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Аргументы могут быть числа или имена, массивы или ссылки, которые содержат цифры. </para>
          <para>Учитываются логические значения и текст представления чисел, введите непосредственно в списке аргументов. </para>
          <para>Если аргумент массива или ссылки содержит текст, логические значения или пустые ячейки, эти значения игнорируются; Тем не менее включаются ячейки с помощью нулевое значение. </para>
          <para>Аргументы, которые являются значениями ошибки или текст, который не может быть переведены вызывают ошибки. </para>
          <para>Если какой ≤ 0, <b>функция СРГЕОМ</b> возвращает #NUM! значение ошибки. </para>
          <para>Формула для расчета среднего геометрического значения — это: </para>
          <para>На рисунке 1: Формула для расчета среднего геометрического значения</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GeStep">
      <MemberSignature Language="C#" Value="public double GeStep (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 GeStep([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.GeStep(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GeStep (Arg1 As Object, Optional Arg2 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16803)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Номер - значение.</param>
        <param name="Arg2">Шаг - порогового значения. Если опустить порог <b>Порог</b> использует нулю.</param>
        <summary>Возвращает 1, если число ≥ порог; в противном случае возвращает нуль (0). Используйте эту функцию для фильтрации набор значений. Например суммируются несколько функций <b>Порог</b> , можно подсчитать значений, которые превышают пороговое значение.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если аргумент не является числом, <b>то порог</b> возвращает #VALUE! значение ошибки.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Growth">
      <MemberSignature Language="C#" Value="public object Growth (object Arg1, object Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Growth([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Growth(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Growth (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16436)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Known_y's - набор значений y, которые уже известны соотношения y = b * m ^ x.</param>
        <param name="Arg2">Известные_значения_x, в - необязательный набор значений x, которые уже известны для соотношения y = b * m ^ x.</param>
        <param name="Arg3">Новые_значения_x - новые значения x, для которых <b>рост</b> возвращает соответствующие значения y.</param>
        <param name="Arg4">Const — логическое значение, определяющее, следует ли константа b, равное 1.</param>
        <summary>Рассчитывает прогнозируемый экспоненциальное рост с помощью существующих данных. <b>Рост</b> возвращает значения y для ряда новых x значения, заданные с помощью существующего значения x и y значения. Также можно использовать функцию <b>роста</b> в соответствии со экспоненциальное график для существующего значения x и y значения.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если массив известные_значения_y одного столбца, каждый столбец данных считается отдельной переменной. </para>
          <para>Если массив известные_значения_y в одной строке, каждой строки данных считается отдельной переменной. </para>
          <para>Если какие-либо числа в массиве известные_значения_y 0 или отрицательное, <b>рост</b> возвращает #NUM! значение ошибки. </para>
          <para>Массив известные_значения_x может включать один или несколько наборов переменных. Если по одной переменной используется, только известные_значения_y и известные_значения_x, в может быть любую форму до тех пор, пока они имеют одинаковые размерности. Если используется более одной переменной известные_значения_y должен быть vector (то есть, диапазон с высотой в одну строку или шириной в один столбец). </para>
          <para>Если известные_значения_x опущены, он считается массива {1,2,3,...} Это же размера, как и известные_значения_y. </para>
          <para>Как работает известные_значения_x, в новые_значения_x необходимо включить столбца (или строки) для каждой независимой переменной. Таким образом Если известные_значения_y имеет один столбец, известные_значения_x и новые_значения_x должен иметь такое же число столбцов. Если известные_значения_y — в одной строке, известные_значения_x и новые_значения_x должен иметь такое же число строк. </para>
          <para>Если новые_значения_x опущен, предполагается равняется известные_значения_x, в. </para>
          <para>Если известные_значения_x и новые_значения_x опущены, они считаются массива {1,2,3,...} Это же размера, как и известные_значения_y. </para>
          <para>Если const имеет <b>значение true</b> или этот параметр опущен, b вычисляется обычным образом. </para>
          <para>Если const присвоено <b>значение false</b>, b равным 1 и значения m настроены, чтобы y = m ^ x. </para>
          <para>Формулы, которые возвращают массивы должны указываться как формулы массива после выбора правильных число ячеек. </para>
          <para>При вводе для аргумента, такие как известные_значения_x, в массив, используйте запятые для разделения значений в одной строке и двоеточие для разделения строк.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HarMean">
      <MemberSignature Language="C#" Value="public double HarMean (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 HarMean([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.HarMean(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function HarMean (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16704)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число1, число2,... - 1 до 30 аргументов, для которых требуется вычислить среднее. Можно также использовать массив или ссылку на массив вместо аргументов, разделенных запятыми.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Возвращает среднего гармонического значения набора данных. Среднего гармонического значения — это обратное геометрического арифметическому обратных величин.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Среднего гармонического значения всегда меньше среднего геометрического, которая всегда меньше, чем геометрического. </para>
          <para>Аргументы могут быть числа или имена, массивы или ссылки, которые содержат цифры. </para>
          <para>Учитываются логические значения и текст представления чисел, введите непосредственно в списке аргументов. </para>
          <para>Если аргумент массива или ссылки содержит текст, логические значения или пустые ячейки, эти значения игнорируются; Тем не менее включаются ячейки с помощью нулевое значение. </para>
          <para>Аргументы, которые являются значениями ошибки или текст, который не может быть переведены вызывают ошибки. </para>
          <para>Если какой ≤ 0, <b>функция СРГАРМ</b> возвращает #NUM! значение ошибки. Формула для расчета среднего гармонического значения — это: </para>
          <para>На рисунке 1: Формула для расчета среднего гармонического значения</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Hex2Bin">
      <MemberSignature Language="C#" Value="public string Hex2Bin (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Hex2Bin([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Hex2Bin(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Hex2Bin (Arg1 As Object, Optional Arg2 As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16768)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Номер - шестнадцатеричный номер, который требуется преобразовать. Число не может содержать более 10 символов. Старший бит числа является знаков (40-ой бит справа). Остальные 9 бит являются бит величины. Отрицательные числа, представленные в дополнительном формате.</param>
        <param name="Arg2">Окружение - число символов для использования. Если опущен местах, <b>Hex2Bin</b> использует минимальное необходимое количество знаков. Местах полезен для заполнения возвращаемое значение с начальные нули.</param>
        <summary>Преобразует шестнадцатеричное число в двоичное.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если число отрицательно, <b>Hex2Bin</b> игнорирует местах и возвращает двоичное число 10 символов. </para>
          <para>Если номер является отрицательным, оно не может быть меньше, чем FFFFFFFE00, а если номер является положительным, не может быть больше, чем 1FF. </para>
          <para>Если число не является допустимым шестнадцатеричным числом, <b>Hex2Bin</b> возвращает #NUM! значение ошибки. </para>
          <para>Если <b>Hex2Bin</b> требуется большее число помещает символов, она возвращает #NUM! значение ошибки. Если местах не является целым числом, оно сокращается. </para>
          <para>Если аргумент является местах, <b>Hex2Bin</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если отрицательно местах, <b>Hex2Bin</b> возвращает #NUM! значение ошибки.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Hex2Dec">
      <MemberSignature Language="C#" Value="public string Hex2Dec (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Hex2Dec([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Hex2Dec(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Hex2Dec (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Hex2Dec(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16769)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Номер - шестнадцатеричный номер, который требуется преобразовать. Число не может содержать более 10 знаков (40 бит). Старший бит числа является знаков. Остальные 39 бит являются бит величины. Отрицательные числа, представленные в дополнительном формате.</param>
        <summary>Преобразует шестнадцатеричное число знаков после запятой.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если число не является допустимым шестнадцатеричным числом, <b>Hex2Dec</b> возвращает #NUM! значение ошибки.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Hex2Oct">
      <MemberSignature Language="C#" Value="public string Hex2Oct (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Hex2Oct([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Hex2Oct(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Hex2Oct (Arg1 As Object, Optional Arg2 As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16770)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Номер - шестнадцатеричный номер, который требуется преобразовать. Число не может содержать более 10 символов. Старший бит числа является знаков. Остальные 39 бит являются бит величины. Отрицательные числа, представленные в дополнительном формате.</param>
        <param name="Arg2">Окружение - число символов для использования. Если опущен местах, <b>Hex2Oct</b> использует минимальное необходимое количество знаков. Местах полезен для заполнения возвращаемое значение с начальные нули.</param>
        <summary>Преобразует шестнадцатеричное число в восьмеричном формате.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если число отрицательно, <b>Hex2Oct</b> игнорирует местах и возвращает 10-значное число восьмеричном формате. </para>
          <para>Если число отрицательно, оно не может быть меньше, чем FFE0000000, и если положительное число, не может быть больше, чем 1FFFFFFF. </para>
          <para>Если число не является допустимым шестнадцатеричным числом, <b>Hex2Oct</b> возвращает #NUM! значение ошибки. </para>
          <para>Если <b>Hex2Oct</b> требуется большее число помещает символов, она возвращает #NUM! значение ошибки. </para>
          <para>Если местах не является целым числом, оно сокращается. </para>
          <para>Если аргумент является местах, <b>Hex2Oct</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если отрицательно местах, <b>Hex2Oct</b> возвращает #NUM! значение ошибки.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HLookup">
      <MemberSignature Language="C#" Value="public object HLookup (object Arg1, object Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object HLookup([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.HLookup(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function HLookup (Arg1 As Object, Arg2 As Object, Arg3 As Object, Optional Arg4 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16485)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Искомое_значение — значение должно быть найдено в первой строке таблицы. Искомое_значение может быть значение, ссылка или текстовую строку.</param>
        <param name="Arg2">Таблица - таблицу данных, в котором данных выполняется поиск. Используйте ссылку на диапазон или имя диапазона.</param>
        <param name="Arg3">Номер_строки — номер строки в таблицы, из которой будут возвращены соответствующего значения. Номер_строки 1 возвращает значение первой строки в таблицы, номер_строки 2 возвращается второе значение строки «таблица» и т. д. Если номер_строки — меньше 1, <b>HLookup</b> возвращает #VALUE! значение ошибки; Если номер_строки больше, чем количество строк в таблицы, <b>HLookup</b> возвращает #REF! значение ошибки.</param>
        <param name="Arg4">Интервальный_просмотр — логическое значение, указывающее, следует ли <b>HLookup</b> для поиска точного соответствия или Приблизительное совпадение. Если <b>значение true,</b> или этот параметр опущен, возвращается Приблизительное совпадение. Другими словами Если не найдено точное соответствие, возвращается следующее максимальное значение, которое меньше, чем искомое_значение. Если <b>значение false</b>, <b>HLookup</b> найти точное совпадение. Если он не найден, возвращается значение ошибки # н/д.</param>
        <summary>Поиск значения в верхней строке таблицы или массива значений и возвращает значение в тот же столбец из строки, указанные в таблице или массива. Используйте HLookup, когда сравниваемые значения расположены в строке в верхней части таблицы данных, и требуется найти указанное число строк вниз. Использование <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.VLookup(System.Object,System.Object,System.Object,System.Object)" /> когда сравниваемые значения расположены в столбце слева от данных, который требуется найти.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если <b>HLookup</b> не может найти искомое_значение и интервальный_просмотр имеет <b>значение true</b>, оно использует наибольшее значение, которое меньше, чем искомое_значение. </para>
          <para>Если искомое значение меньше, чем наименьшее значение в первой строке таблицы, <b>HLookup</b> возвращает значение ошибки # н/д. </para>
          <para>Если интервальный_просмотр имеет значение FALSE и искомое_значение является текстом, можно использовать подстановочные знаки, вопросительные знаки (?) и звездочки (*) в искомое_значение. Вопросительный знак соответствует любой отдельный знак; Звездочка соответствует любой последовательности символов. Если вы хотите найти вопросительный знак или звездочка, введите тильдой (~) перед знаком.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HypGeom_Dist">
      <MemberSignature Language="C#" Value="public double HypGeom_Dist (double Arg1, double Arg2, double Arg3, double Arg4, bool Arg5);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 HypGeom_Dist([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]float64 Arg4, [in]bool Arg5) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.HypGeom_Dist(System.Double,System.Double,System.Double,System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function HypGeom_Dist (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Double, Arg5 As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double HypGeom_Dist(double Arg1, double Arg2, double Arg3, double Arg4, bool Arg5);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16919)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Double" />
        <Parameter Name="Arg5" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число_успехов_в_выборке — количество успешных запросов в образце.</param>
        <param name="Arg2">Размер_выборки — размер выборки.</param>
        <param name="Arg3">Число_успехов_в_совокупности — количество успешных запросов в совокупности.</param>
        <param name="Arg4">Размер_совокупности — размер совокупности.</param>
        <param name="Arg5">Накопительный пакет — логическое значение, определяющее форму функции. Если накопительный пакет равно <b>true</b>, <b>HypGeom_Dist</b> возвращает расчета интегральной функции распределения; Если <b>значение false</b>, то возвращается весовая функция распределения.</param>
        <summary>Возвращает гипергеометрическое распределение. <b>HypGeom_Dist</b> возвращает вероятность заданного числа успешных запросов примера, заданным размер выборки, количество успехов и размер совокупности. Используйте <b>HypGeom_Dist</b> проблемы с конечным совокупности, где каждое наблюдение — это успех или сбой, а каждый подмножество заданного размера выбирается с равной вероятностью.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Все аргументы усекаются до целых. </para>
          <para>Если аргумент не является числом, <b>HypGeom_Dist</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если число_успехов_в_выборке &lt; 0 или число_успехов_в_выборке больше, чем меньшее из чисел размер_выборки и число_успехов_в_совокупности <b>HypGeom_Dist</b> возвращает #NUM! значение ошибки. </para>
          <para>Если число_успехов_в_выборке меньше, чем большее 0 или (размер_выборки - размер_совокупности + число_успехов_в_совокупности) <b>HypGeom_Dist</b> возвращает #NUM! значение ошибки. </para>
          <para>Если размер_выборки ≤ 0 или размер_выборки &gt; размер_совокупности, <b>HypGeom_Dist</b> возвращает #NUM! значение ошибки. </para>
          <para>Если число_успехов_в_совокупности ≤ 0 или число_успехов_в_совокупности &gt; размер_совокупности, <b>HypGeom_Dist</b> возвращает #NUM! значение ошибки. </para>
          <para>Если размер_совокупности ≤ 0, <b>HypGeom_Dist</b> возвращает #NUM! значение ошибки. </para>
          <para>Формула для расчета гипергеометрического распределения — это: </para>
          <para>На рисунке 1: Формула для расчета гипергеометрического распределения</para>
          <para></para>
          <para></para>
          <para>где:</para>
          <para>x = число_успехов_в_выборке</para>
          <para>n = размер_выборки</para>
          <para>M = число_успехов_в_совокупности</para>
          <para>N = размер_совокупности</para>
          <para>
            <b>HypGeom_Dist</b> используется в выборки без замены из конечного заполнения.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HypGeomDist">
      <MemberSignature Language="C#" Value="public double HypGeomDist (double Arg1, double Arg2, double Arg3, double Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 HypGeomDist([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]float64 Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.HypGeomDist(System.Double,System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function HypGeomDist (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double HypGeomDist(double Arg1, double Arg2, double Arg3, double Arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16673)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число_успехов_в_выборке — количество успешных запросов в образце.</param>
        <param name="Arg2">Размер_выборки — размер выборки.</param>
        <param name="Arg3">Число_успехов_в_совокупности — количество успешных запросов в совокупности.</param>
        <param name="Arg4">Размер_совокупности — размер совокупности.</param>
        <summary>Возвращает гипергеометрическое распределение. <b>ГИПЕРГЕОМЕТ</b> возвращает вероятность заданного числа успешных запросов примера, заданным размер выборки, количество успехов и размер совокупности. <b>Функция ГИПЕРГЕОМЕТ</b> используется для проблем, связанных с конечной совокупности, где каждое наблюдение — это успех или сбой, а каждый подмножество заданного размера выбирается с равной вероятностью.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Внимание!</b>: Эта функция была заменена один или несколько новых функций, который может предоставлять улучшенные точность и лучше, имена которых отражают их использования. Эта функция по-прежнему доступна для обеспечения совместимости с предыдущими версиями Excel. Тем не менее если обратной совместимости не требуется, можно теперь с помощью новых функций, так как они более точно описывает их функциональных возможностей. Дополнительные сведения о новой функции можно <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.HypGeom_Dist(System.Double,System.Double,System.Double,System.Double,System.Boolean)" /> метод.</para>
          <para>Все аргументы усекаются до целых. </para>
          <para>Если аргумент не является числом, <b>ГИПЕРГЕОМЕТ</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если число_успехов_в_выборке &lt; 0 или число_успехов_в_выборке больше, чем меньшее из чисел размер_выборки и число_успехов_в_совокупности <b>ГИПЕРГЕОМЕТ</b> возвращает #NUM! значение ошибки. </para>
          <para>Если число_успехов_в_выборке меньше, чем большее 0 или (размер_выборки - размер_совокупности + число_успехов_в_совокупности), <b>то функция ГИПЕРГЕОМЕТ</b> возвращает #NUM! значение ошибки. </para>
          <para>Если размер_выборки ≤ 0 или размер_выборки &gt; размер_совокупности, то функция ГИПЕРГЕОМЕТ возвращает #NUM! значение ошибки. </para>
          <para>Если число_успехов_в_совокупности ≤ 0 или число_успехов_в_совокупности &gt; размер_совокупности, <b>то функция ГИПЕРГЕОМЕТ</b> возвращает #NUM! значение ошибки. </para>
          <para>Если размер_совокупности ≤ 0, <b>то функция ГИПЕРГЕОМЕТ</b> возвращает #NUM! значение ошибки. </para>
          <para>Формула для расчета гипергеометрического распределения — это: </para>
          <para>На рисунке 1: Формула для расчета гипергеометрического распределения</para>
          <para></para>
          <para></para>
          <para>где:</para>
          <para>x = число_успехов_в_выборке</para>
          <para>n = размер_выборки</para>
          <para>M = число_успехов_в_совокупности</para>
          <para>N = размер_совокупности</para>
          <para>
            <b>ГИПЕРГЕОМЕТ</b> используется для выборки без замены из конечного заполнения.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IfError">
      <MemberSignature Language="C#" Value="public object IfError (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object IfError([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IfError(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IfError (Arg1 As Object, Arg2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ IfError(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16864)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Значение - аргумент, которая проверяется на наличие ошибки.</param>
        <param name="Arg2">Значение_если_ошибка - значение, возвращаемое, если формула оценивается как ошибка. Следующие типы ошибок вычисляются: # н/д, #VALUE!, #REF!, #DIV/0!, #NUM!, #NAME?, или #NULL!.</param>
        <summary>Возвращает значение, указываемые если формулы оценивается как ошибка; в противном случае возвращает результат формулы. Использовать функцию <b>IfError</b> для перехвата и устранение ошибок в формуле.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если значение или значение_если_ошибка пустую ячейку, <b>IfError</b> обрабатывает ее как значение пустая строка (»»). </para>
          <para>Если значение равно формулы массива, <b>IfError</b> возвращает массив результатов для каждой ячейки в диапазон, указанный в значении. Во втором примере см.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IfNa">
      <MemberSignature Language="C#" Value="public object IfNa (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object IfNa([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IfNa(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IfNa (Arg1 As Object, Arg2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ IfNa(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16974)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">значение: любое значение или выражение или ссылку.</param>
        <param name="Arg2">value_if_na: любое значение или выражение или ссылку.</param>
        <summary>Возвращает значение, которое указывается, если выражение разрешается в # н/д, в противном случае возвращает результат выражения.</summary>
        <returns>
          <b>VARIANT</b>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImAbs">
      <MemberSignature Language="C#" Value="public string ImAbs (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImAbs([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImAbs(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImAbs (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImAbs(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16783)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Компл_число - комплексного числа, для которого вы хотите абсолютного значения.</param>
        <summary>Возвращает абсолютное значение (модуль) комплексного числа в x + ий или x + yj текстовом формате.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Использование <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" /> преобразовать действительной и мнимой коэффициентов в комплексного числа. </para>
          <para>Абсолютного значения комплексного числа — это: </para>
          <para>На рисунке 1: Формула для расчета абсолютного значения комплексного числа</para>
          <para></para>
          <para></para>
          <para>где:</para>
          <para>z = x + ий</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Imaginary">
      <MemberSignature Language="C#" Value="public double Imaginary (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Imaginary([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Imaginary(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Imaginary (Arg1 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Imaginary(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16793)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Компл_число - комплексного числа, для которого вы хотите мнимая.</param>
        <summary>Возвращает мнимая часть комплексного числа в x + ий или x + yj текстовом формате.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Использование <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" /> преобразовать действительной и мнимой коэффициентов в комплексного числа.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImArgument">
      <MemberSignature Language="C#" Value="public string ImArgument (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImArgument([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImArgument(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImArgument (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImArgument(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16791)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Компл_число — это комплексное число, для которого требуется аргумент угла.</param>
        <summary>Возвращает аргумент (угла), угол в радианах, таким образом, что:</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Использование <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" /> преобразовать действительной и мнимой коэффициентов в комплексного числа. </para>
          <para>
            <b>ImArgument</b> рассчитывается следующим образом: </para>
          <para>На рисунке 1: Формула для расчета метода ImArgument</para>
          <para></para>
          <para></para>
          <para>Где:</para>
          <para>На рисунке 2: формула</para>
          <para></para>
          <para></para>
          <para>и</para>
          <para>z = x + ий</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImConjugate">
      <MemberSignature Language="C#" Value="public string ImConjugate (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImConjugate([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImConjugate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImConjugate (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImConjugate(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16792)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Компл_число - комплексного числа, для которого вы хотите расчета сопряженного значения.</param>
        <summary>Возвращает расчета сопряженного значения комплексного комплексного числа в x + ий или x + yj текстовом формате.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Использование <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" /> преобразовать действительной и мнимой коэффициентов в комплексного числа. </para>
          <para>— Это расчета сопряженного значения комплексного числа: </para>
          <para>На рисунке 1: Формула для расчета сопряженного значения комплексного числа</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImCos">
      <MemberSignature Language="C#" Value="public string ImCos (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImCos([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImCos(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImCos (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImCos(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16789)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Компл_число - для которого вы хотите косинус комплексного числа.</param>
        <summary>Возвращает косинус комплексного числа в x + ий или x + yj текстовом формате.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Использование <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" /> преобразовать действительной и мнимой коэффициентов в комплексного числа. </para>
          <para>Если компл_число — логическое значение, <b>МНИМ</b> возвращает #VALUE! значение ошибки. </para>
          <para>Косинус комплексного числа — это: </para>
          <para>На рисунке 1: Косинус комплексного числа</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImCosh">
      <MemberSignature Language="C#" Value="public string ImCosh (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImCosh([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImCosh(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImCosh (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImCosh(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16978)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Для которого вы хотите гиперболический косинус комплексного числа.</param>
        <summary>Возвращает гиперболический косинус комплексного числа.</summary>
        <returns>Задает логическое условие соответствия для текстовой строки.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImCot">
      <MemberSignature Language="C#" Value="public string ImCot (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImCot([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImCot(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImCot (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImCot(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16941)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Комплексного числа, для которого вы хотите котангенс.</param>
        <summary>Возвращает котангенс комплексного числа.</summary>
        <returns>Задает логическое условие соответствия для текстовой строки.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImCsc">
      <MemberSignature Language="C#" Value="public string ImCsc (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImCsc([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImCsc(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImCsc (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImCsc(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16942)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Комплексного числа, для которого вы хотите косеканс.</param>
        <summary>Возвращает косеканс комплексного числа.</summary>
        <returns>Задает логическое условие соответствия для текстовой строки.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImCsch">
      <MemberSignature Language="C#" Value="public string ImCsch (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImCsch([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImCsch(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImCsch (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImCsch(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16943)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Комплексного числа, для которого вы хотите гиперболический косеканс.</param>
        <summary>Возвращает гиперболический косеканс комплексного числа.</summary>
        <returns>Задает логическое условие соответствия для текстовой строки.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImDiv">
      <MemberSignature Language="C#" Value="public string ImDiv (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImDiv([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImDiv(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImDiv (Arg1 As Object, Arg2 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImDiv(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16781)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Компл_число1 - это комплексный числитель или дивидендов.</param>
        <param name="Arg2">Компл_число2 - сложных делителя или делителя.</param>
        <summary>Возвращает частное двух комплексных чисел в x + ий или x + yj текстовом формате.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Использование <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" /> преобразовать действительной и мнимой коэффициентов в комплексного числа. </para>
          <para>Частное двух комплексных чисел — это: </para>
          <para>На рисунке 1: Частное двух комплексных чисел</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImExp">
      <MemberSignature Language="C#" Value="public string ImExp (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImExp([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImExp(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImExp (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImExp(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16790)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Компл_число - для которого вы хотите экспонента комплексного числа.</param>
        <summary>Возвращает экспонента комплексного числа в x + ий или x + yj текстовом формате.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Использование <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" /> преобразовать действительной и мнимой коэффициентов в комплексного числа. </para>
          <para>Экспонента комплексного числа — это: </para>
          <para>На рисунке 1: Экспонента комплексного числа</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImLn">
      <MemberSignature Language="C#" Value="public string ImLn (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImLn([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImLn(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImLn (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImLn(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16785)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Компл_число - для которого требуется натуральный логарифм комплексного числа.</param>
        <summary>Возвращает натуральный логарифм комплексного числа в x + ий или x + yj текстовом формате.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Использование <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" /> преобразовать действительной и мнимой коэффициентов в комплексного числа. </para>
          <para>Натуральный логарифм комплексного числа — это: </para>
          <para>На рисунке 1: натуральный логарифм комплексного числа</para>
          <para></para>
          <para></para>
          <para>где:</para>
          <para>На рисунке 2: формула</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImLog10">
      <MemberSignature Language="C#" Value="public string ImLog10 (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImLog10([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImLog10(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImLog10 (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImLog10(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16787)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Компл_число - для которого требуется десятичного логарифма комплексного числа.</param>
        <summary>Возвращает натуральный логарифм (по основанию 10) комплексного числа в x + ий или x + yj текстовом формате.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Использование <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" /> преобразовать действительной и мнимой коэффициентов в комплексного числа. </para>
          <para>Натуральный логарифм комплексного числа может быть вычислен через натуральный логарифм следующим образом: </para>
          <para>На рисунке 1: Формула для расчета десятичного логарифма комплексного числа</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImLog2">
      <MemberSignature Language="C#" Value="public string ImLog2 (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImLog2([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImLog2(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImLog2 (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImLog2(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16786)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Компл_число - для которого вы хотите логарифм комплексного числа.</param>
        <summary>Возвращает логарифм комплексного числа в x + ий или x + yj текстовом формате.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Использование <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" /> преобразовать действительной и мнимой коэффициентов в комплексного числа. </para>
          <para>Логарифм комплексного числа может быть вычислен через натуральный логарифм следующим образом: </para>
          <para>На рисунке 1: Формула для расчета логарифм комплексного числа</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImPower">
      <MemberSignature Language="C#" Value="public string ImPower (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImPower([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImPower(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImPower (Arg1 As Object, Arg2 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImPower(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16782)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Компл_число - комплексного числа для возведения в степень.</param>
        <param name="Arg2">Номер - питания, который будет использоваться для возведения комплексного числа.</param>
        <summary>Возвращает комплексного числа в x + ий или x + yj текстовом формате, возведенное в степень.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Использование <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" /> преобразовать действительной и мнимой коэффициентов в комплексного числа. </para>
          <para>Если номер является числом, <b>то функция МНИМ.степень</b> возвращает #VALUE! значение ошибки. </para>
          <para>Номер может быть целое число, дробная или отрицательным. </para>
          <para>Комплексного числа, возведенного в степень вычисляется следующим образом: </para>
          <para>На рисунке 1: Формула для расчета комплексного числа, возведенного в степень</para>
          <para></para>
          <para></para>
          <para>где:</para>
          <para>На рисунке 2: формула</para>
          <para></para>
          <para></para>
          <para>И в следующем примере:</para>
          <para>На рисунке 3: формула</para>
          <para></para>
          <para></para>
          <para>И в следующем примере:</para>
          <para>На рисунке 4: формула</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImProduct">
      <MemberSignature Language="C#" Value="public string ImProduct (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImProduct([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImProduct(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImProduct (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16797)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Компл_число1, компл_число2... -1 до 29 комплексных чисел для умножения.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Возвращает продукта 2 до 29 комплексных чисел в x + ий или x + yj текстовом формате.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Использование <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" /> преобразовать действительной и мнимой коэффициентов в комплексного числа. </para>
          <para>Произведение двух комплексных чисел — это:</para>
          <para>На рисунке 1: Произведение двух комплексных чисел</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImReal">
      <MemberSignature Language="C#" Value="public double ImReal (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ImReal([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImReal(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImReal (Arg1 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double ImReal(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16794)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Компл_число - комплексного числа, для которого вы хотите действительная.</param>
        <summary>Возвращает часть комплексного числа в x + ий или x + yj текстовом формате.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Использование <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" /> преобразовать действительной и мнимой коэффициентов в комплексного числа.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImSec">
      <MemberSignature Language="C#" Value="public string ImSec (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImSec([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImSec(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImSec (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImSec(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16944)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Комплексного числа, для которого вы хотите гиперболический косеканс.</param>
        <summary>Возвращает гиперболический косеканс комплексного числа.</summary>
        <returns>Задает логическое условие соответствия для текстовой строки.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImSech">
      <MemberSignature Language="C#" Value="public string ImSech (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImSech([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImSech(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImSech (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImSech(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16945)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Комплексного числа, для которого вы хотите Гиперболический секанс.</param>
        <summary>Возвращает секанс комплексного числа.</summary>
        <returns>Задает логическое условие соответствия для текстовой строки.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImSin">
      <MemberSignature Language="C#" Value="public string ImSin (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImSin([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImSin(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImSin (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImSin(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16788)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Компл_число - для которого вы хотите синус комплексного числа.</param>
        <summary>Возвращает синус комплексного числа в x + ий или x + yj текстовом формате.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Использование <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" /> преобразовать действительной и мнимой коэффициентов в комплексного числа. </para>
          <para>Синус комплексного числа — это: </para>
          <para>На рисунке 1: Синус комплексного числа</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImSinh">
      <MemberSignature Language="C#" Value="public string ImSinh (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImSinh([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImSinh(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImSinh (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImSinh(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16977)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Для которого вы хотите гиперболический синус комплексного числа.</param>
        <summary>Возвращает гиперболический синус комплексного числа.</summary>
        <returns>Задает логическое условие соответствия для текстовой строки.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImSqrt">
      <MemberSignature Language="C#" Value="public string ImSqrt (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImSqrt([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImSqrt(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImSqrt (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImSqrt(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16784)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Компл_число - для которого требуется квадратный корень комплексного числа.</param>
        <summary>Возвращает квадратный корень комплексного числа в x + ий или x + yj текстовом формате.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Использование <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" /> преобразовать действительной и мнимой коэффициентов в комплексного числа. Квадратный корень комплексного числа — это: </para>
          <para>На рисунке 1: квадратный корень комплексного числа</para>
          <para></para>
          <para></para>
          <para>где:</para>
          <para>На рисунке 2: формула</para>
          <para></para>
          <para></para>
          <para>И в следующем примере:</para>
          <para>На рисунке 3: формула</para>
          <para></para>
          <para></para>
          <para>И в следующем примере:</para>
          <para>На рисунке 4: формула</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImSub">
      <MemberSignature Language="C#" Value="public string ImSub (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImSub([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImSub(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImSub (Arg1 As Object, Arg2 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImSub(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16780)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Компл_число1 - Компл_число2 комплексное число.</param>
        <param name="Arg2">Компл_число2 - комплексного числа, чтобы вычесть из Компл_число1.</param>
        <summary>Возвращает разность двух комплексных чисел в x + ий или x + yj текстовом формате.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Использование <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" /> преобразовать действительной и мнимой коэффициентов в комплексного числа.</para>
          <para>Разность двух комплексных чисел — это:</para>
          <para>На рисунке 1: Разность двух комплексных чисел</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImSum">
      <MemberSignature Language="C#" Value="public string ImSum (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImSum([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImSum(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImSum (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16796)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Компл_число1, Компл_число2 - 1 до 29 комплексных чисел для добавления.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Возвращает сумму более двух комплексных чисел в x + ий или x + yj текстовом формате.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Использование <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" /> преобразовать действительной и мнимой коэффициентов в комплексного числа. </para>
          <para>— Это сумма двух комплексных чисел:</para>
          <para>На рисунке 1: Сумма двух комплексных чисел</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImTan">
      <MemberSignature Language="C#" Value="public string ImTan (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImTan([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImTan(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImTan (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImTan(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16940)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Комплексного числа, для которого вы хотите тангенс.</param>
        <summary>Возвращает тангенс комплексного числа.</summary>
        <returns>Задает логическое условие соответствия для текстовой строки.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public object Index (object Arg1, double Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Index([in]object Arg1, [in]float64 Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Index(System.Object,System.Double,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Index (Arg1 As Object, Arg2 As Double, Optional Arg3 As Object, Optional Arg4 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16413)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Массив или ссылка - диапазон ячеек или массив. Для ссылки на это ссылка на один или несколько диапазонов.</param>
        <param name="Arg2">Указание номера строки - строка в массиве, из которого возвращается значение. Если номер_строки опущен, номер_столбца является обязательным. Для ссылок, количество строк, ссылки, из которого возвращается ссылка</param>
        <param name="Arg3">-Номер_столбца столбца в массиве, из которого возвращается значение. Если номер_столбца опущен, указание номера строки является обязательным. Для ссылки, номер ссылки, из которой требуется получить ссылку на столбец.</param>
        <param name="Arg4">Номер_области - только тогда, когда возвращать ссылки. Выбирает диапазон ссылки, из которого возвращаются пересечение номер_строки и номер_столбца. Первая область выбрать или ввести номер 1, второй — 2 и т. д. Если номер_области опущен, <b>индекс</b> использует область 1.</param>
        <summary>Возвращает значение или ссылку на значение из таблицы или диапазона. Существует два вида функции <b>индекс</b> : форму массива и справочник по форме.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Форма массива</para>
          <para>Возвращает значение элемента в таблице или массива, заданного номером номером строк и столбцов.</para>
          <para>Используйте форму массива, если первый аргумент <b>Index</b> является константой массива.</para>
          <para>При использовании аргументов номер_строки и номер_столбца <b>индекса</b> возвращает значение в ячейке на пересечении номер_строки и номер_столбца. </para>
          <para>Если задать номер_строки или номер_столбца значение нуль (0), <b>индекса</b> возвращает массив значений для всего столбца или строки, соответственно. Чтобы использовать массив значений, введите функцию <b>индекс</b> как формулу массива в горизонтальный диапазон ячеек для строки и в вертикальный для столбца. Чтобы ввести формулу массива, нажмите сочетание клавиш CTRL + SHIFT + ВВОД. </para>
          <para>Указание номера строки и номер_столбца должны указывать на ячейку внутри массива. в противном случае <b>индекса</b> возвращает #REF! значение ошибки. </para>
          <para>Справочник по формы</para>
          <para>Возвращает ссылку на ячейку на пересечении конкретных строки и столбца. Если ссылка состоит из несмежных диапазонов, вы можете выбрать выделение следует использовать. Если каждая область в ссылке содержит только одну строку или столбец, аргумент номер_строки или номер_столбца, соответственно, является необязательным. Например для ссылки на одну строку, используйте форму. </para>
          <para>После того, ссылки и номер_области выбран определенный диапазон, номер_строки и номер_столбца выберите ячейки: Указание номера строки 1 является первой строки в диапазоне, номер_столбца 1 — первый столбец и т. д. Ссылка, возвращаемая функцией <b>индекс</b> является пересечение номер_строки и номер_столбца. </para>
          <para>Если задать номер_строки или номер_столбца значение нуль (0), <b>индекса</b> возвращает ссылку на для всего столбца или строки, соответственно.</para>
          <para>Указание номера строки, номер_столбца и номер_области должны указывать на ячейку внутри ссылки; в противном случае <b>индекса</b> возвращает #REF! значение ошибки. Если номер_строки и номер_столбца опущены, <b>индекс</b> возвращает область в ссылку, заданную номер_области. </para>
          <para>Результат функции <b>индекс</b> является ссылкой и интерпретируется таким образом другими функциями. В зависимости от формулы возвращаемое значение ИНДЕКСА могут быть использованы как ссылка или как значение. Например CELL("width",B1) эквивалентно ЯЧЕЙКУ формулы («ширина» индекс (a1: B2, 1, 2)). Функция ячейка использует возвращаемое значение ИНДЕКСА в качестве ссылки на ячейки. С другой стороны формулы, такие как 2*INDEX(A1:B2,1,2) преобразование возвращаемое значение <b>индекса</b> в число в ячейке B1.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Intercept">
      <MemberSignature Language="C#" Value="public double Intercept (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Intercept([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Intercept(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Intercept (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Intercept(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16695)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Known_y's - зависимое множество наблюдений или данных.</param>
        <param name="Arg2">Известные_значения_x, в - независимый набор наблюдений или данных.</param>
        <summary>Вычисляет точку строки пересечения оси y, используя существующие значения x и y значения. Отрезок на основе наилучшего регрессии строки, построенной по известные значения x и известные значения y. Используйте функцию <b>перехвата</b> , когда нужно определить значение зависимой переменной, когда независимой переменной равно 0 (нулю). Например можно использовать функцию <b>перехвата</b> для прогнозирования электрооборудования сопротивление системы при 0 ° C при точек данных, сделанные в температуры комнаты и выше.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Аргументы должны быть числа или имена, массивы или ссылки, которые содержат цифры. </para>
          <para>Если аргумент массива или ссылки содержит текст, логические значения или пустые ячейки, эти значения игнорируются; Тем не менее включаются ячейки с помощью нулевое значение. </para>
          <para>Если известные_значения_y и известные_значения_x, в содержат различное число точек данных, содержат без точки данных <b>Intercept</b> возвращает значение ошибки # н/д. </para>
          <para>Формула для расчета отрезка линии регрессии, — это:</para>
          <para>На рисунке 1: Формула для расчета отрезка линии регрессии</para>
          <para></para>
          <para></para>
          <para>где уклона, b, вычисляется по формуле:</para>
          <para>На рисунке 2: Формула для расчета уклона</para>
          <para></para>
          <para></para>
          <para>и где x и y — выборочные средние значения СРЗНАЧ(массив1) и СРЗНАЧ(массив2).</para>
          <para>Основной алгоритм, используемый в <b>перехвата</b> и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Slope(System.Object,System.Object)" /> функции, отличается от базового алгоритм, используемый в <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LinEst(System.Object,System.Object,System.Object,System.Object)" /> функции. Различие между эти алгоритмы может привести к разные результаты, когда данные не определено и коллинеарными. Например если точки данных known_y аргумент 0 и точек данных аргумента известные_значения_x являются 1: </para>
          <list type="bullet">
            <item>
              <description>
                <b>Перехват</b> и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Slope(System.Object,System.Object)" /> возвращает #DIV/0! Ошибка. <b>Перехват</b> и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Slope(System.Object,System.Object)" /> алгоритм выполняет поиск только один ответ, а в этом случае может быть несколько ответов. </description>
            </item>
            <item>
              <description>
                <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LinEst(System.Object,System.Object,System.Object,System.Object)" />Возвращает значение 0. <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LinEst(System.Object,System.Object,System.Object,System.Object)" /> Алгоритм предназначен для возврата разумные результаты для коллинеарными данных, а в этом случае можно найти по крайней мере один ответ.</description>
            </item>
          </list>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntRate">
      <MemberSignature Language="C#" Value="public double IntRate (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 IntRate([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IntRate(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IntRate (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Optional Arg5 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16817)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Сопоставление - Дата сопоставления безопасности. Дата сопоставления безопасности — это дата после даты выпуска, если передается безопасности покупателю.</param>
        <param name="Arg2">Роста - срока. Соответствует дата истечения срока действия безопасности.</param>
        <param name="Arg3">Инвестиции - сумма, всегда тратит в безопасности.</param>
        <param name="Arg4">Погашения - сумма должны быть получены на роста.</param>
        <param name="Arg5">Основы - способ вычисления дня.</param>
        <summary>Возвращает процентную ставку для полностью инвестированных ценных бумаг.</summary>
        <returns>To be added.</returns>
        <remarks>
          <list type="table">
            <item>
              <term>0 или опущен</term>
              <description>"МНЕ НРАВИТСЯ" (NASD) 30/360</description>
            </item>
            <item>
              <term>1</term>
              <description>Фактический</description>
            </item>
            <item>
              <term>2</term>
              <description>Фактический/360</description>
            </item>
            <item>
              <term>3</term>
              <description>Фактический/365</description>
            </item>
            <item>
              <term>4</term>
              <description>Европейский 30/360</description>
            </item>
          </list>
          <para>Microsoft Excel хранит даты как целые числа, поэтому они могут использоваться в расчетах. По умолчанию 1 января 1900 — серийный номер 1, а 1 января 2008 — номер 39448, так как интервал в днях 1 января 1900. Microsoft Excel для Macintosh использует другую систему дат по умолчанию. </para>
          <para>Дата соглашения — это дата продажи покупателю купон, такие как действия. Срок платежа — это дата истечения срока действия купон. Предположим, например, сроком действия 30 лет выпущена 1 января 2008 года и приобретена покупателем через шесть месяцев после. Дата выпуска будет являться 1 января 2008, Дата соглашения равен 1 июля 2008 г., и срок погашения будет равен 1 января 2038, который — 30 лет после даты выпуска 1 января 2008 года. </para>
          <para>Сопоставления, роста и основы усекаются до целых. </para>
          <para>Если сопоставления или роста не допустимая дата, <b>IntRate</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если инвестиций ≤ 0 или погашения ≤ 0, <b>IntRate</b> возвращает #NUM! значение ошибки. </para>
          <para>Если основа &lt; 0 или, если основа &gt; 4, <b>IntRate</b> возвращает #NUM! значение ошибки. </para>
          <para>Если сопоставления ≥ роста, <b>IntRate</b> возвращает #NUM! значение ошибки. </para>
          <para>
            <b>IntRate</b> рассчитывается следующим образом: </para>
          <para>На рисунке 1: Формула для расчета метода IntRate</para>
          <para></para>
          <para></para>
          <para>где:</para>
          <para>B = число дней в году, в зависимости от того, за основу года.</para>
          <para>DIM = количество дней от сопоставления для роста.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Ipmt">
      <MemberSignature Language="C#" Value="public double Ipmt (double Arg1, double Arg2, double Arg3, double Arg4, object Arg5, object Arg6);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Ipmt([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]float64 Arg4, [in]object Arg5, [in]object Arg6) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Ipmt(System.Double,System.Double,System.Double,System.Double,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ipmt (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Double, Optional Arg5 As Object, Optional Arg6 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16551)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Double" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Частота - процентную ставку за период.</param>
        <param name="Arg2">За - период, для которого вы хотите найти и должен быть в диапазоне от 1 до nper.</param>
        <param name="Arg3">NPer — общее число периодов выплат аннуитета.</param>
        <param name="Arg4">PV - текущая стоимость или общая сумма всех будущих платежей с стоит на данный момент.</param>
        <param name="Arg5">БЗ - будущего значения или баланс денежных средств, который нужно достичь после последней выплаты. Если аргумент опущен, то предполагается, что оно является 0 (например, будущее значение ссуды, равно 0).</param>
        <param name="Arg6">Тип — число 0 или 1, обозначающее, когда срок выполнения. Если тип указан, то предполагается, что оно является 0.</param>
        <summary>Возвращает процентный платеж для заданного периода для инвестиции на основе периодических постоянных выплат и постоянной процентной ставки.</summary>
        <returns>To be added.</returns>
        <remarks>
          <list type="table">
            <item>
              <term>0</term>
              <description>В конце периода</description>
            </item>
            <item>
              <term>1</term>
              <description>С начала периода</description>
            </item>
          </list>
          <para>Убедитесь в том, что вы являетесь согласованные единицы измерения, которая будет использоваться для определения скорости и nper. Если ежемесячных выплатах на заем 4 года в 12 процентов годовых, используйте 12% / 12 для скорости и 4 * 12 для nper. Если производится ежегодных выплат на одном кредита, используйте 12% для скорости и 4 для nper. </para>
          <para>Все аргументы денежные средства, такие как вклады в сбережения, представляются отрицательными числами; полученные деньги, такие как дивидендов, представлены положительными числами.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Irr">
      <MemberSignature Language="C#" Value="public double Irr (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Irr([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Irr(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Irr (Arg1 As Object, Optional Arg2 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16446)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Значения — массив или ссылка на ячейки, которые содержат цифры, для которого требуется вычислить внутреннюю норму прибыли.</param>
        <param name="Arg2">Прогноз - номер, предполагается, что — результата IRR.</param>
        <summary>Возвращает внутреннюю норму прибыли для последовательности движение денежных средств представлены числами в значения. Эти движение денежных средств не требуется даже, как для ежегодного платежа. Тем не менее движение денежных необходимо задать интервал, например, ежемесячно или ежегодно. Внутреннюю норму прибыли — это процент, полученный от инвестиций, состоящий из платежей (отрицательные значения) и поступлений (положительные значения), которые происходят в регулярные периоды времени.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Значения должны содержать по крайней мере одно положительное и одно отрицательное значение для вычисления внутреннюю норму прибыли. </para>
          <para>IRR использует порядок значений для интерпретации порядка денежных потоков. Убедитесь, что платежи и поступления введены в последовательности, который будет. </para>
          <para>Если аргумент массива или ссылки содержит текст, логические значения или пустые ячейки, эти значения игнорируются.</para>
          <para>Microsoft Excel использует метод итераций для вычисления <b>Irr</b>. Начиная с прогноз <b>Irr</b> циклов вычисления до результат является точным 0,00001 процента. Если <b>Irr</b> не может получить результат после 20 попыток, #NUM! возвращается ошибка. </para>
          <para>В большинстве случаев вам не нужно указывать прогноз для вычисления <b>Irr</b> . Если прогноз опущен, то предполагается, что оно является 0,1 (10 процентов). </para>
          <para>Если <b>Irr</b> дает #NUM! Ошибка значение, или если результат не ближе ожидаемого, повторите попытку с другим значением параметра.</para>
          <para>
            <b>IRR</b> тесно связана с <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Npv(System.Double,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />, общий текущий значение функции. Уровень рентабельности, рассчитать с <b>Irr</b> является процентной ставки, соответствующее 0 (ноль) чистая текущая стоимость. Следующая формула показывает, как <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Npv(System.Double,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> и <b>Irr</b> относятся:</para>
          <para>NPV(IRR(B1:B6),B1:B6) равняется 3.60E-08 [Учитывая точность расчета <b>Irr</b> , значение 3.60E-08 нуль (0).]</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsErr">
      <MemberSignature Language="C#" Value="public bool IsErr (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsErr([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsErr(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsErr (Arg1 As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsErr(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16510)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Value — значение, которое нужно протестировать. Значение может быть пустым (пустые ячейки), ошибка логической, текст, номер, или значение ссылки или именем одного из них, которые вы хотите проверить.</param>
        <summary>Проверяет тип значения и возвращает <b>значение true</b> или <b>false</b> в зависимости от того, если значение ссылается на любое значение ошибки, кроме # н/д.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Аргумент этих функций не преобразуется. Например в большинстве других функциях которых необходим номер, текстовое значение «19» преобразуется в число 19. Тем не менее, в формуле ЕЧИСЛО("19") «19» не преобразуется из текстового значения и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsNumber(System.Object)" /> функция возвращает <b>значение false</b>. </para>
          <para>Функции полезны в формулах для проверки результатов вычислений. В сочетании с функцией если они обеспечивают метод для поиска ошибок в формулах.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsError">
      <MemberSignature Language="C#" Value="public bool IsError (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsError([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsError(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsError (Arg1 As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsError(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16387)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Value — значение, которое нужно протестировать. Значение может быть пустым (пустые ячейки), ошибка логической, текст, номер, или значение ссылки или именем одного из них, которые вы хотите проверить.</param>
        <summary>Проверяет тип значения и возвращает <b>значение true</b> или <b>false</b> в зависимости от того, если значение ссылается на любое значение об ошибке (# н/д, #VALUE!, #REF!, #DIV/0!, #NUM!, #NAME? или #NULL!).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Аргумент этих функций не преобразуется. Например в большинстве других функциях которых необходим номер, текстовое значение «19» преобразуется в число 19. Тем не менее, в формуле ЕЧИСЛО("19") «19» не преобразуется из текстового значения и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsNumber(System.Object)" /> функция возвращает <b>значение false</b>. </para>
          <para>Функции полезны в формулах для проверки результатов вычислений. В сочетании с функцией если они обеспечивают метод для поиска ошибок в формулах.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEven">
      <MemberSignature Language="C#" Value="public bool IsEven (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsEven([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsEven(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEven (Arg1 As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsEven(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16804)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Value — значение, которое нужно протестировать. Значение может быть пустым (пустые ячейки), ошибка логической, текст, номер, или значение ссылки или именем одного из них, которые вы хотите проверить.</param>
        <summary>Проверяет тип значения и возвращает <b>значение true</b> или <b>false</b> в зависимости от того, если значение равно даже.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Аргумент этих функций не преобразуется. Например в большинстве других функциях которых необходим номер, текстовое значение «19» преобразуется в число 19. Тем не менее, в формуле ЕЧИСЛО("19") «19» не преобразуется из текстового значения и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsNumber(System.Object)" /> функция возвращает <b>значение false</b>. </para>
          <para>Функции полезны в формулах для проверки результатов вычислений. В сочетании с функцией если они обеспечивают метод для поиска ошибок в формулах.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFormula">
      <MemberSignature Language="C#" Value="public bool IsFormula (Microsoft.Office.Interop.Excel.Range Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsFormula([in]class Microsoft.Office.Interop.Excel.Range Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsFormula(Microsoft.Office.Interop.Excel.Range)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsFormula (Arg1 As Range) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsFormula(Microsoft::Office::Interop::Excel::Range ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16973)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
      </Parameters>
      <Docs>
        <param name="Arg1">Ссылка на ячейку, которую требуется тестировать. Справочник по может быть ссылка на ячейку, формулу или имя, которое ссылается на ячейку.</param>
        <summary>Проверяет, является ли ссылка на ячейку, содержащее формулу и возвращает <b>значение TRUE</b> или <b>FALSE</b>.</summary>
        <returns>
          <b>BOOL</b>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLogical">
      <MemberSignature Language="C#" Value="public bool IsLogical (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsLogical([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsLogical(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsLogical (Arg1 As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsLogical(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16582)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Value — значение, которое нужно протестировать. Значение может быть пустым (пустые ячейки), ошибка логической, текст, номер, или значение ссылки или именем одного из них, которые вы хотите проверить.</param>
        <summary>Проверяет тип значения и возвращает <b>значение true</b> или <b>false</b> в зависимости от того, если значение ссылается на логическое значение.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Аргумент этих функций не преобразуется. Например в большинстве других функциях которых необходим номер, текстовое значение «19» преобразуется в число 19. Тем не менее, в формуле ЕЧИСЛО("19") «19» не преобразуется из текстового значения и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsNumber(System.Object)" /> функция возвращает <b>значение false</b>. </para>
          <para>Функции полезны в формулах для проверки результатов вычислений. В сочетании с функцией если они обеспечивают метод для поиска ошибок в формулах.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNA">
      <MemberSignature Language="C#" Value="public bool IsNA (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsNA([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsNA(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNA (Arg1 As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNA(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16386)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Value — значение, которое нужно протестировать. Значение может быть пустым (пустые ячейки), ошибка логической, текст, номер, или значение ссылки или именем одного из них, которые вы хотите проверить.</param>
        <summary>Проверяет тип значения и возвращает <b>значение true</b> или <b>false</b> в зависимости от того, если значение ссылается на значение ошибки # н/д (значение недоступно).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Аргумент этих функций не преобразуется. Например в большинстве других функциях которых необходим номер, текстовое значение «19» преобразуется в число 19. Тем не менее, в формуле ЕЧИСЛО("19") «19» не преобразуется из текстового значения и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsNumber(System.Object)" /> функция возвращает <b>значение false</b>. </para>
          <para>Функции полезны в формулах для проверки результатов вычислений. В сочетании с функцией если они обеспечивают метод для поиска ошибок в формулах.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNonText">
      <MemberSignature Language="C#" Value="public bool IsNonText (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsNonText([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsNonText(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNonText (Arg1 As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNonText(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16574)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Value — значение, которое нужно протестировать. Значение может быть пустым (пустые ячейки), ошибка логической, текст, номер, или значение ссылки или именем одного из них, которые вы хотите проверить.</param>
        <summary>Проверяет тип значения и возвращает <b>значение true</b> или <b>false</b> в зависимости от того, если значение ссылается на любой элемент, который не является текст. (Обратите внимание на то, что эта функция возвращает <b>значение true</b> , если значение ссылается на пустую ячейку).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Аргумент этих функций не преобразуется. Например в большинстве других функциях которых необходим номер, текстовое значение «19» преобразуется в число 19. Тем не менее, в формуле ЕЧИСЛО("19") «19» не преобразуется из текстового значения и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsNumber(System.Object)" /> функция возвращает <b>значение false</b>. </para>
          <para>Функции полезны в формулах для проверки результатов вычислений. В сочетании с функцией если они обеспечивают метод для поиска ошибок в формулах.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNumber">
      <MemberSignature Language="C#" Value="public bool IsNumber (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsNumber([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsNumber(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNumber (Arg1 As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNumber(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16512)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Value — значение, которое нужно протестировать. Значение может быть пустым (пустые ячейки), ошибка логической, текст, номер, или значение ссылки или именем одного из них, которые вы хотите проверить.</param>
        <summary>Проверяет тип значения и возвращает <b>значение true</b> или <b>false</b> в зависимости от того, если значение ссылается на номер.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Аргумент этих функций не преобразуется. Например в большинстве других функциях которых необходим номер, текстовое значение «19» преобразуется в число 19. Тем не менее, в формуле ЕЧИСЛО("19") «19» не преобразуется из текстового значения и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsNumber(System.Object)" /> функция возвращает <b>значение false</b>. </para>
          <para>Функции полезны в формулах для проверки результатов вычислений. В сочетании с функцией если они обеспечивают метод для поиска ошибок в формулах.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ISO_Ceiling">
      <MemberSignature Language="C#" Value="public double ISO_Ceiling (double Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ISO_Ceiling([in]float64 Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ISO_Ceiling(System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ISO_Ceiling (Arg1 As Double, Optional Arg2 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16907)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число — значение должно быть округлено.</param>
        <param name="Arg2">Значение - необязательный несколькими на номер, который является округлить. Если значение указан, значением по умолчанию — 1.</param>
        <summary>Возвращает номер, который будет округлено до ближайшего целого или до ближайшего имеет значения.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOdd">
      <MemberSignature Language="C#" Value="public bool IsOdd (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsOdd([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsOdd(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsOdd (Arg1 As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOdd(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16805)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Value — значение, которое нужно протестировать. Значение может быть пустым (пустые ячейки), ошибка логической, текст, номер, или значение ссылки или именем одного из них, которые вы хотите проверить.</param>
        <summary>Проверяет тип значения и возвращает <b>значение true</b> или <b>false</b> в зависимости от того, если значение является нечетным.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Аргумент этих функций не преобразуется. Например в большинстве других функциях которых необходим номер, текстовое значение «19» преобразуется в число 19. Тем не менее, в формуле ЕЧИСЛО("19") «19» не преобразуется из текстового значения и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsNumber(System.Object)" /> функция возвращает <b>значение false</b>. </para>
          <para>Функции полезны в формулах для проверки результатов вычислений. В сочетании с функцией если они обеспечивают метод для поиска ошибок в формулах.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsoWeekNum">
      <MemberSignature Language="C#" Value="public double IsoWeekNum (double Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 IsoWeekNum([in]float64 Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsoWeekNum(System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsoWeekNum (Arg1 As Double, Optional Arg2 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16968)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Код даты и времени, используемых Excel для расчета даты и времени.</param>
        <param name="Arg2">Этот аргумент недоступен в функции.</param>
        <summary>Возвращает номер недели по ISO года для данной даты.</summary>
        <returns>
          <b>ДАННЫЕ ТИПА DOUBLE</b>
        </returns>
        <remarks>
          <para>Возвращает порядковый номер недели календаря [ISO8601] в течение года для данной даты. ISO 8601 определяет неделя календаря как интервал времени семь дней календаря, начиная с понедельника и первую неделю года, что включает в себя первый четверг года календаря.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Ispmt">
      <MemberSignature Language="C#" Value="public double Ispmt (double Arg1, double Arg2, double Arg3, double Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Ispmt([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]float64 Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Ispmt(System.Double,System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ispmt (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Ispmt(double Arg1, double Arg2, double Arg3, double Arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16734)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Частота - процентной ставки инвестиций.</param>
        <param name="Arg2">За - период, для которого нужно найти и должно быть от 1 до nper.</param>
        <param name="Arg3">NPer — общее число периодов выплат для инвестиций.</param>
        <param name="Arg4">PV - приведенная стоимость инвестиции. Для кредитного pv — это сумма кредита.</param>
        <summary>Вычисляет проценты оплата за определенный период инвестиции. Эта функция предназначена для совместимости с Lotus 1-2-3.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Убедитесь в том, что вы являетесь согласованные единицы измерения, которая будет использоваться для определения скорости и nper. Если ежемесячных выплатах на заем 4 года в 12 процентов годовых, используйте 12% / 12 для скорости и 4 * 12 для nper. Если производится ежегодных выплат на одном кредита, используйте 12% для скорости и 4 для nper. </para>
          <para>Для всех аргументов денежные средства, например, вклады в вклады, представлены отрицательными числами; полученные деньги, такие как дивидендов и других вклады представлены положительными числами. </para>
          <para>Для получения дополнительных сведений о финансовые функции увидеть <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Pv(System.Double,System.Double,System.Double,System.Object,System.Object)" /> функции.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsText">
      <MemberSignature Language="C#" Value="public bool IsText (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsText([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsText(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsText (Arg1 As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsText(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16511)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Value — значение, которое нужно протестировать. Значение может быть пустым (пустые ячейки), ошибка логической, текст, номер, или значение ссылки или именем одного из них, которые вы хотите проверить.</param>
        <summary>Проверяет тип значения и возвращает <b>значение true</b> или <b>false</b> в зависимости от того, если значение ссылается на текст.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Аргумент этих функций не преобразуется. Например в большинстве других функциях которых необходим номер, текстовое значение «19» преобразуется в число 19. Тем не менее, в формуле ЕЧИСЛО("19") «19» не преобразуется из текстового значения и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsNumber(System.Object)" /> функция возвращает <b>значение false</b>. </para>
          <para>Функции полезны в формулах для проверки результатов вычислений. В сочетании с функцией если они обеспечивают метод для поиска ошибок в формулах.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsThaiDigit">
      <MemberSignature Language="C#" Value="public bool IsThaiDigit (string Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsThaiDigit([in]string Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsThaiDigit(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsThaiDigit (Arg1 As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsThaiDigit(System::String ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16759)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <summary>Зарезервировано для внутреннего использования.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Kurt">
      <MemberSignature Language="C#" Value="public double Kurt (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Kurt([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Kurt(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Kurt (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16706)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число1, число2,... - 1 до 30 аргументов, для которых требуется вычислить точкой с запятой. Можно также использовать массив или ссылку на массив вместо аргументов, разделенных запятыми.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Возвращает точкой с запятой набора данных. Точкой с запятой характеризует относительно эксцесса или сглаженность распределения по сравнению с нормального распределения. Положительное точкой с запятой указывает на относительно отсровершинное распределение. Точкой с запятой отрицательные указывает относительно плоской рассылки.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Аргументы могут быть числа или имена, массивы или ссылки, которые содержат цифры. </para>
          <para>Учитываются логические значения и текст представления чисел, введите непосредственно в списке аргументов. </para>
          <para>Если аргумент массива или ссылки содержит текст, логические значения или пустые ячейки, эти значения игнорируются; Тем не менее включаются ячейки с помощью нулевое значение. </para>
          <para>Аргументы, которые являются значениями ошибки или текст, который не может быть переведены вызывают ошибки. </para>
          <para>При наличии менее четырех точек данных или стандартное отклонение выборки равняется нулю, <b>функция эксцесс</b> возвращает #DIV/0! значение ошибки. </para>
          <para>Точкой с запятой определяются следующим образом. </para>
          <para>На рисунке 1: Формула для расчета коэффициента эксцесса</para>
          <para></para>
          <para></para>
          <para>где s — стандартное отклонение выборки.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Large">
      <MemberSignature Language="C#" Value="public double Large (object Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Large([in]object Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Large(System.Object,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Large (Arg1 As Object, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Large(System::Object ^ Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16709)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Массив — массив или диапазон данных, для которого определяется k ое наибольшее значение.</param>
        <param name="Arg2">K — позиция (начиная с наибольшей) в массиве или диапазон данных для возврата.</param>
        <summary>Возвращает k ое наибольшее значение из множества данных. Эта функция используется для выбора значения на основании его относительное положение. Например можно использовать <b>большой</b> для определения наилучшего, баллах или третьего результатов.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если массив пуст, <b>наибольший</b> возвращает #NUM! значение ошибки. </para>
          <para>Если k ≤ 0 или если k больше, чем количество данных указывает, <b>наибольший</b> возвращает #NUM! значение ошибки.</para>
          <para>Если n — это число точек данных в диапазоне, то функция наибольший(массив;1) возвращает наибольшее значение и наибольший(массив;n) возвращает наименьшее значение.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Lcm">
      <MemberSignature Language="C#" Value="public double Lcm (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Lcm([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Lcm(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Lcm (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16859)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число1, число2,... - 1 до 29 значений, для которых требуется несколько общих минимальных. Если значение не является целым числом, оно сокращается.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Возвращает несколько общих минимальных целых чисел. Несколько общих минимальных — это наименьшее положительное целое число, которое делится на всех целым аргументам Число1, число2 и т. д. Функция НОК используется для добавления доли с различными знаменателями.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если аргумент не является числом, <b>то функция НОК</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если любой из аргументов меньше нуля, <b>НОК</b> возвращает #NUM! значение ошибки.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LinEst">
      <MemberSignature Language="C#" Value="public object LinEst (object Arg1, object Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object LinEst([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LinEst(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function LinEst (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16433)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Known_y's - набор значений y, которые уже известны соотношения y = mx + b.</param>
        <param name="Arg2">Известные_значения_x, в - необязательный набор значений x, которые уже известны для соотношения y = mx + b.</param>
        <param name="Arg3">Const — логическое значение, определяющее, следует ли константа b равно 0.</param>
        <param name="Arg4">Статистика — логическое значение, определяющее, нужно ли возвращать дополнительную статистику по регрессии.</param>
        <summary>Расчет статистики для строки с помощью метода «квадратов» для вычисления прямую линию, что наилучшим образом подходит для данных, возвращает массив с описанием строке. Поскольку эта функция возвращает массив значений, он должен вводится как формулы массива.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Формула для строки — это:</para>
          <para>y = mx + b или</para>
          <para>y = m1x1 + m2x2 +... + b (при наличии нескольких диапазонов значений x)</para>
          <para>где зависимые значения y — это функция независимых значений x. Значения m не коэффициенты, соответствующие каждой значение x, а b — значение константы. Обратите внимание на то, что y, x и m могут быть векторов. <b>Функция ЛИНЕЙН</b> возвращает массив {mn; mn-1, m1, b}. <b>ЛИНЕЙН</b> может также возвращать дополнительную статистику по регрессии.</para>
          <para>Если массив известные_значения_y одного столбца, каждый столбец данных считается отдельной переменной. </para>
          <para>Если массив известные_значения_y в одной строке, каждой строки данных считается отдельной переменной. </para>
          <para>Массив известные_значения_x может включать один или несколько наборов переменных. Если по одной переменной используется, только известные_значения_y и известные_значения_x, в может быть любую форму до тех пор, пока они имеют одинаковые размерности. Если используется более одной переменной известные_значения_y должен быть vector (то есть, диапазон с высотой в одну строку или шириной в один столбец). </para>
          <para>Если известные_значения_x опущены, он считается массива {1,2,3,...} Это же размера, как и известные_значения_y. </para>
          <para>Если const имеет <b>значение true</b> или этот параметр опущен, b вычисляется обычным образом. </para>
          <para>Если const присвоено <b>значение false</b>, b равным 0 и значения m настроены в соответствии со y = mx. </para>
          <para>Если статистика имеет <b>truuue</b>, <b>ЛИНЕЙН</b> Возвращает дополнительную статистику по регрессии, поэтому возвращаемый массив {mn; mn-1, m1, b; отправить, отправить-1, se1, seb; r2 sey; F, df, ssreg, ssresid}. </para>
          <para>Если stats присвоено <b>значение false</b> или опущен, <b>ЛИНЕЙН</b> возвращает только коэффициенты m и константу b. </para>
          <para>Дополнительную статистику по регрессии, как показано ниже.</para>
          <list type="table">
            <item>
              <term>se1, se2,..., отправить</term>
              <description>Стандартные значения ошибок для коэффициентов m1, m2,..., mn.</description>
            </item>
            <item>
              <term>seb</term>
              <description>Стандартное значение ошибки для постоянной b (seb = # н/д при const присвоено <b>значение false</b>).</description>
            </item>
            <item>
              <term>R2</term>
              <description>Коэффициент определения. Сравнивает фактические значения y и диапазоны в диапазоне от 0 до 1. Если это 1 является идеальным корреляции в образце — нет различия между значению y и фактические значения y. С другой стороны Если коэффициент определение равен 0, Формула регрессии не полезны для прогнозирования значения y. </description>
            </item>
            <item>
              <term>sey</term>
              <description>Стандартная ошибка для оценки y.</description>
            </item>
            <item>
              <term>F</term>
              <description>F-статистика, или F-наблюдаемое значение. F-статистика используется для определения, является ли наблюдаемая взаимосвязь между зависимой и независимой переменными случайной.</description>
            </item>
            <item>
              <term>DF</term>
              <description>Степени свободы. Используйте степеней свободы для поиска F-критических значений в статистической таблице. Средство сравнения значения поиска в таблице для F-статистики, возвращаемые <b>ЛИНЕЙН</b> для определения вероятности уровня для модели. </description>
            </item>
            <item>
              <term>ssreg</term>
              <description>Сумма квадратов регрессии.</description>
            </item>
            <item>
              <term>ssresid</term>
              <description>Остаточные сумм квадратов.</description>
            </item>
          </list>
          <para>На следующем рисунке показана порядка, в котором возвращаются дополнительную статистику по регрессии.</para>
          <para>На рисунке 1: листа</para>
          <para></para>
          <para></para>
          <para>Можно ввести описание любую прямую с линия и y пересечение: </para>
          <para>Уклона (МБ):</para>
          <para>
Чтобы найти уклона линии, часто записано в формате m, взять две точки прямой (x 1, y1) и (x2, года 2); линия равен года (2 - y1) / (x 2 - x 1).</para>
          <para>Y-пересечение (b):</para>
          <para>
Y пересечение строки, часто записано в формате b, является значение y для точки пересечения оси y строки.</para>
          <para>Уравнение прямой имеет y = mx + b. После определения значения m и b, можно рассчитать любой точке, указанного в строке, подставляя значения y или x в уравнение. Вы также можете использовать <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Trend(System.Object,System.Object,System.Object,System.Object)" /> функции.</para>
          <para>Если у вас есть только одна независимая переменная x, можно получить значения уклона и y пересечение непосредственно с помощью следующей формулы: </para>
          <para>Уклона:</para>
          <para>
=Index(LINEST(known_y's,known_x's),1)</para>
          <para>Y-пересечение:</para>
          <para>
=Index(LINEST(known_y's,known_x's),2)</para>
          <para>Точность строке рассчитать с <b>LineEst</b> зависит от степени точечных данных. Более линейного данные, тем точнее модели <b>LineEst</b> . <b>LineEst</b> использует метод наименьших квадратов для определения лучше всего подходит для данных. Если у вас есть только один независимой переменной x, вычисления m и b основаны на двух следующих формул: </para>
          <para>На рисунке 2: формула</para>
          <para></para>
          <para></para>
          <para>На рисунке 3: формула</para>
          <para></para>
          <para></para>
          <para>где x и y — пример средства, то есть x = СРЗНАЧ (известные передавая) и y = СРЗНАЧ(массив2).</para>
          <para>Строки и график размещения функции <b>LineEst</b> и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LogEst(System.Object,System.Object,System.Object,System.Object)" /> можно рассчитать прямую или экспоненциальное график, соответствующий ваши данные. Тем не менее необходимо решить, какой из двух результатов в наибольшей степени соответствует ваши данные. Можно также вычислить для прямой или РОСТА (known_y абонента, известные_значения_x, в) для экспоненциальное график. Эти функции, без аргумент новые_значения_x, возвращают массив значений y, прогноз прямой или график в фактических значений. Затем можно сравнить вычисленные значения с фактических значений. Может потребоваться диаграммы для визуального сравнения. </para>
          <para>В регрессионного анализа Microsoft Excel вычисляет для каждой точки квадрат разности между предполагаемое для текущего момента значения y и фактические значения y. Суммы эти квадрата разницы называется остаточные сумм квадратов ssresid. Затем Microsoft Excel подсчитывает общее сумм квадратов sstotal. Если const = <b>true</b>, или по умолчанию этот параметр опущен, общая сумма квадратов суммы квадрата разницы между фактические значения y и среднего значения y. Если const = <b>false</b>, общая сумма квадратов — это сумма квадратов фактические значения y (без вычитания средние значения y из каждого отдельного значения y). Затем можно найти регрессии сумм квадратов ssreg,: ssreg = sstotal - ssresid. Чем меньше остаточные сумм квадратов по сравнению с Общая сумма квадратов, тем больше значение коэффициента корреляции r2, который показывает, как хорошо уравнение, полученное с помощью регрессионного анализа, объясняет взаимосвязи между переменные. R2 равна ssreg/sstotal. </para>
          <para>В некоторых случаях, один или несколько столбцов X (предполагается, что Y и x находятся в столбцах) может не иметь дополнительные прогнозируемого значения при наличии других столбцов X. Другими словами не тратя один или несколько столбцов X может привести к будут одинаково точность. В этом случае эти столбцы x должен быть опущен из модели регрессии. Это явление называется «коллинеарности» так как все избыточные столбец X можно выразить в качестве суммы проводите несколько из без резервирования столбцы X. <b>ЛИНЕЙН</b> проверяет наличие коллинеарности и удаляет столбцы из модели регрессии x, если оно определяет их. Удалены X столбцов может быть распознан в <b>действительности</b> как имеющий коэффициентов 0, а также 0 se. Если один или несколько столбцов, удаляются как избыточных, df изменяется, так как df зависит от числа величины упреждающий целях. При изменении df, поскольку избыточные столбцы X удаляются, значения sey и F также изменяются. Коллинеарности должны быть относительно редкие на практике. Тем не менее один вариант, где ее рекомендуется применять, если некоторые столбцы X содержат 0 или 1 в качестве индикатора того, является ли предмет эксперимента в или не является членом группы. Если const = <b>true</b> или этот параметр опущен, <b>ЛИНЕЙН</b> вставляет дополнительный столбец из всех 1 для моделирования расчета отрезка X. Если имеется столбец со значениями 1 для указания мужчин, или значение 0, если это не так, а также имеется столбец со значениями 1 для указания гнездо или ноль в противном случае последний столбец удаляется, так как его значения можно получить из запись в «штекер индикатор» Добавление столбца из записи в столбце дополнительные все 1 с <b>LineEst</b>. </para>
          <para>Когда столбцы X не удаляются из модели из-за коллинеарности df рассчитывается следующим образом: Если существует k столбцов данных и const = <b>true</b> или не указано, то df = n – k – 1. Если const = <b>false</b>, то df = n - k. В обоих случаях удаление из-за коллинеарности столбцов x df увеличивается на 1. </para>
          <para>При вводе формул, которые возвращают массивы должны быть формул массива. При вводе массив, такие как известные_значения_x, в качестве аргумента, используйте запятые для разделения значений в одной строке и двоеточие для разделения строк. Разделители может отличаться в зависимости от настроек языкового стандарта в язык и региональные стандарты на панели управления. </para>
          <para>Обратите внимание на то, что значения y, прогноз с помощью уравнения регрессии могут быть действительным, если они находятся вне диапазона значений y, которые используются для определения уравнения. Основной алгоритм, используемый в функции <b>ЛИНЕЙН</b> , отличается от базового алгоритм, используемый в <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Slope(System.Object,System.Object)" /> и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Intercept(System.Object,System.Object)" /> функции. Различие между эти алгоритмы может привести к разные результаты, когда данные не определено и коллинеарными. Например если точки данных known_y аргумент 0 и точек данных аргумента известные_значения_x являются 1: </para>
          <para>
            <b>LineEst</b> возвращает значение 0. Алгоритм <b>ЛИНЕЙН</b> предназначен для возврата разумные результаты для коллинеарными данных, а в этом случае можно найти по крайней мере один ответ. <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Slope(System.Object,System.Object)" />и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Intercept(System.Object,System.Object)" /> возвращает #DIV/0! Ошибка. <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Slope(System.Object,System.Object)" /> И <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Intercept(System.Object,System.Object)" /> алгоритм выполняет поиск только один ответ, а в этом случае может быть несколько ответов.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Ln">
      <MemberSignature Language="C#" Value="public double Ln (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Ln([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Ln(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ln (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Ln(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16406)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число — положительное действительное число, для которого требуется натуральный логарифм.</param>
        <summary>Возвращает натуральный логарифм числа. Натуральный логарифм основаны на константе e (2,71828182845904).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Ln</b> является обратной функции EXP.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public double Log (double Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Log([in]float64 Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Log(System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Log (Arg1 As Double, Optional Arg2 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16493)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число — положительное действительное число, для которого вы хотите логарифм.</param>
        <param name="Arg2">Base - основание логарифма. Если основание задано, предполагается равным 10.</param>
        <summary>Возвращает логарифм числа по заданному указан.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Log10">
      <MemberSignature Language="C#" Value="public double Log10 (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Log10([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Log10(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Log10 (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Log10(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16407)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число — положительное действительное число, для которого требуется логарифма.</param>
        <summary>Возвращает десятичный логарифм числа.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogEst">
      <MemberSignature Language="C#" Value="public object LogEst (object Arg1, object Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object LogEst([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LogEst(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function LogEst (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16435)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Known_y's - набор значений y, которые уже известны соотношения y = b * m ^ x.</param>
        <param name="Arg2">Известные_значения_x, в - необязательный набор значений x, которые уже известны для соотношения y = b * m ^ x.</param>
        <param name="Arg3">Const — логическое значение, определяющее, следует ли константа b, равное 1.</param>
        <param name="Arg4">Статистика — логическое значение, определяющее, нужно ли возвращать дополнительную статистику по регрессии.</param>
        <summary>В анализ регрессии вычисляется экспоненциальная кривая, которая соответствует данных и возвращает массив значений, описывающий график. Поскольку эта функция возвращает массив значений, он должен вводится как формулы массива.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Формула для график — это:</para>
          <para>y = b * m ^ x или</para>
          <para>y = (b *(m1 ^ x1)*(m2 ^ x2) * _) (при наличии нескольких значений x)</para>
          <para>где зависимые значения y — это функция независимых значений x. Значения m являются основанием каждого экспоненты значение x, а b — это постоянное значение. Обратите внимание на то, что y, x и m могут быть векторов. <b>Функция ЛГРФПРИБЛ</b> возвращает массив {mn; mn-1, m1, b}.</para>
          <para>Если массив известные_значения_y одного столбца, каждый столбец данных считается отдельной переменной. </para>
          <para>Если массив известные_значения_y в одной строке, каждой строки данных считается отдельной переменной. </para>
          <para>Массив известные_значения_x может включать один или несколько наборов переменных. Если по одной переменной используется, только известные_значения_y и известные_значения_x, в может быть любую форму до тех пор, пока они имеют одинаковые размерности. Если используется более одной переменной известные_значения_y должен быть диапазоном ячеек высотой в одну строку или ширины столбца (которая также называется вектор). </para>
          <para>Если известные_значения_x опущены, он считается массива {1,2,3,...} Это же размера, как и известные_значения_y. </para>
          <para>Если const имеет <b>значение true</b> или этот параметр опущен, b вычисляется обычным образом.</para>
          <para>Если const присвоено <b>значение false</b>, b равным 1 и значения m установленным для y = m ^ x.</para>
          <para>Если статистика имеет <b>значение true</b>, <b>ЛГРФПРИБЛ</b> Возвращает дополнительную статистику по регрессии, поэтому возвращаемый массив {mn; mn-1, m1, b, отправить, отправить-1, se1, seb; r 2 sey; F, df, ssreg, ssresid}. </para>
          <para>Если stats присвоено <b>значение false</b> или опущен, <b>ЛГРФПРИБЛ</b> возвращает только коэффициенты m и константу b. </para>
          <para>Дополнительные сведения о статистике дополнительные регрессии можно <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LinEst(System.Object,System.Object,System.Object,System.Object)" />.</para>
          <para>Чем больше график данных имеет следующий вид: экспоненциальная график, подходит лучше вычисляемые строки данных. Как <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LinEst(System.Object,System.Object,System.Object,System.Object)" />, <b>ЛГРФПРИБЛ</b> возвращает массив значений, описывающий связи между значениями, но <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LinEst(System.Object,System.Object,System.Object,System.Object)" /> образом подходит для прямой к данным; <b>ЛГРФПРИБЛ</b> вписывается экспоненциальное график. Дополнительные сведения см. в статье <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LinEst(System.Object,System.Object,System.Object,System.Object)" />. </para>
          <para>Если у вас есть только один независимой переменной x, можно получить y пересечение (b) значения напрямую с помощью следующей формулы: </para>
          <para>Y-пересечение (b):</para>
          <para>
Index(LOGEST(known_y's,known_x's),2)</para>
          <para>Можно использовать значения y = b * m ^ x уравнения для прогнозирования будущих значений y, но предоставляет Microsoft Excel <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Growth(System.Object,System.Object,System.Object,System.Object)" /> функцию, чтобы сделать это для вас. Дополнительные сведения см. в статье <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Growth(System.Object,System.Object,System.Object,System.Object)" />.</para>
          <para>При вводе формул, которые возвращают массивы должны быть формул массива. </para>
          <para>При вводе массив, такие как известные_значения_x, в качестве аргумента, используйте запятые для разделения значений в одной строке и двоеточие для разделения строк. Разделители может отличаться в зависимости от настроек языкового стандарта в язык и региональные стандарты на панели управления. </para>
          <para>Следует отметить, что значения y, прогноз с помощью уравнения регрессии могут быть действительным, если они находятся вне диапазона значений y, которые используются для определения уравнения.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogInv">
      <MemberSignature Language="C#" Value="public double LogInv (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 LogInv([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LogInv(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function LogInv (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double LogInv(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16675)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Вероятность — вероятность, связанная с логнормальное распределение.</param>
        <param name="Arg2">Среднее — среднее ln(x).</param>
        <param name="Arg3">Стандартного отклонения - стандартное отклонение ln(x).</param>
        <summary>Логнормальное распределение используется для анализа логарифмически преобразованных данных.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Внимание!</b>: Эта функция была заменена один или несколько новых функций, который может предоставлять улучшенные точность и лучше, имена которых отражают их использования. Эта функция по-прежнему доступна для обеспечения совместимости с предыдущими версиями Excel. Тем не менее если обратной совместимости не требуется, можно теперь с помощью новых функций, так как они более точно описывает их функциональных возможностей. Дополнительные сведения о новой функции можно <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LogNorm_Inv(System.Double,System.Double,System.Double)" /> метод.</para>
          <para>Если аргумент не является числом, <b>ЛОГНОРМОБР</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если вероятность &lt;= 0 или вероятность &gt;= 1, возвращает <b>ЛОГНОРМОБР</b> #NUM! значение ошибки. </para>
          <para>Если стандартного отклонения &lt;= 0, <b>то функция ЛОГНОРМОБР</b> возвращает #NUM! значение ошибки. </para>
          <para>— Это функция обратного логарифмического нормального распределения: </para>
          <para>На рисунке 1: Функция обратного логарифмического нормального распределения</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogNorm_Dist">
      <MemberSignature Language="C#" Value="public double LogNorm_Dist (double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 LogNorm_Dist([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]bool Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LogNorm_Dist(System.Double,System.Double,System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function LogNorm_Dist (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double LogNorm_Dist(double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16920)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Arg1">X — значение, для которого вычисляется функция.</param>
        <param name="Arg2">Среднее — среднее ln(x).</param>
        <param name="Arg3">Стандартного отклонения - стандартное отклонение ln(x).</param>
        <param name="Arg4">Накопительный пакет — логическое значение, определяющее форму функции. Если накопительный пакет имеет <b>значение true</b>, <b>LogNorm_Dist</b> возвращает расчета интегральной функции распределения; Если <b>значение false</b>, то возвращается весовая функция распределения.</param>
        <summary>Возвращает логнормальное распределение x, где ln(x) нормально распределенным с параметрами среднего и стандартного отклонения. Эта функция используется для анализа логарифмически преобразованных данных.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если аргумент не является числом, <b>LogNorm_Dist</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если x ≤ 0 или стандартное_откл ≤ 0, <b>LogNorm_Dist</b> возвращает #NUM! значение ошибки. </para>
          <para>Формула для расчета логарифмического нормального распределения функции — это: </para>
          <para>На рисунке 1: Формула для расчета логарифмического нормального распределения</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogNorm_Inv">
      <MemberSignature Language="C#" Value="public double LogNorm_Inv (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 LogNorm_Inv([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LogNorm_Inv(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function LogNorm_Inv (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double LogNorm_Inv(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16921)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Вероятность — вероятность, связанная с логнормальное распределение.</param>
        <param name="Arg2">Среднее — среднее ln(x).</param>
        <param name="Arg3">Стандартного отклонения - стандартное отклонение ln(x).</param>
        <summary>Возвращает обратную функцию логарифмического нормального распределения. Логнормальное распределение используется для анализа логарифмически преобразованных данных.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если аргумент не является числом, <b>LogNorm_Inv</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если вероятность &lt;= 0 или вероятность &gt;= 1, возвращает <b>LogNorm_Inv</b> #NUM! значение ошибки. </para>
          <para>Если стандартного отклонения &lt;= 0, <b>LogNorm_Inv</b> возвращает #NUM! значение ошибки. </para>
          <para>— Это функция обратного логарифмического нормального распределения: </para>
          <para>На рисунке 1: Функция обратного логарифмического нормального распределения</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogNormDist">
      <MemberSignature Language="C#" Value="public double LogNormDist (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 LogNormDist([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LogNormDist(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function LogNormDist (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double LogNormDist(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16674)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">X — значение, для которого вычисляется функция.</param>
        <param name="Arg2">Среднее — среднее ln(x).</param>
        <param name="Arg3">Стандартного отклонения - стандартное отклонение ln(x).</param>
        <summary>Возвращает кумулятивное нормальное распределение x, где ln(x) нормально распределенным с параметрами среднего и стандартного отклонения. Эта функция используется для анализа логарифмически преобразованных данных.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Внимание!</b>: Эта функция была заменена один или несколько новых функций, который может предоставлять улучшенные точность и лучше, имена которых отражают их использования. Эта функция по-прежнему доступна для обеспечения совместимости с предыдущими версиями Excel. Тем не менее если обратной совместимости не требуется, можно теперь с помощью новых функций, так как они более точно описывает их функциональных возможностей. Дополнительные сведения о новой функции можно <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LogNorm_Dist(System.Double,System.Double,System.Double,System.Boolean)" /> метод.</para>
          <para>Если аргумент не является числом, <b>функция ЛОГНОРМРАСП</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если x ≤ 0 или стандартное_откл ≤ 0, <b>функция ЛОГНОРМРАСП</b> возвращает #NUM! значение ошибки. </para>
          <para>Формула для расчета логарифмического нормального распределения функции — это: </para>
          <para>На рисунке 1: Формула для расчета логарифмического нормального распределения</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Lookup">
      <MemberSignature Language="C#" Value="public object Lookup (object Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Lookup([in]object Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Lookup(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Lookup (Arg1 As Object, Arg2 As Object, Optional Arg3 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16412)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Искомое_значение — значение, которое <b>Просмотр</b> ищет в первом вектор. Искомое_значение может быть число, текст, логическое значение или имя или ссылку, которая ссылается на значение.</param>
        <param name="Arg2">Просматриваемый_вектор или массива - формы в вектор, диапазон, который содержит только одну строку или один столбец. Значения в аргументе просматриваемый_вектор может быть текст, числа и логические значения. В форме массива, диапазон ячеек, который содержит текст, числа или логические значения, которые нужно сравнить с искомым значением.</param>
        <param name="Arg3">Вектор_результатов - используется только с формой вектор. Диапазон, который содержит только одну строку или столбец. Это должен быть по размеру просматриваемый_вектор.</param>
        <summary>Возвращает значение из строки или из столбца или из массива. Функция Просмотр имеет две синтаксические формы: вектор формы и форме массива.</summary>
        <returns>To be added.</returns>
        <remarks>
          <list type="table">
            <item>
              <term>Поиск в одной строки или одного столбца диапазона (известную как вектор) для значения и возвращать значение из той же позиции в второй диапазон одной строки или из столбца</term>
              <description>Вектор формы</description>
              <description>Используйте форму вектор, при наличии большой список значений для поиска или при значения может изменяться со временем.</description>
            </item>
            <item>
              <term>Поиск в первой строки или столбца массива для указанного значения и возвращать значение из одной позиции в последней строки или столбца массива</term>
              <description>Форма массива</description>
              <description>Использовать форму массива при наличии небольшой список значений и значения меняются со временем.</description>
            </item>
          </list>
          <para>
            <b>Примечание</b>: также можно использовать функцию <b>поиска</b> в качестве альтернативы функции Если для сложных проверок или тестов для более семи условия. Примеры в виде массива.</para>
          <para>Вектор формы</para>
          <para>Вектор — это диапазон только одну строку или один столбец. Вектор формы <b>поиска</b> выглядит в одной строки или одного столбца диапазона (известную как вектор) для значения и возвращает значение из той же позиции в второй диапазон одной строки или одного столбца. Используйте эту форму функции <b>Просмотр</b> флажок указать диапазон, который содержит значения, которые необходимо найти. Другая форма функции <b>Просмотр</b> автоматически просматривает строку или первый столбец.</para>
          <para>
            <b>Важно</b>: значения в аргументе просматриваемый_вектор должны быть расположены в порядке возрастания:..., -2, -1, 0, 1, 2,..., A-Z, <b>ЛОЖЬ</b>, <b>значение true</b>; в противном случае <b>подстановки</b> не могут предоставить правильное значение. Текст прописных и строчных эквивалентны.</para>
          <para>Если поиск не может найти искомое_значение, соответствует наибольшее значение в аргументе просматриваемый_вектор, которое меньше или равен ему. </para>
          <para>Если искомое значение меньше, чем наименьшее значение в аргументе просматриваемый_вектор, <b>Просмотр</b> возвращает значение ошибки # н/д.</para>
          <para>Форма массива</para>
          <para>Форма массива функции <b>Просмотр</b> выглядит в первой строки или столбца массива для указанного значения и возвращает значение из одной позиции в последней строки или столбца массива. Используйте эту форму <b>подстановки</b> , когда нужно указать значения первой строки или столбца массива. Используйте другие формы <b>подстановки</b> , флажок указать расположение столбца или строки.</para>
          <para>
            <b>Совет</b>: как правило, лучше всего использовать <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.HLookup(System.Object,System.Object,System.Object,System.Object)" />или <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.VLookup(System.Object,System.Object,System.Object,System.Object)" />функция форма <b>поиска</b>. Эта форма <b>просмотра</b> обеспечивает совместимость с другими программами электронных таблиц.</para>
          <para>Если <b>Поиск</b> не может найти искомое_значение, он использует наибольшее значение в массиве, который меньше или равен ему.</para>
          <para>Если искомое значение меньше, чем наименьшее значение в первой строки или столбца (в зависимости от измерения массива), <b>подстановки</b> возвращает значение ошибки # н/д.</para>
          <para>Форма массива функции <b>Просмотр</b> очень похоже на <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.HLookup(System.Object,System.Object,System.Object,System.Object)" /> и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.VLookup(System.Object,System.Object,System.Object,System.Object)" /> функции. Отличие заключается, <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.HLookup(System.Object,System.Object,System.Object,System.Object)" /> ищет искомое_значение в первой строке <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.VLookup(System.Object,System.Object,System.Object,System.Object)" /> поисков в первый столбец и выполняется поиск <b>подстановки</b> в соответствии с измерения массива.</para>
          <para>Если массива, превышающее — это высота (больше столбцов чем строк), <b>функция Просмотр</b> ищет искомое_значение в первой строке.</para>
          <para>Если массив имеет или выше, чем всей (больше строк, чем столбцов), <b>функция Просмотр</b> ищет в первый столбец.</para>
          <para>С помощью <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.HLookup(System.Object,System.Object,System.Object,System.Object)" /> и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.VLookup(System.Object,System.Object,System.Object,System.Object)" />, можно индексировать по или вниз, но <b>Просмотр</b> всегда выбирает последнее значение строки или столбца.</para>
          <para>
            <b>Важно</b>: значения в массиве должны быть расположены в порядке возрастания:..., -2, -1, 0, 1, 2,..., A-Z, <b>ЛОЖЬ</b>, <b>значение true</b>; в противном случае <b>подстановки</b> не могут предоставить правильное значение. Текст прописных и строчных эквивалентны.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public double Match (object Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Match([in]object Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Match(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Match (Arg1 As Object, Arg2 As Object, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16448)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Искомое_значение — значение, используемое для поиска в таблице нужное значение.</param>
        <param name="Arg2">Анализируемые значения - смежных ячеек, содержащих значения возможности поиска. Анализируемые значения должен быть массив или ссылкой на массив.</param>
        <param name="Arg3">Д - число -1, 0 или 1. Д указывает, как Microsoft Excel сопоставляет искомое_значение со значениями в анализируемые значения.</param>
        <summary>Возвращает относительное положение элемента массива, который соответствует заданному значению в указанном порядке. Используйте <b>соответствующие</b> вместо одной из <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Lookup(System.Object,System.Object,System.Object)" /> функции при необходимости положение элемента в диапазоне, а не сам элемент.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Искомое_значение — значение, которое требуется для поиска соответствия в анализируемые значения. К примеру при поиске номера в телефонной книги имя пользователя используется как значение подстановки, а номер телефона — это значение, которое требуется.</para>
          <para>Искомое_значение может быть значением (номер, текст или логическим значением) или ссылка на ячейку на номер, текст или логическое значение.</para>
          <para>Если д 1, <b>соответствие</b> находит наибольшее значение, которое меньше или равен ему. Анализируемые значения должны быть упорядочены в порядке возрастания:...-2, -1, 0, 1, 2,..., A-Z, <b>ЛОЖЬ</b>, <b>значение true</b>.</para>
          <para>Если д равно 0, <b>соответствие</b> находит первое значение, которое равно ему. Анализируемые значения можно в любом порядке.</para>
          <para>Если д -1, <b>соответствие</b> находит наименьшее значение, которое больше или равно ему. Анализируемые значения должны быть упорядочены по убыванию: <b>значение true</b>, <b>false</b>, Z-A,... 2, 1, 0, -1, -2,... и т. д. Если д опущен, предполагается 1.</para>
          <para>
            <b>Соответствие</b> возвращает позицию соответствующего значения в анализируемые значения, не значение. Например MATCH("b",{"a","b","c"},0) возвращает 2, относительное положение «б» в массиве {«», «b», «c»}. </para>
          <para>
            <b>Совпадение</b> не различаются прописные и строчные буквы, когда соответствующие текстовые значения. </para>
          <para>Если <b>Match</b> не находит соответствие, возвращает значение ошибки # н/д. </para>
          <para>Если тип_сопоставления равен 0 и искомое_значение является текстом, можно использовать подстановочные знаки, вопросительные знаки (?) и звездочки (*) в искомое_значение. Вопросительный знак соответствует любой отдельный знак; Звездочка соответствует любой последовательности символов. Если вы хотите найти вопросительный знак или звездочка, введите тильдой (~) перед знаком.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public double Max (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Max([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Max(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Max (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16391)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число1, число2,... - 1 до 30 чисел, для которых требуется вычислить максимальное значение.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Возвращает наибольшее значение в набор значений.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Аргументы могут быть числа или имена, массивы или ссылки, которые содержат цифры. </para>
          <para>Учитываются логические значения и текст представления чисел, введите непосредственно в списке аргументов. </para>
          <para>Если аргумент является массив или ссылка, будут использоваться только числа в этом массив или ссылку. Пустые ячейки, логические значения или текст в массиве или ссылке игнорируются. </para>
          <para>Если аргументы не содержат чисел, <b>Максимальное число</b> возвращает нуль (0). </para>
          <para>Аргументы, которые являются значениями ошибки или текст, который не может быть переведены вызывают ошибки. </para>
          <para>Если вы хотите включить в ссылку на логические значения и текста в процессе вычисления, используйте <see cref="MAXA" /> функции.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MDeterm">
      <MemberSignature Language="C#" Value="public double MDeterm (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 MDeterm([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.MDeterm(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function MDeterm (Arg1 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double MDeterm(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16547)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Массив — числовой массив с равным количеством строк и столбцов.</param>
        <summary>Возвращает определитель матрицы в массиве.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Массив может быть задан как диапазон ячеек, например a1: C3; как массив констант например {1,2,3; 4,5,6; 7,8,9}; или как имя любой из них. <b>МОПРЕД</b> возвращает #VALUE! Ошибка при: </para>
          <para>Пустые ячейки в массиве или содержит текст. </para>
          <para>Массив имеет равно числу строк и столбцов. </para>
          <para>Размер массива превышает 73 столбца на 73 строки. </para>
          <para>Определитель матрицы — это число, производные от значения в массиве. Для трех строк и трех столбцов массива, A1:C3, определитель определяются следующим образом. </para>
          <code>MDETERM(A1:C3)</code>
          <para>равно</para>
          <code>A1*(B2*C3-B3*C2) + A2*(B3*C1-B1*C3) + A3*(B1*C2-B2*C1)</code>
          <para>Матрица определяющих факторов обычно используются при решении систем математических формул, в которых используются несколько переменных. </para>
          <para>
            <b>МОПРЕД</b> рассчитывается с точность приблизительно 16 значащих цифр, что может привести к небольшим численным ошибкам при расчете не завершена. Например определитель единственного матрицы отличается от нуля на 1E-16.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MDuration">
      <MemberSignature Language="C#" Value="public double MDuration (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 MDuration([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.MDuration(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function MDuration (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Arg5 As Object, Optional Arg6 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16843)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Сопоставление - Дата сопоставления безопасности. Дата сопоставления безопасности — это дата после даты выпуска, если передается безопасности покупателю.</param>
        <param name="Arg2">Роста - срока. Соответствует дата истечения срока действия безопасности.</param>
        <param name="Arg3">Купон — годовая процентная ставка.</param>
        <param name="Arg4">Доход — годовой доход по ценным бумагам.</param>
        <param name="Arg5">Частота — количество выплат купон в год. Для ежегодных выплат частота = 1; для полугодовых выплат периодичность = 2; для квартальное, частота = 4.</param>
        <param name="Arg6">Основы - способ вычисления дня.</param>
        <summary>Возвращает измененные длительность макалея для безопасности с предполагаемой параметр имеет значение 100 долларов США.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Важно</b>: ввода дат с помощью функции Дата или как результат других формул и функций. Например следует используйте Дата(2008;5;23) для 23-мая 2008 г. Если даты вводятся как текст, могут возникнуть проблемы.</para>
          <para>Microsoft Excel хранит даты как целые числа, поэтому они могут использоваться в расчетах. По умолчанию 1 января 1900 — серийный номер 1, а 1 января 2008 — номер 39448, так как интервал в днях 1 января 1900. Microsoft Excel для Macintosh использует другую систему дат по умолчанию. </para>
          <para>Дата соглашения — это дата продажи покупателю купон, такие как действия. Срок платежа — это дата истечения срока действия купон. Предположим, например, сроком действия 30 лет выпущена 1 января 2008 года и приобретена покупателем через шесть месяцев после. Датой выпуска будет являться 1 января 2008 года, датой соглашения равен 1 июля 2008 г., и соответствует 1 января 2038, который — 30 лет после даты выпуска 1 января 2008 года. </para>
          <para>Сопоставления, роста, частоту и основы усекаются до целых. </para>
          <para>Если сопоставления или роста не является допустимой датой, <b>то функция МДЛИТ</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если доход &lt; 0 или, если купон &lt; 0, <b>то функция МДЛИТ</b> возвращает #NUM! значение ошибки. </para>
          <para>Если частота — любое число отличное от 1, 2 или 4, <b>то функция МДЛИТ</b> возвращает #NUM! значение ошибки. </para>
          <para>Если основа &lt; 0 или, если основа &gt; 4, <b>то функция МДЛИТ</b> возвращает #NUM! значение ошибки. </para>
          <para>Если сопоставления ≥ роста, <b>то функция МДЛИТ</b> возвращает #NUM! значение ошибки. </para>
          <para>Модифицированная длительность определяется следующим образом: </para>
          <para>На рисунке 1: Формула для модифицированной продолжительности</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Median">
      <MemberSignature Language="C#" Value="public double Median (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Median([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Median(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Median (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16611)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число1, число2,... - 1 до 30 чисел, для которых требуется Медиана.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Возвращает Медиана указанного номера. Медиана — номер середину набора номера.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если имеется четное количество номеров в наборе, <b>Медиана</b> вычисляет среднее двух чисел в середине. В разделе второй формулу в этом примере.</para>
          <para>Аргументы могут быть числа или имена, массивы или ссылки, которые содержат цифры. </para>
          <para>Учитываются логические значения и текст представления чисел, введите непосредственно в списке аргументов. </para>
          <para>Если аргумент массива или ссылки содержит текст, логические значения или пустые ячейки, эти значения игнорируются; Тем не менее включаются ячейки с помощью нулевое значение. </para>
          <para>Аргументы, которые являются значениями ошибки или текст, который не может быть переведены вызывают ошибки.</para>
          <para>
            <b>Примечание</b>: <b>Медиана</b> функции меры центральной тенденции, в которой находится центр группы номеров в статистического распределения. Три большинство общие показатели из центральной тенденции являются:</para>
          <list type="bullet">
            <item>
              <description>Среднего геометрического, и подсчитывается путем добавления группы чисел и затем разделив count этих номеров. Например среднем по 2, 3, 3, 5, 7 и 10: 30 разделенные на 6, которого равно 5. </description>
            </item>
            <item>
              <description>Медиана средней числом группы номеров; то есть наполовину номера имеют значения, которые больше, чем Медиана и половину номера имеют значения, которые меньше, чем Медиана. Например медиана 2, 3, 3, 5, 7 и 10 — 4.</description>
            </item>
            <item>
              <description>Режим, который является номером наиболее часто встречающееся в группе номеров. Например режим 2, 3, 3, 5, 7 и 10 — 3.</description>
            </item>
          </list>
          <para>Симметричная распространению набор чисел эти три меры центральной тенденции применяются все. Для наклоном распределения набор чисел они могут быть разными.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public double Min (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Min([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Min(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Min (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16390)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число1, число2,... - 1 до 30 чисел, для которых требуется вычислить минимальное значение.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Возвращает наименьшее число в набор значений.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Аргументы могут быть числа или имена, массивы или ссылки, которые содержат цифры. </para>
          <para>Учитываются логические значения и текст представления чисел, введите непосредственно в списке аргументов. </para>
          <para>Если аргумент является массив или ссылка, будут использоваться только числа в этом массив или ссылку. Пустые ячейки, логические значения или текст в массиве или ссылке игнорируются. </para>
          <para>Если аргументы не содержат чисел, <b>функция мин</b> возвращает 0. </para>
          <para>Аргументы, которые являются значениями ошибки или текст, который не может быть переведены вызывают ошибки. </para>
          <para>Если вы хотите включить в ссылку на логические значения и текста в процессе вычисления, используйте функцию МИНА.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MInverse">
      <MemberSignature Language="C#" Value="public object MInverse (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object MInverse([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.MInverse(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function MInverse (Arg1 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ MInverse(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16548)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Массив — числовой массив с равным количеством строк и столбцов.</param>
        <summary>Возвращает обратную матрицу для матрицы, хранящиеся в массиве.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Размер массива не должен превышать столбцов 52 строк. Если это так, функция возвращает #VALUE! Ошибка. </para>
          <para>Массив может быть задан как диапазон ячеек, например a1: C3; как массив констант например {1,2,3; 4,5,6; 7,8,9}; или как имя для любой из этих. </para>
          <para>Если все ячейки в массиве пуста или содержит текст, <b>МОБР</b> возвращает #VALUE! значение ошибки. </para>
          <para>
            <b>МОБР</b> также возвращает #VALUE! значение ошибки, если в массиве не равно числу строк и столбцов. </para>
          <para>При вводе формул, которые возвращают массивы должны быть формул массива. </para>
          <para>Обратный матрицы, определяющих факторов, как обычно используются при решении систем математических формул, включающие использование нескольких переменных. Матрицу и ее обратную является матрица удостоверения — квадратный массива, в котором диагональные элементы равны 1, а все остальные значения равно 0. </para>
          <para>Пример порядок вычисления двух строк и двух столбцов матрицы, предположим, что диапазон a1: B2 содержит буквы, b, c и d, представляющие любые четыре числа. В следующей таблице показаны обратное матрицы a1: B2. </para>
          <list type="table">
            <item>
              <term>Строка 1</term>
              <description>d / (*d-b*c)</description>
              <description>b / (b*c-a*d)</description>
            </item>
            <item>
              <term>Строки 2</term>
              <description>c / (b*c-a*d)</description>
              <description>/ (*d-b*c)</description>
            </item>
          </list>
          <para>
            <b>МОБР</b> рассчитывается с точность приблизительно 16 значащих цифр, что может привести к небольшим численным ошибкам при отмене не завершена. </para>
          <para>Некоторые квадратные матрицы не могут быть обращены и возвращает #NUM! значение ошибки с <b>МОБР</b>. Определитель такой матрицы равно 0.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MIrr">
      <MemberSignature Language="C#" Value="public double MIrr (object Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 MIrr([in]object Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.MIrr(System.Object,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function MIrr (Arg1 As Object, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double MIrr(System::Object ^ Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16445)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Значения — массив или ссылка на ячейки, которые содержат цифры. Эти числа представляют серии платежей (отрицательные значения) и поступлений (положительные значения), происходящие в регулярные периоды времени.</param>
        <param name="Arg2">Ф_ставка - процентной ставки, оплата за деньги, используемые в денежных потоков.</param>
        <param name="Arg3">Р_ставка - процентной ставки, получаемых на движение денежных средств при реинвестировании.</param>
        <summary>Возвращает измененную внутреннюю норму прибыли для последовательности периодических денежных потоков. MIRR учитывает как стоимость инвестиций и процент, получаемый от денежных реинвестиций.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Значения должны содержать по крайней мере одно положительное и одно отрицательное значение для вычисления измененную внутреннюю норму прибыли. В противном случае <b>MIrr</b> возвращает #DIV/0! значение ошибки. </para>
          <para>Если аргумент массива или ссылки содержит текст, логические значения или пустые ячейки, эти значения игнорируются; Тем не менее включаются ячейки с помощью нулевое значение. </para>
          <para>
            <b>MIrr</b> использует порядок значений для интерпретации порядка денежных потоков. Убедитесь, что в последовательности, который будет и с правильными знаками (положительные значения для получаемых денег и отрицательные значения для выплачиваемые денежные средства) введите платежей и поступлений. </para>
          <para>При n — это число движение денежных средств в значениях, f — это ставка_финанс и чисел — это ставка_реинвест, формулу для <b>MIrr</b> используется: </para>
          <para>На рисунке 1: Формула для расчета метода MIrr</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MMult">
      <MemberSignature Language="C#" Value="public object MMult (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object MMult([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.MMult(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function MMult (Arg1 As Object, Arg2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ MMult(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16549)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Массив1, массив2 - массивов для умножения.</param>
        <param name="Arg2">Массив1, массив2 - массивов для умножения.</param>
        <summary>Возвращает матрицу произведение двух массивов. Результатом является массив с такое же число строк, как массив1 и число столбцов, как массив2.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Число столбцов в аргументе массив1 должно быть то же, что количество строк в массив2, и оба массива должны содержать только цифры. </para>
          <para>Массив1 и массив2 может быть задан как диапазоны ячеек, константы массива или ссылки. </para>
          <para>
            <b>Функция МУМНОЖ</b> возвращает #VALUE! Ошибка при: </para>
          <para>Пустые ячейки или содержит текст. </para>
          <para>Число столбцов в аргументе массив1 отличается от числа строк в аргументе массив2. </para>
          <para>Размер результирующего массива равно или больше 5 461 ячейке. </para>
          <para>Массив матричного произведения двух массивов b и c — это: </para>
          <para>Figure1: Массив матричного произведения двух массивов b и c</para>
          <para></para>
          <para></para>
          <para>где i — номер строки, а j — номер столбца.</para>
          <para>При вводе формул, которые возвращают массивы должны быть формул массива.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public double Mode (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Mode([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Mode(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Mode (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16714)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число1, число2,... - 1 до 30 аргументов, для которых требуется вычислить в режиме. Можно также использовать массив или ссылку на массив вместо аргументов, разделенных запятыми.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Возвращает значение наиболее часто происходит или повторяющихся, в массив или диапазон данных.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Эта функция была заменена один или несколько новых функций, который может предоставлять улучшенные точность и, имена которых лучше отразить их использования. Эта функция по-прежнему доступна для обеспечения совместимости с предыдущими версиями Excel. Тем не менее если обратной совместимости не требуется, можно теперь с помощью новых функций, так как они более точно описывает их функциональных возможностей. Дополнительные сведения о новых функциях можно <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Mode_Sngl(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Mode_Mult(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> методы.</para>
          <para>Аргументы могут быть числа или имена, массивы или ссылки, которые содержат цифры. </para>
          <para>Если аргумент массива или ссылки содержит текст, логические значения или пустые ячейки, эти значения игнорируются; Тем не менее включаются ячейки с помощью нулевое значение. </para>
          <para>Аргументы, которые являются значениями ошибки или текст, который не может быть переведены вызывают ошибки. </para>
          <para>Если набор данных не содержит повторяющихся данных, <b>режим</b> возвращает значение ошибки # н/д.</para>
          <para>
            <b>Примечание</b>: <b>режим</b> функции меры центральной тенденции, в которой находится центр группы номеров в статистического распределения. Три большинство общие показатели из центральной тенденции являются:</para>
          <list type="bullet">
            <item>
              <description>Среднего геометрического, и подсчитывается путем добавления группы чисел и затем разделив count этих номеров. Например среднем по 2, 3, 3, 5, 7 и 10: 30 разделенные на 6, которого равно 5. </description>
            </item>
            <item>
              <description>Медиана средней числом группы номеров; то есть наполовину номера имеют значения, которые больше, чем Медиана и половину номера имеют значения, которые меньше, чем Медиана. Например медиана 2, 3, 3, 5, 7 и 10 — 4. </description>
            </item>
            <item>
              <description>Режим, который является номером наиболее часто встречающееся в группе номеров. Например режим 2, 3, 3, 5, 7 и 10 — 3.</description>
            </item>
          </list>
          <para>Симметричная распространению набор чисел эти три меры центральной тенденции применяются все. Для наклоном распределения набор чисел они могут быть разными.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mode_Mult">
      <MemberSignature Language="C#" Value="public object Mode_Mult (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Mode_Mult([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Mode_Mult(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Mode_Mult (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16881)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число1 - первый аргумент number, для которого требуется для расчета в режиме.</param>
        <param name="Arg2">Число2 - число30 - номеров аргументы от 2 до 30, для которого требуется для расчета в режиме. Можно также использовать массив или ссылку на массив вместо аргументов, разделенных запятыми.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Возвращает массив значений наиболее часто происходит или повторяющихся, в массив или диапазон данных.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Аргументы могут быть числа или имена, массивы или ссылки, которые содержат цифры. </para>
          <para>Если аргумент массива или ссылки содержит текст, логические значения или пустые ячейки, эти значения игнорируются; Тем не менее включаются ячейки с помощью нулевое значение. </para>
          <para>Аргументы, которые являются значениями ошибки или текст, который не может быть переведены вызывают ошибки. </para>
          <para>Если набор данных не содержит повторяющихся данных, <b>Mode_Mult</b> возвращает значение ошибки # н/д.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mode_Sngl">
      <MemberSignature Language="C#" Value="public double Mode_Sngl (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Mode_Sngl([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Mode_Sngl(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Mode_Sngl (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16882)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число1, число2,... - 1 до 30 аргументов, для которых требуется вычислить в режиме. Можно также использовать массив или ссылку на массив вместо аргументов, разделенных запятыми (,).</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Возвращает значение наиболее часто происходит или повторяющихся, в массив или диапазон данных.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Аргументы могут быть числа или имена, массивы или ссылки, которые содержат цифры. </para>
          <para>Если аргумент массива или ссылки содержит текст, логические значения или пустые ячейки, эти значения игнорируются; Тем не менее включаются ячейки с помощью нулевое значение. </para>
          <para>Аргументы, которые являются значениями ошибки или текст, который не может быть переведены вызывают ошибки. </para>
          <para>Если набор данных не содержит повторяющихся данных, <b>Mode_Sngl</b> возвращает значение ошибки # н/д.</para>
          <para>
            <b>Примечание</b>: <b>Mode_Sngl</b> функции меры центральной тенденции, в которой находится центр группы номеров в статистического распределения. Три большинство общие показатели из центральной тенденции являются:</para>
          <list type="bullet">
            <item>
              <description>Средняя геометрического и подсчитывается путем добавления группы чисел и затем разделив count этих номеров. Например среднем по 2, 3, 3, 5, 7 и 10: 30 разделенные на 6, которого равно 5. </description>
            </item>
            <item>
              <description>Медиана средней номер группы номеров; то есть наполовину номера имеют значения, которые больше, чем Медиана и половину номера имеют значения, которые меньше, чем Медиана. Например медиана 2, 3, 3, 5, 7 и 10 — 4. </description>
            </item>
            <item>
              <description>Режим наиболее часто встречающееся число в группе номеров. Например режим 2, 3, 3, 5, 7 и 10 — 3.</description>
            </item>
          </list>
          <para>Симметричная распространению набор чисел эти три меры центральной тенденции применяются все. Для наклоном распределения набор чисел они могут быть разными.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MRound">
      <MemberSignature Language="C#" Value="public double MRound (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 MRound([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.MRound(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function MRound (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double MRound(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16806)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число — значение для округления.</param>
        <param name="Arg2">Несколько - множитель для которого нужно округлить число.</param>
        <summary>Возвращает число, округленное до желаемую несколько.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>ОКРУГЛТ</b> округление ноль, если остаток от деления числа на несколько больше или равно половине значения нескольких.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiNomial">
      <MemberSignature Language="C#" Value="public double MultiNomial (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 MultiNomial([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.MultiNomial(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function MultiNomial (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16858)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число1, число2,... - 1 до 29 значений, для которых требуется мультиномиальный.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Возвращает отношение факториала суммы значений к продукта факториалов.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если аргумент не является числом, <b>функция МУЛЬТИНОМ</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если любой из аргументов меньше нуля, <b>функция МУЛЬТИНОМ</b> возвращает #NUM! значение ошибки. </para>
          <para>Мультиномиальный — это: </para>
          <para>На рисунке 1: Формула для расчета метода MultiNomial</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Munit">
      <MemberSignature Language="C#" Value="public object Munit (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Munit([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Munit(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Munit (Arg1 As Double) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Munit(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16966)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Целое число, указывающее измерения матрицы подразделения, который необходимо возвратить.</param>
        <summary>Возвращает матрицу подразделения для указанного измерения.</summary>
        <returns>
          <b>VARIANT</b>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NegBinom_Dist">
      <MemberSignature Language="C#" Value="public double NegBinom_Dist (double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 NegBinom_Dist([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]bool Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.NegBinom_Dist(System.Double,System.Double,System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function NegBinom_Dist (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double NegBinom_Dist(double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16922)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число_неудач — количество сбоев.</param>
        <param name="Arg2">Указанного - пороговое значение числа успешных запросов.</param>
        <param name="Arg3">Данной - вероятность успеха.</param>
        <param name="Arg4">Накопительный пакет — логическое значение, определяющее форму функции. Если накопительный пакет имеет <b>значение true</b>, <b>NegBinom_Dist</b> возвращает расчета интегральной функции распределения; Если <b>значение false</b>, то возвращается весовая функция распределения.</param>
        <summary>Возвращает отрицательное биномиальное распределение. <b>NegBinom_Dist</b> возвращает вероятность, что будет Число_неудач ошибок до число_успехов успешных при данной константу вероятность успеха. Эта функция аналогична биномиальное распределение, за исключением того, что фиксированной число успешных запросов и номер версии — переменная. Как биномиальное пробные версии предполагается, что не зависеть.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Например вам нужно найти 10 человек с великолепную способностями и известно, что вероятность, что Кандидат обладает такими способностями — 0,3. <b>NegBinom_Dist</b> вычисляет вероятность, что будет собеседования определенное количество неизвестные кандидатов, прежде чем найдены все 10 подходящих кандидатов: </para>
          <para>Число_неудач и число_успехов усекаются до целых. </para>
          <para>Если аргумент не является числом, <b>NegBinom_Dist</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если данной &lt; 0 или, если вероятность &gt; 1, <b>NegBinom_Dist</b> возвращает #NUM! значение ошибки. </para>
          <para>Если число_неудач &lt; 0 или указанного &lt; 1, <b>NegBinom_Dist</b> возвращает #NUM! значение ошибки. </para>
          <para>Формула для расчета отрицательного биноминального распределения — это: </para>
          <para>На рисунке 1: Формула для отрицательное биномиальное распределение</para>
          <para></para>
          <para></para>
          <para>где:</para>
          <para>x — это Число_неудач, r — это указанного и p — данной.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NegBinomDist">
      <MemberSignature Language="C#" Value="public double NegBinomDist (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 NegBinomDist([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.NegBinomDist(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function NegBinomDist (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double NegBinomDist(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16676)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число_неудач — количество сбоев.</param>
        <param name="Arg2">Указанного - пороговое значение числа успешных запросов.</param>
        <param name="Arg3">Данной - вероятность успеха.</param>
        <summary>Возвращает отрицательное биномиальное распределение. ОТРБИНОМРАСП возвращает вероятность, что будет Число_неудач ошибок до число_успехов успешных при данной константу вероятность успеха. Эта функция аналогична биномиальное распределение, за исключением того, что фиксированной число успешных запросов и номер версии — переменная. Как биномиальное пробные версии предполагается, что не зависеть.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Эта функция была заменена один или несколько новых функций, который может предоставлять улучшенные точность и, имена которых лучше отразить их использования. Эта функция по-прежнему доступна для обеспечения совместимости с предыдущими версиями Excel. Тем не менее если обратной совместимости не требуется, можно теперь с помощью новых функций, так как они более точно описывает их функциональных возможностей. Дополнительные сведения о новой функции можно <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.NegBinom_Dist(System.Double,System.Double,System.Double,System.Boolean)" /> метод.</para>
          <para>Например вам нужно найти 10 человек с великолепную способностями и известно, что вероятность, что Кандидат обладает такими способностями — 0,3. <b>ОТРБИНОМРАСП</b> вычисляет вероятность, что будет собеседования определенное количество неизвестные кандидатов, прежде чем найдены все 10 подходящих кандидатов. </para>
          <para>Число_неудач и число_успехов усекаются до целых. </para>
          <para>Если аргумент не является числом, <b>ОТРБИНОМРАСП</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если данной &lt; 0 или, если вероятность &gt; 1, <b>ОТРБИНОМРАСП</b> возвращает #NUM! значение ошибки. </para>
          <para>Если число_неудач &lt; 0 или указанного &lt; 1, <b>ОТРБИНОМРАСП</b> возвращает #NUM! значение ошибки. </para>
          <para>Формула для расчета отрицательного биноминального распределения — это: </para>
          <para>На рисунке 1: Формула для отрицательное биномиальное распределение</para>
          <para></para>
          <para></para>
          <para>где:</para>
          <para>x — это Число_неудач, r — это указанного и p — данной.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NetworkDays">
      <MemberSignature Language="C#" Value="public double NetworkDays (object Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 NetworkDays([in]object Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.NetworkDays(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function NetworkDays (Arg1 As Object, Arg2 As Object, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16856)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Нач_дата — Дата, которая представляет дату начала.</param>
        <param name="Arg2">Кон_дата — дата, которая представляет дату окончания.</param>
        <param name="Arg3">Праздники — это необязательный список из одной или нескольких дат для исключения из рабочего календаря, такие как состояние и Федеральное праздников и государственные праздники. Список может быть либо диапазон ячеек, содержащих даты или массив числовые форматы, представляющие даты.</param>
        <summary>Возвращает число рабочих дней между нач_дата и кон_дата. Рабочими днями не выходные дни и дни, определенные в выходные дни. Использование <b>ЧИСТРАБДНИ</b> для вычисления работника на основании количество дней, в тесном в указанный период.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Важно</b>: ввода дат с помощью функции Дата или как результат других формул и функций. Например следует используйте Дата(2008;5;23) для 23-мая 2008 г. Если даты вводятся как текст, могут возникнуть проблемы.</para>
          <para>Microsoft Excel хранит даты как целые числа, поэтому они могут использоваться в расчетах. По умолчанию 1 января 1900 — серийный номер 1, а 1 января 2008 — номер 39448, так как интервал в днях 1 января 1900. Microsoft Excel для Macintosh использует другую систему дат по умолчанию. </para>
          <para>Если все аргументы, не является допустимой датой, <b>функция ЧИСТРАБДНИ</b> возвращает #VALUE! значение ошибки.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NetworkDays_Intl">
      <MemberSignature Language="C#" Value="public double NetworkDays_Intl (object Arg1, object Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 NetworkDays_Intl([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.NetworkDays_Intl(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function NetworkDays_Intl (Arg1 As Object, Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16904)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Нач_дата - дату начала, для которого повторное вычисление разницы. Начальной может быть более ранней, чем же, как или более поздней, чем конечной.</param>
        <param name="Arg2">Кон_дата — дата окончания, для которого вычислить различие. Начальной может быть более ранней, чем же, как или более поздней, чем конечной.</param>
        <param name="Arg3">Выходные - указывает дни недели, выходные дни и не включаются в число рабочих дней между нач_дата и кон_дата. Выходные — выходные номер или строка, указывающая, выходные дни.</param>
        <param name="Arg4">Праздники — необязательный список из одной или нескольких дат, которые следует исключить из календаря рабочего дня. Праздники — диапазон ячеек, содержащих даты или массив из последовательных значений, которые представляют эти даты. Порядок использования дат или последовательных значений в выходные дни может быть произвольным.</param>
        <summary>Возвращает количество полных рабочих дней между двумя датами, с помощью параметров, чтобы указать, какие и сколько дней — выходные дни. Выходные дни и любые дней, указанных как праздники не рассматриваются как рабочие дни.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если нач_дата является более поздней, чем кон_дата, возвращаемое значение будет отрицательным и величина будет число полных рабочих дней. </para>
          <para>Если нач_дата находится вне диапазона для базового значения текущей даты, <b>NetworkDays_Intl</b> возвращает #NUM! значение ошибки. </para>
          <para>Если кон_дата находится вне диапазона для базового значения текущей даты, <b>NetworkDays_Intl</b> возвращает #NUM! значение ошибки. </para>
          <para>Если строка выходные принадлежит Недопустимая длина или содержит недопустимые символы, <b>NetworkDays_Intl</b> возвращает #VALUE! значение ошибки.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Nominal">
      <MemberSignature Language="C#" Value="public double Nominal (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Nominal([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Nominal(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Nominal (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Nominal(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16829)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Эффект_ставка - эффективных процентной ставки.</param>
        <param name="Arg2">Кпер_год - число периодов в год.</param>
        <summary>Возвращает номинальный годовой процент, присвоенное эффективная ставка и число периодов в год.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Аргумент Периодов_в_году усекается до целого числа. </para>
          <para>Если аргумент не является числом, <b>номинальный</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если фактическая_ставка 0 или если кпер_год &lt; 1, <b>номинальный</b> возвращает #NUM! значение ошибки. </para>
          <para>
            <b>Номинальный</b> связана с <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Effect(System.Object,System.Object)" /> как показано в следующей формулы: </para>
          <para>На рисунке 1: формула</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Norm_Dist">
      <MemberSignature Language="C#" Value="public double Norm_Dist (double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Norm_Dist([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]bool Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Norm_Dist(System.Double,System.Double,System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Norm_Dist (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Norm_Dist(double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16883)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Arg1">X — значение, для которого вы хотите распределения.</param>
        <param name="Arg2">Среднее - геометрического распределения.</param>
        <param name="Arg3">Стандартного отклонения - стандартное отклонение распределения.</param>
        <param name="Arg4">Накопительный пакет — логическое значение, определяющее форму функции. Если накопительный пакет имеет <b>значение true</b>, <b>Norm_Dist</b> возвращает расчета интегральной функции распределения; Если <b>значение false</b>, то возвращается весовая функция распределения.</param>
        <summary>Возвращает нормальное распределение для указанного среднего и стандартного отклонения. Эта функция имеет большое число приложений в статистике, включая проверку гипотез.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если среднее или стандартное_откл не является числом, <b>Norm_Dist</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если стандартное_откл ≤ 0, <b>Norm_Dist</b> возвращает #NUM! значение ошибки. </para>
          <para>Если среднее = 0, стандартное_откл = 1 и накопительным = <b>true</b>, <b>Norm_Dist</b> возвращает стандартное нормальное интегральное распределение <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Norm_S_Dist(System.Double,System.Boolean)" />. </para>
          <para>Формула для расчета функции нормального распределения (накопительным = <b>false</b>) — это: </para>
          <para>На рисунке 1: Формула для расчета функции нормального распределения</para>
          <para></para>
          <para></para>
          <para>Когда интегральное = <b>true</b>, результатом является интеграл с отрицательным infinity для x от заданного выражения.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Norm_Inv">
      <MemberSignature Language="C#" Value="public double Norm_Inv (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Norm_Inv([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Norm_Inv(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Norm_Inv (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Norm_Inv(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16884)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Вероятность — вероятность, соответствующая нормального распределения.</param>
        <param name="Arg2">Среднее - геометрического распределения.</param>
        <param name="Arg3">Стандартного отклонения - стандартное отклонение распределения.</param>
        <summary>Возвращает обратное нормального распределения для указанного среднего и стандартного отклонения.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если все аргументы, не являющийся числовым, <b>Norm_Inv</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если вероятность &lt;= 0 или, если вероятность &gt;= 1, возвращает <b>Norm_Inv</b> #NUM! значение ошибки. </para>
          <para>Если стандартное_откл ≤ 0, <b>Norm_Inv</b> возвращает #NUM! значение ошибки. </para>
          <para>Если среднее = 0 и стандартное_откл = 1, <b>Norm_Inv</b> использует стандартное нормальное интегральное распределение (просмотреть <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Norm_S_Inv(System.Double)" />).</para>
          <para>Задано значение вероятности, <b>Norm_Inv</b> ищет значение x, NORM_DIST (x, среднее, стандартное_откл, ИСТИНА) = вероятность. Таким образом, точность <b>Norm_Inv</b> зависит от точности типа <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Norm_Dist(System.Double,System.Double,System.Double,System.Boolean)" />.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Norm_S_Dist">
      <MemberSignature Language="C#" Value="public double Norm_S_Dist (double Arg1, bool Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Norm_S_Dist([in]float64 Arg1, [in]bool Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Norm_S_Dist(System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Norm_S_Dist (Arg1 As Double, Arg2 As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Norm_S_Dist(double Arg1, bool Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16923)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Arg1">Z - значение, для которого вы хотите распределения.</param>
        <param name="Arg2">Накопительный пакет — логическое значение, определяющее форму функции. Если накопительный пакет имеет <b>значение true</b>, <b>Norm_S_Dist</b> возвращает расчета интегральной функции распределения; Если <b>значение false</b>, то возвращается весовая функция распределения.</param>
        <summary>Возвращает функцию стандартного нормального распределения. Среднее значение 0 (ноль) и стандартное отклонение одного из распределения. Использование этой функции вместо таблицы для стандартной нормальной кривой.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если я не являющийся числовым, <b>Norm_S_Dist</b> возвращает #VALUE! значение ошибки. </para>
          <para>Формула для расчета функции стандартного нормального распределения — это: </para>
          <para>На рисунке 1: Формула для расчета функции стандартного нормального распределения</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Norm_S_Inv">
      <MemberSignature Language="C#" Value="public double Norm_S_Inv (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Norm_S_Inv([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Norm_S_Inv(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Norm_S_Inv (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Norm_S_Inv(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16924)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Вероятность — вероятность, соответствующая нормального распределения.</param>
        <summary>Возвращает обратное стандартное нормальное интегральное распределение. Среднее значение 0 (ноль) и стандартное отклонение одного из распределения.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если вероятность не являющийся числовым, <b>Norm_S_Inv</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если вероятность &lt; 0 или, если вероятность &gt; 1, <b>Norm_S_Inv</b> возвращает #NUM! значение ошибки.</para>
          <para>Задано значение вероятности, <b>Norm_S_Inv</b> ищет значение z таких, NORM_S_DIST(z) = вероятность. Таким образом, точность <b>Norm_S_Inv</b>зависит от точности типа <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Norm_S_Dist(System.Double,System.Boolean)" />. <b>Norm_S_Inv</b> использует метод последовательного поиска. Если поиск не завершено после 100 итераций, функция возвращает значение ошибки # н/д.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NormDist">
      <MemberSignature Language="C#" Value="public double NormDist (double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 NormDist([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]bool Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.NormDist(System.Double,System.Double,System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function NormDist (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double NormDist(double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16677)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Arg1">X — значение, для которого вы хотите распределения.</param>
        <param name="Arg2">Среднее - геометрического распределения.</param>
        <param name="Arg3">Стандартного отклонения - стандартное отклонение распределения.</param>
        <param name="Arg4">Накопительный пакет — логическое значение, определяющее форму функции. Если накопительный пакет имеет <b>значение true</b>, <b>НОРМРАСП</b> возвращает расчета интегральной функции распределения; Если <b>значение false</b>, то возвращается весовая функция распределения.</param>
        <summary>Возвращает нормальное распределение для указанного среднего и стандартного отклонения. Эта функция имеет очень большое число приложений в статистике, включая проверку гипотез.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Внимание!</b>: Эта функция была заменена один или несколько новых функций, который может предоставлять улучшенные точность и лучше, имена которых отражают их использования. Эта функция по-прежнему доступна для обеспечения совместимости с предыдущими версиями Excel. Тем не менее если обратной совместимости не требуется, можно теперь с помощью новых функций, так как они более точно описывает их функциональных возможностей. Дополнительные сведения о новой функции можно <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Norm_Dist(System.Double,System.Double,System.Double,System.Boolean)" /> метод.</para>
          <para>Если среднее или стандартное_откл не является числом, <b>НОРМРАСП</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если стандартное_откл ≤ 0, <b>то функция НОРМРАСП</b> возвращает #NUM! значение ошибки. </para>
          <para>Если среднее = 0, стандартное_откл = 1 и накопительным = <b>true</b>, <b>НОРМРАСП</b> возвращает стандартное нормальное интегральное распределение <b>НОРМРАСП</b>. </para>
          <para>Формула для расчета функции нормального распределения (накопительным = <b>false</b>) — это: </para>
          <para>На рисунке 1: Формула для расчета функции нормального распределения</para>
          <para></para>
          <para></para>
          <para>Когда интегральное = <b>true</b>, результатом является интеграл с отрицательным infinity для x от заданного выражения.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NormInv">
      <MemberSignature Language="C#" Value="public double NormInv (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 NormInv([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.NormInv(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function NormInv (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double NormInv(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16679)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Вероятность — вероятность, соответствующая нормального распределения.</param>
        <param name="Arg2">Среднее - геометрического распределения.</param>
        <param name="Arg3">Стандартного отклонения - стандартное отклонение распределения.</param>
        <summary>Возвращает обратное нормального распределения для указанного среднего и стандартного отклонения.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Внимание!</b>: Эта функция была заменена один или несколько новых функций, который может предоставлять улучшенные точность и лучше, имена которых отражают их использования. Эта функция по-прежнему доступна для обеспечения совместимости с предыдущими версиями Excel. Тем не менее если обратной совместимости не требуется, можно теперь с помощью новых функций, так как они более точно описывает их функциональных возможностей. Дополнительные сведения о новой функции можно <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Norm_Inv(System.Double,System.Double,System.Double)" /> метод.</para>
          <para>Если аргумент не является числом, <b>НОРМОБР</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если вероятность &lt; 0 или, если вероятность &gt; 1, <b>НОРМОБР</b> возвращает #NUM! значение ошибки. </para>
          <para>Если стандартное_откл ≤ 0, <b>НОРМОБР</b> возвращает #NUM! значение ошибки. </para>
          <para>Если среднее = 0 и стандартное_откл = 1, <b>НОРМОБР</b> использует стандартное нормальное интегральное распределение (просмотреть <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.NormSInv(System.Double)" />). </para>
          <para>Задано значение вероятности, <b>НОРМОБР</b> ищет значение x, НОРМРАСП (x, среднее, стандартное_откл, ИСТИНА) = вероятность. Таким образом, точности <b>НОРМОБР</b> зависит от точности типа <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.NormDist(System.Double,System.Double,System.Double,System.Boolean)" />. <b>НОРМОБР</b> использует метод последовательного поиска. Если поиск не завершено после 100 итераций, функция возвращает значение ошибки # н/д.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NormSDist">
      <MemberSignature Language="C#" Value="public double NormSDist (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 NormSDist([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.NormSDist(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function NormSDist (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double NormSDist(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16678)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Z - значение, для которого вы хотите распределения.</param>
        <summary>Возвращает функцию стандартного нормального распределения. Среднее значение 0 (ноль) и стандартное отклонение одного из распределения. Использование этой функции вместо таблицы для стандартной нормальной кривой.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Внимание!</b>: Эта функция была заменена один или несколько новых функций, который может предоставлять улучшенные точность и лучше, имена которых отражают их использования. Эта функция по-прежнему доступна для обеспечения совместимости с предыдущими версиями Excel. Тем не менее если обратной совместимости не требуется, можно теперь с помощью новых функций, так как они более точно описывает их функциональных возможностей. Дополнительные сведения о новой функции можно <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Norm_S_Dist(System.Double,System.Boolean)" /> метод.</para>
          <para>Если z не является числом, <b>НОРМСТРАСП</b> возвращает #VALUE! значение ошибки. </para>
          <para>Формула для расчета функции стандартного нормального распределения — это: </para>
          <para>На рисунке 1: Формула для расчета функции стандартного нормального распределения</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NormSInv">
      <MemberSignature Language="C#" Value="public double NormSInv (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 NormSInv([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.NormSInv(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function NormSInv (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double NormSInv(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16680)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Вероятность — вероятность, соответствующая нормального распределения.</param>
        <summary>Возвращает обратное стандартное нормальное интегральное распределение. Распределение имеет среднее равное нулю и стандартное отклонение одного.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Внимание!</b>: Эта функция была заменена один или несколько новых функций, который может предоставлять улучшенные точность и лучше, имена которых отражают их использования. Эта функция по-прежнему доступна для обеспечения совместимости с предыдущими версиями Excel. Тем не менее если обратной совместимости не требуется, можно теперь с помощью новых функций, так как они более точно описывает их функциональных возможностей. Дополнительные сведения о новой функции можно <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Norm_S_Inv(System.Double)" /> метод.</para>
          <para>Если вероятность не является числом, <b>НОРМСТОБР</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если вероятность &lt;= 0 или, если вероятность &gt;= 1, возвращает <b>НОРМСТОБР</b> #NUM! значение ошибки.</para>
          <para>Задано значение вероятности, <b>НОРМСТОБР</b> ищет значение z такие, как НОРМСТРАСП(z) = вероятность. Таким образом, точности <b>НОРМСТОБР</b> зависит от точности типа <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.NormSDist(System.Double)" />.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NPer">
      <MemberSignature Language="C#" Value="public double NPer (double Arg1, double Arg2, double Arg3, object Arg4, object Arg5);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 NPer([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]object Arg4, [in]object Arg5) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.NPer(System.Double,System.Double,System.Double,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function NPer (Arg1 As Double, Arg2 As Double, Arg3 As Double, Optional Arg4 As Object, Optional Arg5 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16442)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Частота - процентную ставку за период.</param>
        <param name="Arg2">Pmt - платеж каждый период; его нельзя изменить на протяжении всего периода выплат. Как правило, pmt участника и процент, но не содержит других сборов или налоги.</param>
        <param name="Arg3">PV - текущая стоимость или общая сумма всех будущих платежей с стоит на данный момент.</param>
        <param name="Arg4">БЗ - будущего значения или баланс денежных средств, который нужно достичь после последней выплаты. Если аргумент опущен, то предполагается, что оно является 0 (например, будущее значение ссуды, равно 0).</param>
        <param name="Arg5">Тип — число 0 или 1, обозначающее, когда срок выполнения.</param>
        <summary>Возвращает число периодов для инвестиции на основе периодических постоянных выплат и постоянной процентной ставки.</summary>
        <returns>To be added.</returns>
        <remarks>
          <list type="table">
            <item>
              <term>0 или опущен</term>
              <description>В конце периода</description>
            </item>
            <item>
              <term>1</term>
              <description>С начала периода</description>
            </item>
          </list>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Npv">
      <MemberSignature Language="C#" Value="public double Npv (double Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Npv([in]float64 Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Npv(System.Double,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Npv (Arg1 As Double, Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16395)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Частота - учетная ставка за один период.</param>
        <param name="Arg2">Значение1, значение2,... - 1 до 29 аргументов, представляющих расходы и доходы.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Вычисляет Чистая приведенная стоимость инвестиций, используя скидки, серии будущих выплат (отрицательные значения) и поступлений (положительные значения).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Значение1, значение2,... необходимо равномерно распределены времени и находиться в конце каждого периода. </para>
          <para>
            <b>NPV</b> использует порядок значение1, значение2,... интерпретирует порядок движение денежных средств. Убедитесь, что платежи и поступления введены в правильном порядке. </para>
          <para>Аргументы, которые являются числами, пустые ячейки, логические значения или текстовыми представлениями чисел, учитываются; аргументы, которые являются значениями ошибки или текст, который не может быть преобразован в числа, игнорируются. </para>
          <para>Если аргумент является массив или ссылка, учитываются только числа в этом массив или ссылку. Пустые ячейки, логические значения, текст или значения ошибок в массиве или ссылке игнорируются.</para>
          <para>Инвестиции <b>Npv</b> начинаются за один период до даты значение1 и заканчивается с последней движения денежных средств в списке. Расчета <b>чистой текущей стоимости</b> основано на будущих движение денежных средств. В случае вашего первого движения денежных средств в начале первого периода, первое значение необходимо добавить к результату <b>Npv</b> , не включены в список аргументов. Для получения дополнительных сведений см. </para>
          <para>При n — это число движение денежных средств в список значений, формула <b>Npv</b> используется: </para>
          <para>На рисунке 1: Формула для расчета метода Npv</para>
          <para></para>
          <para></para>
          <para>Аналогичен 
            <b>NPV</b><see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Pv(System.Double,System.Double,System.Double,System.Object,System.Object)" /> функции (текущее значение). — Это основное различие между Этими <b>функциями</b> , <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Pv(System.Double,System.Double,System.Double,System.Object,System.Object)" /> позволяет движение денежных средств для начала в конце или в начале периода. В отличие от переменных значений денежных <b>Npv</b><see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Pv(System.Double,System.Double,System.Double,System.Object,System.Object)" /> движение денежных средств должен быть постоянной в течение инвестиций. Сведения о рента и финансовые функции можно <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Pv(System.Double,System.Double,System.Double,System.Object,System.Object)" />. </para>
          <para>
            <b>NPV</b> также связанные с <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Irr(System.Object,System.Object)" /> функции (внутреннюю норму прибыли). <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Irr(System.Object,System.Object)" />— это ставка, для которого <b>Npv</b> равняется нулю: ЧПС(ВСД(...)) = 0.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberValue">
      <MemberSignature Language="C#" Value="public double NumberValue (string Arg1, string Arg2, string Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 NumberValue([in]string Arg1, [in]string Arg2, [in]string Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.NumberValue(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function NumberValue (Arg1 As String, Arg2 As String, Arg3 As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double NumberValue(System::String ^ Arg1, System::String ^ Arg2, System::String ^ Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16969)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
        <Parameter Name="Arg2" Type="System.String" />
        <Parameter Name="Arg3" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Arg1">Строка, представляющая номер, которое требуется преобразовать.</param>
        <param name="Arg2">Знак, используемый в качестве десятичного разделителя в строке.</param>
        <param name="Arg3">Знак, используемый в качестве разделителя группы в строке.</param>
        <summary>Преобразует текст в виде зависящего от языкового стандарта.</summary>
        <returns>
          <b>ДАННЫЕ ТИПА DOUBLE</b>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Oct2Bin">
      <MemberSignature Language="C#" Value="public string Oct2Bin (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Oct2Bin([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Oct2Bin(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Oct2Bin (Arg1 As Object, Optional Arg2 As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16774)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Номер - восьмеричном формате номер, который требуется преобразовать. Число не должно содержать более 10 символов. Старший бит числа является знаков. Остальные 29 бит — бит величины. Отрицательные числа, представленные в дополнительном формате.</param>
        <param name="Arg2">Окружение - число символов для использования. Если опущен местах, <b>Oct2Bin</b> использует минимальное необходимое количество знаков. Местах полезен для заполнения возвращаемое значение с начальные нули.</param>
        <summary>Преобразует восьмеричном формате номер двоичного файла.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если число отрицательно, <b>Oct2Bin</b> игнорирует местах и возвращает двоичное число 10 символов. </para>
          <para>Если номер является отрицательным, оно не может быть меньше, чем 7777777000, а если номер является положительным, не может быть больше, чем 777. </para>
          <para>Если число не является допустимым числом восьмеричном формате, <b>Oct2Bin</b> возвращает #NUM! значение ошибки. </para>
          <para>Если <b>Oct2Bin</b> требуется большее число помещает символов, она возвращает #NUM! значение ошибки. </para>
          <para>Если местах не является целым числом, оно сокращается. </para>
          <para>Если аргумент является местах, <b>Oct2Bin</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если отрицательно местах, <b>Oct2Bin</b> возвращает #NUM! значение ошибки.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Oct2Dec">
      <MemberSignature Language="C#" Value="public string Oct2Dec (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Oct2Dec([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Oct2Dec(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Oct2Dec (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Oct2Dec(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16776)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Номер - восьмеричном формате номер, который требуется преобразовать. Число не должно содержать более 10 знаков в восьмеричном формате (30 бит). Старший бит числа является знаков. Остальные 29 бит — бит величины. Отрицательные числа, представленные в дополнительном формате.</param>
        <summary>Преобразует восьмеричном формате число знаков после запятой.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если число не является допустимым числом восьмеричном формате, <b>Oct2Dec</b> возвращает #NUM! значение ошибки.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Oct2Hex">
      <MemberSignature Language="C#" Value="public string Oct2Hex (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Oct2Hex([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Oct2Hex(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Oct2Hex (Arg1 As Object, Optional Arg2 As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16775)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Номер - восьмеричном формате номер, который требуется преобразовать. Число не должно содержать более 10 знаков в восьмеричном формате (30 бит). Старший бит числа является знаков. Остальные 29 бит — бит величины. Отрицательные числа, представленные в дополнительном формате.</param>
        <param name="Arg2">Окружение - число символов для использования. Если опущен местах, <b>Oct2Hex</b> использует минимальное необходимое количество знаков. Местах полезен для заполнения возвращаемое значение с начальные нули.</param>
        <summary>Преобразование восьмеричном формате числа в шестнадцатеричном представлении.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если число отрицательно, <b>Oct2Hex</b> игнорирует местах и возвращает 10-разрядное шестнадцатеричное число. </para>
          <para>Если число не является допустимым числом восьмеричном формате, <b>Oct2Hex</b> возвращает #NUM! значение ошибки. </para>
          <para>Если <b>Oct2Hex</b> требуется большее число помещает символов, она возвращает #NUM! значение ошибки. </para>
          <para>Если местах не является целым числом, оно сокращается. </para>
          <para>Если аргумент является местах, <b>Oct2Hex</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если отрицательно местах, <b>Oct2Hex</b> возвращает #NUM! значение ошибки.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Odd">
      <MemberSignature Language="C#" Value="public double Odd (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Odd([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Odd(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Odd (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Odd(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16682)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число — значение для округления.</param>
        <summary>Возвращает число, округленное до ближайшего большего целого числа нечетной.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если номер является числом, <b>нечетной</b> возвращает #VALUE! значение ошибки. </para>
          <para>Независимо от знака числа, оно будет округлено после адаптации от нуля. Если номер является нечетным целым числом, то округления не производится.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OddFPrice">
      <MemberSignature Language="C#" Value="public double OddFPrice (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 OddFPrice([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.OddFPrice(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function OddFPrice (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Arg5 As Object, Arg6 As Object, Arg7 As Object, Arg8 As Object, Optional Arg9 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16846)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Сопоставление - Дата сопоставления безопасности. Дата сопоставления безопасности — это дата после даты выпуска, если передается безопасности покупателю.</param>
        <param name="Arg2">Роста - срока. Соответствует дата истечения срока действия безопасности.</param>
        <param name="Arg3">Проблема — Дата выпуска ценных бумаг.</param>
        <param name="Arg4">Первый_купон — Дата первый купон безопасности.</param>
        <param name="Arg5">Частота - безопасности процентной ставки.</param>
        <param name="Arg6">Доход — годовой доход по ценным бумагам.</param>
        <param name="Arg7">Погашения - ценных погашения за лицевой значение 100 долларов США.</param>
        <param name="Arg8">Частота — количество выплат купон в год. Для ежегодных выплат частота = 1; для полугодовых выплат периодичность = 2; для квартальное, частота = 4.</param>
        <param name="Arg9">Основы - способ вычисления дня.</param>
        <summary>Возвращает цену за 100 долларов США значение лицевой ценных нерегулярным (коротким или длинным) первым периода времени.</summary>
        <returns>To be added.</returns>
        <remarks>
          <list type="table">
            <item>
              <term>0 или опущен</term>
              <description>"МНЕ НРАВИТСЯ" (NASD) 30/360</description>
            </item>
            <item>
              <term>1</term>
              <description>Фактический</description>
            </item>
            <item>
              <term>2</term>
              <description>Фактический/360</description>
            </item>
            <item>
              <term>3</term>
              <description>Фактический/365</description>
            </item>
            <item>
              <term>4</term>
              <description>Европейский 30/360</description>
            </item>
          </list>
          <para>Microsoft Excel хранит даты как целые числа, поэтому они могут использоваться в расчетах. По умолчанию 1 января 1900 — серийный номер 1, а 1 января 2008 — номер 39448, так как интервал в днях 1 января 1900. Microsoft Excel для Macintosh использует другую систему дат по умолчанию. </para>
          <para>Дата соглашения — это дата продажи покупателю купон, такие как действия. Срок платежа — это дата истечения срока действия купон. Предположим, например, сроком действия 30 лет выпущена 1 января 2008 года и приобретена покупателем через шесть месяцев после. Дата выпуска будет являться 1 января 2008, Дата соглашения равен 1 июля 2008 г., и срок погашения будет равен 1 января 2038, который — 30 лет после даты выпуска 1 января 2008 года. </para>
          <para>Сопоставления, роста, проблема, первый_купон и основы усекаются до целых. </para>
          <para>Если сопоставления, роста, проблема или первый_купон не является допустимой датой, <b>то функция ЦЕНАПЕРВНЕРЕГ</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если частота &lt; 0 или, если доход &lt; 0, <b>то функция ЦЕНАПЕРВНЕРЕГ</b> возвращает #NUM! значение ошибки. </para>
          <para>Если основа &lt; 0 или, если основа &gt; 4, <b>то функция ЦЕНАПЕРВНЕРЕГ</b> возвращает #NUM! значение ошибки. </para>
          <para>Должны быть выполнены следующие условия; в противном случае <b>ЦЕНАПЕРВНЕРЕГ</b> возвращает #NUM! значение ошибки: </para>
          <para>роста &gt; первый_купон &gt; сопоставления &gt; проблемы</para>
          <para></para>
          <para>
            <b>ЦЕНАПЕРВНЕРЕГ</b> вычисляется следующим образом: нерегулярный короткий первый купон:</para>
          <para>На рисунке 1: Нерегулярный короткий первый купон</para>
          <para></para>
          <para></para>
          <para>где:</para>
          <para>A = количество дней от начала периода купон до даты соглашения (начисления дней).</para>
          <para>DSC = количество дней до даты следующего купон из сопоставления.</para>
          <para>DFC = количество дней от начала нерегулярный первый купон первый купон дате.</para>
          <para>E = количество дней в периоде купон.</para>
          <para>N = число купонов между датой соглашения и датой погашения. (Если это число содержит часть, она вызывается до следующего целого числа.)</para>
          <para>Нерегулярный длинный первый купон:</para>
          <para>На рисунке 2: Нерегулярный длинный первый купон</para>
          <para></para>
          <para></para>
          <para>где:</para>
          <para>AI = количество дней от начала i-го или последнего квазикупонного периода в нерегулярный период.</para>
          <para>DCi = количество дней от указанной даты (или даты выпуска) первый купон реализация (i = 1) или количество дней в квазикупонного (я = 2,..., i = контекст Именования).</para>
          <para>DSC = количество дней до даты следующего купон из сопоставления.</para>
          <para>E = количество дней в купон периода.</para>
          <para>N = число купонов между первый купон реальных даты и даты погашения. (Если это число содержит часть, она вызывается до следующего целого числа.)</para>
          <para>Контекст Именования = число квазикупонных периодов, которые соответствуют в нерегулярный период. (Если это число содержит часть, она вызывается до следующего целого числа.)</para>
          <para>NLi = нормальная продолжительность в днях полного i-го или последнего квазикупонного периода в нерегулярный период.</para>
          <para>Nq = количество полных периодов квазикупонов между датой соглашения и первый купон.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OddFYield">
      <MemberSignature Language="C#" Value="public double OddFYield (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 OddFYield([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.OddFYield(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function OddFYield (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Arg5 As Object, Arg6 As Object, Arg7 As Object, Arg8 As Object, Optional Arg9 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16847)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Сопоставление - Дата сопоставления безопасности. Дата сопоставления безопасности — это дата после даты выпуска, если передается безопасности покупателю.</param>
        <param name="Arg2">Роста - срока. Соответствует дата истечения срока действия безопасности.</param>
        <param name="Arg3">Проблема — Дата выпуска ценных бумаг.</param>
        <param name="Arg4">Первый_купон — Дата первый купон безопасности.</param>
        <param name="Arg5">Частота - безопасности процентной ставки.</param>
        <param name="Arg6">Цена — это цена ценных бумаг.</param>
        <param name="Arg7">Погашения - ценных погашения за лицевой значение 100 долларов США.</param>
        <param name="Arg8">Частота — количество выплат купон в год. Для ежегодных выплат частота = 1; для полугодовых выплат периодичность = 2; для квартальное, частота = 4.</param>
        <param name="Arg9">Основы - способ вычисления дня.</param>
        <summary>Возвращает доход по ценным бумагам с нерегулярным (коротким или длинным) первым периода времени.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Важно</b>: ввода дат с помощью функции Дата или как результат других формул и функций. Например следует используйте Дата(2008;5;23) для 23-мая 2008 г. Если даты вводятся как текст, могут возникнуть проблемы.</para>
          <list type="table">
            <item>
              <term>0 или опущен</term>
              <description>"МНЕ НРАВИТСЯ" (NASD) 30/360</description>
            </item>
            <item>
              <term>1</term>
              <description>Фактический</description>
            </item>
            <item>
              <term>2</term>
              <description>Фактический/360</description>
            </item>
            <item>
              <term>3</term>
              <description>Фактический/365</description>
            </item>
            <item>
              <term>4</term>
              <description>Европейский 30/360</description>
            </item>
          </list>
          <para>Microsoft Excel хранит даты как целые числа, поэтому они могут использоваться в расчетах. По умолчанию 1 января 1900 — серийный номер 1, а 1 января 2008 — номер 39448, так как интервал в днях 1 января 1900. Microsoft Excel для Macintosh использует другую систему дат по умолчанию. </para>
          <para>Дата соглашения — это дата продажи покупателю купон, такие как действия. Срок платежа — это дата истечения срока действия купон. Предположим, например, сроком действия 30 лет выпущена 1 января 2008 года и приобретена покупателем через шесть месяцев после. Дата выпуска будет являться 1 января 2008, Дата соглашения равен 1 июля 2008 г., и срок погашения будет равен 1 января 2038, который — 30 лет после даты выпуска 1 января 2008 года. </para>
          <para>Сопоставления, роста, проблема, первый_купон и основы усекаются до целых. </para>
          <para>Если сопоставления, роста, проблема или первый_купон не является допустимой датой, <b>то функция ДОХОДПЕРВНЕРЕГ</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если частота &lt; 0 или цена ≤ 0, <b>то функция ДОХОДПЕРВНЕРЕГ</b> возвращает #NUM! значение ошибки. </para>
          <para>Если основа &lt; 0 или, если основа &gt; 4, <b>то функция ДОХОДПЕРВНЕРЕГ</b> возвращает #NUM! значение ошибки. </para>
          <para>Должны быть выполнены следующие условия; в противном случае <b>ДОХОДПЕРВНЕРЕГ</b> возвращает #NUM! значение ошибки: </para>
          <para>роста &gt; первый_купон &gt; сопоставления &gt; проблемы</para>
          <para>Excel использует метод итераций для вычисления <b>ДОХОДПЕРВНЕРЕГ</b>. Эта функция используется метод Ньютона на основе формулы, функции <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.OddFPrice(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />. Доход меняется до 100 итераций, пока вычисляемая цена для заданного дохода приближается к завершению цену. Просмотреть <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.OddFPrice(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> для формулы, <b>ДОХОДПЕРВНЕРЕГ</b> .</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OddLPrice">
      <MemberSignature Language="C#" Value="public double OddLPrice (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 OddLPrice([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.OddLPrice(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function OddLPrice (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Arg5 As Object, Arg6 As Object, Arg7 As Object, Optional Arg8 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16844)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Сопоставление - Дата сопоставления безопасности. Дата сопоставления безопасности — это дата после даты выпуска, если передается безопасности покупателю.</param>
        <param name="Arg2">Роста - срока. Соответствует дата истечения срока действия безопасности.</param>
        <param name="Arg3">Последняя_выплата — дата последнего купон безопасности.</param>
        <param name="Arg4">Частота - безопасности процентной ставки.</param>
        <param name="Arg5">Доход — годовой доход по ценным бумагам.</param>
        <param name="Arg6">Погашения - ценных погашения за лицевой значение 100 долларов США.</param>
        <param name="Arg7">Частота — количество выплат купон в год. Для ежегодных выплат частота = 1; для полугодовых выплат периодичность = 2; для квартальное, частота = 4.</param>
        <param name="Arg8">Основы - способ вычисления дня.</param>
        <summary>Возвращает цену за 100 долларов США значение лицевой ценных нерегулярным (коротким или длинным) последним купон периода.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Важно</b>: ввода дат с помощью функции Дата или как результат других формул и функций. Например следует используйте Дата(2008;5;23) для 23-мая 2008 г. Если даты вводятся как текст, могут возникнуть проблемы.</para>
          <list type="table">
            <item>
              <term>0 или опущен</term>
              <description>"МНЕ НРАВИТСЯ" (NASD) 30/360</description>
            </item>
            <item>
              <term>1</term>
              <description>Фактический</description>
            </item>
            <item>
              <term>2</term>
              <description>Фактический/360</description>
            </item>
            <item>
              <term>3</term>
              <description>Фактический/365</description>
            </item>
            <item>
              <term>4</term>
              <description>Европейский 30/360</description>
            </item>
          </list>
          <para>Microsoft Excel хранит даты как целые числа, поэтому они могут использоваться в расчетах. По умолчанию 1 января 1900 — серийный номер 1, а 1 января 2008 — номер 39448, так как интервал в днях 1 января 1900. Microsoft Excel для Macintosh использует другую систему дат по умолчанию. </para>
          <para>Дата соглашения — это дата продажи покупателю купон, такие как действия. Срок платежа — это дата истечения срока действия купон. Предположим, например, сроком действия 30 лет выпущена 1 января 2008 года и приобретена покупателем через шесть месяцев после. Дата выпуска будет являться 1 января 2008, Дата соглашения равен 1 июля 2008 г., и срок погашения будет равен 1 января 2038, который — 30 лет после даты выпуска 1 января 2008 года. </para>
          <para>Сопоставления, роста, последняя_выплата и основы усекаются до целых. </para>
          <para>Если сопоставления, роста или последняя_выплата не является допустимой датой, <b>то функция ЦЕНАПОСЛНЕРЕГ</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если частота &lt; 0 или, если доход &lt; 0, <b>то функция ЦЕНАПОСЛНЕРЕГ</b> возвращает #NUM! значение ошибки. </para>
          <para>Если основа &lt; 0 или, если основа &gt; 4, <b>то функция ЦЕНАПОСЛНЕРЕГ</b> возвращает #NUM! значение ошибки. </para>
          <para>Должны быть выполнены следующие условия; в противном случае — <b>то функция ЦЕНАПОСЛНЕРЕГ</b> возвращает #NUM! значение ошибки: </para>
          <para>роста &gt; сопоставления &gt; последняя_выплата</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OddLYield">
      <MemberSignature Language="C#" Value="public double OddLYield (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 OddLYield([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.OddLYield(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function OddLYield (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Arg5 As Object, Arg6 As Object, Arg7 As Object, Optional Arg8 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16845)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Сопоставление - Дата сопоставления безопасности. Дата сопоставления безопасности — это дата после даты выпуска, если передается безопасности покупателю.</param>
        <param name="Arg2">Роста - срока. Соответствует дата истечения срока действия безопасности.</param>
        <param name="Arg3">Последняя_выплата — дата последнего купон безопасности.</param>
        <param name="Arg4">Частота - безопасности процентной ставки.</param>
        <param name="Arg5">Цена — это цена ценных бумаг.</param>
        <param name="Arg6">Погашения - ценных погашения за лицевой значение 100 долларов США.</param>
        <param name="Arg7">Частота — количество выплат купон в год. Для ежегодных выплат частота = 1; для полугодовых выплат периодичность = 2; для квартальное, частота = 4.</param>
        <param name="Arg8">Основы - способ вычисления дня.</param>
        <summary>Возвращает доход по ценным бумагам с нерегулярным (коротким или длинным) последним периода времени.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Важно</b>: ввода дат с помощью функции Дата или как результат других формул и функций. Например следует используйте Дата(2008;5;23) для 23-мая 2008 г. Если даты вводятся как текст, могут возникнуть проблемы.</para>
          <list type="table">
            <item>
              <term>0 или опущен</term>
              <description>"МНЕ НРАВИТСЯ" (NASD) 30/360</description>
            </item>
            <item>
              <term>1</term>
              <description>Фактический</description>
            </item>
            <item>
              <term>2</term>
              <description>Фактический/360</description>
            </item>
            <item>
              <term>3</term>
              <description>Фактический/365</description>
            </item>
            <item>
              <term>4</term>
              <description>Европейский 30/360</description>
            </item>
          </list>
          <para>Microsoft Excel хранит даты как целые числа, поэтому они могут использоваться в расчетах. По умолчанию 1 января 1900 — серийный номер 1, а 1 января 2008 — номер 39448, так как интервал в днях 1 января 1900. Microsoft Excel для Macintosh использует другую систему дат по умолчанию. </para>
          <para>Дата соглашения — это дата продажи покупателю купон, такие как действия. Срок платежа — это дата истечения срока действия купон. Предположим, например, сроком действия 30 лет выпущена 1 января 2008 года и приобретена покупателем через шесть месяцев после. Дата выпуска будет являться 1 января 2008, Дата соглашения равен 1 июля 2008 г., и срок погашения будет равен 1 января 2038, который — 30 лет после даты выпуска 1 января 2008 года. </para>
          <para>Сопоставления, роста, последняя_выплата и основы усекаются до целых. </para>
          <para>Если сопоставления, роста или последняя_выплата не является допустимой датой, <b>OddLYield</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если частота &lt; 0 или цена ≤ 0, <b>OddLYield</b> возвращает #NUM! значение ошибки. </para>
          <para>Если основа &lt; 0 или, если основа &gt; 4, <b>OddLYield</b> возвращает #NUM! значение ошибки. </para>
          <para>Должны быть выполнены следующие условия; в противном случае <b>OddLYield</b> возвращает #NUM! значение ошибки: </para>
          <para>роста &gt; сопоставления &gt; последняя_выплата </para>
          <para>
            <b>OddLYield</b> рассчитывается следующим образом: </para>
          <para>На рисунке 1: Формула для расчета метода OddLYield</para>
          <para></para>
          <para></para>
          <para>где:</para>
          <para>AI = число накопленных дней для i-го или последнего квазикупонного периода в период, подсчет вперед от даты последней выплаты перед погашения НЕЧЁТ.</para>
          <para>DCi = количество дней, перечисленных в i-го или последнего, квазикупонного периода, разделенное продолжительность периода фактический купон.</para>
          <para>Контекст Именования = число квазикупонных периодов, которые соответствуют в нерегулярный период. Если это число содержит часть возникает до следующего целого числа.</para>
          <para>NLi = нормальная продолжительность в днях i-го или последнего квазикупонного периода в нерегулярный купон периода.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Or">
      <MemberSignature Language="C#" Value="public bool Or (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Or([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Or(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Or (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16421)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Логическое_значение1, логическое_значение2,... - 1 до 30 условий, которое требуется проверить, может быть значение <b>true</b> или <b>false</b>.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Возвращает <b>значение true,</b> Если аргумент не является <b>true</b>; Возвращает <b>значение false</b> , если все аргументы имеют <b>значение false</b>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Аргументы должны принимать логические значения, такие как <b>true</b> или <b>false</b>или массивами или ссылками, которые содержат логические значения. </para>
          <para>Если аргумент массива или ссылки содержит текст или пустые ячейки, эти значения игнорируются. </para>
          <para>Если указанный диапазон не содержит логических значений, <b>или</b> возвращает #VALUE! значение ошибки. </para>
          <para>Формулы массива <b>или</b> можно использовать для просмотра, если значение возникает в массиве. Чтобы ввести формулу массива, нажмите сочетание клавиш CTRL + SHIFT + ВВОД.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.WorksheetFunction.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает родительский объект для указанного объекта. Только для чтения.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PDuration">
      <MemberSignature Language="C#" Value="public double PDuration (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 PDuration([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.PDuration(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function PDuration (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double PDuration(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16954)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Процентную ставку за период.</param>
        <param name="Arg2">Текущая стоимость инвестиций.</param>
        <param name="Arg3">Требуемое значение будущих инвестиций.</param>
        <summary>Возвращает число периодов, необходимые для связи с заданным значением инвестиций.</summary>
        <returns>
          <b>ДАННЫЕ ТИПА DOUBLE</b>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pearson">
      <MemberSignature Language="C#" Value="public double Pearson (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Pearson([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Pearson(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Pearson (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Pearson(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16696)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Массив1 — множество независимых значений.</param>
        <param name="Arg2">Массив2 - множество зависимых значений.</param>
        <summary>Возвращает корреляции Пирсона, r, безразмерный индекс в диапазоне от -1.0 до версии 1.0 включительно и отражает степень линейной зависимости между двух наборов данных.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Аргументы должно быть номера или имена, массивы констант или справочные материалы, которые содержат цифры. </para>
          <para>Если аргумент массива или ссылки содержит текст, логические значения или пустые ячейки, эти значения игнорируются; Тем не менее включаются ячейки с помощью нулевое значение. </para>
          <para>Если массив1 и массив2 пусты или содержат различное число точек данных, <b>Пирсона</b> возвращает значение ошибки # н/д. </para>
          <para>Формула для корреляции Пирсона, r, — это: </para>
          <para>На рисунке 1: Корреляции Пирсона</para>
          <para></para>
          <para></para>
          <para>где x и y — выборочные средние значения СРЗНАЧ(массив1) и СРЗНАЧ(массив2).</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Percentile">
      <MemberSignature Language="C#" Value="public double Percentile (object Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Percentile([in]object Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Percentile(System.Object,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Percentile (Arg1 As Object, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Percentile(System::Object ^ Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16712)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Массив — массив или диапазон данных, который определяет относительное положение.</param>
        <param name="Arg2">K - й процентиль значение в диапазоне от 0 до 1, включительно.</param>
        <summary>Возвращает k й процентиль для значений в диапазоне. Эта функция позволяет установить порог приемки. Например можно рассмотреть кандидатов, которые широкополосном над 90-процентное значение.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Внимание!</b>: Эта функция была заменена один или несколько новых функций, который может предоставлять улучшенные точность и лучше, имена которых отражают их использования. Эта функция по-прежнему доступна для обеспечения совместимости с предыдущими версиями Excel. Тем не менее если обратной совместимости не требуется, можно теперь с помощью новых функций, так как они более точно описывает их функциональных возможностей. Дополнительные сведения о новых функциях можно <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Percentile_Inc(System.Object,System.Double)" /> и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Percentile_Exc(System.Object,System.Double)" /> метод. </para>
          <para>Если массив пуст, <b>процентиль</b> возвращает #NUM! значение ошибки. </para>
          <para>Если k не является числом, <b>процентиль</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если k &lt; 0 или, если k &gt; 1, <b>процентиль</b> возвращает #NUM! значение ошибки. </para>
          <para>Если k не несколько 1 / (n - 1), <b>процентиль</b> интерполяции для определения значения k й процентиль.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Percentile_Exc">
      <MemberSignature Language="C#" Value="public double Percentile_Exc (object Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Percentile_Exc([in]object Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Percentile_Exc(System.Object,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Percentile_Exc (Arg1 As Object, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Percentile_Exc(System::Object ^ Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16885)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Массив — массив или диапазон данных, который определяет относительное положение.</param>
        <param name="Arg2">K - й процентиль значение в диапазоне от 0 до 1, уникальным.</param>
        <summary>Возвращает k й процентиль для значений в диапазоне, где k находится в диапазоне от 0 до 1, уникальным.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если массив пуст, <b>Percentile_Exc</b> возвращает #NUM! значение ошибки </para>
          <para>Если k не является числом, <b>Percentile_Exc</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если k ≤ 0 или k ≥ 1, <b>Percentile_Exc</b> возвращает #NUM! значение ошибки. </para>
          <para>Если k не несколько 1 / (n - 1), <b>Percentile_Exc</b> интерполяции для определения значения k й процентиль. </para>
          <para>
            <b>Percentile_Exc</b> будет интерполяции, когда значение для указанного процентиль находится между двумя значениями в массиве. Если он не может интерполяции для процентиль, k указан, то Excel возвращает #NUM! Ошибка.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Percentile_Inc">
      <MemberSignature Language="C#" Value="public double Percentile_Inc (object Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Percentile_Inc([in]object Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Percentile_Inc(System.Object,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Percentile_Inc (Arg1 As Object, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Percentile_Inc(System::Object ^ Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16886)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Массив — массив или диапазон данных, который определяет относительное положение.</param>
        <param name="Arg2">K - й процентиль значение в диапазоне от 0 до 1, включительно.</param>
        <summary>Возвращает k й процентиль для значений в диапазоне. Эта функция позволяет установить порог приемки. Например можно проверить кандидатов, которые широкополосном над 90-процентное значение.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если массив пуст, <b>Percentile_Inc</b> возвращает #NUM! значение ошибки. </para>
          <para>Если k не является числом, <b>Percentile_Inc</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если k &lt; 0 или, если k &gt; 1, <b>Percentile_Inc</b> возвращает #NUM! значение ошибки. </para>
          <para>Если k не несколько 1 / (n - 1), <b>Percentile_Inc</b> интерполяции для определения значения k й процентиль.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PercentRank">
      <MemberSignature Language="C#" Value="public double PercentRank (object Arg1, double Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 PercentRank([in]object Arg1, [in]float64 Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.PercentRank(System.Object,System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PercentRank (Arg1 As Object, Arg2 As Double, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16713)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Массив — массив или диапазон данных с помощью числовых значений, который определяет относительное положение.</param>
        <param name="Arg2">X — значение, для которого необходимо узнать ранг.</param>
        <param name="Arg3">Значение — необязательное значение, указывающее количество значащих цифр для возвращаемого процентного значения. Если этот параметр опущен, <b>то функция ПРОЦЕНТРАНГ</b> использует три цифры (0.xxx).</param>
        <summary>Возвращает категорию значения в наборе данных в процентном соотношении от набора данных. Эта функция можно использовать для оценки относительного положения значения в наборе данных. Например чтобы оценить положение показатель подходящего результата тестирования среди всех результатов теста можно использовать <b>ПРОЦЕНТРАНГ</b> .</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Внимание!</b>: Эта функция была заменена один или несколько новых функций, который может предоставлять улучшенные точность и лучше, имена которых отражают их использования. Эта функция по-прежнему доступна для обеспечения совместимости с предыдущими версиями Excel. Тем не менее если обратной совместимости не требуется, можно теперь с помощью новых функций, так как они более точно описывает их функциональных возможностей. Дополнительные сведения о новых функциях можно <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.PercentRank_Inc(System.Object,System.Double,System.Object)" /> и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.PercentRank_Exc(System.Object,System.Double,System.Object)" /> методы.</para>
          <para>Если массив пуст, <b>то функция ПРОЦЕНТРАНГ</b> возвращает #NUM! значение ошибки. </para>
          <para>Если значение &lt; 1, <b>то функция ПРОЦЕНТРАНГ</b> возвращает #NUM! значение ошибки. </para>
          <para>Если x не соответствует ни одному из значений в массиве, <b>ПРОЦЕНТРАНГ</b> интерполяции для возврата ранг правильное процентное отношение.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PercentRank_Exc">
      <MemberSignature Language="C#" Value="public double PercentRank_Exc (object Arg1, double Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 PercentRank_Exc([in]object Arg1, [in]float64 Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.PercentRank_Exc(System.Object,System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PercentRank_Exc (Arg1 As Object, Arg2 As Double, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16887)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Массив — массив или диапазон данных с помощью числовых значений, который определяет относительное положение.</param>
        <param name="Arg2">X — значение, для которого необходимо узнать ранг.</param>
        <param name="Arg3">Значение — значение, указывающее количество значащих цифр для возвращаемого процентного значения. Если этот параметр опущен, <b>PercentRank_Exc</b> использует три цифры (0.xxx).</param>
        <summary>Возвращает категорию значения в наборе данных в процентах (от 0 до 1, монопольная) из набора данных.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если массив пуст, <b>PercentRank_Exc</b> возвращает #NUM! значение ошибки. </para>
          <para>Если значение &lt; 1, <b>PercentRank_Exc</b> возвращает #NUM! значение ошибки. </para>
          <para>Если x не соответствует ни одному из значений в массиве, <b>PercentRank_Exc</b> интерполяции для возврата ранг правильное процентное отношение.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PercentRank_Inc">
      <MemberSignature Language="C#" Value="public double PercentRank_Inc (object Arg1, double Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 PercentRank_Inc([in]object Arg1, [in]float64 Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.PercentRank_Inc(System.Object,System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PercentRank_Inc (Arg1 As Object, Arg2 As Double, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16888)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Массив — массив или диапазон данных с помощью числовых значений, который определяет относительное положение.</param>
        <param name="Arg2">X — значение, для которого необходимо узнать ранг.</param>
        <param name="Arg3">Значение — необязательное значение, указывающее количество значащих цифр для возвращаемого процентного значения. Если этот параметр опущен, <b>PercentRank_Inc</b> использует три цифры (0.xxx).</param>
        <summary>Возвращает категорию значения в наборе данных в процентах (от 0 до 1, включительно) из набора данных. Эта функция можно использовать для оценки относительного положения значения в наборе данных. Например чтобы оценить положение показатель подходящего результата тестирования среди всех результатов теста можно использовать <b>PercentRank_Inc</b> .</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если массив пуст, <b>PercentRank_Inc</b> возвращает #NUM! значение ошибки. </para>
          <para>Если значение &lt; 1, <b>PercentRank_Inc</b> возвращает #NUM! значение ошибки. </para>
          <para>Если x не соответствует ни одному из значений в массиве, <b>PercentRank_Inc</b> интерполяции для возврата ранг правильное процентное отношение.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Permut">
      <MemberSignature Language="C#" Value="public double Permut (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Permut([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Permut(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Permut (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Permut(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16683)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Номер — целое число, описывающее количество объектов.</param>
        <param name="Arg2">Число_выбранных — целое число, которое описывает число объектов в каждой перестановка.</param>
        <summary>Возвращает количество перестановок для заданного числа объектов, которые могут быть выбраны из числа объектов. Перестановка — это любое множество или подмножество объектов или событий где внутренний порядок имеет значение. Перестановок отличаются от сочетаний, для которых внутренний порядок не имеет значения. Функция для вычисления вероятности лотереях стилей.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Оба аргумента усекаются до целых. </para>
          <para>Если число или число_выбранных не является числом, <b>то функция ПЕРЕСТ</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если число ≤ 0 или, если число_выбранных &lt; 0, <b>то функция ПЕРЕСТ</b> возвращает #NUM! значение ошибки. </para>
          <para>Если число &lt; число_выбранных, <b>то функция ПЕРЕСТ</b> возвращает #NUM! значение ошибки. </para>
          <para>Формула для расчета количества перестановок — это: </para>
          <para>На рисунке 1: Формула для расчета количества перестановок</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Permutationa">
      <MemberSignature Language="C#" Value="public double Permutationa (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Permutationa([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Permutationa(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Permutationa (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Permutationa(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16951)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Общее число объектов.</param>
        <param name="Arg2">Число объектов в каждой перестановка.</param>
        <summary>Возвращает количество перестановок для заданного числа объектов (с повторов), которые выбираются из общего числа объектов.</summary>
        <returns>
          <b>ДАННЫЕ ТИПА DOUBLE</b>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Phi">
      <MemberSignature Language="C#" Value="public double Phi (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Phi([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Phi(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Phi (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Phi(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16962)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Номер, для которого вы хотите плотность стандартное нормальное интегральное распределение.</param>
        <summary>Возвращает значение функции распределения для стандартного нормального распределения.</summary>
        <returns>
          <b>ДАННЫЕ ТИПА DOUBLE</b>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Phonetic">
      <MemberSignature Language="C#" Value="public string Phonetic (Microsoft.Office.Interop.Excel.Range Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Phonetic([in]class Microsoft.Office.Interop.Excel.Range Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Phonetic(Microsoft.Office.Interop.Excel.Range)" />
      <MemberSignature Language="VB.NET" Value="Public Function Phonetic (Arg1 As Range) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Phonetic(Microsoft::Office::Interop::Excel::Range ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16744)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
      </Parameters>
      <Docs>
        <param name="Arg1">Справочник по — текстовая строка или ссылка на одну ячейку или диапазон ячеек, которые содержат текстовую строку фуригана.</param>
        <summary>Извлекает фонетическое (фуригана) знаки из текстовой строки.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если ссылка является диапазоном ячеек, возвращается текстовая строка фуригана в левом верхнем углу ячейки диапазона. </para>
          <para>Если ссылка является диапазоном несмежных ячеек, возвращается значение ошибки # н/д.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pi">
      <MemberSignature Language="C#" Value="public double Pi ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Pi() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Pi" />
      <MemberSignature Language="VB.NET" Value="Public Function Pi () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Pi();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16403)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает число 3.14159265358979, математической константы пи, округленное до 15 цифр.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pmt">
      <MemberSignature Language="C#" Value="public double Pmt (double Arg1, double Arg2, double Arg3, object Arg4, object Arg5);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Pmt([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]object Arg4, [in]object Arg5) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Pmt(System.Double,System.Double,System.Double,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Pmt (Arg1 As Double, Arg2 As Double, Arg3 As Double, Optional Arg4 As Object, Optional Arg5 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16443)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Частота - процентной ставки для ссуды.</param>
        <param name="Arg2">NPer — общее число выплат по ссуды.</param>
        <param name="Arg3">PV - текущая стоимость или общая сумма всех будущих платежей стоит сейчас; также известной как субъекта.</param>
        <param name="Arg4">БЗ - будущего значения или баланс денежных средств, который нужно достичь после последней выплаты. Если аргумент опущен, он считается нуль (0), то есть будущая значение ссуды равно 0.</param>
        <param name="Arg5">Тип — число 0 (ноль) или 1, обозначающее, когда срок выполнения.</param>
        <summary>Вычисляет платежа для аннуитета на основе постоянных выплат и постоянной процентной ставки.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Более подробное описание аргументов в <b>Pmt</b>в разделе <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Pv(System.Double,System.Double,System.Double,System.Object,System.Object)" /> функции.</para>
          <list type="table">
            <item>
              <term>0 или опущен</term>
              <description>В конце периода</description>
            </item>
            <item>
              <term>1</term>
              <description>С начала периода</description>
            </item>
          </list>
          <para>Выплаты, возвращаемые функцией <b>Pmt</b> содержит основной и процент, но не налоги, резервных платежей или сборов в некоторых случаях связанные с ссуды. </para>
          <para>Убедитесь в том, что вы являетесь согласованные единицы измерения, которая будет использоваться для определения скорости и nper. Если ежемесячных выплатах на заем 4 года в 12 процентов годовых, используйте 12% / 12 для скорости и 4 * 12 для nper. Если производится ежегодных выплат на одном кредита, используйте 12 процентов для скорости и 4 для nper.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Poisson">
      <MemberSignature Language="C#" Value="public double Poisson (double Arg1, double Arg2, bool Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Poisson([in]float64 Arg1, [in]float64 Arg2, [in]bool Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Poisson(System.Double,System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Poisson (Arg1 As Double, Arg2 As Double, Arg3 As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Poisson(double Arg1, double Arg2, bool Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16684)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Arg1">X — количество событий.</param>
        <param name="Arg2">Среднее - ожидается числовое значение.</param>
        <param name="Arg3">Накопительный пакет — это логическое значение, определяющее форму возвращаемого распределения вероятности. Если значение TRUE, ПУАССОНА возвращает интегральное распределение Пуассона, число случайных событий будет от 0 до x включительно. Если задано значение FALSE, возвращается Пуассона весовая функция число событий будет в точности x.</param>
        <summary>Возвращает распределение Пуассона. Обычно приложения распределение Пуассона прогнозирование количество событий через определенное время, таких как количество машин, появляющихся на площади в минуту.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Внимание!</b>: Эта функция была заменена один или несколько новых функций, который может предоставлять улучшенные точность и лучше, имена которых отражают их использования. Эта функция по-прежнему доступна для обеспечения совместимости с предыдущими версиями Excel. Тем не менее если обратной совместимости не требуется, можно теперь с помощью новых функций, так как они более точно описывает их функциональных возможностей. Дополнительные сведения о новой функции можно <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Poisson_Dist(System.Double,System.Double,System.Boolean)" /> метод.</para>
          <para>Если x не является целым числом, оно сокращается. </para>
          <para>Если x или среднее не является числом, <b>Пуассона</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если x &lt; 0, <b>Пуассона</b> возвращает #NUM! значение ошибки. </para>
          <para>Если среднее ≤ 0, <b>Пуассона</b> возвращает #NUM! значение ошибки. </para>
          <para>
            <b>Пуассона</b> рассчитывается следующим образом. </para>
          <para>Для накопительных = <b>false</b>:</para>
          <para>На рисунке 1: Расчет, когда интегральное значение false</para>
          <para></para>
          <para></para>
          <para>Для накопительных = <b>true</b>:</para>
          <para>На рисунке 2: Расчет, когда интегральное значение true</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Poisson_Dist">
      <MemberSignature Language="C#" Value="public double Poisson_Dist (double Arg1, double Arg2, bool Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Poisson_Dist([in]float64 Arg1, [in]float64 Arg2, [in]bool Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Poisson_Dist(System.Double,System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Poisson_Dist (Arg1 As Double, Arg2 As Double, Arg3 As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Poisson_Dist(double Arg1, double Arg2, bool Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16889)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Arg1">X — количество событий.</param>
        <param name="Arg2">Среднее - ожидается числовое значение.</param>
        <param name="Arg3">Накопительный пакет — это логическое значение, определяющее форму возвращаемого распределения вероятности. Если накопительный пакет имеет <b>значение true</b>, <b>Poisson_Dist</b> возвращает интегральное распределение Пуассона, число случайных событий будет от 0 (ноль) до x включительно. Если <b>значение false</b>, то возвращается Пуассона весовая функция распределения число событий будет в точности x.</param>
        <summary>Возвращает распределение Пуассона. Обычно приложения распределение Пуассона прогнозирование количество событий через определенное время, таких как количество машин, появляющихся на площади в минуту.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если x не является целым числом, оно сокращается. </para>
          <para>Если x или среднее не является числом, <b>Poisson_Dist</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если x &lt; 0, <b>Poisson_Dist</b> возвращает #NUM! значение ошибки. </para>
          <para>Если среднее ≤ 0, <b>Poisson_Dist</b> возвращает #NUM! значение ошибки. </para>
          <para>
            <b>Poisson_Dist</b> рассчитывается следующим образом. </para>
          <para>Для накопительных = <b>false</b>:</para>
          <para>На рисунке 1: Расчет, когда интегральное значение false</para>
          <para></para>
          <para></para>
          <para>Для накопительных = <b>true</b>:</para>
          <para>На рисунке 2: Расчет, когда интегральное значение true</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Power">
      <MemberSignature Language="C#" Value="public double Power (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Power([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Power(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Power (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Power(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16721)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Номер - базовый номер. Она может быть любое действительное число.</param>
        <param name="Arg2">Power - показатель, который вызывается базовый номер.</param>
        <summary>Возвращает результат числа, возведенного в степень.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ppmt">
      <MemberSignature Language="C#" Value="public double Ppmt (double Arg1, double Arg2, double Arg3, double Arg4, object Arg5, object Arg6);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Ppmt([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]float64 Arg4, [in]object Arg5, [in]object Arg6) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Ppmt(System.Double,System.Double,System.Double,System.Double,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ppmt (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Double, Optional Arg5 As Object, Optional Arg6 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16552)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Double" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Частота - процентную ставку за период.</param>
        <param name="Arg2">Годовую - и должно быть в диапазоне от 1 до nper.</param>
        <param name="Arg3">NPer — общее число периодов выплат аннуитета.</param>
        <param name="Arg4">PV - текущее значение — общая сумма всех будущих платежей стоит сейчас.</param>
        <param name="Arg5">БЗ - будущего значения или баланс денежных средств, который нужно достичь после последней выплаты. Если аргумент опущен, он считается нуль (0), то есть будущая значение ссуды равно 0.</param>
        <param name="Arg6">Тип — число 0 или 1, обозначающее, когда срок выполнения.</param>
        <summary>Возвращает платежа на основном сервере для заданного периода для инвестиции на основе периодических постоянных выплат и постоянной процентной ставки.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Более подробное описание аргументов в <b>Ppmt</b>в разделе <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Pv(System.Double,System.Double,System.Double,System.Object,System.Object)" />.</para>
          <list type="table">
            <item>
              <term>0 или опущен</term>
              <description>В конце периода</description>
            </item>
            <item>
              <term>1</term>
              <description>С начала периода</description>
            </item>
          </list>
          <para>Убедитесь в том, что вы являетесь согласованные единицы измерения, которая будет использоваться для определения скорости и nper. Если ежемесячных выплатах на заем 4 года в 12 процентов годовых, используйте 12% / 12 для скорости и 4 * 12 для nper. Если производится ежегодных выплат на одном кредита, используйте 12% для скорости и 4 для nper.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Price">
      <MemberSignature Language="C#" Value="public double Price (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Price([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Price(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Price (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Arg5 As Object, Arg6 As Object, Optional Arg7 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16825)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Сопоставление - Дата сопоставления безопасности. Дата сопоставления безопасности — это дата после даты выпуска, если передается безопасности покупателю.</param>
        <param name="Arg2">Роста - срока. Соответствует дата истечения срока действия безопасности.</param>
        <param name="Arg3">Частота — годовая купон ставка.</param>
        <param name="Arg4">Доход — годовой доход по ценным бумагам.</param>
        <param name="Arg5">Погашения - ценных погашения за лицевой значение 100 долларов США.</param>
        <param name="Arg6">Частота — количество выплат купон в год. Для ежегодных выплат частота = 1; для полугодовых выплат периодичность = 2; для квартальное, частота = 4.</param>
        <param name="Arg7">Основы - способ вычисления дня.</param>
        <summary>Возвращает цену за 100 долларов США лицевой значение безопасности, который составляет периодический процент.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Важно</b>: ввода дат с помощью функции Дата или как результат других формул и функций. Например следует используйте Дата(2008;5;23) для 23-мая 2008 г. Если даты вводятся как текст, могут возникнуть проблемы.</para>
          <list type="table">
            <item>
              <term>0 или опущен</term>
              <description>"МНЕ НРАВИТСЯ" (NASD) 30/360</description>
            </item>
            <item>
              <term>1</term>
              <description>Фактический</description>
            </item>
            <item>
              <term>2</term>
              <description>Фактический/360</description>
            </item>
            <item>
              <term>3</term>
              <description>Фактический/365</description>
            </item>
            <item>
              <term>4</term>
              <description>Европейский 30/360</description>
            </item>
          </list>
          <para>Microsoft Excel хранит даты как целые числа, поэтому они могут использоваться в расчетах. По умолчанию 1 января 1900 — серийный номер 1, а 1 января 2008 — номер 39448, так как интервал в днях 1 января 1900. Microsoft Excel для Macintosh использует другую систему дат по умолчанию. </para>
          <para>Дата соглашения — это дата продажи покупателю купон, такие как действия. Срок платежа — это дата истечения срока действия купон. Предположим, например, сроком действия 30 лет выпущена 1 января 2008 года и приобретена покупателем через шесть месяцев после. Дата выпуска будет являться 1 января 2008, Дата соглашения равен 1 июля 2008 г., и срок погашения будет равен 1 января 2038, который — 30 лет после даты выпуска 1 января 2008 года. </para>
          <para>Сопоставления, роста, частоту и основы усекаются до целых. </para>
          <para>Если сопоставления или роста не допустимая дата, <b>Цена</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если доход &lt; 0 или, если скорость &lt; 0, <b>Цена</b> возвращает #NUM! значение ошибки. </para>
          <para>Если погашения ≤ 0, <b>Цена</b> возвращает #NUM! значение ошибки. </para>
          <para>Если частота — любое число отличное от 1, 2 или 4, <b>Цена</b> возвращает #NUM!. значение ошибки. </para>
          <para>Если основа &lt; 0 или, если основа &gt; 4, <b>Цена</b> возвращает #NUM! значение ошибки. </para>
          <para>Если сопоставления ≥ роста, <b>Цена</b> возвращает #NUM! значение ошибки. <b>Цена</b> рассчитывается следующим образом: </para>
          <para>На рисунке 1: Формула для расчета метода Price</para>
          <para></para>
          <para></para>
          <para>где:</para>
          <para>DSC = количество дней до даты следующего купон из сопоставления.</para>
          <para>E = количество дней в периоде купон, на который приходится Дата соглашения.</para>
          <para>N = число купонов между датой соглашения и датой погашения.</para>
          <para>A = количество дней от начала периода купон до даты соглашения.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PriceDisc">
      <MemberSignature Language="C#" Value="public double PriceDisc (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 PriceDisc([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.PriceDisc(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PriceDisc (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Optional Arg5 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16820)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Сопоставление - Дата сопоставления безопасности. Дата сопоставления безопасности — это дата после даты выпуска, если передается безопасности покупателю.</param>
        <param name="Arg2">Роста - срока. Соответствует дата истечения срока действия безопасности.</param>
        <param name="Arg3">Скидка — скидка на ценную.</param>
        <param name="Arg4">Погашения - ценных погашения за лицевой значение 100 долларов США.</param>
        <param name="Arg5">Основы - способ вычисления дня.</param>
        <summary>Возвращает цену за 100 долларов США значение лицевой ценных бумаг.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Важно</b>: ввода дат с помощью функции Дата или как результат других формул и функций. Например следует используйте Дата(2008;5;23) для 23-мая 2008 г. Если даты вводятся как текст, могут возникнуть проблемы.</para>
          <list type="table">
            <item>
              <term>0 или опущен</term>
              <description>"МНЕ НРАВИТСЯ" (NASD) 30/360</description>
            </item>
            <item>
              <term>1</term>
              <description>Фактический</description>
            </item>
            <item>
              <term>2</term>
              <description>Фактический/360</description>
            </item>
            <item>
              <term>3</term>
              <description>Фактический/365</description>
            </item>
            <item>
              <term>4</term>
              <description>Европейский 30/360</description>
            </item>
          </list>
          <para>Microsoft Excel хранит даты как целые числа, поэтому они могут использоваться в расчетах. По умолчанию 1 января 1900 — серийный номер 1, а 1 января 2008 — номер 39448, так как интервал в днях 1 января 1900. Microsoft Excel для Macintosh использует другую систему дат по умолчанию. </para>
          <para>Дата соглашения — это дата продажи покупателю купон, такие как действия. Срок платежа — это дата истечения срока действия купон. Предположим, например, сроком действия 30 лет выпущена 1 января 2008 года и приобретена покупателем через шесть месяцев после. Дата выпуска будет являться 1 января 2008, Дата соглашения равен 1 июля 2008 г., и срок погашения будет равен 1 января 2038, который — 30 лет после даты выпуска 1 января 2008 года. </para>
          <para>Сопоставления, роста и основы усекаются до целых. </para>
          <para>Если сопоставления или роста не допустимая дата, <b>PriceDisc</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если скидка ≤ 0 или если погашения ≤ 0, <b>PriceDisc</b> возвращает #NUM! значение ошибки. </para>
          <para>Если основа &lt; 0 или, если основа &gt; 4, <b>PriceDisc</b> возвращает #NUM! значение ошибки. </para>
          <para>Если сопоставления ≥ роста, <b>PriceDisc</b> возвращает #NUM! значение ошибки. </para>
          <para>
            <b>PriceDisc</b> рассчитывается следующим образом: </para>
          <para>На рисунке 1: Формула для расчета метода PriceDisc</para>
          <para></para>
          <para></para>
          <para>где:</para>
          <para>B = число дней в году, в зависимости от год.</para>
          <para>DSM = число дней из сопоставления роста.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PriceMat">
      <MemberSignature Language="C#" Value="public double PriceMat (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 PriceMat([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.PriceMat(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PriceMat (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Arg5 As Object, Optional Arg6 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16815)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Сопоставление - Дата сопоставления безопасности. Дата сопоставления безопасности — это дата после даты выпуска, если передается безопасности покупателю.</param>
        <param name="Arg2">Роста - срока. Соответствует дата истечения срока действия безопасности.</param>
        <param name="Arg3">Проблема — Дата выпуска ценных бумаг порядковый номер.</param>
        <param name="Arg4">Частота - процентной ставки безопасности на дату выпуска.</param>
        <param name="Arg5">Доход — годовой доход по ценным бумагам.</param>
        <param name="Arg6">Основы - способ вычисления дня.</param>
        <summary>Возвращает цену за 100 долларов США лицевой значение безопасности, который составляет доход в роста.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Важно</b>: ввода дат с помощью функции Дата или как результат других формул и функций. Например следует используйте Дата(2008;5;23) для 23-мая 2008 г. Если даты вводятся как текст, могут возникнуть проблемы.</para>
          <list type="table">
            <item>
              <term>0 или опущен</term>
              <description>"МНЕ НРАВИТСЯ" (NASD) 30/360</description>
            </item>
            <item>
              <term>1</term>
              <description>Фактический</description>
            </item>
            <item>
              <term>2</term>
              <description>Фактический/360</description>
            </item>
            <item>
              <term>3</term>
              <description>Фактический/365</description>
            </item>
            <item>
              <term>4</term>
              <description>Европейский 30/360</description>
            </item>
          </list>
          <para>Microsoft Excel хранит даты как целые числа, поэтому они могут использоваться в расчетах. По умолчанию 1 января 1900 — серийный номер 1, а 1 января 2008 — номер 39448, так как интервал в днях 1 января 1900. Microsoft Excel для Macintosh использует другую систему дат по умолчанию. </para>
          <para>Дата соглашения — это дата продажи покупателю купон, такие как действия. Срок платежа — это дата истечения срока действия купон. Предположим, например, сроком действия 30 лет выпущена 1 января 2008 года и приобретена покупателем через шесть месяцев после. Дата выпуска будет являться 1 января 2008, Дата соглашения равен 1 июля 2008 г., и срок погашения будет равен 1 января 2038, который — 30 лет после даты выпуска 1 января 2008 года. </para>
          <para>Сопоставления, роста, проблема и основы усекаются до целых. </para>
          <para>Если сопоставления роста и проблема не допустимая дата, <b>PriceMat</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если частота &lt; 0 или, если доход &lt; 0, <b>PriceMat</b> возвращает #NUM! значение ошибки. </para>
          <para>Если основа &lt; 0 или, если основа &gt; 4, <b>PriceMat</b> возвращает #NUM! значение ошибки. </para>
          <para>Если сопоставления ≥ роста, <b>PriceMat</b> возвращает #NUM! значение ошибки. <b>PriceMat</b> рассчитывается следующим образом: </para>
          <para>На рисунке 1: Формула для расчета метода PriceMat</para>
          <para></para>
          <para></para>
          <para>где:</para>
          <para>B = число дней в году, в зависимости от год.</para>
          <para>DSM = число дней из сопоставления роста.</para>
          <para>DIM = количество дней, начиная с выпуска для роста.</para>
          <para>A = количество дней от проблемы для сопоставления.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prob">
      <MemberSignature Language="C#" Value="public double Prob (object Arg1, object Arg2, double Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Prob([in]object Arg1, [in]object Arg2, [in]float64 Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Prob(System.Object,System.Object,System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Prob (Arg1 As Object, Arg2 As Object, Arg3 As Double, Optional Arg4 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16701)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Аргументе x_интервал - интервал числовых значений x, с которым связан вероятности.</param>
        <param name="Arg2">Интервал_вероятностей - набор вероятности, связанные со значениями в аргументе x_интервал.</param>
        <param name="Arg3">Нижний_предел - нижняя граница значения, для которого требуется вычислить вероятность.</param>
        <param name="Arg4">Верхний_предел — необязательная верхняя граница значения, для которого вычисляется вероятность.</param>
        <summary>Возвращает вероятность того, что значения в диапазоне между двумя ограничения. Если верхний_предел не задан, возвращает вероятность, что значения в аргументе x_интервал равны нижний_предел.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если любое значение в аргументе интервал_вероятностей ≤ 0 или любое значение в аргументе интервал_вероятностей &gt; 1, <b>то функция вероятность</b> возвращает #NUM! значение ошибки. </para>
          <para>Если сумма значений в аргументе интервал_вероятностей ¹ 1, <b>то функция вероятность</b> возвращает #NUM! значение ошибки. </para>
          <para>Если верхний_предел опущен, <b>то функция вероятность</b> возвращает вероятность равенства нижний_предел. </para>
          <para>Если x_интервал и интервал_вероятностей содержат различное число точек данных, <b>то функция вероятность</b> возвращает значение ошибки # н/д.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Product">
      <MemberSignature Language="C#" Value="public double Product (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Product([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Product(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Product (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16567)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число1, число2,... - 1 до 30 чисел, которые нужно умножить.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Умножает числа, заданные в качестве аргументов и возвращает продукт.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Аргументы, которые являются числами, логические значения или текстовыми представлениями чисел, учитываются; аргументы, которые являются значениями ошибки или текст, который не может быть переведены вызывают ошибки. </para>
          <para>Если аргумент является массив или ссылка, учитываются только числа в массиве или ссылке. Пустые ячейки, логические значения, текст или значения ошибок в массиве или ссылке игнорируются.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Proper">
      <MemberSignature Language="C#" Value="public string Proper (string Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Proper([in]string Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Proper(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Proper (Arg1 As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Proper(System::String ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16498)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Arg1">Текст — текст в кавычки, формулу, возвращающую текст или ссылка на ячейку, содержащую текст, который требуется преобразовать.</param>
        <summary>Замена первому символу строки текста и все буквы в тексте, следуйте любой символ, отличный от буквы. Преобразует все остальные буквы нижнего регистра букв.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pv">
      <MemberSignature Language="C#" Value="public double Pv (double Arg1, double Arg2, double Arg3, object Arg4, object Arg5);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Pv([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]object Arg4, [in]object Arg5) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Pv(System.Double,System.Double,System.Double,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Pv (Arg1 As Double, Arg2 As Double, Arg3 As Double, Optional Arg4 As Object, Optional Arg5 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16440)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Частота - процентную ставку за период. Например если автомобилей кредита на 10 процентов годовых и ежемесячных выплатах, вашей процентной ставки в месяц — 10% / 12 или 0,83%. Необходимо ввести 10% / 12 или 0,83%, или 0,0083 в формулу как скорость передачи.</param>
        <param name="Arg2">NPer — общее число периодов выплат аннуитета. Например если начало года четыре автомобиль и ежемесячных выплатах протяжении имеет 4 * 12 (или 48) периодов. Необходимо ввести 48 в формулу для nper.</param>
        <param name="Arg3">Pmt - платеж за каждый период и не может изменить на протяжении всего периода выплат. Может меняться участника и интересами, но нет других сборов или налоги. Например ежемесячные выплаты по 10 000, 4 года на автомобиль на 12 процентов, $263.33. Необходимо ввести-263.33 в формулу как оплаты Если опущен, необходимо включить в аргументе fv.</param>
        <param name="Arg4">БЗ - будущего значения или баланс денежных средств, который нужно достичь после последней выплаты. Если аргумент опущен, то предполагается, что оно является 0 (например, будущее значение ссуды, равно 0). Например если вы хотите сохранить 50000 для специальных проекта в 18 лет, 50 000 долларов будет будущего значения. Вы может сделать определения процентной ставки и определить, сколько необходимо сохранить каждый месяц. Если аргумент опущен, необходимо включить аргумент.</param>
        <param name="Arg5">Тип — число 0 или 1, обозначающее, когда срок выполнения.</param>
        <summary>Возвращает приведенную стоимость инвестиций. Текущая стоимость — это общая сумма, стоит будущих платежей теперь. Например если, сумма кредита представляет текущее значение предстоящих.</summary>
        <returns>To be added.</returns>
        <remarks>
          <list type="table">
            <item>
              <term>0 или опущен</term>
              <description>В конце периода</description>
            </item>
            <item>
              <term>1</term>
              <description>С начала периода</description>
            </item>
          </list>
          <para>Убедитесь в том, что вы являетесь согласованные единицы измерения, которая будет использоваться для определения скорости и nper. Если ежемесячных выплатах на заем 4 года в 12 процентов годовых, используйте 12% / 12 для скорости и 4 * 12 для nper. Если производится ежегодных выплат на одном кредита, используйте 12% для скорости и 4 для nper. </para>
          <para>В случае применяются следующие функции: </para>
          <list type="table">
            <item>
              <term>ТО ФУНКЦИЯ ОБЩПЛАТ</term>
              <description>PPMT</description>
            </item>
            <item>
              <term>ТО ФУНКЦИЯ ОБЩДОХОД</term>
              <description>PV</description>
            </item>
            <item>
              <term>БЗ</term>
              <description>ЧАСТОТА</description>
            </item>
            <item>
              <term>БЗРАСПИС</term>
              <description>ЧИСТВНДОХ</description>
            </item>
            <item>
              <term>IPMT</term>
              <description>ФУНКЦИЯ ЧИСТНЗ</description>
            </item>
            <item>
              <term>PMT</term>
              <description />
            </item>
          </list>
          <para>Ежегодных выплат — это ряд постоянных денежных выплат в непрерывный период. Например автомобиль под или ипотечный является ежегодных выплат. Для получения дополнительных сведений в разделе Описание подробных. </para>
          <para>В функции выплат денежные средства, такие как размещение для экономии, представленного отрицательное значение; полученные деньги, такие как проверка дивидендов, представленного положительное число. Например перенаправляться 1000 долларов США в банк соответствует аргументом -1000 сумму и аргументом 1000 при наличии банка. </para>
          <para>Microsoft Excel решаются с помощью финансовые аргументами в отношении других пользователей. Если цена не 0, то: </para>
          <para>На рисунке 1: Формула, когда цена не 0</para>
          <para></para>
          <para></para>
          <para>Если частота равна 0, то:</para>
          <para>(pmt * nper) + pv + БЗ = 0</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Quartile">
      <MemberSignature Language="C#" Value="public double Quartile (object Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Quartile([in]object Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Quartile(System.Object,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Quartile (Arg1 As Object, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Quartile(System::Object ^ Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16711)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Массив - массиве или диапазон числовых значений, для которых требуется значения квартилей.</param>
        <param name="Arg2">Часть - — возвращаемое значение.</param>
        <summary>Возвращает квартиль набора данных. Квартиль часто используются в продаж, чтобы разделить совокупность на группы. Например можно использовать <b>квартиль</b> поиск 25% от доходов в совокупности.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Внимание!</b>: Эта функция была заменена один или несколько новых функций, который может предоставлять улучшенные точность и лучше, имена которых отражают их использования. Эта функция по-прежнему доступна для обеспечения совместимости с предыдущими версиями Excel. Тем не менее если обратной совместимости не требуется, можно теперь с помощью новых функций, так как они более точно описывает их функциональных возможностей. Дополнительные сведения о новых функциях можно <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Quartile_Inc(System.Object,System.Double)" /> и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Quartile_Exc(System.Object,System.Double)" /> методы.</para>
          <list type="table">
            <item>
              <term>0</term>
              <description>Минимальное значение</description>
            </item>
            <item>
              <term>1</term>
              <description>Первая квартиль (25-й процентиль)</description>
            </item>
            <item>
              <term>2</term>
              <description>Значение медианы (50-й процентиль)</description>
            </item>
            <item>
              <term>3</term>
              <description>Третий квартиль (75-й процентиль)</description>
            </item>
            <item>
              <term>4</term>
              <description>Максимальное значение</description>
            </item>
          </list>
          <para>Если массив пуст, <b>квартиль</b> возвращает #NUM! значение ошибки. </para>
          <para>Если часть не целое число, оно сокращается. </para>
          <para>Если часть &lt; 0 или, если часть &gt; 4, <b>квартиль</b> возвращает #NUM! значение ошибки. </para>
          <para>
            <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Min(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />, <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Median(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />, и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Max(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> возврата совпадает со значением <b>квартиль</b> , если аргумент часть равен 0 (нулю), 2 и 4, соответственно.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Quartile_Exc">
      <MemberSignature Language="C#" Value="public double Quartile_Exc (object Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Quartile_Exc([in]object Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Quartile_Exc(System.Object,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Quartile_Exc (Arg1 As Object, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Quartile_Exc(System::Object ^ Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16890)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Массив - массиве или диапазон числовых значений, для которых требуется значения квартилей.</param>
        <param name="Arg2">Часть - возвращаемое значение.</param>
        <summary>Возвращает квартиль множества данных по значениям процентиля от 0 до 1, уникальным.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если массив пуст, <b>Quartile_Exc</b> возвращает #NUM! значение ошибки. </para>
          <para>Если часть не целое число, оно сокращается. </para>
          <para>Если часть ≤ 0 или часть ≥ 4, <b>Quartile_Exc</b> возвращает #NUM! значение ошибки. </para>
          <para>
            <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Min(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />, <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Median(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />, и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Max(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> возврата совпадает со значением <b>Quartile_Exc</b> , если аргумент часть равен 0 (нулю), 2 и 4, соответственно.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Quartile_Inc">
      <MemberSignature Language="C#" Value="public double Quartile_Inc (object Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Quartile_Inc([in]object Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Quartile_Inc(System.Object,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Quartile_Inc (Arg1 As Object, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Quartile_Inc(System::Object ^ Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16891)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Массив - массиве или диапазон числовых значений, для которых требуется значения квартилей.</param>
        <param name="Arg2">Часть - возвращаемое значение.</param>
        <summary>Возвращает квартиль множества данных по значениям процентиля от 0 до 1, включительно. Квартиль часто используются в продаж, чтобы разделить совокупность на группы. Например можно использовать QUARTILE_INC поиск 25% от доходов в совокупности.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если массив пуст, <b>Quartile_Inc</b> возвращает #NUM! значение ошибки. </para>
          <para>Если часть не целое число, оно сокращается. </para>
          <para>Если часть &lt; 0 или, если часть &gt; 4, <b>Quartile_Inc</b> возвращает #NUM! значение ошибки. </para>
          <para>
            <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Min(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />, <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Median(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />, и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Max(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> возврата совпадает со значением <b>Quartile_Inc</b> , если аргумент часть равен 0 (нулю), 2 и 4, соответственно.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Quotient">
      <MemberSignature Language="C#" Value="public double Quotient (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Quotient([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Quotient(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Quotient (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Quotient(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16801)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Числитель - дивидендов.</param>
        <param name="Arg2">Делителя - делителя.</param>
        <summary>Возвращает целую часть деления. Используйте этот флажок Отменить остаток от деления.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если аргумент не является числом, <b>Частное</b> возвращает #VALUE! значение ошибки.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Radians">
      <MemberSignature Language="C#" Value="public double Radians (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Radians([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Radians(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Radians (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Radians(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16726)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Угол — угол в градусы, которые нужно преобразовать.</param>
        <summary>Преобразует градусы в радианах.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RandBetween">
      <MemberSignature Language="C#" Value="public double RandBetween (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 RandBetween([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.RandBetween(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function RandBetween (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double RandBetween(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16848)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Нижняя - возвращает наименьшее целое число СЛУЧМЕЖДУ().</param>
        <param name="Arg2">В начало - возвращает наибольшее целое число СЛУЧМЕЖДУ().</param>
        <summary>Возвращает число случайных целых между вводимые номера. Новый номер случайных целых возвращается каждый раз вычисляется рабочего листа.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rank">
      <MemberSignature Language="C#" Value="public double Rank (double Arg1, Microsoft.Office.Interop.Excel.Range Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Rank([in]float64 Arg1, [in]class Microsoft.Office.Interop.Excel.Range Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Rank(System.Double,Microsoft.Office.Interop.Excel.Range,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Rank (Arg1 As Double, Arg2 As Range, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16600)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Номер - номер которого ранг, который требуется найти.</param>
        <param name="Arg2">Параметры ref - массив или ссылку на список номеров. Число значения в ссылке игнорируются.</param>
        <param name="Arg3">Заказ - номер, определяющий способ упорядочения.</param>
        <summary>Возвращает ранг числа в списке чисел. Ранг числа — это его размер относительно других значений в списке. (Если для сортировки в списке, ранг номер будет положение.)</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Внимание!</b>: Эта функция была заменена один или несколько новых функций, который может предоставлять улучшенные точность и лучше, имена которых отражают их использования. Эта функция по-прежнему доступна для обеспечения совместимости с предыдущими версиями Excel. Тем не менее если обратной совместимости не требуется, можно теперь с помощью новых функций, так как они более точно описывает их функциональных возможностей. Дополнительные сведения о новых функциях можно <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Rank_Eq(System.Double,Microsoft.Office.Interop.Excel.Range,System.Object)" /> и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Rank_Avg(System.Double,Microsoft.Office.Interop.Excel.Range,System.Object)" /> методы.</para>
          <para>Если порядок равен 0 (нулю) или опущен, Microsoft Excel определяет ранг числа, как если бы ссылка была списка сортироваться по убыванию. </para>
          <para>Если порядок — это любое ненулевое значение, Microsoft Excel определяет ранг числа, как если бы ссылка была списка сортироваться в восходящем порядке.</para>
          <para>
            <b>Ранг</b> присваивает повторяющимся числам одинаковый ранг. Тем не менее наличие повторяющихся чисел влияет на ранг последующих чисел. Например в списке целых чисел сортироваться в восходящем порядке, если число 10 появляется дважды и имеет ранг 5, а затем 11 будет иметь ранг 7 (номер не будет иметь ранг 6).</para>
          <para>Для некоторых целей один может потребоваться использовать определение ранга, с учетом связей в учетной записи. В предыдущем примере один, если требуется оптимизированная ранг 5.5 для числа 10. Это можно сделать, добавив следующий коэффициент коррекции значению, возвращенному по <b>рангу</b>. Этот фактор исправление подходит и для случая, когда ранг вычисляется в порядке убывания (заказа = 0 или опущен) или по возрастанию (заказа = ненулевое значение).</para>
          <para>Коэффициент коррекции связанные рангов = [счет(ссылка) + 1 – ранг (число, ссылка, 0) – ранг (число, ссылка, 1)] / 2.</para>
          <para>В следующем примере ранг(a2,a1:a5,1) равен 3. Коэффициент коррекции является (5 + 1-2-3) / 2 = 0.5 и оптимизированная ранга, с учетом связей в учетной записи — 3 + 0.5 = 3.5. Если номер возникает только один раз в ref, коэффициент коррекции будет равен 0, поскольку <b>Ранг</b> не должны быть настроены для связи.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rank_Avg">
      <MemberSignature Language="C#" Value="public double Rank_Avg (double Arg1, Microsoft.Office.Interop.Excel.Range Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Rank_Avg([in]float64 Arg1, [in]class Microsoft.Office.Interop.Excel.Range Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Rank_Avg(System.Double,Microsoft.Office.Interop.Excel.Range,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Rank_Avg (Arg1 As Double, Arg2 As Range, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16892)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Номер - номер которого ранг, который требуется найти.</param>
        <param name="Arg2">Параметры ref - массив или ссылку на список номеров. Не числовые значения в ссылке игнорируются.</param>
        <param name="Arg3">Заказ - номер, который определяет способ упорядочения. Если порядок равен 0 (нулю) или опущен, Microsoft Excel определяет ранг числа, как в случае ссылки списка сортироваться по убыванию. Если порядок — это любое значение, отличное от нуля, Microsoft Excel определяет ранг числа, как будто справочные материалы по списка сортироваться в восходящем порядке.</param>
        <summary>Возвращает ранг числа в списке чисел. Это связано с его размер относительно других значений в списке. Если несколько значений имеет одинаковый ранг, возвращается средний ранг.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rank_Eq">
      <MemberSignature Language="C#" Value="public double Rank_Eq (double Arg1, Microsoft.Office.Interop.Excel.Range Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Rank_Eq([in]float64 Arg1, [in]class Microsoft.Office.Interop.Excel.Range Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Rank_Eq(System.Double,Microsoft.Office.Interop.Excel.Range,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Rank_Eq (Arg1 As Double, Arg2 As Range, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16893)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Номер - номер которого ранг, который требуется найти.</param>
        <param name="Arg2">Параметры ref - массив или ссылку на список номеров. Не числовые значения в ссылке игнорируются.</param>
        <param name="Arg3">Заказ - номер, который определяет способ упорядочения.</param>
        <summary>Возвращает ранг числа в списке чисел. Ранг числа — это его размер относительно других значений в списке. (Если для сортировки в списке, ранг номер будет положение.)</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если порядок равен 0 (нулю) или опущен, Microsoft Excel определяет ранг числа, как в случае ссылки списка сортироваться по убыванию. </para>
          <para>Если порядок имеет значение, отличное от нуля, Microsoft Excel определяет ранг числа, как если бы ссылка была списка сортироваться в восходящем порядке.</para>
          <para>
            <b>Rank_Eq</b> присваивает повторяющимся числам одинаковый ранг. Тем не менее наличие повторяющихся чисел влияет на ранг последующих чисел. Например в списке целых чисел сортироваться в восходящем порядке, если число 10 появляется дважды и имеет ранг 5, а затем 11 будет иметь ранг 7 (номер не будет иметь ранг 6).</para>
          <para>Для некоторых целей можно использовать определение ранга, с учетом связей в учетной записи. В предыдущем примере нужно оптимизированная ранг 5.5 для числа 10. Для этого, добавьте следующие исправления фактор значение, возвращаемое <b>Rank_Eq</b>. Этот фактор исправление подходит и для случая, когда ранг вычисляется в порядке убывания (заказа = 0 или опущен) или по возрастанию (заказа = ненулевое значение).</para>
          <para>Коэффициент коррекции связанные рангов = [счет(ссылка) + 1 – RANK_EQ (число, ссылка, 0) — RANK_EQ (число, ссылка, 1)]/2.In следующий пример, RANK_EQ(A2,A1:A5,1) равно 3. Коэффициент коррекции является (5 + 1-2-3) / 2 = 0.5 и оптимизированная ранга, с учетом связей в учетной записи — 3 + 0.5 = 3.5. Если номер возникает только один раз в ref, коэффициент коррекции будет 0, так как <b>Rank_Eq</b> не должны быть настроены для связи.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rate">
      <MemberSignature Language="C#" Value="public double Rate (double Arg1, double Arg2, double Arg3, object Arg4, object Arg5, object Arg6);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Rate([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Rate(System.Double,System.Double,System.Double,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Rate (Arg1 As Double, Arg2 As Double, Arg3 As Double, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16444)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">NPer — общее число периодов выплат аннуитета.</param>
        <param name="Arg2">Pmt - платеж за каждый период и не может изменить на протяжении всего периода выплат. Может меняться участника и интересами, но нет других сборов или налоги. Если опущен, необходимо включить в аргументе fv.</param>
        <param name="Arg3">PV - текущее значение — общая сумма всех будущих платежей стоит сейчас.</param>
        <param name="Arg4">БЗ - будущего значения или баланс денежных средств, который нужно достичь после последней выплаты. Если аргумент опущен, то предполагается, что оно является 0 (например, будущее значение ссуды, равно 0).</param>
        <param name="Arg5">Тип — число 0 или 1, обозначающее, когда срок выполнения.</param>
        <param name="Arg6">Прогноз — предполагаемая величина ставки.</param>
        <summary>Возвращает процентную ставку за период аннуитета. ЧАСТОТА вычисляется путем итерации и может иметь ноль или больше решений. Если последовательные результаты функции ставка для достижения в рамках 0,0000001 после 20 итераций, частота возвращает #NUM! значение ошибки.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Подробное описание см nper аргументов, pmt, pv, БЗ и тип, <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Pv(System.Double,System.Double,System.Double,System.Object,System.Object)" />.</para>
          <list type="table">
            <item>
              <term>0 или опущен</term>
              <description>В конце периода</description>
            </item>
            <item>
              <term>1</term>
              <description>С начала периода</description>
            </item>
          </list>
          <para>Если прогноз опущен, то предполагается, что оно является 10 процентов. </para>
          <para>Если <b>скорость</b> для достижения, попробуйте различные значения для предположения. <b>Ставка</b> обычно сходится числами Если прогноз — от 0 до 1.</para>
          <para>Убедитесь в том, что вы являетесь согласованные единицы измерения, которая будет использоваться для указания прогноз и nper. Если ежемесячных выплатах на заем 4 года в 12 процентов годовых, используйте 12% / 12 для прогноз и 4 * 12 для nper. Если производится ежегодных выплат на одном кредита, используйте 12% для прогноз и 4 для nper.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Received">
      <MemberSignature Language="C#" Value="public double Received (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Received([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Received(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Received (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Optional Arg5 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16818)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Сопоставление - Дата сопоставления безопасности. Дата сопоставления безопасности — это дата после даты выпуска, если передается безопасности покупателю.</param>
        <param name="Arg2">Роста - срока. Соответствует дата истечения срока действия безопасности.</param>
        <param name="Arg3">Инвестиции - сумма, всегда тратит в безопасности.</param>
        <param name="Arg4">Скидка — скидка на ценную.</param>
        <param name="Arg5">Основы - способ вычисления дня.</param>
        <summary>Возвращает сумму, полученную к сроку погашения полностью инвестированных ценных бумаг.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Важно</b>: ввода дат с помощью функции Дата или как результат других формул и функций. Например следует используйте Дата(2008;5;23) для 23-мая 2008 г. Если даты вводятся как текст, могут возникнуть проблемы.</para>
          <list type="table">
            <item>
              <term>0 или опущен</term>
              <description>"МНЕ НРАВИТСЯ" (NASD) 30/360</description>
            </item>
            <item>
              <term>1</term>
              <description>Фактический</description>
            </item>
            <item>
              <term>2</term>
              <description>Фактический/360</description>
            </item>
            <item>
              <term>3</term>
              <description>Фактический/365</description>
            </item>
            <item>
              <term>4</term>
              <description>Европейский 30/360</description>
            </item>
          </list>
          <para>Microsoft Excel хранит даты как целые числа, поэтому они могут использоваться в расчетах. По умолчанию 1 января 1900 — серийный номер 1, а 1 января 2008 — номер 39448, так как интервал в днях 1 января 1900. Microsoft Excel для Macintosh использует другую систему дат по умолчанию. </para>
          <para>Дата соглашения — это дата продажи покупателю купон, такие как действия. Срок платежа — это дата истечения срока действия купон. Предположим, например, сроком действия 30 лет выпущена 1 января 2008 года и приобретена покупателем через шесть месяцев после. Дата выпуска будет являться 1 января 2008, Дата соглашения равен 1 июля 2008 г., и срок погашения будет равен 1 января 2038, который — 30 лет после даты выпуска 1 января 2008 года. </para>
          <para>Сопоставления, роста и основы усекаются до целых. </para>
          <para>Если сопоставления или роста не допустимая дата, <b>Получено</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если инвестиций ≤ 0 или скидка ≤ 0, <b>Получено</b> возвращает #NUM! значение ошибки. </para>
          <para>Если основа &lt; 0 или, если основа &gt; 4, <b>Получено</b> возвращает #NUM! значение ошибки. </para>
          <para>Если роста ≥ сопоставления, получено возвращает #NUM! значение ошибки. <b>Получено</b> вычисляется следующим образом: </para>
          <para>На рисунке 1: Формула для расчета метода Received</para>
          <para></para>
          <para></para>
          <para>где:</para>
          <para>B = число дней в году, в зависимости от того, за основу года.</para>
          <para>DIM = количество дней, начиная с выпуска для роста.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public string Replace (string Arg1, double Arg2, double Arg3, string Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Replace([in]string Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]string Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Replace(System.String,System.Double,System.Double,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (Arg1 As String, Arg2 As Double, Arg3 As Double, Arg4 As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Replace(System::String ^ Arg1, double Arg2, double Arg3, System::String ^ Arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16503)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Arg1">Текст, в котором вы хотите заменить некоторые знаки.</param>
        <param name="Arg2">Позиция символа в <paramref name="Arg1" /> , который вы хотите заменить <paramref name="Arg4" />.</param>
        <param name="Arg3">Число знаков в <paramref name="Arg1" /> , который будет <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Replace(System.String,System.Double,System.Double,System.String)" /> метод для замены <paramref name="Arg4" />.</param>
        <param name="Arg4">Текст, который заменяет знаки в <paramref name="Arg1" />.</param>
        <summary>Заменяет часть строки текста, на основе числа символов, с другой строкой текста.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceB">
      <MemberSignature Language="C#" Value="public string ReplaceB (string Arg1, double Arg2, double Arg3, string Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReplaceB([in]string Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]string Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ReplaceB(System.String,System.Double,System.Double,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReplaceB (Arg1 As String, Arg2 As Double, Arg3 As Double, Arg4 As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ReplaceB(System::String ^ Arg1, double Arg2, double Arg3, System::String ^ Arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16591)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Arg1">Старый_текст — текст, в котором вы хотите заменить некоторые знаки.</param>
        <param name="Arg2">Начальная позиция - позиции символа в тексте старый_текст, новый_текст.</param>
        <param name="Arg3">Число_знаков — число знаков в тексте старый_текст, ЗАМЕНИТЕ новый_текст.</param>
        <param name="Arg4">Новый_текст — текст, который заменяет знаки в тексте старый_текст.</param>
        <summary>Функция ЗАМЕНИТЬБ заменяет часть строки текста, на основе числа байтов, укажите на другую строку.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Важно</b>: <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Replace(System.String,System.Double,System.Double,System.String)" /> предназначена для применения с языками, использующими однобайтовых знаков задано (их Изготовителей), а <b>Функция ЗАМЕНИТЬБ</b> предназначена для использования с языками, использующими набор двухбайтовых знаков (DBCS). Язык по умолчанию на вашем компьютере влияет на возвращаемое значение следующим образом:</para>
          <para>
            <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Replace(System.String,System.Double,System.Double,System.String)" />всегда подсчитывает каждый знак как однобайтовые, так и двухбайтовые, как 1, независимо от значения языка по умолчанию. </para>
          <para>Если разрешено редактирование для языка, поддерживающего DBCS и его настройка в качестве языка по умолчанию, 
            <b>Функция ЗАМЕНИТЬБ</b> подсчитывает каждый двухбайтовой как 2. В противном случае <b>ЗАМЕНИТЬБ</b> подсчитывает каждый знак как 1. </para>
          <para>Языки, которые поддерживают Кодировки включают японский, китайский (упрощенное письмо), китайский (традиционное письмо) и корейского языка. </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rept">
      <MemberSignature Language="C#" Value="public string Rept (string Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Rept([in]string Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Rept(System.String,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Rept (Arg1 As String, Arg2 As Double) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Rept(System::String ^ Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16414)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Текст — текст, который необходимо повторить.</param>
        <param name="Arg2">Сколько_раз — положительное число, определяющее сколько раз необходимо повторить текст.</param>
        <summary>Повторяет текст заданное количество раз. Используйте функцию повтор для заполнения ячейки количество экземпляров текстовой строки.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если сколько_раз равно 0 (нулю), <b>то функция Повтор</b> возвращает «» (пустая строка). </para>
          <para>Если сколько_раз не является целым числом, оно сокращается. </para>
          <para>Результат функции <b>Повтор</b> не может быть более 32 767 символов или <b>Повтор</b> возвращает #VALUE!. </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Roman">
      <MemberSignature Language="C#" Value="public string Roman (double Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Roman([in]float64 Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Roman(System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Roman (Arg1 As Double, Optional Arg2 As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16738)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Номер - арабские числа, необходимо преобразовать.</param>
        <param name="Arg2">Форма — число, определяющее тип римская требуется. Римская варьируется от классической в упрощенной и становится все более кратким как значение увеличения формы.</param>
        <summary>Преобразует арабские числа roman, как текст.</summary>
        <returns>To be added.</returns>
        <remarks>
          <list type="table">
            <item>
              <term>0 или опущен</term>
              <description>Классический.</description>
            </item>
            <item>
              <term>1</term>
              <description>Более кратким.</description>
            </item>
            <item>
              <term>2</term>
              <description>Более кратким.</description>
            </item>
            <item>
              <term>3</term>
              <description>Более кратким.</description>
            </item>
            <item>
              <term>4</term>
              <description>Упрощенное письмо.</description>
            </item>
            <item>
              <term>
                <b>значение true</b>
              </term>
              <description>Классический.</description>
            </item>
            <item>
              <term>
                <b>false</b>
              </term>
              <description>Упрощенное письмо.</description>
            </item>
          </list>
          <para>Если число отрицательно, #VALUE! возвращается ошибка. </para>
          <para>Если число больше 3999, #VALUE! возвращается ошибка.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public double Round (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Round([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Round(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Round (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Round(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16411)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Number - номер, который требуется округлить.</param>
        <param name="Arg2">Число_разрядов - указывает количество цифр, которым требуется округлить число.</param>
        <summary>Округляет число до указанного количества десятичных разрядов.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если количество_цифр больше 0 (ноль), число округляется до указанного количества десятичных разрядов. </para>
          <para>Если число_разрядов равно 0, число округляется до ближайшего большего целого числа. </para>
          <para>Если число_разрядов меньше 0, число округляется слева от десятичной запятой.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RoundBahtDown">
      <MemberSignature Language="C#" Value="public double RoundBahtDown (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 RoundBahtDown([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.RoundBahtDown(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function RoundBahtDown (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double RoundBahtDown(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16760)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <summary>Зарезервировано для внутреннего использования.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RoundBahtUp">
      <MemberSignature Language="C#" Value="public double RoundBahtUp (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 RoundBahtUp([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.RoundBahtUp(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function RoundBahtUp (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double RoundBahtUp(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16761)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <summary>Зарезервировано для внутреннего использования.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RoundDown">
      <MemberSignature Language="C#" Value="public double RoundDown (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 RoundDown([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.RoundDown(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function RoundDown (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double RoundDown(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16597)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число — любое действительное число, которое нужно округлить.</param>
        <param name="Arg2">Число_разрядов — количество знаков, с которой требуется округлить число.</param>
        <summary>Округляет число вниз до нуля.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Функция ОКРУГЛВНИЗ как</b>
            <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Round(System.Double,System.Double)" />, за исключением того, что она всегда округляется. </para>
          <para>Если количество_цифр больше 0 (ноль), число округляется в до указанного количества десятичных разрядов. </para>
          <para>Если число_разрядов равно 0, число округляется в до ближайшего большего целого числа. </para>
          <para>Если число_разрядов меньше 0, то число округляется слева от десятичной запятой.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RoundUp">
      <MemberSignature Language="C#" Value="public double RoundUp (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 RoundUp([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.RoundUp(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function RoundUp (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double RoundUp(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16596)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число — любое действительное число, которое нужно округлить.</param>
        <param name="Arg2">Число_разрядов — количество знаков, с которой требуется округлить число.</param>
        <summary>Округление числа нуль (0).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Функция ОКРУГЛВВЕРХ как</b>
            <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Round(System.Double,System.Double)" />, за исключением того, что она всегда округляет число до. </para>
          <para>Если количество_цифр больше 0 (ноль), число округляется в до указанного количества десятичных разрядов. </para>
          <para>Если число_разрядов равно 0, затем номер округляется до ближайшего большего целого числа. </para>
          <para>Если число_разрядов меньше 0, то число округляется слева от десятичной запятой. </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rri">
      <MemberSignature Language="C#" Value="public double Rri (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Rri([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Rri(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Rri (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Rri(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16963)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число периодов для вложения.</param>
        <param name="Arg2">Текущая стоимость инвестиций.</param>
        <param name="Arg3">Будущая стоимость инвестиций.</param>
        <summary>Возвращает эквивалентный процентную ставку для роста инвестиций.</summary>
        <returns>
          <b>ДАННЫЕ ТИПА DOUBLE</b>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RSq">
      <MemberSignature Language="C#" Value="public double RSq (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 RSq([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.RSq(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function RSq (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double RSq(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16697)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Known_y's - массив или интервал точек данных.</param>
        <param name="Arg2">Известные_значения_x, в - массив или интервал точек данных.</param>
        <summary>Возвращает известные_значения_y и известные_значения_x, в квадратные корреляции Пирсона через точек данных. Дополнительные сведения см. в статье <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Pearson(System.Object,System.Object)" />. Значение r квадрат можно интерпретировать как отношение вариации для y с различиями между x.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Аргументы могут быть числа или имена, массивы или ссылки, которые содержат цифры. </para>
          <para>Учитываются логические значения и текст представления чисел, введите непосредственно в списке аргументов. </para>
          <para>Если аргумент массива или ссылки содержит текст, логические значения или пустые ячейки, эти значения игнорируются; Тем не менее включаются ячейки с помощью нулевое значение. </para>
          <para>Аргументы, которые являются значениями ошибки или текст, который не может быть переведены вызывают ошибки. </para>
          <para>Если известные_значения_y и известные_значения_x, в пустой или иметь разные число точек данных, <b>функция КВПИРСОН</b> возвращает значение ошибки # н/д. </para>
          <para>Если известные_значения_y и известные_значения_x, в содержат точки данных только 1, <b>функция КВПИРСОН</b> возвращает #DIV/0!. значение ошибки. </para>
          <para>Формула для корреляции Пирсона, r, — это: </para>
          <para>На рисунке 1: Корреляции Пирсона</para>
          <para></para>
          <para></para>
          <para>где x и y — выборочные средние значения СРЗНАЧ(массив1) и СРЗНАЧ(массив2).</para>
          <para>
            <b>Функция КВПИРСОН</b> возвращает r2, которая является квадрат коэффициента корреляции.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RTD">
      <MemberSignature Language="C#" Value="public object RTD (object progID, object server, object topic1, object topic2, object topic3, object topic4, object topic5, object topic6, object topic7, object topic8, object topic9, object topic10, object topic11, object topic12, object topic13, object topic14, object topic15, object topic16, object topic17, object topic18, object topic19, object topic20, object topic21, object topic22, object topic23, object topic24, object topic25, object topic26, object topic27, object topic28);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object RTD([in]object progID, [in]object server, [in]object topic1, [in]object topic2, [in]object topic3, [in]object topic4, [in]object topic5, [in]object topic6, [in]object topic7, [in]object topic8, [in]object topic9, [in]object topic10, [in]object topic11, [in]object topic12, [in]object topic13, [in]object topic14, [in]object topic15, [in]object topic16, [in]object topic17, [in]object topic18, [in]object topic19, [in]object topic20, [in]object topic21, [in]object topic22, [in]object topic23, [in]object topic24, [in]object topic25, [in]object topic26, [in]object topic27, [in]object topic28) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.RTD(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function RTD (progID As Object, server As Object, topic1 As Object, Optional topic2 As Object, Optional topic3 As Object, Optional topic4 As Object, Optional topic5 As Object, Optional topic6 As Object, Optional topic7 As Object, Optional topic8 As Object, Optional topic9 As Object, Optional topic10 As Object, Optional topic11 As Object, Optional topic12 As Object, Optional topic13 As Object, Optional topic14 As Object, Optional topic15 As Object, Optional topic16 As Object, Optional topic17 As Object, Optional topic18 As Object, Optional topic19 As Object, Optional topic20 As Object, Optional topic21 As Object, Optional topic22 As Object, Optional topic23 As Object, Optional topic24 As Object, Optional topic25 As Object, Optional topic26 As Object, Optional topic27 As Object, Optional topic28 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16763)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="progID" Type="System.Object" />
        <Parameter Name="server" Type="System.Object" />
        <Parameter Name="topic1" Type="System.Object" />
        <Parameter Name="topic2" Type="System.Object" />
        <Parameter Name="topic3" Type="System.Object" />
        <Parameter Name="topic4" Type="System.Object" />
        <Parameter Name="topic5" Type="System.Object" />
        <Parameter Name="topic6" Type="System.Object" />
        <Parameter Name="topic7" Type="System.Object" />
        <Parameter Name="topic8" Type="System.Object" />
        <Parameter Name="topic9" Type="System.Object" />
        <Parameter Name="topic10" Type="System.Object" />
        <Parameter Name="topic11" Type="System.Object" />
        <Parameter Name="topic12" Type="System.Object" />
        <Parameter Name="topic13" Type="System.Object" />
        <Parameter Name="topic14" Type="System.Object" />
        <Parameter Name="topic15" Type="System.Object" />
        <Parameter Name="topic16" Type="System.Object" />
        <Parameter Name="topic17" Type="System.Object" />
        <Parameter Name="topic18" Type="System.Object" />
        <Parameter Name="topic19" Type="System.Object" />
        <Parameter Name="topic20" Type="System.Object" />
        <Parameter Name="topic21" Type="System.Object" />
        <Parameter Name="topic22" Type="System.Object" />
        <Parameter Name="topic23" Type="System.Object" />
        <Parameter Name="topic24" Type="System.Object" />
        <Parameter Name="topic25" Type="System.Object" />
        <Parameter Name="topic26" Type="System.Object" />
        <Parameter Name="topic27" Type="System.Object" />
        <Parameter Name="topic28" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="progID">Строка, представляющая программный идентификатор сервера в режиме реального времени.</param>
        <param name="server">Имя сервера, <b>пустую</b> строку или <b>vbNullString</b> константу.</param>
        <param name="topic1">
          <paramref name="topic1" />–<paramref name="topic28" /><b>Строку</b> , представляющую раздела.</param>
        <param name="topic2">To be added.</param>
        <param name="topic3">To be added.</param>
        <param name="topic4">To be added.</param>
        <param name="topic5">To be added.</param>
        <param name="topic6">To be added.</param>
        <param name="topic7">To be added.</param>
        <param name="topic8">To be added.</param>
        <param name="topic9">To be added.</param>
        <param name="topic10">To be added.</param>
        <param name="topic11">To be added.</param>
        <param name="topic12">To be added.</param>
        <param name="topic13">To be added.</param>
        <param name="topic14">To be added.</param>
        <param name="topic15">To be added.</param>
        <param name="topic16">To be added.</param>
        <param name="topic17">To be added.</param>
        <param name="topic18">To be added.</param>
        <param name="topic19">To be added.</param>
        <param name="topic20">To be added.</param>
        <param name="topic21">To be added.</param>
        <param name="topic22">To be added.</param>
        <param name="topic23">To be added.</param>
        <param name="topic24">To be added.</param>
        <param name="topic25">To be added.</param>
        <param name="topic26">To be added.</param>
        <param name="topic27">To be added.</param>
        <param name="topic28">To be added.</param>
        <summary>Этот метод подключается к источнику для получения данных реального времени.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Search">
      <MemberSignature Language="C#" Value="public double Search (string Arg1, string Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Search([in]string Arg1, [in]string Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Search(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Search (Arg1 As String, Arg2 As String, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16466)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
        <Parameter Name="Arg2" Type="System.String" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Искомого - текст, который требуется найти.</param>
        <param name="Arg2">Левого края текста — текст, в котором нужно найти искомого.</param>
        <param name="Arg3">Начальная позиция — номер знака в левого края текста, с которого необходимо начать поиск.</param>
        <summary>
          <b>Поиск</b> и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SearchB(System.String,System.String,System.Object)" /> найдите одной текстовой строки в другую текстовую строку и возвращения положение начала первой текстовой строки второй текстовой строки.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Важно</b>: <b>поиска</b> предназначена для использования с языками, использующими набор однобайтовых знаков (их Изготовителей), а <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SearchB(System.String,System.String,System.Object)" /> имеет значение предназначена для применения с языками, использующими двухбайтовых знаков (DBCS). Язык по умолчанию на вашем компьютере влияет на возвращаемое значение следующим образом:<b>Поиск</b> всегда подсчитывает каждый знак как однобайтовые, так и двухбайтовые, как 1, независимо от значения языка по умолчанию. <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SearchB(System.String,System.String,System.Object)" />Подсчитывает каждого двухбайтовой как 2, если разрешено редактирование для языка, поддерживающего DBCS и его настройка в качестве языка по умолчанию. В противном случае <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SearchB(System.String,System.String,System.Object)" /> подсчитывает каждый знак как 1.</para>
          <para>Языки, которые поддерживают Кодировки включают японский, китайский (упрощенное письмо), китайский (традиционное письмо) и корейского языка. </para>
          <para>Использование <b>поиска</b> и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SearchB(System.String,System.String,System.Object)" /> для определения расположения знака или текстовой строки в другую строку текста, можно использовать MID и ПСТРБ или <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Replace(System.String,System.Double,System.Double,System.String)" /> и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ReplaceB(System.String,System.Double,System.Double,System.String)" /> функции для изменения текста. </para>
          <para>
            <b>Поиск</b> и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SearchB(System.String,System.String,System.Object)" /> регистр не учитывается. Если вы хотите выполнять поиск с учетом регистра, можно использовать <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Find(System.String,System.String,System.Object)" /> и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.FindB(System.String,System.String,System.Object)" />. </para>
          <para>В искомого можно использовать подстановочные знаки, вопросительные знаки (?) и звездочки (*). Вопросительный знак соответствует любой отдельный знак; Звездочка соответствует любой последовательности символов. Если вы хотите найти вопросительный знак или звездочка, введите тильдой (~) перед знаком. </para>
          <para>Если искомого не найден, #VALUE! возвращается ошибка. </para>
          <para>Если опущен, то предполагается, что оно является 1. </para>
          <para>Если начальная позиция не больше, чем нуль (0) или больше, чем длина от левого края текста, #VALUE! возвращается ошибка. </para>
          <para>Используйте Начальная позиция пропустить указанное количество символов. Использование <b>поиска</b> в качестве примера, предположим, что вы работаете с текстовая строка «AYF0093. YoungMensApparel». Чтобы найти номер первого «Y» в описательную часть текстовой строки, производиться 8, чтобы поиск серийный номер часть текста не выполняется. <b>Поиск</b> начинается с символа 8, поиск искомого на следующий символ и возвращает число 9. <b>Поиск</b> всегда возвращает число знаков от начала от левого края текста, подсчет знаков, которое можно пропустить, если начальная позиция больше, чем 1.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SearchB">
      <MemberSignature Language="C#" Value="public double SearchB (string Arg1, string Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 SearchB([in]string Arg1, [in]string Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SearchB(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function SearchB (Arg1 As String, Arg2 As String, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16590)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
        <Parameter Name="Arg2" Type="System.String" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Искомого - текст, который требуется найти.</param>
        <param name="Arg2">Левого края текста — текст, в котором нужно найти искомого.</param>
        <param name="Arg3">Начальная позиция — номер знака в левого края текста, с которого необходимо начать поиск.</param>
        <summary>Поиск и ПОИСКБ найдите одной текстовой строки в другую текстовую строку и возвращения положение начала первой текстовой строки второй текстовой строки.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Важно</b>: <b>поиска</b> предназначена для использования с языками, использующими набор однобайтовых знаков (их Изготовителей), а <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SearchB(System.String,System.String,System.Object)" /> имеет значение предназначена для применения с языками, использующими двухбайтовых знаков (DBCS). Язык по умолчанию на вашем компьютере влияет на возвращаемое значение следующим образом:<b>Поиск</b> всегда подсчитывает каждый знак как однобайтовые, так и двухбайтовые, как 1, независимо от значения языка по умолчанию. <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SearchB(System.String,System.String,System.Object)" />Подсчитывает каждого двухбайтовой как 2, если разрешено редактирование для языка, поддерживающего DBCS и его настройка в качестве языка по умолчанию. В противном случае <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SearchB(System.String,System.String,System.Object)" /> подсчитывает каждый знак как 1.</para>
          <para>Языки, которые поддерживают Кодировки включают японский, китайский (упрощенное письмо), китайский (традиционное письмо) и корейского языка. </para>
          <para>Использование <b>поиска</b> и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SearchB(System.String,System.String,System.Object)" /> для определения расположения знака или текстовой строки в другую строку текста, можно использовать MID и ПСТРБ или <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Replace(System.String,System.Double,System.Double,System.String)" /> и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ReplaceB(System.String,System.Double,System.Double,System.String)" /> функции для изменения текста. </para>
          <para>
            <b>Поиск</b> и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SearchB(System.String,System.String,System.Object)" /> регистр не учитывается. Если вы хотите выполнять поиск с учетом регистра, можно использовать <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Find(System.String,System.String,System.Object)" /> и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.FindB(System.String,System.String,System.Object)" />. </para>
          <para>В искомого можно использовать подстановочные знаки, вопросительные знаки (?) и звездочки (*). Вопросительный знак соответствует любой отдельный знак; Звездочка соответствует любой последовательности символов. Если вы хотите найти вопросительный знак или звездочка, введите тильдой (~) перед знаком. </para>
          <para>Если искомого не найден, #VALUE! возвращается ошибка. </para>
          <para>Если опущен, то предполагается, что оно является 1. </para>
          <para>Если начальная позиция не больше, чем нуль (0) или больше, чем длина от левого края текста, #VALUE! возвращается ошибка. </para>
          <para>Используйте Начальная позиция пропустить указанное количество символов. Использование <b>поиска</b> в качестве примера, предположим, что вы работаете с текстовая строка «AYF0093. YoungMensApparel». Чтобы найти номер первого «Y» в описательную часть текстовой строки, производиться 8, чтобы поиск серийный номер часть текста не выполняется. <b>Поиск</b> начинается с символа 8, поиск искомого на следующий символ и возвращает число 9. <b>Поиск</b> всегда возвращает число знаков от начала от левого края текста, подсчет знаков, которое можно пропустить, если начальная позиция больше, чем 1.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sec">
      <MemberSignature Language="C#" Value="public double Sec (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Sec([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Sec(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Sec (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Sec(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16938)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Угол в радианах, для которых требуется секанс.</param>
        <summary>Возвращает секанс угла.</summary>
        <returns>
          <b>ДАННЫЕ ТИПА DOUBLE</b>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sech">
      <MemberSignature Language="C#" Value="public double Sech (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Sech([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Sech(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Sech (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Sech(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16939)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Угол в радианах, для которых требуется Гиперболический секанс.</param>
        <summary>Возвращает Гиперболический секанс угла.</summary>
        <returns>
          <b>ДАННЫЕ ТИПА DOUBLE</b>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeriesSum">
      <MemberSignature Language="C#" Value="public double SeriesSum (object Arg1, object Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 SeriesSum([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SeriesSum(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function SeriesSum (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double SeriesSum(System::Object ^ Arg1, System::Object ^ Arg2, System::Object ^ Arg3, System::Object ^ Arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16798)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">X — значение ряда питания.</param>
        <param name="Arg2">N — это начальное степень для возведения x.</param>
        <param name="Arg3">M - шаг увеличения n для каждого термина в серии.</param>
        <param name="Arg4">Коэффициенты — набор коэффициентов с какой каждый последующий степени x умножается. Количество значений в аргументе коэффициенты определяет количество терминов в серии power. Например если в аргументе коэффициенты три значения, затем будет три условия питания серии.</param>
        <summary>Возвращает сумму питания серии, по формуле: SERIES(x,n,m,a) = a1xn+a2x(n+m)+a3x(n+2m)+...+aix(n+(i-1)m)</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если аргумент не является числом, <b>функция ряд.сумм</b> возвращает #VALUE! значение ошибки.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sinh">
      <MemberSignature Language="C#" Value="public double Sinh (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Sinh([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Sinh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Sinh (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Sinh(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16613)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число — любое действительное число.</param>
        <summary>Возвращает гиперболический синус числа.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Формула для расчета гиперболического синуса имеет вид:</para>
          <para>На рисунке 1: Формула для расчета гиперболического синуса</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Skew">
      <MemberSignature Language="C#" Value="public double Skew (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Skew([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Skew(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Skew (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16707)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число1, число2... - 1 до 30 аргументов, для которых требуется вычислить точкой с запятой. Можно также использовать массив или ссылку на массив вместо аргументов, разделенных запятыми.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Возвращает расчета асимметрии рассылки. Точкой с запятой характеризует степень распределения относительно его среднего. Положительное расчета асимметрии указывает рассылки сторону положительных значений. Точкой с запятой отрицательные указывает рассылки сторону отрицательных значений.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Аргументы могут быть числа или имена, массивы или ссылки, которые содержат цифры. </para>
          <para>Учитываются логические значения и текст представления чисел, введите непосредственно в списке аргументов. </para>
          <para>Если аргумент массива или ссылки содержит текст, логические значения или пустые ячейки, эти значения игнорируются; Тем не менее включаются ячейки с помощью нулевое значение. </para>
          <para>Аргументы, которые являются значениями ошибки или текст, который не может быть переведены вызывают ошибки. </para>
          <para>Если имеется менее трех точек данных, или стандартное отклонение выборки равно нулю, <b>отклонения</b> возвращает #DIV/0!. значение ошибки. </para>
          <para>Формула для расчета асимметрии определяются следующим образом. </para>
          <para>На рисунке 1: Формула для расчета асимметрии</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Skew_p">
      <MemberSignature Language="C#" Value="public double Skew_p (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Skew_p([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Skew_p(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Skew_p (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16960)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">1 до 254 числа или имена, массивы или ссылки, которые содержат цифры, для которого вы хотите расчета асимметрии заполнения.</param>
        <param name="Arg2">1 до 254 числа или имена, массивы или ссылки, которые содержат цифры, для которого вы хотите расчета асимметрии заполнения.</param>
        <param name="Arg3">1 до 254 числа или имена, массивы или ссылки, которые содержат цифры, для которого вы хотите расчета асимметрии заполнения.</param>
        <param name="Arg4">1 до 254 числа или имена, массивы или ссылки, которые содержат цифры, для которого вы хотите расчета асимметрии заполнения.</param>
        <param name="Arg5">1 до 254 числа или имена, массивы или ссылки, которые содержат цифры, для которого вы хотите расчета асимметрии заполнения.</param>
        <param name="Arg6">1 до 254 числа или имена, массивы или ссылки, которые содержат цифры, для которого вы хотите расчета асимметрии заполнения.</param>
        <param name="Arg7">1 до 254 числа или имена, массивы или ссылки, которые содержат цифры, для которого вы хотите расчета асимметрии заполнения.</param>
        <param name="Arg8">1 до 254 числа или имена, массивы или ссылки, которые содержат цифры, для которого вы хотите расчета асимметрии заполнения.</param>
        <param name="Arg9">1 до 254 числа или имена, массивы или ссылки, которые содержат цифры, для которого вы хотите расчета асимметрии заполнения.</param>
        <param name="Arg10">1 до 254 числа или имена, массивы или ссылки, которые содержат цифры, для которого вы хотите расчета асимметрии заполнения.</param>
        <param name="Arg11">1 до 254 числа или имена, массивы или ссылки, которые содержат цифры, для которого вы хотите расчета асимметрии заполнения.</param>
        <param name="Arg12">1 до 254 числа или имена, массивы или ссылки, которые содержат цифры, для которого вы хотите расчета асимметрии заполнения.</param>
        <param name="Arg13">1 до 254 числа или имена, массивы или ссылки, которые содержат цифры, для которого вы хотите расчета асимметрии заполнения.</param>
        <param name="Arg14">1 до 254 числа или имена, массивы или ссылки, которые содержат цифры, для которого вы хотите расчета асимметрии заполнения.</param>
        <param name="Arg15">1 до 254 числа или имена, массивы или ссылки, которые содержат цифры, для которого вы хотите расчета асимметрии заполнения.</param>
        <param name="Arg16">1 до 254 числа или имена, массивы или ссылки, которые содержат цифры, для которого вы хотите расчета асимметрии заполнения.</param>
        <param name="Arg17">1 до 254 числа или имена, массивы или ссылки, которые содержат цифры, для которого вы хотите расчета асимметрии заполнения.</param>
        <param name="Arg18">1 до 254 числа или имена, массивы или ссылки, которые содержат цифры, для которого вы хотите расчета асимметрии заполнения.</param>
        <param name="Arg19">1 до 254 числа или имена, массивы или ссылки, которые содержат цифры, для которого вы хотите расчета асимметрии заполнения.</param>
        <param name="Arg20">1 до 254 числа или имена, массивы или ссылки, которые содержат цифры, для которого вы хотите расчета асимметрии заполнения.</param>
        <param name="Arg21">1 до 254 числа или имена, массивы или ссылки, которые содержат цифры, для которого вы хотите расчета асимметрии заполнения.</param>
        <param name="Arg22">1 до 254 числа или имена, массивы или ссылки, которые содержат цифры, для которого вы хотите расчета асимметрии заполнения.</param>
        <param name="Arg23">1 до 254 числа или имена, массивы или ссылки, которые содержат цифры, для которого вы хотите расчета асимметрии заполнения.</param>
        <param name="Arg24">1 до 254 числа или имена, массивы или ссылки, которые содержат цифры, для которого вы хотите расчета асимметрии заполнения.</param>
        <param name="Arg25">1 до 254 числа или имена, массивы или ссылки, которые содержат цифры, для которого вы хотите расчета асимметрии заполнения.</param>
        <param name="Arg26">1 до 254 числа или имена, массивы или ссылки, которые содержат цифры, для которого вы хотите расчета асимметрии заполнения.</param>
        <param name="Arg27">1 до 254 числа или имена, массивы или ссылки, которые содержат цифры, для которого вы хотите расчета асимметрии заполнения.</param>
        <param name="Arg28">1 до 254 числа или имена, массивы или ссылки, которые содержат цифры, для которого вы хотите расчета асимметрии заполнения.</param>
        <param name="Arg29">1 до 254 числа или имена, массивы или ссылки, которые содержат цифры, для которого вы хотите расчета асимметрии заполнения.</param>
        <param name="Arg30">1 до 254 числа или имена, массивы или ссылки, которые содержат цифры, для которого вы хотите расчета асимметрии заполнения.</param>
        <summary>Возвращает расчета асимметрии рассылки совокупности: Характеристика степень распределения относительно его среднего.</summary>
        <returns>
          <b>ДАННЫЕ ТИПА DOUBLE</b>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sln">
      <MemberSignature Language="C#" Value="public double Sln (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Sln([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Sln(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Sln (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Sln(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16526)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Затраты - начальная стоимость актива.</param>
        <param name="Arg2">Восстановленной - значение в конце амортизации (иногда называется стоимость актива).</param>
        <param name="Arg3">Срок - число периодов, за которые актива (иногда называется периодом амортизации).</param>
        <summary>Возвращает линейное снижение стоимости актива за один период.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Slope">
      <MemberSignature Language="C#" Value="public double Slope (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Slope([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Slope(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Slope (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Slope(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16699)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Known_y - массив или диапазон ячеек числовые зависимые точки данных.</param>
        <param name="Arg2">Известные_значения_x, в - набор независимых точек данных.</param>
        <summary>Возвращает уклона линии регрессии линейно до точки данных известные_значения_y и известные_значения_x, в. Расстояние по вертикали, разделенные на расстояние по горизонтали между любыми двумя точками в строке частота изменений по линии регрессии проходит.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Аргументы должны быть числа или имена, массивы или ссылки, которые содержат цифры. </para>
          <para>Если аргумент массива или ссылки содержит текст, логические значения или пустые ячейки, эти значения игнорируются; Тем не менее включаются ячейки с помощью нулевое значение. </para>
          <para>Если известные_значения_y и известные_значения_x, в пусты или содержат различное число точек данных, <b>Уклона</b> возвращает значение ошибки # н/д. </para>
          <para>Формула для расчета уклона линии регрессии — это: </para>
          <para>На рисунке 1: Формула для расчета уклона линии регрессии</para>
          <para></para>
          <para></para>
          <para>Основной алгоритм, используемый в <b>Уклона</b> и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Intercept(System.Object,System.Object)" /> функции, отличается от базового алгоритм, используемый в <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LinEst(System.Object,System.Object,System.Object,System.Object)" /> функции. Различие между эти алгоритмы может привести к разные результаты, когда данные не определено и коллинеарными. Например если точки данных known_y аргумент 0 и точек данных аргумента известные_значения_x являются 1: </para>
          <list type="bullet">
            <item>
              <description>
                <b>Уклона</b> и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Intercept(System.Object,System.Object)" /> возвращает #DIV/0! Ошибка. <b>Уклона</b> и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Intercept(System.Object,System.Object)" /> алгоритм выполняет поиск только один ответ, а в этом случае может быть несколько ответов. </description>
            </item>
            <item>
              <description>
                <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LinEst(System.Object,System.Object,System.Object,System.Object)" />Возвращает значение 0. <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LinEst(System.Object,System.Object,System.Object,System.Object)" /> Алгоритм предназначен для возврата разумные результаты для коллинеарными данных, а в этом случае можно найти по крайней мере один ответ.</description>
            </item>
          </list>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Small">
      <MemberSignature Language="C#" Value="public double Small (object Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Small([in]object Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Small(System.Object,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Small (Arg1 As Object, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Small(System::Object ^ Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16710)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Массив — массив или диапазон числовых данных, для которого определяется k ое наименьшее значение.</param>
        <param name="Arg2">K — позиция (начиная с наименьшей) в массиве или диапазон данных для возврата.</param>
        <summary>Возвращает k ое наименьшее значение в наборе данных. Эта функция используется для возвращения значений с помощью определенное относительное положение в наборе данных.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если массив пуст, <b>небольшой</b> возвращает #NUM! значение ошибки. </para>
          <para>Если k ≤ 0 или k больше, чем количество данных указывает, <b>небольшой</b> возвращает #NUM! значение ошибки. </para>
          <para>Если n — это число точек данных в массив, то наименьший(массив;1) равняется наименьшее значение и наименьший(массив;n) равняется наибольшее значение.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SqrtPi">
      <MemberSignature Language="C#" Value="public double SqrtPi (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 SqrtPi([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SqrtPi(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function SqrtPi (Arg1 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double SqrtPi(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16800)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Номер - номер, на которое умножается пи.</param>
        <summary>Возвращает квадратный корень из (число * пи).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если число &lt; 0, <b>то функция КОРЕНЬПИ</b> возвращает #NUM! значение ошибки.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Standardize">
      <MemberSignature Language="C#" Value="public double Standardize (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Standardize([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Standardize(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Standardize (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Standardize(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16681)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">X - значение, которые необходимо выполнять нормализацию.</param>
        <param name="Arg2">Среднее - геометрического распределения.</param>
        <param name="Arg3">Стандартного отклонения - стандартное отклонение распределения.</param>
        <summary>Возвращает нормализованного значения для распределения особенностями среднего и стандартного отклонения.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если стандартное_откл ≤ 0, <b>нормализация</b> возвращает #NUM! значение ошибки. </para>
          <para>Формула для расчета нормализованного значения — это: </para>
          <para>На рисунке 1: Формула для расчета нормализованного значения</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StDev">
      <MemberSignature Language="C#" Value="public double StDev (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 StDev([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.StDev(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function StDev (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16396)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число1, число2,... - 1 до 30 числовых аргументов, соответствующих выборке совокупности. Можно также использовать массив или ссылку на массив вместо аргументов, разделенных запятыми.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Оценивает стандартное отклонение на примере. Стандартное отклонение — это мера как отличаются значения из множества от среднего значения (среднего).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Внимание!</b>: Эта функция была заменена один или несколько новых функций, который может предоставлять улучшенные точность и лучше, имена которых отражают их использования. Эта функция по-прежнему доступна для обеспечения совместимости с предыдущими версиями Excel. Тем не менее если обратной совместимости не требуется, можно теперь с помощью новых функций, так как они более точно описывает их функциональных возможностей. Дополнительные сведения о новой функции можно <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.StDev_S(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> метод.</para>
          <para>
            <b>StDev</b> предполагается, что аргументы являются пример заполнения. Если данные полностью представляют собой заполнение, для вычисления с помощью <b>StDev</b>стандартное отклонение. </para>
          <para>Стандартное отклонение вычисляется с использованием «несмещенного» или «n-1» метода. </para>
          <para>Аргументы могут быть числа или имена, массивы или ссылки, которые содержат цифры. </para>
          <para>Учитываются логические значения и текст представления чисел, введите непосредственно в списке аргументов. </para>
          <para>Если аргумент является массив или ссылка, учитываются только числа в этом массив или ссылку. Пустые ячейки, логические значения, текст или значения ошибок в массиве или ссылке игнорируются. </para>
          <para>Аргументы, которые являются значениями ошибки или текст, который не может быть переведены вызывают ошибки. </para>
          <para>
            <b>StDev</b> использует следующую формулу: </para>
          <para>На рисунке 1: Формула для расчета метода StDev</para>
          <para></para>
          <para></para>
          <para>где x — выборочное среднее СРЗНАЧ(Число1,число2,...), а n — размер выборки.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StDev_P">
      <MemberSignature Language="C#" Value="public double StDev_P (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 StDev_P([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.StDev_P(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function StDev_P (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16895)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число1, число2,... - 1 до 30 числовых аргументов, соответствующих совокупности. Можно также использовать массив или ссылку на массив вместо аргументов, разделенных запятыми (,).</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Вычисляет стандартное отклонение по всей совокупности. Стандартное отклонение — это мера как отличаются значения из множества от среднего значения (среднего).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>StDev_P</b> предполагается, что аргументы являются совокупности. Если данные выборкой совокупности, для вычисления стандартное отклонение, с помощью <b>StDev_P</b>. </para>
          <para>Для большой образец размеров <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.StDev_S(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> и <b>StDev_P</b> возвращают примерно равные значения. </para>
          <para>Стандартное отклонение вычисляется с использованием «смещенного» или «n» метода. </para>
          <para>Аргументы могут быть числа или имена, массивы или ссылки, которые содержат цифры. </para>
          <para>Учитываются логические значения и текст представления чисел, введите непосредственно в списке аргументов. </para>
          <para>Если аргумент является массив или ссылка, учитываются только числа в этом массив или ссылку. Пустые ячейки, логические значения, текст или значения ошибок в массиве или ссылке игнорируются. </para>
          <para>Аргументы, которые являются значениями ошибки или текст, который не может быть переведены вызывают ошибки. </para>
          <para>
            <b>StDev_P</b> использует следующую формулу: </para>
          <para>На рисунке 1: Формула для расчета метода StDev_P</para>
          <para></para>
          <para></para>
          <para>где x — выборочное среднее СРЗНАЧ(Число1,число2,...), а n — размер выборки. </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StDev_S">
      <MemberSignature Language="C#" Value="public double StDev_S (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 StDev_S([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.StDev_S(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function StDev_S (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16894)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число1, число2,... - 1 до 30 числовых аргументов, соответствующих выборке совокупности. Можно также использовать массив или ссылку на массив вместо аргументов, разделенных запятыми.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Оценивает стандартное отклонение на примере. Стандартное отклонение — это мера как отличаются значения из множества от среднего значения (среднего).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>StDev_S</b> предполагается, что аргументы являются пример заполнения. Если данные полностью представляют собой заполнение, для вычисления стандартное отклонение с помощью <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.StDev_P(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />. </para>
          <para>Стандартное отклонение вычисляется с использованием «несмещенного» или «n-1» метода. </para>
          <para>Аргументы могут быть числа или имена, массивы или ссылки, которые содержат цифры. </para>
          <para>Учитываются логические значения и текст представления чисел, введите непосредственно в списке аргументов. </para>
          <para>Если аргумент является массив или ссылка, учитываются только числа в этом массив или ссылку. Пустые ячейки, логические значения, текст или значения ошибок в массиве или ссылке игнорируются. </para>
          <para>Аргументы, которые являются значениями ошибки или текст, который не может быть переведены вызывают ошибки. </para>
          <para>
            <b>StDev_S</b> использует следующую формулу: </para>
          <para>На рисунке 1: Формула для расчета метода StDev_S</para>
          <para></para>
          <para></para>
          <para>где x — выборочное среднее СРЗНАЧ(Число1,число2,...), а n — размер выборки.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StDevP">
      <MemberSignature Language="C#" Value="public double StDevP (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 StDevP([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.StDevP(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function StDevP (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16577)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число1, число2,... - 1 до 30 числовых аргументов, соответствующих выборке совокупности. Можно также использовать массив или ссылку на массив вместо аргументов, разделенных запятыми.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Вычисляет стандартное отклонение по всей совокупности. Стандартное отклонение — это мера как отличаются значения из множества от среднего значения (среднего).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Внимание!</b>: Эта функция была заменена один или несколько новых функций, который может предоставлять улучшенные точность и лучше, имена которых отражают их использования. Эта функция по-прежнему доступна для обеспечения совместимости с предыдущими версиями Excel. Тем не менее если обратной совместимости не требуется, можно теперь с помощью новых функций, так как они более точно описывает их функциональных возможностей. Дополнительные сведения о новой функции можно <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.StDev_P(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> метод.</para>
          <para>
            <b>StDevP</b> предполагается, что аргументы являются совокупности. Если данные выборкой совокупности, для вычисления стандартное отклонение с помощью <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.StDev(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />. </para>
          <para>Для большой образец размеров <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.StDev(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> и <b>StDevP</b> возвращают примерно равные значения. </para>
          <para>Стандартное отклонение вычисляется с использованием «смещенного» или «n» метода. Аргументы могут быть числа или имена, массивы или ссылки, которые содержат цифры. </para>
          <para>Учитываются логические значения и текст представления чисел, введите непосредственно в списке аргументов. </para>
          <para>Если аргумент является массив или ссылка, учитываются только числа в этом массив или ссылку. Пустые ячейки, логические значения, текст или значения ошибок в массиве или ссылке игнорируются. </para>
          <para>Аргументы, которые являются значениями ошибки или текст, который не может быть переведены вызывают ошибки. <b>StDevP</b> использует следующую формулу: </para>
          <para>На рисунке 1: Формула для расчета метода StDevP</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StEyx">
      <MemberSignature Language="C#" Value="public double StEyx (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 StEyx([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.StEyx(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function StEyx (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double StEyx(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16698)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Known_y's - массив или диапазон зависимых точек данных.</param>
        <param name="Arg2">Известные_значения_x, в - массив или диапазон независимых точек данных.</param>
        <summary>Возвращает расчета стандартной погрешности прогнозируемого значения y для каждого x в регрессии. Стандартного сообщения об ошибке — это мера ошибки в прогноза y для отдельного x.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Аргументы могут быть числа или имена, массивы или ссылки, которые содержат цифры. </para>
          <para>Учитываются логические значения и текст представления чисел, введите непосредственно в списке аргументов. </para>
          <para>Если аргумент массива или ссылки содержит текст, логические значения или пустые ячейки, эти значения игнорируются; Тем не менее включаются ячейки с помощью нулевое значение. </para>
          <para>Аргументы, которые являются значениями ошибки или текст, который не может быть переведены вызывают ошибки. </para>
          <para>Если известные_значения_y и известные_значения_x, в разных число точек данных, <b>то функция СТОШYX</b> возвращает значение ошибки # н/д. </para>
          <para>Если известные_значения_y и известные_значения_x, в пустой или иметь менее трех точек данных, <b>то функция СТОШYX</b> возвращает #DIV/0! значение ошибки. </para>
          <para>Формула для расчета стандартной погрешности прогнозируемого значения y — это: </para>
          <para>На рисунке 1: Формула для расчета стандартной погрешности прогнозируемого значения y</para>
          <para></para>
          <para></para>
          <para>где x и y — выборочные средние значения СРЗНАЧ(массив1) и СРЗНАЧ(массив2), а n — размер выборки.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Substitute">
      <MemberSignature Language="C#" Value="public string Substitute (string Arg1, string Arg2, string Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Substitute([in]string Arg1, [in]string Arg2, [in]string Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Substitute(System.String,System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Substitute (Arg1 As String, Arg2 As String, Arg3 As String, Optional Arg4 As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16504)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
        <Parameter Name="Arg2" Type="System.String" />
        <Parameter Name="Arg3" Type="System.String" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Текст — текст или ссылка на ячейку, содержащую текст, для которого требуется замена знаков.</param>
        <param name="Arg2">Старый_текст — текст, который вы хотите заменить.</param>
        <param name="Arg3">Новый_текст — текст, стар_текст.</param>
        <param name="Arg4">Номер_вхождения - определяет, какое вхождение текста стар_текст нужно заменить на нов_текст. Если вы Номер_вхождения только это вхождение стар_текст будет заменен. В противном случае каждого вхождения стар_текст в тексте изменяется на нов_текст.</param>
        <summary>Нов_текст замены текста стар_текст в текстовой строке. Используйте ЗАМЕНЫ, когда нужно заменить определенный текст в текстовой строке; Используйте заменить, если вы хотите заменить весь текст, который встречается в определенное расположение в текстовую строку.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subtotal">
      <MemberSignature Language="C#" Value="public double Subtotal (double Arg1, Microsoft.Office.Interop.Excel.Range Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Subtotal([in]float64 Arg1, [in]class Microsoft.Office.Interop.Excel.Range Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Subtotal(System.Double,Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Subtotal (Arg1 As Double, Arg2 As Range, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16728)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число, указывающее функции объединения для использования с помощью метода.</param>
        <param name="Arg2">Первый <see cref="T:Microsoft.Office.Interop.Excel.Range" /> объект, для которого вычислить промежуточные итоги.</param>
        <param name="Arg3">
          <paramref name="Arg3" />–<paramref name="Arg30" /> Последующие <see cref="T:Microsoft.Office.Interop.Excel.Range" /> объектов, для которых вычислить промежуточные итоги.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Создает промежуточные итоги.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public double Sum (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Sum([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Sum(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Sum (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16388)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число1, число2,... - 1 до 30 аргументов, для которых требуется итог или сумму.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Добавляет все числа в диапазоне ячеек.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Учитываются числа, логические значения и текст представления чисел, введите непосредственно в списке аргументов. </para>
          <para>Если аргумент является массив или ссылка, учитываются только числа в этом массив или ссылку. Пустые ячейки, логические значения или текст в массиве или ссылке игнорируются. </para>
          <para>Аргументы, которые являются значениями ошибки или текст, который не может быть переведены вызывают ошибки.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SumIf">
      <MemberSignature Language="C#" Value="public double SumIf (Microsoft.Office.Interop.Excel.Range Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 SumIf([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SumIf(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function SumIf (Arg1 As Range, Arg2 As Object, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16729)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Диапазон - диапазон ячеек, которые будут вычисляется по критериям.</param>
        <param name="Arg2">Критерий — критерий в форме числа, выражения или текста, который определяет ячеек, которые будут добавлены. Например, критерий может быть выражен как 32, «32», "&gt;32" или «apples».</param>
        <param name="Arg3">Диапазон суммирования - фактические ячейки для добавления, если соответствующие им ячейки в диапазоне соответствующие условиям. Если диапазон суммирования указан, ячеек в диапазоне как вычисляются по критериям и добавлено, если они соответствуют условиям.</param>
        <summary>Добавляет ячейки, заданному критерию.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Диапазон суммирования не нужно быть размера и формы как диапазон. Фактические ячейки, добавляемые определяются с помощью верхней, левой ячейки в диапазон суммирования как начало ячейки, а затем Включение в размеру и форме диапазоном ячеек, которые соответствуют. Пример:</para>
          <list type="table">
            <item>
              <term>ЯЧЕЙКИ A1: A5</term>
              <description>B1: B5.</description>
              <description>B1: B5.</description>
            </item>
            <item>
              <term>ЯЧЕЙКИ A1: A5</term>
              <description>B1: B3</description>
              <description>B1: B5.</description>
            </item>
            <item>
              <term>A1: B4</term>
              <description>C1:D4</description>
              <description>C1:D4</description>
            </item>
            <item>
              <term>A1: B4</term>
              <description>C1:C2</description>
              <description>C1:D4</description>
            </item>
          </list>
          <para>Можно использовать подстановочные знаки, вопросительные знаки (?) и звездочки (*) в условия. Вопросительный знак соответствует любой отдельный знак; Звездочка соответствует любой последовательности символов. Если вы хотите найти вопросительный знак или звездочка, введите тильдой (~) перед знаком.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SumIfs">
      <MemberSignature Language="C#" Value="public double SumIfs (Microsoft.Office.Interop.Excel.Range Arg1, Microsoft.Office.Interop.Excel.Range Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 SumIfs([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]class Microsoft.Office.Interop.Excel.Range Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SumIfs(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function SumIfs (Arg1 As Range, Arg2 As Range, Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16866)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Диапазон суммирования - диапазон для сложения.</param>
        <param name="Arg2">Criteria_range1, criteria_range2... — один или несколько диапазонов в которого вычисляется связанных условий.</param>
        <param name="Arg3">Criteria1, criteria2... -одно или несколько условий в виде числа, выражения, ссылка на ячейку или текста, которые определяют ячеек, которые будут добавлены. Например, критерий может быть выражен как 32, «32», "&gt;32", «apples» или B4.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <summary>Добавляет ячейки в диапазон, отвечающие нескольким условиям.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Каждой ячейки в диапазон суммирования просуммированы, только при выполнении все соответствующие условиям, указанным в этой ячейке. </para>
          <para>Оценка ячеек в диапазон суммирования, которые содержат <b>значение true,</b> как 1. ячейки в диапазон суммирования, которые содержат <b>значение false</b> , интерпретируются как нуль (0). </para>
          <para>Можно использовать подстановочные знаки, вопросительные знаки (?) и звездочки (*) в условия. Вопросительный знак соответствует любой отдельный знак; Звездочка соответствует любой последовательности символов. Если вы хотите найти вопросительный знак или звездочка, введите тильдой (~) перед знаком. </para>
          <para>Каждый criteria_range не нужно быть размера и формы как диапазон суммирования. Фактические ячейки, добавляемые определяются с помощью верхней, левой ячейки в этой criteria_range как в начале ячейку, затем включая ячеек, которые соответствуют по размеру и фигуры, чтобы диапазон суммирования. Пример:</para>
          <list type="table">
            <item>
              <term>ЯЧЕЙКИ A1: A5</term>
              <description>B1: B5.</description>
              <description>B1: B5.</description>
            </item>
            <item>
              <term>ЯЧЕЙКИ A1: A5</term>
              <description>B1: B3</description>
              <description>B1: B5.</description>
            </item>
            <item>
              <term>A1: B4</term>
              <description>C1:D4</description>
              <description>C1:D4</description>
            </item>
            <item>
              <term>A1: B4</term>
              <description>C1:C2</description>
              <description>C1:D4</description>
            </item>
          </list>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SumProduct">
      <MemberSignature Language="C#" Value="public double SumProduct (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 SumProduct([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SumProduct(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function SumProduct (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16612)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Массив1, массив2, массив3,... - 2 до 30 массивов, чтобы перемножить, а затем добавить компоненты.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Умножает соответствующие элементы заданных массивов и возвращает сумму эти продукты.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Аргументы массива должны иметь одинаковые размеры. Если это не так, <b>то функция СУММПРОИЗВ</b> возвращает #VALUE! значение ошибки. </para>
          <para>
            <b>Функция СУММПРОИЗВ</b> рассматривает записи массива, которые не являются числовые, как если бы они были нули.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SumSq">
      <MemberSignature Language="C#" Value="public double SumSq (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 SumSq([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SumSq(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function SumSq (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16705)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число1, число2,... - 1 до 30 аргументов, для которых требуется сумм квадратов. Можно также использовать массив или ссылку на массив вместо аргументов, разделенных запятыми.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Возвращает сумм квадратов аргументов.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Аргументы могут быть числа или имена, массивы или ссылки, которые содержат цифры. </para>
          <para>Учитываются числа, логические значения и текст представления чисел, введите непосредственно в списке аргументов. </para>
          <para>Если аргумент является массив или ссылка, учитываются только числа в этом массив или ссылку. Пустые ячейки, логические значения, текст или значения ошибок в массиве или ссылке игнорируются. </para>
          <para>Аргументы, которые являются значениями ошибки или текст, который не может быть переведены вызывают ошибки. </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SumX2MY2">
      <MemberSignature Language="C#" Value="public double SumX2MY2 (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 SumX2MY2([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SumX2MY2(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function SumX2MY2 (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double SumX2MY2(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16688)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Array_x — первый массив или диапазон значений.</param>
        <param name="Arg2">Array_y — второй массив или диапазон значений.</param>
        <summary>Возвращает суммы разницы квадратов соответствующих значений в двух массивов.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Аргументы должны быть числа или имена, массивы или ссылки, которые содержат цифры. </para>
          <para>Если аргумент массива или ссылки содержит текст, логические значения или пустые ячейки, эти значения игнорируются; Тем не менее включаются ячейки с помощью нулевое значение. </para>
          <para>Если массив_x и массив_y имеют различное количество значений, <b>SumX2MY2returns</b> значение ошибки # н/д. </para>
          <para>Формула для расчета суммы разницы квадратов — это: </para>
          <para>На рисунке 1: Формула для расчета суммы разницы квадратов</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SumX2PY2">
      <MemberSignature Language="C#" Value="public double SumX2PY2 (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 SumX2PY2([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SumX2PY2(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function SumX2PY2 (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double SumX2PY2(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16689)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Array_x — первый массив или диапазон значений.</param>
        <param name="Arg2">Array_y — второй массив или диапазон значений.</param>
        <summary>Возвращает суммы сумм квадратов соответствующих значений в двух массивов. Суммы сумм квадратов-это распространенный термин во многих статистических вычислениях.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Аргументы должны быть числа или имена, массивы или ссылки, которые содержат цифры. </para>
          <para>Если аргумент массива или ссылки содержит текст, логические значения или пустые ячейки, эти значения игнорируются; Тем не менее включаются ячейки с помощью нулевое значение. </para>
          <para>Если массив_x и массив_y имеют различное количество значений, <b>SumX2PY2</b> возвращает значение ошибки # н/д. </para>
          <para>Формула для расчета суммы сумм квадратов — это: </para>
          <para>На рисунке 1: Формула для расчета суммы сумм квадратов</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SumXMY2">
      <MemberSignature Language="C#" Value="public double SumXMY2 (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 SumXMY2([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SumXMY2(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function SumXMY2 (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double SumXMY2(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16687)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Array_x — первый массив или диапазон значений.</param>
        <param name="Arg2">Array_y — второй массив или диапазон значений.</param>
        <summary>Возвращает сумм квадратов соответствующих значений в двух массивов.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Аргументы должны быть числа или имена, массивы или ссылки, которые содержат цифры. </para>
          <para>Если аргумент массива или ссылки содержит текст, логические значения или пустые ячейки, эти значения игнорируются; Тем не менее включаются ячейки с помощью нулевое значение. </para>
          <para>Если массив_x и массив_y имеют различное количество значений, <b>SumXMY2</b> возвращает значение ошибки # н/д. </para>
          <para>Формула для расчета суммы квадрата разницы — это: </para>
          <para>На рисунке 1: Формула для расчета суммы квадрата разницы</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Syd">
      <MemberSignature Language="C#" Value="public double Syd (double Arg1, double Arg2, double Arg3, double Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Syd([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]float64 Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Syd(System.Double,System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Syd (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Syd(double Arg1, double Arg2, double Arg3, double Arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16527)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Затраты - начальная стоимость актива.</param>
        <param name="Arg2">Восстановленной - значение в конце амортизации (иногда называется стоимость актива).</param>
        <param name="Arg3">Срок - число периодов, за которые актива (иногда называется периодом амортизации).</param>
        <param name="Arg4">Годовую - и необходимо использовать в качестве жизненного одной единицы.</param>
        <summary>Возвращает сумма годовых амортизации актива за указанный период.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>SYD</b> рассчитывается следующим образом:</para>
          <para>На рисунке 1: Формула для расчета метода Syd</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="T_Dist">
      <MemberSignature Language="C#" Value="public double T_Dist (double Arg1, double Arg2, bool Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 T_Dist([in]float64 Arg1, [in]float64 Arg2, [in]bool Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.T_Dist(System.Double,System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function T_Dist (Arg1 As Double, Arg2 As Double, Arg3 As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double T_Dist(double Arg1, double Arg2, bool Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16896)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Arg1">X - числовое значение, для которого требуется вычислить распределение.</param>
        <param name="Arg2">Степени_свободы — целое число, указывающее количество степеней свободы.</param>
        <param name="Arg3">Накопительный пакет — логическое значение, определяющее форму функции. Если накопительный пакет имеет <b>значение true</b>, <b>T_Dist</b> возвращает расчета интегральной функции распределения; Если <b>значение false</b>, то возвращается весовая функция распределения.</param>
        <summary>Возвращает t распределения Стьюдента, где числовое значение (x) — это вычисленное значение t, для которого вычисляются процентные точки.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если аргумент не является числом, <b>T_Dist</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если степени_свободы &lt; 1, <b>T_Dist</b> возвращает #NUM! значение ошибки. </para>
          <para>Если x &lt; 0, а затем <b>T_Dist</b> возвращает #NUM! значение ошибки.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="T_Dist_2T">
      <MemberSignature Language="C#" Value="public double T_Dist_2T (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 T_Dist_2T([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.T_Dist_2T(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function T_Dist_2T (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double T_Dist_2T(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16897)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">X - числовое значение, для которого требуется вычислить распределение.</param>
        <param name="Arg2">Степени_свободы — целое число, указывающее количество степеней свободы.</param>
        <summary>Возвращает двустороннее t распределения Стьюдента.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если все аргументы, не являющийся числовым, <b>T_Dist_2T</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если степени_свободы &lt; 1, <b>T_Dist_2T</b> возвращает #NUM! значение ошибки. </para>
          <para>Если x &lt; 0, а затем <b>T_Dist_2T</b> возвращает #NUM! значение ошибки.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="T_Dist_RT">
      <MemberSignature Language="C#" Value="public double T_Dist_RT (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 T_Dist_RT([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.T_Dist_RT(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function T_Dist_RT (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double T_Dist_RT(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16898)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">X - числовое значение, для которого требуется вычислить распределение.</param>
        <param name="Arg2">Степени_свободы — целое число, указывающее количество степеней свободы.</param>
        <summary>Возвращает право учебы t распределением которого вычисленное значение t, для которого должны быть вычисленные числовое значение (x). Распределение Стьюдента используется в гипотез небольшой образца набора данных. Эта функция используется вместо таблицы критических значений для распределение Стьюдента.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если все аргументы, не являющийся числовым, <b>T_Dist_RT</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если степени_свободы &lt; 1, <b>T_Dist_RT</b> возвращает #NUM! значение ошибки. </para>
          <para>Аргументы степени_свободы и хвосты усекаются до целых. </para>
          <para>Если хвосты имеет значение, отличное от 1 и 2, <b>T_Dist_RT</b> возвращает #NUM! значение ошибки. </para>
          <para>Если x &lt; 0, а затем <b>T_Dist_RT</b> возвращает #NUM! значение ошибки. </para>
          <para>Если хвосты = 1, <b>T_Dist_RT</b> вычисляется по формуле T_DIST_RT = P (X&gt;x), где X — это случайная величина, распределение Стьюдента. Если хвосты = 2, <b>T_Dist_RT</b> вычисляется по формуле T_DIST_RT = P (| X | &gt; x) = P (X &gt; x или X &lt; - x). </para>
          <para>Так как x &lt; 0 не допускается, чтобы использовать <b>T_Dist_RT</b> при x &lt; 0, примечание, T_DIST_RT(-x,df) = 1 – T_DIST_RT(x,df) = P (X &gt; - x) и T_DIST_2T(-x,df) = T_DIST_2T(x df) = P (| X | &gt; x).</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="T_Inv">
      <MemberSignature Language="C#" Value="public double T_Inv (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 T_Inv([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.T_Inv(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function T_Inv (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double T_Inv(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16899)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Вероятность — вероятность, связанная с t распределения Стьюдента.</param>
        <param name="Arg2">Степени_свободы — число степеней свободы, распределения.</param>
        <summary>Возвращает обратное распределение Стьюдента учебы двустороннее слева.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если ни один из аргументов не являющийся числовым, <b>T_Inv</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если вероятность &lt; 0 или, если вероятность &gt; 1, <b>T_Inv</b> возвращает #NUM! значение ошибки. </para>
          <para>Если степени_свободы не является целым числом, оно сокращается. </para>
          <para>Если степени_свободы &lt; 1, <b>T_Inv</b> возвращает #NUM! значение ошибки.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="T_Inv_2T">
      <MemberSignature Language="C#" Value="public double T_Inv_2T (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 T_Inv_2T([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.T_Inv_2T(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function T_Inv_2T (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double T_Inv_2T(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16900)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Вероятность — вероятность, связанная с t учебы двустороннее распределение.</param>
        <param name="Arg2">Степени_свободы — число степеней свободы, распределения.</param>
        <summary>Возвращает значение t t распределения Стьюдента как функцию вероятности и степеней свободы.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если ни один из аргументов не являющийся числовым, <b>T_Inv_2T</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если вероятность &lt; 0 или, если вероятность &gt; 1, <b>T_Inv_2T</b> возвращает #NUM! значение ошибки. Если степени_свободы не является целым числом, оно сокращается. </para>
          <para>Если степени_свободы &lt; 1, <b>T_Inv_2T</b> возвращает #NUM! значение ошибки. </para>
          <para>
            <b>T_Inv_2T</b> возвращает значение t, таким образом, что P (| X | &gt; t) = вероятность, где X — это случайная величина, распределение Стьюдента и P (| X | &gt; t) = P (X &lt; -t или X &gt; t). </para>
          <para>Одностороннее t значение можно получить, заменив вероятность 2*вероятность. Для вероятности 0,05 и степеней свободы 10 двустороннее значение рассчитывается с T_INV_2T(0.05,10), 2,28139. Одностороннее значение для той же вероятности и степеней свободы, можно рассчитать с помощью T_INV_2T(2*0.05,10), который возвращает 1.812462. </para>
          <para>
            <b>Примечание</b>: В некоторых таблицах вероятность описана как (1-p).</para>
          <para>Задано значение вероятности, <b>T_Inv_2T</b> ищет значение x, T_DIST_RT (x, степень_свободы) = вероятность. Таким образом, точность <b>T_Inv_2T</b> зависит от точности типа <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.T_Dist_RT(System.Double,System.Double)" />. <b>T_Inv_2T</b> использует метод последовательного поиска. Если поиск не завершено после 100 итераций, функция возвращает значение ошибки # н/д.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="T_Test">
      <MemberSignature Language="C#" Value="public double T_Test (object Arg1, object Arg2, double Arg3, double Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 T_Test([in]object Arg1, [in]object Arg2, [in]float64 Arg3, [in]float64 Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.T_Test(System.Object,System.Object,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function T_Test (Arg1 As Object, Arg2 As Object, Arg3 As Double, Arg4 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double T_Test(System::Object ^ Arg1, System::Object ^ Arg2, double Arg3, double Arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16925)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Массив1 - первого набора данных.</param>
        <param name="Arg2">Массив2 — второй набора данных.</param>
        <param name="Arg3">Хвосты — число хвостов распределения. Если хвосты = 1, <b>T_Test</b> использует одностороннее распределение. Если хвосты = 2, <b>T_Test</b> использует двустороннее распределение.</param>
        <param name="Arg4">Тип — тип t теста.</param>
        <summary>Возвращает вероятность, связанная с учебы t теста. Использование T_TEST для определения ли две образцов, скорее всего, взяты из критерию, имеющих то же среднее.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если массив1 и массив2 имеют число точек данных и тип = 1 (парного), <b>T_Test</b> возвращает значение ошибки # н/д. </para>
          <para>Аргументы хвосты и тип усекаются до целых. </para>
          <para>Если хвосты или тип не являющийся числовым, <b>T_Test</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если хвосты имеет значение, отличное от 1 и 2, <b>T_Test</b> возвращает #NUM! значение ошибки. </para>
          <para>
            <b>T_Test</b> использует данные массив1 и массив2 для вычисления неотрицательное t статистики. Если хвосты = 1, <b>T_Test</b> возвращает вероятность более высокого значения t статистики, исходя из предположения, что массив1 и массив2 являются примеры принадлежащих с же среднее. Значение, возвращаемое <b>T_Test</b> при хвосты = 2 — это значение типа double, возвращаемым, когда хвосты = 1 и представляет собой вероятность более высокого абсолютного значения t-статистики, исходя из предположения, «одной совокупности означает, что».</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tanh">
      <MemberSignature Language="C#" Value="public double Tanh (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Tanh([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Tanh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Tanh (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Tanh(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16615)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число — любое действительное число.</param>
        <summary>Возвращает гиперболический тангенс числа.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Формула для расчета гиперболического тангенса имеет вид:</para>
          <para>На рисунке 1: Формула для расчета гиперболического тангенса</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TBillEq">
      <MemberSignature Language="C#" Value="public double TBillEq (object Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 TBillEq([in]object Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.TBillEq(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function TBillEq (Arg1 As Object, Arg2 As Object, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16822)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Сопоставление - даты за сопоставления. Дата сопоставления безопасности — это дата после даты выпуска, когда передается Билл собственные покупателю.</param>
        <param name="Arg2">Роста - дата его роста. Соответствует дата истечения срока действия Билл собственные.</param>
        <param name="Arg3">ImportantDates должны вводиться с использованием функции Дата или как результат других формул и функций. Например следует используйте Дата(2008;5;23) для 23-мая 2008 г. Если даты вводятся как текст, могут возникнуть проблемы. Скидка - за размером учетной ставки.</param>
        <summary>Возвращает эквивалентный облигации доход по казначейскому.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Microsoft Excel хранит даты как целые числа, поэтому они могут использоваться в расчетах. По умолчанию 1 января 1900 — серийный номер 1, а 1 января 2008 — номер 39448, так как интервал в днях 1 января 1900. Microsoft Excel для Macintosh использует другую систему дат по умолчанию. </para>
          <para>Сопоставления и роста усекаются до целых. </para>
          <para>Сопоставления или роста не является допустимой датой, <b>то функция РАВНОКЧЕК</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если скидка ≤ 0, <b>то функция РАВНОКЧЕК</b> возвращает #NUM! значение ошибки. </para>
          <para>Если сопоставления &gt; роста, или если роста дольше одного года после сопоставления, <b>то функция РАВНОКЧЕК</b> возвращает #NUM! значение ошибки. </para>
          <para>
            <b>РАВНОКЧЕК</b> вычисляется следующим образом: РАВНОКЧЕК = (365 x ставка) / (360-(ставка x DSM), где DSM — это число дней между сопоставления и роста, вычисленное на базе 360-дневного года.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TBillPrice">
      <MemberSignature Language="C#" Value="public double TBillPrice (object Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 TBillPrice([in]object Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.TBillPrice(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function TBillPrice (Arg1 As Object, Arg2 As Object, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16823)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Сопоставление - даты за сопоставления. Дата сопоставления безопасности — это дата после даты выпуска, когда передается Билл собственные покупателю.</param>
        <param name="Arg2">Роста - дата его роста. Соответствует дата истечения срока действия Билл собственные.</param>
        <param name="Arg3">Скидка - за размером учетной ставки.</param>
        <summary>Возвращает цену за 100 долларов США лицевой значение для собственных Билл.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Важно</b>: ввода дат с помощью функции Дата или как результат других формул и функций. Например следует используйте Дата(2008;5;23) для 23-мая 2008 г. Если даты вводятся как текст, могут возникнуть проблемы.</para>
          <para>Microsoft Excel хранит даты как целые числа, поэтому они могут использоваться в расчетах. По умолчанию 1 января 1900 — серийный номер 1, а 1 января 2008 — номер 39448, так как интервал в днях 1 января 1900. Microsoft Excel для Macintosh использует другую систему дат по умолчанию. </para>
          <para>Сопоставления и роста усекаются до целых. </para>
          <para>Если сопоставления или роста не допустимая дата, <b>TBillPrice</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если скидка ≤ 0, <b>TBillPrice</b> возвращает #NUM! значение ошибки. </para>
          <para>Если сопоставления &gt; роста, или если роста дольше одного года после сопоставления, <b>TBillPrice</b> возвращает #NUM! значение ошибки. </para>
          <para>
            <b>TBillPrice</b> рассчитывается следующим образом: </para>
          <para>На рисунке 1: Формула для расчета метода TBillPrice</para>
          <para></para>
          <para></para>
          <para>где:</para>
          <para>DSM = количество дней до даты погашения, исключая дату погашения, которая более одного календарный год даты соглашения от сопоставления.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TBillYield">
      <MemberSignature Language="C#" Value="public double TBillYield (object Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 TBillYield([in]object Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.TBillYield(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function TBillYield (Arg1 As Object, Arg2 As Object, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16824)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Сопоставление - даты за сопоставления. Дата сопоставления безопасности — это дата после даты выпуска, когда передается Билл собственные покупателю.</param>
        <param name="Arg2">Роста - дата его роста. Соответствует дата истечения срока действия Билл собственные.</param>
        <param name="Arg3">Цена — цена за на лицевой значение 100 долларов США.</param>
        <summary>Возвращает доход по казначейскому.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Важно</b>: ввода дат с помощью функции Дата или как результат других формул и функций. Например следует используйте Дата(2008;5;23) для 23-мая 2008 г. Если даты вводятся как текст, могут возникнуть проблемы.</para>
          <para>Microsoft Excel хранит даты как целые числа, поэтому они могут использоваться в расчетах. По умолчанию 1 января 1900 — серийный номер 1, а 1 января 2008 — номер 39448, так как интервал в днях 1 января 1900. Microsoft Excel для Macintosh использует другую систему дат по умолчанию. </para>
          <para>Сопоставления и роста усекаются до целых. </para>
          <para>Если сопоставления или роста не допустимая дата, <b>TBillYield</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если цена ≤ 0, <b>TBillYield</b> возвращает #NUM! значение ошибки. </para>
          <para>Если сопоставления ≥ роста, или если роста дольше одного года после сопоставления, <b>TBillYield</b> возвращает #NUM! значение ошибки. </para>
          <para>
            <b>TBillYield</b> рассчитывается следующим образом: </para>
          <para>На рисунке 1: Формула для расчета метода TBillYield</para>
          <para></para>
          <para></para>
          <para>где:</para>
          <para>DSM = количество дней до даты погашения, исключая дату погашения, которая более одного календарный год даты соглашения от сопоставления.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TDist">
      <MemberSignature Language="C#" Value="public double TDist (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 TDist([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.TDist(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function TDist (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double TDist(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16685)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">X - числовое значение, для которого требуется вычислить распределение.</param>
        <param name="Arg2">Степени_свободы — целое число, указывающее количество степеней свободы.</param>
        <param name="Arg3">Хвосты — число возвращаемых хвостов распределения. Если хвосты = 1, то функция СТЬЮДРАСП возвращает одностороннее распределение. Если хвосты = 2, то функция СТЬЮДРАСП возвращает двустороннее распределение.</param>
        <summary>Возвращает процентные точки (вероятность) для t распределения Стьюдента, где числовое значение (x) — это вычисленное значение t, для которого должны быть вычисленные. Распределение Стьюдента используется в гипотез небольшой образца набора данных. Эта функция используется вместо таблицы критических значений для распределение Стьюдента.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Внимание!</b>: Эта функция была заменена один или несколько новых функций, который может предоставлять улучшенные точность и лучше, имена которых отражают их использования. Эта функция по-прежнему доступна для обеспечения совместимости с предыдущими версиями Excel. Тем не менее если обратной совместимости не требуется, можно теперь с помощью новых функций, так как они более точно описывает их функциональных возможностей. Дополнительные сведения о новых функциях можно <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.T_Dist_RT(System.Double,System.Double)" />, <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.T_Dist(System.Double,System.Double,System.Boolean)" />, и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.T_Dist_2T(System.Double,System.Double)" /> методы.</para>
          <para>Если аргумент не является числом, <b>то функция СТЬЮДРАСП</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если степени_свободы &lt; 1, <b>то функция СТЬЮДРАСП</b> возвращает #NUM! значение ошибки. </para>
          <para>Аргументы степени_свободы и хвосты усекаются до целых. </para>
          <para>Если хвосты имеет значение, отличное от 1 и 2, <b>то функция СТЬЮДРАСП</b> возвращает #NUM! значение ошибки. </para>
          <para>Если x &lt; 0, а затем <b>СТЬЮДРАСП</b> возвращает #NUM! значение ошибки. </para>
          <para>Если хвосты = 1, <b>то функция СТЬЮДРАСП</b> вычисляется как СТЬЮДРАСП = P (X&gt;x), где X — это случайная величина, распределение Стьюдента. Если хвосты = 2, <b>то функция СТЬЮДРАСП</b> вычисляется как СТЬЮДРАСП = P (| X | &gt; x) = P (X &gt; x или X &lt; - x). </para>
          <para>Начиная с x &lt; 0 не допускается, чтобы использовать <b>СТЬЮДРАСП</b> при x &lt; 0, обратите внимание, что СТЬЮДРАСП(-x,df,1) = 1 – СТЬЮДРАСП(x,df,1) = P (X &gt; - x) and СТЬЮДРАСП(-x,df,2) = СТЬЮДРАСП (x df, 2) = P (| X | &gt; x).</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text (object Arg1, string Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Text([in]object Arg1, [in]string Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Text(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Text (Arg1 As Object, Arg2 As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Text(System::Object ^ Arg1, System::String ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16432)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Arg1">Числовое значение формулы, которое оценивается как числовое значение или ссылка на ячейку, содержащую числовое значение.</param>
        <param name="Arg2">Формат номера в виде текста в поле категории на вкладке "число" в диалоговом окне Формат ячеек.</param>
        <summary>Преобразует значение в текст в определенный формат номера.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThaiDayOfWeek">
      <MemberSignature Language="C#" Value="public string ThaiDayOfWeek (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ThaiDayOfWeek([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ThaiDayOfWeek(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function ThaiDayOfWeek (Arg1 As Double) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ThaiDayOfWeek(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16753)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <summary>Зарезервировано для внутреннего использования.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThaiDigit">
      <MemberSignature Language="C#" Value="public string ThaiDigit (string Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ThaiDigit([in]string Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ThaiDigit(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ThaiDigit (Arg1 As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ThaiDigit(System::String ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16754)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <summary>Зарезервировано для внутреннего использования.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThaiMonthOfYear">
      <MemberSignature Language="C#" Value="public string ThaiMonthOfYear (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ThaiMonthOfYear([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ThaiMonthOfYear(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function ThaiMonthOfYear (Arg1 As Double) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ThaiMonthOfYear(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16755)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <summary>Зарезервировано для внутреннего использования.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThaiNumSound">
      <MemberSignature Language="C#" Value="public string ThaiNumSound (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ThaiNumSound([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ThaiNumSound(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function ThaiNumSound (Arg1 As Double) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ThaiNumSound(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16756)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <summary>Зарезервировано для внутреннего использования.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThaiNumString">
      <MemberSignature Language="C#" Value="public string ThaiNumString (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ThaiNumString([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ThaiNumString(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function ThaiNumString (Arg1 As Double) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ThaiNumString(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16757)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <summary>Зарезервировано для внутреннего использования.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThaiStringLength">
      <MemberSignature Language="C#" Value="public double ThaiStringLength (string Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ThaiStringLength([in]string Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ThaiStringLength(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ThaiStringLength (Arg1 As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double ThaiStringLength(System::String ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16758)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <summary>Зарезервировано для внутреннего использования.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThaiYear">
      <MemberSignature Language="C#" Value="public double ThaiYear (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ThaiYear([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ThaiYear(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function ThaiYear (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double ThaiYear(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16762)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <summary>Зарезервировано для внутреннего использования.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TInv">
      <MemberSignature Language="C#" Value="public double TInv (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 TInv([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.TInv(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function TInv (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double TInv(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16716)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Вероятность — вероятность, связанная с двумя t распределение Стьюдента.</param>
        <param name="Arg2">Степени_свободы — число степеней свободы, распределения.</param>
        <summary>Возвращает значение t-распределение Стьюдента как функцию вероятности и степеней свободы.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Внимание!</b>: Эта функция была заменена один или несколько новых функций, который может предоставлять улучшенные точность и лучше, имена которых отражают их использования. Эта функция по-прежнему доступна для обеспечения совместимости с предыдущими версиями Excel. Тем не менее если обратной совместимости не требуется, можно теперь с помощью новых функций, так как они более точно описывает их функциональных возможностей. Дополнительные сведения о новых функциях можно <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.TInv(System.Double,System.Double)" /> и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.T_Inv_2T(System.Double,System.Double)" /> методы.</para>
          <para>Если аргумент не является числом, <b>СТЬЮДРАСПОБР</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если вероятность &lt; 0 или, если вероятность &gt; 1, <b>СТЬЮДРАСПОБР</b> возвращает #NUM! значение ошибки. </para>
          <para>Если степени_свободы не является целым числом, оно сокращается. </para>
          <para>Если степени_свободы &lt; 1, <b>СТЬЮДРАСПОБР</b> возвращает #NUM! значение ошибки. </para>
          <para>
            <b>СТЬЮДРАСПОБР</b> возвращает значение t, таким образом, что P (| X | &gt; t) = вероятность, где X — это случайная величина, распределение Стьюдента и P (| X | &gt; t) = P (X &lt; -t или X &gt; t). </para>
          <para>Одностороннее t значение можно получить, заменив вероятность 2*вероятность. Для вероятности 0,05 и степеней свободы 10 двустороннее значение числа вычисляется СТЬЮДРАСПОБР(0,05;10), 2,28139. Одностороннее значение для той же вероятности и степеней свободы, можно рассчитать с помощью TINV(2*0.05,10), который возвращает 1.812462. </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transpose">
      <MemberSignature Language="C#" Value="public object Transpose (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Transpose([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Transpose(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transpose (Arg1 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Transpose(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16467)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Массив — массив или диапазон ячеек на листе для преобразования. Перестановка массив создается с использованием первой строки массива в качестве первого столбца новый массив второй строке массив как второй столбец новый массив и т. д.</param>
        <summary>Возвращает вертикальный диапазон ячеек виде горизонтального или наоборот. ПЕРЕСТАНОВКА должен вводиться как формула массива в интервал, который имеет такое же число строк и столбцов, соответственно, как массив строк и столбцов. Используйте ПЕРЕСТАНОВКА, чтобы перенести вертикальных и горизонтальных ориентацию массива на рабочем листе.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Trend">
      <MemberSignature Language="C#" Value="public object Trend (object Arg1, object Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Trend([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Trend(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Trend (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16434)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Known_y's - набор значений y, которые уже известны соотношения y = mx + b.</param>
        <param name="Arg2">Известные_значения_x, в - необязательный набор значений x, которые уже известны для соотношения y = mx + b.</param>
        <param name="Arg3">Новые_значения_x - новые значения x, для которых ТЕНДЕНЦИЯ возвращает соответствующие значения y.</param>
        <param name="Arg4">Const — логическое значение, определяющее, следует ли константа b равно 0.</param>
        <summary>Возвращает значения в соответствии линейной. Соответствующий прямой (с помощью метода наименьших квадратов) массивы известные_значения_y и известные_значения_x, в. Возвращает значения y линии для массива новые_значения_x, который указан.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если массив известные_значения_y одного столбца, каждый столбец данных считается отдельной переменной. </para>
          <para>Если массив известные_значения_y в одной строке, каждой строки данных считается отдельной переменной. </para>
          <para>Массив известные_значения_x может включать один или несколько наборов переменных. Если по одной переменной используется, только известные_значения_y и известные_значения_x, в может быть любую форму до тех пор, пока они имеют одинаковые размерности. Если используется более одной переменной известные_значения_y должен быть vector (то есть, диапазон с высотой в одну строку или шириной в один столбец). </para>
          <para>Если известные_значения_x опущены, он считается массива {1,2,3,...} Это же размера, как и известные_значения_y. </para>
          <para>Как работает известные_значения_x, в новые_значения_x необходимо включить столбца (или строки) для каждой независимой переменной. Таким образом Если известные_значения_y имеет один столбец, известные_значения_x и новые_значения_x должен иметь такое же число столбцов. Если известные_значения_y — в одной строке, известные_значения_x и новые_значения_x должен иметь такое же число строк. </para>
          <para>Если новые_значения_x опущены, предполагается равняется известные_значения_x, в. </para>
          <para>Если опустить известные_значения_x и новые_значения_x они считаются массива {1,2,3,...} Это же размера, как и известные_значения_y. </para>
          <para>Если const имеет <b>значение true</b> или этот параметр опущен, b вычисляется обычным образом. </para>
          <para>Если const присвоено <b>значение false</b>, b равным 0 (ноль) и значения m настроены, чтобы y = mx. </para>
          <para>Сведения о как Microsoft Excel образом подходит для строки к данным, в разделе <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LinEst(System.Object,System.Object,System.Object,System.Object)" />. </para>
          <para>Можно использовать функцию <b>ТЕНДЕНЦИЯ</b> для полиномиальной кривой, проблемы для той же переменной, возникает в различные степени. Например предположим, что столбец A содержит значения y, а столбец B содержит значения x. Можно ввести x ^ 2 в столбец C, x ^ 3 в столбец D и так далее, а затем провести регрессивный анализ столбцов от B до D со столбцом A. </para>
          <para>При вводе формул, которые возвращают массивы должны быть формул массива. </para>
          <para>При вводе для аргумента, такие как известные_значения_x, в массив, используйте запятые для разделения значений в одной строке и двоеточие для разделения строк.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Trim">
      <MemberSignature Language="C#" Value="public string Trim (string Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Trim([in]string Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Trim(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Trim (Arg1 As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Trim(System::String ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16502)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Arg1">Текст — текст, из которого удаляются пробелы.</param>
        <summary>Удаляет все пробелы из текста, за исключением одиночных пробелов между словами. Используйте ИСПОЛНЕНИЕ на текст, полученный из другого приложения, которое может содержать избыточные пробелы.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Важно</b>: функции <b>Trim</b> был разработан для удаления 7-битовое ASCII пробела (значение 32) из текста. В кодировке Unicode является символом дополнительного пространства, называемой неразрывного пробела, который имеет десятичное значение 160. Этот символ обычно используется в веб-страницы как HTML-сущности <b> &amp;nbsp;</b>. Сам по себе функции <b>Trim</b> не удаляет этот неразрывного пробела.</para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimMean">
      <MemberSignature Language="C#" Value="public double TrimMean (object Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 TrimMean([in]object Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.TrimMean(System.Object,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function TrimMean (Arg1 As Object, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double TrimMean(System::Object ^ Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16715)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Массив — массив или диапазон значений обрезать и среднее время.</param>
        <param name="Arg2">Процент - доля точек данных следует исключить из расчета. Например, если доля = 0,2, 4 точки удаляются из набора данных 20 точек (20 x 0,2): 2 из верхней и 2 в нижней части набора.</param>
        <summary>Возвращает среднее внутренней набора данных. УРЕЗСРЕДНЕЕ вычисляет среднее процентное соотношение точек данных с верхним и нижним хвосты набора данных. Можно использовать эту функцию при необходимо исключить из анализа выбросы.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если доля &lt; 0 или процентов &gt; 1, <b>то функция УРЕЗСРЕДНЕЕ</b> возвращает #NUM! значение ошибки. </para>
          <para>
            <b>УРЕЗСРЕДНЕЕ</b> Округляет число точек данных исключенные вниз до ближайшего большего несколькими 2. Если доля = 0,1, 10 процентов от 30 точек равно 3 точки. Для симметричный <b>УРЕЗСРЕДНЕЕ</b> исключает одним значением из верхних и нижних набора данных.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TTest">
      <MemberSignature Language="C#" Value="public double TTest (object Arg1, object Arg2, double Arg3, double Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 TTest([in]object Arg1, [in]object Arg2, [in]float64 Arg3, [in]float64 Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.TTest(System.Object,System.Object,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function TTest (Arg1 As Object, Arg2 As Object, Arg3 As Double, Arg4 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double TTest(System::Object ^ Arg1, System::Object ^ Arg2, double Arg3, double Arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16700)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Массив1 - первого набора данных.</param>
        <param name="Arg2">Массив2 — второй набора данных.</param>
        <param name="Arg3">Хвосты — число хвостов распределения. Если хвосты = 1, то функция СТЬЮДРАСП одностороннее распределение. Если хвосты = 2, то функция СТЬЮДРАСП двустороннее распределение.</param>
        <param name="Arg4">Тип — тип t теста.</param>
        <summary>Возвращает вероятность, связанная с учащихся t теста. Используйте СТЬЮДРАСП для определения ли две образцов, скорее всего, взяты из критерию, имеющих то же среднее.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Внимание!</b>: Эта функция была заменена один или несколько новых функций, который может предоставлять улучшенные точность и лучше, имена которых отражают их использования. Эта функция по-прежнему доступна для обеспечения совместимости с предыдущими версиями Excel. Тем не менее если обратной совместимости не требуется, можно теперь с помощью новых функций, так как они более точно описывает их функциональных возможностей. Дополнительные сведения о новой функции можно <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.T_Test(System.Object,System.Object,System.Double,System.Double)" /> метод.</para>
          <list type="table">
            <item>
              <term>1</term>
              <description>В сочетании</description>
            </item>
            <item>
              <term>2</term>
              <description>Равно отклонением (гомоскедастический)</description>
            </item>
            <item>
              <term>3</term>
              <description>Несовпадающих отклонением (гетероскедастический)</description>
            </item>
          </list>
          <para>Если массив1 и массив2 имеют число точек данных и тип = 1 (парного), <b>СТЬЮДРАСП</b> возвращает значение ошибки # н/д. </para>
          <para>Аргументы хвосты и тип усекаются до целых. </para>
          <para>Если хвосты или тип не является числом, <b>СТЬЮДРАСП</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если хвосты имеет значение, отличное от 1 и 2, <b>СТЬЮДРАСП</b> возвращает #NUM! значение ошибки. </para>
          <para>
            <b>СТЬЮДРАСП</b> использует данные массив1 и массив2 для вычисления неотрицательное t статистики. Если хвосты = 1, <b>СТЬЮДРАСП</b> возвращает вероятность более высокого значения t статистики, исходя из предположения, что массив1 и массив2 являются примеры принадлежащих с же среднее. Значение, возвращенное <b>СТЬЮДРАСП</b> при хвосты = 2 — это значение типа double, возвращаемым, когда хвосты = 1 и представляет собой вероятность более высокого абсолютного значения t-статистики, исходя из предположения, «одной совокупности означает, что».</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unichar">
      <MemberSignature Language="C#" Value="public string Unichar (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Unichar([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Unichar(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Unichar (Arg1 As Double) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Unichar(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16964)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число Юникод, представляющее знак.</param>
        <summary>Возвращает символ Unicode, ссылается данное числовое значение.</summary>
        <returns>Задает логическое условие соответствия для текстовой строки.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unicode">
      <MemberSignature Language="C#" Value="public double Unicode (string Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Unicode([in]string Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Unicode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Unicode (Arg1 As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Unicode(System::String ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16965)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Arg1">Символ, который будет Юникод.</param>
        <summary>Возвращает номер (кодовая точка), соответствующий на первый символ текста.</summary>
        <returns>
          <b>ДАННЫЕ ТИПА DOUBLE</b>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="USDollar">
      <MemberSignature Language="C#" Value="public string USDollar (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string USDollar([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.USDollar(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function USDollar (Arg1 As Double, Arg2 As Double) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ USDollar(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16588)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Ссылка на ячейку, содержащую число, либо формула, вычисляющий значение числа.</param>
        <param name="Arg2">Количество цифр справа от десятичной запятой. Если Arg2 отрицательно, число округляется слева от десятичной запятой. Если опустить разрядов предполагается иметь значение 2.</param>
        <summary>Преобразует число в текстовый формат и применяет символ валюты. Имя метода (и символ, применяемый) зависит от языковых параметров.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Метод <b>ДОЛЛСША</b> преобразует число в текст, используя формат валюты с дробными, округленное до указанного месте. Используется формат #, ## 0.00_);($#,##0.00).</para>
          <para>Основное различие между форматированием ячейки, содержащей число, с помощью команды формат ячеек и форматированием числа непосредственно с <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Dollar(System.Double,System.Object)" /> — это метод, который <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Dollar(System.Double,System.Object)" /> преобразует свой результат в текст. Номер, отформатированный с помощью команды формат ячеек по-прежнему является числом. Можно продолжить использовать числа, отформатированные с <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Dollar(System.Double,System.Object)" /> в формулах, поскольку Excel преобразует числа, введенные как текстовые значения на номера, при вычислении.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Var">
      <MemberSignature Language="C#" Value="public double Var (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Var([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Var(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Var (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16430)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число1, число2,... - 1 до 30 числовых аргументов, соответствующих выборке совокупности.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Оценивает дисперсию на примере.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Var</b> предполагается, что аргументы являются пример заполнения. Если данные представляют совокупности, с помощью вычисления отклонение <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.VarP(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />. </para>
          <para>Аргументы могут быть числа или имена, массивы или ссылки, которые содержат цифры. </para>
          <para>Учитываются логические значения и текст представления чисел, введите непосредственно в списке аргументов. </para>
          <para>Если аргумент является массив или ссылка, учитываются только числа в этом массив или ссылку. Пустые ячейки, логические значения, текст или значения ошибок в массиве или ссылке игнорируются. </para>
          <para>Аргументы, которые являются значениями ошибки или текст, который не может быть переведены вызывают ошибки. </para>
          <para>
            <b>Переменная</b> использует следующую формулу: </para>
          <para>На рисунке 1: Формула для расчета метода Var</para>
          <para></para>
          <para></para>
          <para>где x — выборочное среднее СРЗНАЧ(Число1,число2,...), а n — размер выборки.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Var_P">
      <MemberSignature Language="C#" Value="public double Var_P (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Var_P([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Var_P(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Var_P (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16902)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число1, число2,... - 1 до 30 числовых аргументов, соответствующих совокупности.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Вычисляет дисперсию совокупности.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Var_P</b> предполагается, что аргументы являются совокупности. Если данные представляют пример заполнения, с помощью вычисления отклонение <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Var_S(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />. </para>
          <para>Аргументы могут быть числа или имена, массивы или ссылки, которые содержат цифры. </para>
          <para>Учитываются логические значения и текст представления чисел, введите непосредственно в списке аргументов. </para>
          <para>Если аргумент является массив или ссылка, учитываются только числа в этом массив или ссылку. Пустые ячейки, логические значения, текст или значения ошибок в массиве или ссылке игнорируются. </para>
          <para>Аргументы, которые являются значениями ошибки или текст, который не может быть переведены вызывают ошибки. </para>
          <para>Формула для <b>Var_P</b> — это: </para>
          <para>На рисунке 1: Формула для расчета метода Var_P</para>
          <para></para>
          <para></para>
          <para>где x — выборочное среднее СРЗНАЧ(Число1,число2,...), а n — размер выборки.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Var_S">
      <MemberSignature Language="C#" Value="public double Var_S (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Var_S([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Var_S(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Var_S (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16901)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число1, число2,... - 1 до 30 числовых аргументов, соответствующих выборке совокупности.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Оценивает дисперсию на примере.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Var_S</b> предполагается, что аргументы являются пример заполнения. Если данные представляют совокупности, с помощью вычисления отклонение <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Var_P(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />. </para>
          <para>Аргументы могут быть числа или имена, массивы или ссылки, которые содержат цифры. </para>
          <para>Учитываются логические значения и текст представления чисел, введите непосредственно в списке аргументов. </para>
          <para>Если аргумент является массив или ссылка, учитываются только числа в этом массив или ссылку. Пустые ячейки, логические значения, текст или значения ошибок в массиве или ссылке игнорируются. </para>
          <para>Аргументы, которые являются значениями ошибки или текст, который не может быть переведены вызывают ошибки. </para>
          <para>
            <b>Var_S</b> использует следующую формулу: </para>
          <para>На рисунке 1: Формула для расчета метода Var_S</para>
          <para></para>
          <para></para>
          <para>где x — выборочное среднее СРЗНАЧ(Число1,число2,...), а n — размер выборки.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VarP">
      <MemberSignature Language="C#" Value="public double VarP (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 VarP([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.VarP(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function VarP (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16578)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число1, число2,... - 1 до 30 числовых аргументов, соответствующих совокупности.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Вычисляет дисперсию совокупности.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Внимание!</b>: Эта функция была заменена один или несколько новых функций, который может предоставлять улучшенные точность и лучше, имена которых отражают их использования. Эта функция по-прежнему доступна для обеспечения совместимости с предыдущими версиями Excel. Тем не менее если обратной совместимости не требуется, можно теперь с помощью новых функций, так как они более точно описывает их функциональных возможностей. Дополнительные сведения о новой функции можно <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Var_P(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> метод.</para>
          <para>
            <b>VarP</b> предполагает, что аргументы являются совокупности. Если данные представляют пример заполнения, с помощью вычисления отклонение <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Var(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />. </para>
          <para>Аргументы могут быть числа или имена, массивы или ссылки, которые содержат цифры. </para>
          <para>Учитываются логические значения и текст представления чисел, введите непосредственно в списке аргументов. </para>
          <para>Если аргумент является массив или ссылка, учитываются только числа в этом массив или ссылку. Пустые ячейки, логические значения, текст или значения ошибок в массиве или ссылке игнорируются. </para>
          <para>Аргументы, которые являются значениями ошибки или текст, который не может быть переведены вызывают ошибки. </para>
          <para>Формула для <b>VarP</b> — это: </para>
          <para>На рисунке 1: Формула для расчета метода VarP</para>
          <para></para>
          <para></para>
          <para>где x — выборочное среднее СРЗНАЧ(Число1,число2,...), а n — размер выборки.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Vdb">
      <MemberSignature Language="C#" Value="public double Vdb (double Arg1, double Arg2, double Arg3, double Arg4, double Arg5, object Arg6, object Arg7);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Vdb([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]float64 Arg4, [in]float64 Arg5, [in]object Arg6, [in]object Arg7) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Vdb(System.Double,System.Double,System.Double,System.Double,System.Double,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Vdb (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Double, Arg5 As Double, Optional Arg6 As Object, Optional Arg7 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16606)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Double" />
        <Parameter Name="Arg5" Type="System.Double" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Затраты - начальная стоимость актива.</param>
        <param name="Arg2">Восстановленной - значение в конце амортизации (иногда называется стоимость актива). Это значение может быть 0.</param>
        <param name="Arg3">Срок - число периодов, за которые актива (иногда называется периодом амортизации).</param>
        <param name="Arg4">Двумя - начальный период, для которого требуется для вычисления амортизации. Двумя необходимо использовать как жизненного же единиц измерения.</param>
        <param name="Arg5">Периодами - конечный период, для которого требуется для вычисления амортизации. Как жизненного периодами необходимо использовать же единиц измерения.</param>
        <param name="Arg6">Коэффициент - скорость из участников отклоняет баланс. Если коэффициент указан, то предполагается, что оно является 2 (метод двойной амортизации убывающего баланса). Измените коэффициент, если вы не хотите использовать метод двойной амортизации убывающего баланса. Описание метод двойной амортизации убывающего баланса, в разделе <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Ddb(System.Double,System.Double,System.Double,System.Double,System.Object)" />.</param>
        <param name="Arg7">Без_переключения — логическое значение, определяющее, следует ли линейное снижение когда амортизация превышает вычисленную.</param>
        <summary>Возвращает амортизацию актива для любого периода, который указан, включая частичных периодов, используя метод двойной амортизации убывающего баланса или другой указанный метод. То Функция означает переменной уменьшения баланс.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если аргумент без_переключения имеет <b>значение true</b>, Microsoft Excel не переключитесь линейное снижение, даже если амортизация больше, чем уменьшения распределения вычислений. </para>
          <para>Если аргумент без_переключения имеет <b>значение false</b> или опущен, когда амортизация превышает вычисленную линейное снижение переключится Excel.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VLookup">
      <MemberSignature Language="C#" Value="public object VLookup (object Arg1, object Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object VLookup([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.VLookup(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function VLookup (Arg1 As Object, Arg2 As Object, Arg3 As Object, Optional Arg4 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16486)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Искомое_значение — значение для поиска в первый столбец таблицы массива. Искомое_значение может быть значением или ссылку. Если искомое значение меньше, чем наименьшее значение в первый столбец таблицы, ВПР возвращает значение ошибки # н/д.</param>
        <param name="Arg2">Таблица - двух или нескольких столбцах данных. Используйте ссылку на диапазон или имя диапазона. Значения в первый столбец таблицы: значениями. Эти значения могут быть текст, числа и логические значения. Текст прописных и строчных эквивалентны.</param>
        <param name="Arg3">Номер_столбца — номер столбца в таблице, из которой должно быть найдено соответствующее значение. Если номер_столбца равен 1 возвращает значение в первый столбец «таблица»; Если номер_столбца равен 2 Возвращает значение во втором столбце «таблица» и т. д.</param>
        <param name="Arg4">Интервальный_просмотр — логическое значение, указывающее, следует ли <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.VLookup(System.Object,System.Object,System.Object,System.Object)" /> метод для поиска точного соответствия или Приблизительное совпадение:</param>
        <summary>Поиск значения в первый столбец таблицы массива и возвращает значение в той же строке из другого столбца в таблице массива.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>V в <b>ВПР</b> означает по вертикали. Используйте метод <b>ВПР</b> вместо <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.HLookup(System.Object,System.Object,System.Object,System.Object)" /> метод, когда сравниваемые значения расположены в столбце слева от данных, которую требуется найти.</para>
          <para>Если номер_столбца меньше 1, метод <b>ВПР</b> приводит к ошибке. </para>
          <para>Если номер_столбца больше, чем количество столбцов в таблицы, метод <b>ВПР</b> приводит к ошибке.</para>
          <para>Если интервальный_просмотр имеет <b>значение true,</b> или опущен, возвращается точное или Приблизительное совпадение. Если не найдено точное соответствие, возвращается следующее максимальное значение, которое меньше, чем искомое_значение. </para>
          <para>Значения в первом столбце таблицы должны быть расположены по возрастанию; в противном случае метод <b>ВПР</b> может выдать правильное значение.</para>
          <para>Если интервальный_просмотр имеет <b>значение false</b>, метод <b>VLookup</b> найдет только точное совпадение. В этом случае значения в первый столбец таблицы не требуется сортировать. Если существует два или несколько значений в первый столбец таблицы, которые соответствуют искомое_значение, используется первое найденное значение. Если не найдено точное соответствие, возникнет ошибка.</para>
          <para>При поиске текстовых значений в первый столбец таблицы, убедитесь, что данные в первый столбец таблицы не имеет начальные пробелы, конечные пробелы, неправильное использование прямых ("или") и фигурных ("или «) кавычек или непечатаемые знаки. В таких случаях метод <b>ВПР</b> может вернуть неправильное или неожиданное значение. Сведения о том, как очистить или уменьшение значения можно <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Clean(System.String)" /> и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Trim(System.String)" /> методы. При поиске числовых значений или дат, убедитесь, что данные в первый столбец таблицы не сохраняются как текстовые значения. В этом случае метод <b>ВПР</b> может вернуть неправильное или неожиданное значение. </para>
          <para>Если интервальный_просмотр имеет <b>значение false</b> и искомое_значение является текстом, можно использовать подстановочные знаки вопросительный знак (?) и звездочки (*) в искомое_значение. Вопросительный знак соответствует любой отдельный знак; Звездочка соответствует любой последовательности символов. Если вы хотите найти вопросительный знак или звездочка, введите тильдой (~) перед знаком.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WebService">
      <MemberSignature Language="C#" Value="public object WebService (string Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object WebService([in]string Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.WebService(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WebService (Arg1 As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ WebService(System::String ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16980)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Arg1">URL-адрес веб-службы, для выполнения запроса HTTP GET, чтобы.</param>
        <summary>Базовая функция, которая вызывает веб-службы асинхронно, с помощью запроса HTTP GET и возвращает ответ.</summary>
        <returns>
          <b>VARIANT</b>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Weekday">
      <MemberSignature Language="C#" Value="public double Weekday (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Weekday([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Weekday(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Weekday (Arg1 As Object, Optional Arg2 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16454)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Дата_в_числовом_формате — это число, представляющий дату день, которым вы пытаетесь найти. Даты должны вводиться с использованием функции Дата или как результат других формул и функций. Например следует используйте Дата(2008;5;23) для 23-мая 2008 г. Если даты вводятся как текст, могут возникнуть проблемы.</param>
        <param name="Arg2">Тип — число, определяющее тип возвращаемого значения.</param>
        <summary>Возвращает день недели, соответствующий дате. День недели определяется как целое число в диапазоне от 1 (воскресенье) до 7 (суббота), по умолчанию.</summary>
        <returns>To be added.</returns>
        <remarks>
          <list type="table">
            <item>
              <term>1 или опущен</term>
              <description>Число от 1 (воскресенье) до 7 (суббота). Действует как предыдущих версий Microsoft Excel.</description>
            </item>
            <item>
              <term>2</term>
              <description>Число от 1 (понедельник) до 7 (воскресенье).</description>
            </item>
            <item>
              <term>3</term>
              <description>Цифры от 0 (понедельник) до 6 (воскресенье).</description>
            </item>
            <item>
              <term>11</term>
              <description>Число от 1 (понедельник) до 7 (воскресенье).</description>
            </item>
            <item>
              <term>12</term>
              <description>Число от 1 (вторник) до 7 (понедельник)</description>
            </item>
            <item>
              <term>13</term>
              <description>Число от 1 (среда) до 7 (вторник)</description>
            </item>
            <item>
              <term>14</term>
              <description>Число от 1 (четверг) до 7 (среда)</description>
            </item>
            <item>
              <term>15</term>
              <description>Число от 1 (пятница) до 7 (четверг)</description>
            </item>
            <item>
              <term>16</term>
              <description>Число от 1 (суббота) до 7 (пятница)</description>
            </item>
            <item>
              <term>17</term>
              <description>Число от 1 (воскресенье) до 7 (суббота)</description>
            </item>
          </list>
          <para>Microsoft Excel хранит даты как целые числа, поэтому они могут использоваться в расчетах. По умолчанию 1 января 1900 — серийный номер 1, а 1 января 2008 — номер 39448, так как интервал в днях 1 января 1900. Microsoft Excel для Macintosh использует другую систему дат по умолчанию.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WeekNum">
      <MemberSignature Language="C#" Value="public double WeekNum (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 WeekNum([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.WeekNum(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function WeekNum (Arg1 As Object, Optional Arg2 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16849)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Дата_в_числовом_формате — дата в течение недели. Даты должны вводиться с использованием функции Дата или как результат других формул и функций. Например следует используйте Дата(2008;5;23) для 23-мая 2008 г. Если даты вводятся как текст, могут возникнуть проблемы.</param>
        <param name="Arg2">Тип - номер, который определяет, с какого дня начинается неделя. Значение по умолчанию — 1.</param>
        <summary>Возвращает число, указывающее, где недели приходится указанная в течение года.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Важно</b>: функция <b>WeekNum</b> считает недели, содержащей 1 января, чтобы быть первую неделю года. Однако существует европейских стандарт, определяющий первую неделю как один с большинства дней (четырех или более) неполадкой нового года. Это означает, что для лет в котором существует три дня или меньше в первую неделю января функция <b>WeekNum</b> возвращает отсчет номеров недель, неправильные по европейских стандарту.</para>
          <list type="table">
            <item>
              <term>1</term>
              <description>Неделя начинается в воскресенье. Дни недели нумеруются от 1 до 7.</description>
            </item>
            <item>
              <term>2</term>
              <description>Неделя начинается в понедельник. Дни недели нумеруются от 1 до 7.</description>
            </item>
          </list>
          <para>Microsoft Excel хранит даты как целые числа, поэтому они могут использоваться в расчетах. По умолчанию 1 января 1900 — серийный номер 1, а 1 января 2008 — номер 39448, так как интервал в днях 1 января 1900. Microsoft Excel для Macintosh использует другую систему дат по умолчанию.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Weibull">
      <MemberSignature Language="C#" Value="public double Weibull (double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Weibull([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]bool Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Weibull(System.Double,System.Double,System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Weibull (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Weibull(double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16686)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Arg1">X — значение, для которого вычисляется функция.</param>
        <param name="Arg2">Альфа - параметр распределения.</param>
        <param name="Arg3">Бета-версия — параметр распределения.</param>
        <param name="Arg4">Накопительный пакет - определяет форму функции.</param>
        <summary>Возвращает распределение Вейбулла. Это распределение используется при анализе надежности, таких как вычисления устройства среднее время до сбоя.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Внимание!</b>: Эта функция была заменена один или несколько новых функций, который может предоставлять улучшенные точность и лучше, имена которых отражают их использования. Эта функция по-прежнему доступна для обеспечения совместимости с предыдущими версиями Excel. Тем не менее если обратной совместимости не требуется, можно теперь с помощью новых функций, так как они более точно описывает их функциональных возможностей. Дополнительные сведения о новой функции можно <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Weibull_Dist(System.Double,System.Double,System.Double,System.Boolean)" /> метод.</para>
          <para>Если x, альфа, или бета-версии не является числом, <b>ВЕЙБУЛЛ</b> возвращает #VALUE! значение ошибки. Если x &lt; 0, <b>ВЕЙБУЛЛ</b> возвращает #NUM! значение ошибки. </para>
          <para>Если альфа ≤ 0 или бета ≤ 0, <b>то функция ВЕЙБУЛЛ</b> возвращает #NUM! значение ошибки. </para>
          <para>Формула для расчета функции нормального распределения ВЕЙБУЛЛ — это: </para>
          <para>На рисунке 1: Формула для интегральной функции распределения ВЕЙБУЛЛ</para>
          <para></para>
          <para></para>
          <para>Формула для расчета Вейбулла весовой функции распределения — это:</para>
          <para>На рисунке 2: Формула для весовой функции распределения ВЕЙБУЛЛ</para>
          <para></para>
          <para></para>
          <para>Если альфа = 1, <b>ВЕЙБУЛЛ</b> возвращает экспоненциальное распределение:</para>
          <para>На рисунке 3: формула</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Weibull_Dist">
      <MemberSignature Language="C#" Value="public double Weibull_Dist (double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Weibull_Dist([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]bool Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Weibull_Dist(System.Double,System.Double,System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Weibull_Dist (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Weibull_Dist(double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16903)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Arg1">X — значение, для которого вычисляется функция.</param>
        <param name="Arg2">Альфа - параметр распределения.</param>
        <param name="Arg3">Бета-версия — параметр распределения.</param>
        <param name="Arg4">Накопительный пакет - определяет форму функции.</param>
        <summary>Возвращает распределение Вейбулла. Это распределение используется при анализе надежности, таких как вычисления среднее время до сбоя для устройства.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если x, альфа, или бета-версии не являющийся числовым, <b>Weibull_Dist</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если x &lt; 0, <b>Weibull_Dist</b> возвращает #NUM! значение ошибки. </para>
          <para>Если альфа ≤ 0 или бета ≤ 0, <b>Weibull_Dist</b> возвращает #NUM! значение ошибки. </para>
          <para>Формула для расчета функции нормального распределения ВЕЙБУЛЛ — это: </para>
          <para>На рисунке 1: Формула для интегральной функции распределения ВЕЙБУЛЛ</para>
          <para></para>
          <para></para>
          <para>Формула для расчета Вейбулла весовой функции распределения — это:</para>
          <para>На рисунке 2: Формула для весовой функции распределения ВЕЙБУЛЛ</para>
          <para></para>
          <para></para>
          <para>Если альфа = 1, <b>Weibull_Dist</b> возвращает экспоненциальное распределение:</para>
          <para>На рисунке 3: формула</para>
          <para></para>
          <para></para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkDay">
      <MemberSignature Language="C#" Value="public double WorkDay (object Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 WorkDay([in]object Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.WorkDay(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function WorkDay (Arg1 As Object, Arg2 As Object, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16855)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Нач_дата — Дата, которая представляет дату начала.</param>
        <param name="Arg2">Дни — количество не выходных и не праздничных дней до или после нач_дата. Положительное значение дней уступает будущие даты; отрицательное значение уступает срока в прошлом.</param>
        <param name="Arg3">Праздники — необязательный список из одной или нескольких дат для исключения из рабочего календаря, такие как состояние и Федеральное праздников и государственные праздники. Список может быть либо диапазона ячеек, содержащих даты или массив числовые форматы, представляющие даты.</param>
        <summary>Возвращает число, представляющее даты, указанного числа рабочих дней до или после даты (дату начала). Рабочими днями не выходные дни и дни, определенные как праздничные дни. Используйте рабочего ДНЯ, чтобы исключить выходные и праздничные дни, при вычислении срокам, ожидаемых дат доставки или количество дней, выполненных работ.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Важно</b>: ввода дат с помощью функции Дата или как результат других формул и функций. Например следует используйте Дата(2008;5;23) для 23-мая 2008 г. Если даты вводятся как текст, могут возникнуть проблемы.</para>
          <para>Microsoft Excel хранит даты как целые числа, поэтому они могут использоваться в расчетах. По умолчанию 1 января 1900 — серийный номер 1, а 1 января 2008 — номер 39448, так как интервал в днях 1 января 1900. Microsoft Excel для Macintosh использует другую систему дат по умолчанию. </para>
          <para>Если все аргументы, не является допустимой датой, <b>рабочий день</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если нач_дата плюс дают недопустимую дату, <b>рабочий день</b> возвращает #NUM! значение ошибки. </para>
          <para>Если дней не является целым числом, оно сокращается.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkDay_Intl">
      <MemberSignature Language="C#" Value="public double WorkDay_Intl (object Arg1, object Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 WorkDay_Intl([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.WorkDay_Intl(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function WorkDay_Intl (Arg1 As Object, Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16905)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Нач_дата — Дата начала сокращается до целого числа.</param>
        <param name="Arg2">Дни — число рабочих дней до или после начальной даты. Положительное значение уступает будущие даты; Возвращает отрицательное значение последние даты; 0 (ноль) значение уступает начальной даты. Смещение день усекается до целого числа.</param>
        <param name="Arg3">Выходные - указывает дни недели, не считаются рабочих дней и выходных дней. Выходные — выходные номер или строка, указывающая, выходные дни.</param>
        <param name="Arg4">Праздники — необязательный список из одной или нескольких дат, которые следует исключить из календаря рабочего дня. Праздники — диапазон ячеек, содержащих даты или массив из последовательных значений, которые представляют эти даты. Порядок использования дат или последовательных значений в выходные дни может быть произвольным.</param>
        <summary>Возвращает целое число, дату до или после указанного числа рабочих дней с настраиваемыми параметрами выходных. Выходные параметры указывают которого и сколько дней — выходные дни. Выходные дни и любые дней, указанных как праздники не рассматриваются как рабочие дни.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если нач_дата находится вне диапазона для базового значения текущей даты, <b>WorkDay_Intl</b> возвращает #NUM! значение ошибки. </para>
          <para>Если любой даты в выходные дни находится вне диапазона для базового значения текущей даты, <b>WorkDay_Intl</b> возвращает #NUM! значение ошибки. </para>
          <para>Если нач_дата плюс день смещение дают недопустимую дату, <b>WorkDay_Intl</b> возвращает #NUM! значение ошибки. </para>
          <para>Если строка выходные принадлежит Недопустимая длина или содержит недопустимые символы, <b>WorkDay_Intl</b> возвращает #VALUE! значение ошибки.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Xirr">
      <MemberSignature Language="C#" Value="public double Xirr (object Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Xirr([in]object Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Xirr(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Xirr (Arg1 As Object, Arg2 As Object, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16813)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Значения - ряд денежных потоков, соответствующий расписанию платежей в даты. Первый платеж является необязательным и соответствует затраты или оплаты, которая происходит в начале инвестиции. Если первое значение — это затраты или оплаты, его следует отрицательное значение. Все последующие выплаты делается скидка на основе 365-дневного года. Ряд значений должен содержать по крайней мере один положительных и отрицательных значений.</param>
        <param name="Arg2">Даты - расписание дат платежей, соответствующий денежных потоков. Первая дата означает начало расписания платежей. Все другие даты должны быть позже этой даты, но они могут появляться в любом порядке. Даты должны вводиться с использованием функции Дата или как результат других формул и функций. Например следует используйте Дата(2008;5;23) для 23-мая 2008 г. Если даты вводятся как текст, могут возникнуть проблемы.</param>
        <param name="Arg3">Прогноз - номер, предполагается, что — значение результата <b>функции ЧИСТВНДОХ</b>.</param>
        <summary>Возвращает внутреннюю норму прибыли для графика денежных потоков, которое не обязательно периодические. Чтобы вычислить внутреннюю норму прибыли для последовательности периодических денежных потоков, функция IRR.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Microsoft Excel хранит даты как целые числа, поэтому они могут использоваться в расчетах. По умолчанию 1 января 1900 — серийный номер 1, а 1 января 2008 — номер 39448, так как интервал в днях 1 января 1900. Microsoft Excel для Macintosh использует другую систему дат по умолчанию. </para>
          <para>Числа в аргументе даты усекаются до целых. </para>
          <para>
            <b>ЧИСТВНДОХ</b> предполагает по крайней мере один положительный и один отрицательные движения денежных средств; в противном случае <b>ЧИСТВНДОХ</b> возвращает #NUM! значение ошибки. </para>
          <para>Если любое число в аргументе даты не является допустимой датой, <b>то функция ЧИСТВНДОХ</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если любое число в аргументе даты предшествует начальной дате, <b>ЧИСТВНДОХ</b> возвращает #NUM! значение ошибки. </para>
          <para>Если значения и даты содержат различное количество значений, <b>то функция ЧИСТВНДОХ</b> возвращает #NUM! значение ошибки. </para>
          <para>В большинстве случаев вам не нужно указывать прогноз для функции <b>ЧИСТВНДОХ</b> . Если этот параметр опущен, прогноз полагается равным 0,1 (10 процентов). </para>
          <para>
            <b>ЧИСТВНДОХ</b> тесно связана с <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Xnpv(System.Object,System.Object)" />, общий текущий значение функции. Уровень рентабельности, вычисляемая <b>ЧИСТВНДОХ</b> — это процент, соответствующий ЧИСТНЗ = 0. </para>
          <para>Excel использует метод итераций для вычисления <b>ЧИСТВНДОХ</b>. С помощью изменение скорости (начинающиеся с прогноз), <b>ЧИСТВНДОХ</b> циклов вычисления до получения точных 0.000001 процента результата. Если <b>ЧИСТВНДОХ</b> не удается найти результат после 100 попыток, #NUM! возвращается ошибка. Скорость передачи изменяется до того времени: </para>
          <para>На рисунке 1: формула</para>
          <para></para>
          <para></para>
          <para>где:</para>
          <para>di = i-го или последняя дата оплаты.</para>
          <para>D1 = 0-ом Дата оплаты.</para>
          <para>Pi = i-го или последнего платежа.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Xnpv">
      <MemberSignature Language="C#" Value="public double Xnpv (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Xnpv([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Xnpv(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Xnpv (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Xnpv(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16814)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Серия движение денежных средств, соответствующий расписанию платежей в даты. Первый платеж является необязательным и соответствует затраты или оплаты, которая происходит в начале инвестиции.</param>
        <param name="Arg2">Расписание дат платежей, соответствующий денежных потоков. Первая дата означает начало расписания платежей. Все другие даты должны быть позже этой даты, но они могут появляться в любом порядке.</param>
        <summary>Возвращает чистую приведенную стоимость для графика денежных потоков, которое не обязательно периодические.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Важно</b>: метод <b>ЧИСТНЗ</b> не предоставляет параметр, который соответствует аргументу скорости, необходимые для соответствующей функции ЧИСТНЗ (= ЧИСТНЗ (скорости, значения, даты)). Чтобы обойти данное ограничение в коде VBA, а не с помощью метода <b>Xpnv</b> , вызовите функцию ЧИСТНЗ с помощью <see cref="M:Microsoft.Office.Interop.Excel._Application.Evaluate(System.Object)" /> метод.</para>
          <para>Чтобы вычислить чистую приведенную стоимость для ряда движение денежных средств периодических, используйте <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Npv(System.Double,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> метод.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Xor">
      <MemberSignature Language="C#" Value="public bool Xor (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Xor([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Xor(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Xor (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16953)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">1 до 254 условий, которое требуется проверить, может быть значение <b>TRUE</b> или <b>FALSE</b> и может быть логические значения, массивы или ссылки.</param>
        <param name="Arg2">1 до 254 условий, которое требуется проверить, может быть значение <b>TRUE</b> или <b>FALSE</b> и может быть логические значения, массивы или ссылки.</param>
        <param name="Arg3">1 до 254 условий, которое требуется проверить, может быть значение <b>TRUE</b> или <b>FALSE</b> и может быть логические значения, массивы или ссылки.</param>
        <param name="Arg4">1 до 254 условий, которое требуется проверить, может быть значение <b>TRUE</b> или <b>FALSE</b> и может быть логические значения, массивы или ссылки.</param>
        <param name="Arg5">1 до 254 условий, которое требуется проверить, может быть значение <b>TRUE</b> или <b>FALSE</b> и может быть логические значения, массивы или ссылки.</param>
        <param name="Arg6">1 до 254 условий, которое требуется проверить, может быть значение <b>TRUE</b> или <b>FALSE</b> и может быть логические значения, массивы или ссылки.</param>
        <param name="Arg7">1 до 254 условий, которое требуется проверить, может быть значение <b>TRUE</b> или <b>FALSE</b> и может быть логические значения, массивы или ссылки.</param>
        <param name="Arg8">1 до 254 условий, которое требуется проверить, может быть значение <b>TRUE</b> или <b>FALSE</b> и может быть логические значения, массивы или ссылки.</param>
        <param name="Arg9">1 до 254 условий, которое требуется проверить, может быть значение <b>TRUE</b> или <b>FALSE</b> и может быть логические значения, массивы или ссылки.</param>
        <param name="Arg10">1 до 254 условий, которое требуется проверить, может быть значение <b>TRUE</b> или <b>FALSE</b> и может быть логические значения, массивы или ссылки.</param>
        <param name="Arg11">1 до 254 условий, которое требуется проверить, может быть значение <b>TRUE</b> или <b>FALSE</b> и может быть логические значения, массивы или ссылки.</param>
        <param name="Arg12">1 до 254 условий, которое требуется проверить, может быть значение <b>TRUE</b> или <b>FALSE</b> и может быть логические значения, массивы или ссылки.</param>
        <param name="Arg13">1 до 254 условий, которое требуется проверить, может быть значение <b>TRUE</b> или <b>FALSE</b> и может быть логические значения, массивы или ссылки.</param>
        <param name="Arg14">1 до 254 условий, которое требуется проверить, может быть значение <b>TRUE</b> или <b>FALSE</b> и может быть логические значения, массивы или ссылки.</param>
        <param name="Arg15">1 до 254 условий, которое требуется проверить, может быть значение <b>TRUE</b> или <b>FALSE</b> и может быть логические значения, массивы или ссылки.</param>
        <param name="Arg16">1 до 254 условий, которое требуется проверить, может быть значение <b>TRUE</b> или <b>FALSE</b> и может быть логические значения, массивы или ссылки.</param>
        <param name="Arg17">1 до 254 условий, которое требуется проверить, может быть значение <b>TRUE</b> или <b>FALSE</b> и может быть логические значения, массивы или ссылки.</param>
        <param name="Arg18">1 до 254 условий, которое требуется проверить, может быть значение <b>TRUE</b> или <b>FALSE</b> и может быть логические значения, массивы или ссылки.</param>
        <param name="Arg19">1 до 254 условий, которое требуется проверить, может быть значение <b>TRUE</b> или <b>FALSE</b> и может быть логические значения, массивы или ссылки.</param>
        <param name="Arg20">1 до 254 условий, которое требуется проверить, может быть значение <b>TRUE</b> или <b>FALSE</b> и может быть логические значения, массивы или ссылки.</param>
        <param name="Arg21">1 до 254 условий, которое требуется проверить, может быть значение <b>TRUE</b> или <b>FALSE</b> и может быть логические значения, массивы или ссылки.</param>
        <param name="Arg22">1 до 254 условий, которое требуется проверить, может быть значение <b>TRUE</b> или <b>FALSE</b> и может быть логические значения, массивы или ссылки.</param>
        <param name="Arg23">1 до 254 условий, которое требуется проверить, может быть значение <b>TRUE</b> или <b>FALSE</b> и может быть логические значения, массивы или ссылки.</param>
        <param name="Arg24">1 до 254 условий, которое требуется проверить, может быть значение <b>TRUE</b> или <b>FALSE</b> и может быть логические значения, массивы или ссылки.</param>
        <param name="Arg25">1 до 254 условий, которое требуется проверить, может быть значение <b>TRUE</b> или <b>FALSE</b> и может быть логические значения, массивы или ссылки.</param>
        <param name="Arg26">1 до 254 условий, которое требуется проверить, может быть значение <b>TRUE</b> или <b>FALSE</b> и может быть логические значения, массивы или ссылки.</param>
        <param name="Arg27">1 до 254 условий, которое требуется проверить, может быть значение <b>TRUE</b> или <b>FALSE</b> и может быть логические значения, массивы или ссылки.</param>
        <param name="Arg28">1 до 254 условий, которое требуется проверить, может быть значение <b>TRUE</b> или <b>FALSE</b> и может быть логические значения, массивы или ссылки.</param>
        <param name="Arg29">1 до 254 условий, которое требуется проверить, может быть значение <b>TRUE</b> или <b>FALSE</b> и может быть логические значения, массивы или ссылки.</param>
        <param name="Arg30">1 до 254 условий, которое требуется проверить, может быть значение <b>TRUE</b> или <b>FALSE</b> и может быть логические значения, массивы или ссылки.</param>
        <summary>Возвращает логическое исключительных или для всех аргументов.</summary>
        <returns>
          <b>BOOL</b>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="YearFrac">
      <MemberSignature Language="C#" Value="public double YearFrac (object Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 YearFrac([in]object Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.YearFrac(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function YearFrac (Arg1 As Object, Arg2 As Object, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16835)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Нач_дата — Дата, которая представляет дату начала.</param>
        <param name="Arg2">Кон_дата — дата, которая представляет дату окончания.</param>
        <param name="Arg3">Основы - способ вычисления дня.</param>
        <summary>Возвращает долю года, число дней между двумя датами (начальной и конечной). Используйте функцию ДОЛЯГОДА для идентификации пропорции преимущества для всего года или обязательства для назначения для определенных терминов.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Важно</b>: ввода дат с помощью функции Дата или как результат других формул и функций. Например следует используйте Дата(2008;5;23) для 23-мая 2008 г. Если даты вводятся как текст, могут возникнуть проблемы.</para>
          <list type="table">
            <item>
              <term>0 или опущен</term>
              <description>"МНЕ НРАВИТСЯ" (NASD) 30/360</description>
            </item>
            <item>
              <term>1</term>
              <description>Фактический</description>
            </item>
            <item>
              <term>2</term>
              <description>Фактический/360</description>
            </item>
            <item>
              <term>3</term>
              <description>Фактический/365</description>
            </item>
            <item>
              <term>4</term>
              <description>Европейский 30/360</description>
            </item>
          </list>
          <para>Microsoft Excel хранит даты как целые числа, поэтому они могут использоваться в расчетах. По умолчанию 1 января 1900 — серийный номер 1, а 1 января 2008 — номер 39448, так как интервал в днях 1 января 1900. Microsoft Excel для Macintosh использует другую систему дат по умолчанию. </para>
          <para>Все аргументы усекаются до целых. </para>
          <para>Если нач_дата или кон_дата не являются допустимыми датами, <b>ДОЛЯГОДА</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если основа &lt; 0 или, если основа &gt; 4, <b>то функция ДОЛЯГОДА</b> возвращает #NUM! значение ошибки.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="YieldDisc">
      <MemberSignature Language="C#" Value="public double YieldDisc (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 YieldDisc([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.YieldDisc(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function YieldDisc (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Optional Arg5 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16821)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Сопоставление - Дата сопоставления безопасности. Дата сопоставления безопасности — это дата после даты выпуска, если передается безопасности покупателю.</param>
        <param name="Arg2">Роста - срока. Соответствует дата истечения срока действия безопасности.</param>
        <param name="Arg3">Цена — цена безопасности на лицевой значение 100 долларов США.</param>
        <param name="Arg4">Погашения - ценных погашения за лицевой значение 100 долларов США.</param>
        <param name="Arg5">Основы - способ вычисления дня.</param>
        <summary>Возвращает годовой доход со скидкой безопасности.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Важно</b>: ввода дат с помощью функции Дата или как результат других формул и функций. Например следует используйте Дата(2008;5;23) для 23-мая 2008 г. Если даты вводятся как текст, могут возникнуть проблемы.</para>
          <list type="table">
            <item>
              <term>0 или опущен</term>
              <description>"МНЕ НРАВИТСЯ" (NASD) 30/360</description>
            </item>
            <item>
              <term>1</term>
              <description>Фактический</description>
            </item>
            <item>
              <term>2</term>
              <description>Фактический/360</description>
            </item>
            <item>
              <term>3</term>
              <description>Фактический/365</description>
            </item>
            <item>
              <term>4</term>
              <description>Европейский 30/360</description>
            </item>
          </list>
          <para>Microsoft Excel хранит даты как целые числа, поэтому они могут использоваться в расчетах. По умолчанию 1 января 1900 — серийный номер 1, а 1 января 2008 — номер 39448, так как интервал в днях 1 января 1900. Microsoft Excel для Macintosh использует другую систему дат по умолчанию. </para>
          <para>Дата соглашения — это дата продажи покупателю купон, такие как действия. Срок платежа — это дата истечения срока действия купон. Предположим, например, сроком действия 30 лет выпущена 1 января 2008 года и приобретена покупателем через шесть месяцев после. Дата выпуска будет являться 1 января 2008, Дата соглашения равен 1 июля 2008 г., и срок погашения будет равен 1 января 2038, который — 30 лет после даты выпуска 1 января 2008 года. </para>
          <para>Сопоставления, роста и основы усекаются до целых. </para>
          <para>Если сопоставления или роста не является допустимой датой, <b>функция ДОХОДСКИДКА</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если цена ≤ 0 или погашения ≤ 0, <b>то функция ДОХОДСКИДКА</b> возвращает #NUM! значение ошибки. </para>
          <para>Если основа &lt; 0 или, если основа &gt; 4, <b>то функция ДОХОДСКИДКА</b> возвращает #NUM! значение ошибки. </para>
          <para>Если сопоставления ≥ роста, <b>функция ДОХОДСКИДКА</b> возвращает #NUM! значение ошибки.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="YieldMat">
      <MemberSignature Language="C#" Value="public double YieldMat (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 YieldMat([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.YieldMat(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function YieldMat (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Arg5 As Object, Optional Arg6 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16816)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Сопоставление - Дата сопоставления безопасности. Дата сопоставления безопасности — это дата после даты выпуска, если передается безопасности покупателю.</param>
        <param name="Arg2">Роста - срока. Соответствует дата истечения срока действия безопасности.</param>
        <param name="Arg3">Проблема — Дата выпуска ценных бумаг порядковый номер.</param>
        <param name="Arg4">Частота - процентной ставки безопасности на дату выпуска.</param>
        <param name="Arg5">Цена — цена безопасности на лицевой значение 100 долларов США.</param>
        <param name="Arg6">Основы - способ вычисления дня.</param>
        <summary>Возвращает годовой доход безопасности, который составляет доход в роста.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Важно</b>: ввода дат с помощью функции Дата или как результат других формул и функций. Например следует используйте Дата(2008;5;23) для 23-мая 2008 г. Если даты вводятся как текст, могут возникнуть проблемы.</para>
          <list type="table">
            <item>
              <term>0 или опущен</term>
              <description>"МНЕ НРАВИТСЯ" (NASD) 30/360</description>
            </item>
            <item>
              <term>1</term>
              <description>Фактический</description>
            </item>
            <item>
              <term>2</term>
              <description>Фактический/360</description>
            </item>
            <item>
              <term>3</term>
              <description>Фактический/365</description>
            </item>
            <item>
              <term>4</term>
              <description>Европейский 30/360</description>
            </item>
          </list>
          <para>Microsoft Excel хранит даты как целые числа, поэтому они могут использоваться в расчетах. По умолчанию 1 января 1900 — серийный номер 1, а 1 января 2008 — номер 39448, так как интервал в днях 1 января 1900. Microsoft Excel для Macintosh использует другую систему дат по умолчанию. </para>
          <para>Дата соглашения — это дата продажи покупателю купон, такие как действия. Срок платежа — это дата истечения срока действия купон. Предположим, например, сроком действия 30 лет выпущена 1 января 2008 года и приобретена покупателем через шесть месяцев после. Дата выпуска будет являться 1 января 2008, Дата соглашения равен 1 июля 2008 г., и срок погашения будет равен 1 января 2038, который — 30 лет после даты выпуска 1 января 2008 года. </para>
          <para>Сопоставления, роста, проблема и основы усекаются до целых. </para>
          <para>Если сопоставления, роста или проблема не является допустимой датой, <b>функция ДОХОДПОГАШ</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если частота &lt; 0 или цена ≤ 0, <b>то функция ДОХОДПОГАШ</b> возвращает #NUM! значение ошибки. </para>
          <para>Если основа &lt; 0 или, если основа &gt; 4, <b>то функция ДОХОДПОГАШ</b> возвращает #NUM! значение ошибки. </para>
          <para>Если сопоставления ≥ роста, <b>ДОХОДПОГАШ</b> возвращает #NUM! значение ошибки.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Z_Test">
      <MemberSignature Language="C#" Value="public double Z_Test (object Arg1, double Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Z_Test([in]object Arg1, [in]float64 Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Z_Test(System.Object,System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Z_Test (Arg1 As Object, Arg2 As Double, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16926)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Массив — массив или диапазон данных, с которыми сравнивается гипотетическом.</param>
        <param name="Arg2">Значение для тестирования.</param>
        <param name="Arg3">Сигма - стандартное отклонение совокупности (известные). Если этот параметр опущен, используется стандартное отклонение выборки.</param>
        <summary>Возвращает одностороннее p значение z теста. Для заданного гипотетическом совокупности, расчета Z_TEST возвращает вероятность того, что выборочное среднее будет больше среднего значения в наборе данных (array), то есть, применяемых среднего.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Если массив пуст, <b>расчета Z_Test</b> возвращает значение ошибки # н/д. </para>
          <para>Когда сигма не опущена 
            <b>расчета Z_Test</b> рассчитывается по следующей формуле: </para>
          <para>На рисунке 1: Формула для расчета Z_Test, когда сигма не опущена</para>
          <para></para>
          <para></para>
          <para>или когда сигма опущена:</para>
          <para>На рисунке 2: Формула для расчета Z_Test, когда сигма опущена</para>
          <para></para>
          <para></para>
          <para>где x — выборочное среднее значение СРЗНАЧ(массив); s — это стандартное отклонение выборки STDEV_S(array); а n — число наблюдений счет(массив).</para>
          <para>
            <b>Расчета Z_Test</b> представляет вероятность того, что выборочное среднее будет больше, чем значения СРЗНАЧ(массив), совокупности — μ0. Из симметричный нормального распределения если СРЗНАЧ(массив) &lt; μ0, <b>расчета Z_Test</b> вернет значение больше, чем 0,5.</para>
          <para>Следующую формулу Microsoft Excel можно использовать для вычисления двустороннего значения вероятности того, что выборочное среднее будет отличаться от μ0 (в обоих направлениях), чем СРЗНАЧ(массив), когда совокупности μ0:</para>
          <para>= 2 * MIN(Z_TEST(array,μ0,sigma), 1 — Z_TEST(array,μ0,sigma)).</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ZTest">
      <MemberSignature Language="C#" Value="public double ZTest (object Arg1, double Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ZTest([in]object Arg1, [in]float64 Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ZTest(System.Object,System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ZTest (Arg1 As Object, Arg2 As Double, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16708)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Массив — массив или диапазон данных, с которыми сравнивается гипотетическом.</param>
        <param name="Arg2">Значение для тестирования.</param>
        <param name="Arg3">Сигма - стандартное отклонение совокупности (известные). Если этот параметр опущен, используется стандартное отклонение выборки.</param>
        <summary>Возвращает одностороннее p значение z теста. Для заданного гипотетическом совокупности, расчета ZTEST возвращает вероятность того, что выборочное среднее будет больше среднего значения в наборе данных (array), то есть, применяемых среднего.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Внимание!</b>: Эта функция была заменена один или несколько новых функций, который может предоставлять улучшенные точность и лучше, имена которых отражают их использования. Эта функция по-прежнему доступна для обеспечения совместимости с предыдущими версиями Excel. Тем не менее если обратной совместимости не требуется, можно теперь с помощью новых функций, так как они более точно описывает их функциональных возможностей. Дополнительные сведения о новой функции можно <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Z_Test(System.Object,System.Double,System.Object)" /> метод.</para>
          <para>Если массив пуст, <b>расчета ZTest</b> возвращает значение ошибки # н/д. </para>
          <para>Когда сигма не опущена 
            <b>расчета ZTest</b> рассчитывается по следующей формуле: </para>
          <para>На рисунке 1: Формула для расчета ZTest, когда сигма не опущена</para>
          <para></para>
          <para></para>
          <para>или когда сигма опущена:</para>
          <para>На рисунке 2: Формула для расчета ZTest, когда сигма опущена</para>
          <para></para>
          <para></para>
          <para>где x — выборочное среднее значение СРЗНАЧ(массив); s — это стандартное отклонение выборки СТАНДОТКЛОН(массив); а n — число наблюдений счет(массив).</para>
          <para>
            <b>Расчета ZTest</b> представляет вероятность того, что выборочное среднее будет больше, чем значения СРЗНАЧ(массив), совокупности — μ0. Из симметричный нормального распределения если СРЗНАЧ(массив) &lt; μ0, расчета ZTEST вернет значение больше, чем 0,5.</para>
          <para>Следующую формулу Microsoft Excel можно использовать для вычисления двустороннего значения вероятности того, что выборочное среднее будет отличаться от μ0 (в обоих направлениях), чем СРЗНАЧ(массив), когда совокупности μ0: = 2 * MIN(ZTEST(array,μ0,sigma), 1 — расчета ZTEST (массива, μ0, [[[сигма)).</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>