<Type Name="WorksheetFunction" FullName="Microsoft.Office.Interop.Excel.WorksheetFunction">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0e8779a13b1ae831ceba99e1523c885328838f42" /><Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/24/2018" /><Meta Name="ms.locfileid" Value="20574615" /></Metadata><TypeSignature Language="C#" Value="public interface WorksheetFunction" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract WorksheetFunction" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.WorksheetFunction" />
  <TypeSignature Language="VB.NET" Value="Public Interface WorksheetFunction" />
  <TypeSignature Language="C++ CLI" Value="public interface class WorksheetFunction" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00020845-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Используется в качестве контейнера для функций листов Excel, которые можно вызывать из Visual Basic.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="_WSFunction">
      <MemberSignature Language="C#" Value="public object _WSFunction (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _WSFunction([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction._WSFunction(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _WSFunction (Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(169)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Зарезервировано для внутреннего использования.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccrInt">
      <MemberSignature Language="C#" Value="public double AccrInt (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 AccrInt([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.AccrInt(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AccrInt (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Arg5 As Object, Arg6 As Object, Optional Arg7 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16853)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Дата выпуска — Дата выпуска для системы безопасности.</param>
        <param name="Arg2">Первый процент — Дата первой выплаты по ценным бумагам.</param>
        <param name="Arg3">Дата_согл — Дата сопоставления для безопасности</param>
        <param name="Arg4">Годовая скорость купонов для ценных.</param>
        <param name="Arg5">Номинал — номинал безопасности.</param>
        <param name="Arg6">Частота выплат по купонам за год.</param>
        <param name="Arg7">Базис — используемый тип расчета дня.</param>
        <summary>Возвращает накопленный процент для безопасности, который выплачивает периодические выплаты процентов.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>для ввода дат используется функция Дата или результаты других формул или функций. Например, используйте DATE (2008, 5, 23) для 23-дневного дня мая 2008. Проблемы могут возникать, если даты вводятся как текст.</para>
          <para>В следующей таблице приведены значения, которые можно использовать для <paramref name="Arg5" />.</para>
          <list type="table">
            <item>
              <term>0 или опущен</term>
              <description>АМЕРИКАНСКИЙ (NASD) 30/360</description>
            </item>
            <item>
              <term>1,1</term>
              <description>Фактический/фактический</description>
            </item>
            <item>
              <term>2</term>
              <description>Фактический/360</description>
            </item>
            <item>
              <term>4</term>
              <description>Фактические/365</description>
            </item>
            <item>
              <term>4 </term>
              <description>Европейская 30/360</description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AccrIntM">
      <MemberSignature Language="C#" Value="public double AccrIntM (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 AccrIntM([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.AccrIntM(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AccrIntM (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Optional Arg5 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16854)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Дата выпуска для системы безопасности.</param>
        <param name="Arg2">Срок погашения для системы безопасности.</param>
        <param name="Arg3">Ежегодная ставка купонов по ценным обозначением.</param>
        <param name="Arg4">Номинальная стоимость ценных бумаг. Если параметр номинал опущен, НАКОПДОХОДПОГАШ использует $1 000.</param>
        <param name="Arg5">Используемый тип расчета дня.</param>
        <summary>Возвращает накопленный процент по ценным бумагам, который выплачивает процентные выплаты по зрелости.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>для ввода дат используется функция Дата или результаты других формул или функций. Например, используйте DATE (2008, 5, 23) для 23-дневного дня мая 2008. Проблемы могут возникать, если даты вводятся как текст.</para>
          <para>В следующей таблице приведены значения, которые можно использовать для <paramref name="Arg5" />.</para>
          <list type="table">
            <item>
              <term>0 или опущен</term>
              <description>АМЕРИКАНСКИЙ (NASD) 30/360</description>
            </item>
            <item>
              <term>1,1</term>
              <description>Фактический/фактический</description>
            </item>
            <item>
              <term>2</term>
              <description>Фактический/360</description>
            </item>
            <item>
              <term>4</term>
              <description>Фактические/365</description>
            </item>
            <item>
              <term>4 </term>
              <description>Европейская 30/360</description>
            </item>
          </list>
          <para>В следующем списке приведены сведения, которые следует учитывать при работе с НАКОПДОХОДПОГАШ.</para>
          <list type="bullet">
            <item>
              <description>Microsoft Excel хранит даты как последовательные серийные номера, чтобы их можно было использовать в вычислениях. По умолчанию 1 января 1900 года является порядковым номером 1, а 1 января 2008 — порядковым номером 39448, так как он составляет 39 448 дней после 1 января 1900. </description>
            </item>
            <item>
              <description>Выдача, дата_вступл_в_силу и базис усекаются до целых. </description>
            </item>
            <item>
              <description>Если выдача или дата_вступл_в_силу не является допустимой датой, НАКОПДОХОДПОГАШ создаст ошибку. </description>
            </item>
            <item>
              <description>Если ставка ≤ 0 или номинал ≤ 0, НАКОПДОХОДПОГАШ создаст ошибку. </description>
            </item>
            <item>
              <description>Если базис &lt; 0 или базис &gt; 4, НАКОПДОХОДПОГАШ создаст ошибку. </description>
            </item>
            <item>
              <description>Если выдаваться ≥ дата_вступления_в_силу, НАКОПДОХОДПОГАШ выдаст ошибку. </description>
            </item>
            <item>
              <description>НАКОПДОХОДПОГАШ вычисляется следующим образом: </description>
            </item>
          </list>
          <para>где:</para>
          <para>A = количество накопленных дней, подсчитанных в соответствии с месячным базисом. Для процента на срок погашения используется количество дней с даты выпуска до даты погашения.</para>
          <para>D — ежегодный год.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Acos">
      <MemberSignature Language="C#" Value="public double Acos (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Acos([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Acos(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Acos (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Acos(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16483)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Косинус желаемого угла и должен находиться в от – 1 до 1.</param>
        <summary>Возвращает арккосинус, или обратный косинус, числа. Арккосинус числа — это угол, косинус которого <paramref name="Arg1" />равен. Возвращаемый угол задается в радианах в диапазоне от 0 (ноль) до PI.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если вы хотите преобразовать результат из радианов в градусы, умножьте его на 180/ПИ () или используйте метод Degrees.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Acosh">
      <MemberSignature Language="C#" Value="public double Acosh (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Acosh([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Acosh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Acosh (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Acosh(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16617)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Любое действительное число, равное или больше 1.</param>
        <summary>Возвращает обратный гиперболический косинус числа. Число должно быть больше или равно 1. Обратный гиперболический косинус — это значение, гиперболический косинус которого имеет <paramref name="Arg1" />значение, поэтому ACOSH (COSH (число)) равно <paramref name="Arg1" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Acot">
      <MemberSignature Language="C#" Value="public double Acot (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Acot([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Acot(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Acot (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Acot(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16932)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Котангенс нужного угла.</param>
        <summary>Возвращает Арккотангенс числа в радианах в диапазоне от 0 до PI.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Acoth">
      <MemberSignature Language="C#" Value="public double Acoth (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Acoth([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Acoth(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Acoth (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Acoth(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16933)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Гиперболический котангенс нужного угла.</param>
        <summary>Возвращает обратный гиперболический котангенс числа.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Aggregate">
      <MemberSignature Language="C#" Value="public double Aggregate (double Arg1, double Arg2, Microsoft.Office.Interop.Excel.Range Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Aggregate([in]float64 Arg1, [in]float64 Arg2, [in]class Microsoft.Office.Interop.Excel.Range Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Aggregate(System.Double,System.Double,Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Aggregate (Arg1 As Double, Arg2 As Double, Arg3 As Range, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16869)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Function_num — число от 1 до 19, которое указывает, какую функцию использовать.</param>
        <param name="Arg2">Options — числовое значение, которое определяет, какие значения следует игнорировать в диапазоне вычислений для функции.</param>
        <param name="Arg3">Ref1 — первый числовой аргумент для функций, которые принимают несколько числовых аргументов, для которых требуется получить статистическое значение.</param>
        <param name="Arg4">Ref2 — Ref30 — числовые аргументы от 2 до 30, для которых требуется получить статистическое значение.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Возвращает статистическое выражение в списке или базе данных.</summary>
        <returns>To be added.</returns>
        <remarks><para>К аргументам ref (arg3-ARG 30), основанным на значении <b>Function_num</b> , применяются следующие ограничения.</para>
          <list type="table">
            <item>
              <term>1-13</term>
              <description>Допустимые типы: ссылки на ссылки объединения определенных ячеек типы структурированные типы Референцесинвалид: реальные массивы данных</description>
              <description>Допустимые типы: ссылки на ссылки объединения определенных ячеек типы структурированные типы Референцесинвалид: реальные массивы данных</description>
              <description>Допустимые типы: ссылки на ссылки объединения определенных ячеек типы структурированные типы Референцесинвалид: реальные массивы данных</description>
            </item>
            <item>
              <term>14-17</term>
              <description>Допустимые типы: ссылки на ссылки объединения определенных имен, структурированные ссылки фактические данные массивы</description>
              <description>Допустимые типы: ссылки на ссылки объединения определенных имен, структурированные ссылки фактические данные массивы</description>
              <description>Ссылки не разрешены</description>
            </item>
          </list>
          <para>Если второй аргумент ref обязателен, но не указан, то AGGREGATE возвращает #VALUE! ошибкой.</para>
          <para>Если один или несколько ссылок являются трехмерными ссылками, то AGGREGATE возвращает #VALUE! значение ошибки.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AmorDegrc">
      <MemberSignature Language="C#" Value="public double AmorDegrc (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 AmorDegrc([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.AmorDegrc(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AmorDegrc (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Arg5 As Object, Arg6 As Object, Optional Arg7 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16850)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Стоимость актива.</param>
        <param name="Arg2">Дата приобретения актива.</param>
        <param name="Arg3">Дата окончания первого периода.</param>
        <param name="Arg4">Остаточная стоимость в конце жизненного цикла актива.</param>
        <param name="Arg5">Точка.</param>
        <param name="Arg6">Частота амортизации.</param>
        <param name="Arg7">Используемое основание года.</param>
        <summary>Возвращает сумму амортизации для каждого учетного периода. Эта функция предназначена для французской системы бухгалтерского учета.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если актив приобретен в середине учетного периода, учитывается пропорционально распределенная амортизация. Метод аналогичен <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.AmorLinc(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />, за исключением того, что коэффициент амортизации применяется в расчете в зависимости от срока службы активов. В следующей таблице описываются значения, используемые в <paramref name="Arg7" />.</para>
          <list type="table">
            <item>
              <term>0 или опущен</term>
              <description>360 дней (метод NASD)</description>
            </item>
            <item>
              <term>1,1</term>
              <description>Сама</description>
            </item>
            <item>
              <term>4</term>
              <description>365 дней в году</description>
            </item>
            <item>
              <term>4 </term>
              <description>360 дней в году (Европейский метод)</description>
            </item>
          </list>
          <para>Microsoft Excel хранит даты как последовательные серийные номера, чтобы их можно было использовать в вычислениях. По умолчанию 1 января 1900 года является порядковым номером 1, а 1 января 2008 — порядковым номером 39448, так как он составляет 39 448 дней после 1 января 1900. Microsoft Excel для Macintosh использует в качестве значения по умолчанию другую систему дат.</para>
          <para>Эта функция возвращает сумму амортизации до последнего периода срока действия активов или до тех пор, пока накопленное значение амортизации не станет больше затрат на ресурсы за вычетом остаточной стоимости.</para>
          <para>Коэффициенты амортизации:</para>
          <list type="table">
            <item>
              <term>От 3 до 4 лет</term>
              <description>1.5</description>
            </item>
            <item>
              <term>От 5 до 6 лет</term>
              <description>2</description>
            </item>
            <item>
              <term>Более 6 лет</term>
              <description>2,5</description>
            </item>
          </list>
          <para>Ставка амортизации увеличится до 50 процентов за период, предшествующий последнему периоду, и увеличится до 100 процента для последнего периода.</para>
          <para>Если срок службы активов находится в диапазоне от 0 (ноль) до 1, 1 и 2, 2 и 3 или 4 и 5, то #NUM! возвращается значение ошибки.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AmorLinc">
      <MemberSignature Language="C#" Value="public double AmorLinc (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 AmorLinc([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.AmorLinc(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AmorLinc (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Arg5 As Object, Arg6 As Object, Optional Arg7 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16851)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Стоимость актива.</param>
        <param name="Arg2">Дата приобретения актива.</param>
        <param name="Arg3">Дата окончания первого периода.</param>
        <param name="Arg4">Остаточная стоимость в конце жизненного цикла актива.</param>
        <param name="Arg5">Точка.</param>
        <param name="Arg6">Частота амортизации.</param>
        <param name="Arg7">Используемое основание года.</param>
        <summary>Возвращает сумму амортизации для каждого учетного периода. Эта функция предназначена для французской системы бухгалтерского учета.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если актив приобретен в середине учетного периода, учитывается пропорционально распределенная амортизация. В следующей таблице описываются значения, используемые <paramref name="Arg7" />для.</para>
          <list type="table">
            <item>
              <term>0 или опущен</term>
              <description>360 дней (метод NASD)</description>
            </item>
            <item>
              <term>1,1</term>
              <description>Сама</description>
            </item>
            <item>
              <term>4</term>
              <description>365 дней в году</description>
            </item>
            <item>
              <term>4 </term>
              <description>360 дней в году (Европейский метод)</description>
            </item>
          </list>
          <para>
            <b>Важно!</b>для ввода дат используется функция Дата или результаты других формул или функций. Например, используйте DATE (2008, 5, 23) для 23-дневного дня мая 2008. Проблемы могут возникать, если даты вводятся как текст.</para>
          <para>Microsoft Excel хранит даты как последовательные серийные номера, чтобы их можно было использовать в вычислениях. По умолчанию 1 января 1900 года является порядковым номером 1, а 1 января 2008 — порядковым номером 39448, так как он составляет 39 448 дней после 1 января 1900. Microsoft Excel для Macintosh использует в качестве значения по умолчанию другую систему дат.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="And">
      <MemberSignature Language="C#" Value="public bool And (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool And([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.And(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function And (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16420)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">от 1 до 30 проверяемых условий, которые могут иметь <b>значение true</b> или <b>false</b>.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Возвращает <b>значение true</b> , если все аргументы имеют <b>значение true</b>; Возвращает <b>значение false</b> , если один или несколько аргументов имеют <b>значение false</b>.</summary>
        <returns>To be added.</returns>
        <remarks><para>Аргументы должны оцениваться как логические значения (например, <b>true</b> или <b>false</b>), а аргументы должны быть массивами или ссылками, содержащими логические значения. </para>
          <para>Если аргумент array или Reference содержит текст или пустые ячейки, эти значения игнорируются. </para>
          <para>Если указанный диапазон не содержит логических значений, этот метод создает значение ошибки.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.WorksheetFunction.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Если используется без квалификатора объекта, это свойство возвращает <see cref="T:Microsoft.Office.Interop.Excel.Application" /> объект, представляющий приложение Microsoft Excel. При использовании с квалификатором объекта это свойство возвращает <see cref="T:Microsoft.Office.Interop.Excel.Application" /> объект, представляющий создателя указанного объекта. Это свойство можно использовать с объектом OLE Automation, чтобы возвратить приложение этого объекта. Только для чтения.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Arabic">
      <MemberSignature Language="C#" Value="public double Arabic (string Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Arabic([in]string Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Arabic(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Arabic (Arg1 As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Arabic(System::String ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16967)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Arg1">Преобразуемое число латиницы.</param>
        <summary>Преобразует римские цифры в арабские.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Asc">
      <MemberSignature Language="C#" Value="public string Asc (string Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Asc([in]string Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Asc(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Asc (Arg1 As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Asc(System::String ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16598)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Arg1">Текст или ссылка на ячейку, содержащую текст, который требуется изменить. Если текст не содержит полноширинные буквы, текст не изменяется.</param>
        <summary>Для языков с двухбайтовым набором знаков (DBCS) изменяет полноширинные (двухбайтовые) символы до половинной ширины (однобайтовых) символов.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Asin">
      <MemberSignature Language="C#" Value="public double Asin (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Asin([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Asin(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Asin (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Asin(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16482)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Синус желаемого угла и должен находиться в от – 1 до 1.</param>
        <summary>Возвращает арксинус или обратный синус числа. Арксинус числа — это угол, синус которого <paramref name="Arg1" />равен. Возвращаемый угол задается в радианах в диапазоне от-Пи/2 до пи/2.</summary>
        <returns>To be added.</returns>
        <remarks><para>Чтобы выразить арксинус в градусах, умножьте результат на 180/ПИ () или используйте <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Degrees(System.Double)" /> метод.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Asinh">
      <MemberSignature Language="C#" Value="public double Asinh (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Asinh([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Asinh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Asinh (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Asinh(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16616)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Любое действительное число.</param>
        <summary>Возвращает обратный гиперболический синус числа. Обратный гиперболический синус — это значение, гиперболический синус которого имеет <paramref name="Arg1" />значение, поэтому ASINH (SINH (число)) равно <paramref name="Arg1" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Atan2">
      <MemberSignature Language="C#" Value="public double Atan2 (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Atan2([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Atan2(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Atan2 (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Atan2(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16481)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Координата x точки.</param>
        <param name="Arg2">Координата y точки.</param>
        <summary>Возвращает арктангенс или обратный тангенс указанных координат x и y. Арктангенс — это угол от оси x до строки, содержащей начало координат (0, 0), и точка с координатами (x_num, y_num). Угол задается в радианах между-Пи и Пи, кроме-PI.</summary>
        <returns>To be added.</returns>
        <remarks><para>Положительный результат представляет собой угол против часовой стрелки от оси x; отрицательный результат представляет собой угол по часовой стрелке. </para>
          <para>
            <b>Atan2 (a, b)</b> равняется <b>ATAN (b/a)</b>, за исключением того, что значение может равняться 0 в <b>atan2</b>. </para>
          <para>Если <paramref name="Arg1" /> и то <paramref name="Arg2" /> , и равно 0, atan2 возвращает значение ошибки. </para>
          <para>Чтобы выразить арктангенс в градусах, умножьте результат на 180/ПИ () или используйте <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Degrees(System.Double)" /> метод.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Atanh">
      <MemberSignature Language="C#" Value="public double Atanh (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Atanh([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Atanh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Atanh (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Atanh(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16618)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Любое действительное число от 1 до 1.</param>
        <summary>Возвращает обратный гиперболический тангенс числа. Число должно находиться в диапазоне от-1 до 1 (без учета 1 и 1).</summary>
        <returns>To be added.</returns>
        <remarks><para>Обратный гиперболический тангенс — это значение, гиперболический тангенс которого — <b>arg1</b>, поэтому <b>ATANH (TANH (число))</b> равняется <paramref name="Arg1" />.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AveDev">
      <MemberSignature Language="C#" Value="public double AveDev (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 AveDev([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.AveDev(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AveDev (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16653)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">от 1 до 30 аргументов, для которых требуется получить среднее значение абсолютных отклонений. Вы также можете использовать один массив или ссылку на массив вместо аргументов, разделенных запятыми.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Возвращает среднее значение абсолютных отклонений точек данных от среднего. СРОТКЛ — мера вариативности в наборе данных.</summary>
        <returns>To be added.</returns>
        <remarks><para>На 
            <b>СРОТКЛ</b> влияет единица измерения входных данных. </para>
          <para>Аргументы должны быть либо числами, либо именами, массивами или ссылками, содержащими числа. </para>
          <para>Учитываются логические значения и текстовые представления чисел, которые вы вводите непосредственно в список аргументов. </para>
          <para>Если аргумент array или Reference содержит текст, логические значения или пустые ячейки, эти значения игнорируются; Тем не менее, ячейки с нулевым значением включены. </para>
          <para>Уравнение для среднего отклонения:</para>
          <para>Рисунок 1: Формула среднего отклонения</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public double Average (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Average([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Average(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Average (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16389)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">от 1 до 30 числовых аргументов, для которых вычисляется среднее.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Возвращает среднее значение (среднее арифметическое) аргументов.</summary>
        <returns>To be added.</returns>
        <remarks><para>Аргументы могут быть числами или именами, массивами или ссылками, содержащими числа. </para>
          <para>Учитываются логические значения и текстовые представления чисел, которые вы вводите непосредственно в список аргументов. </para>
          <para>Если аргумент array или Reference содержит текст, логические значения или пустые ячейки, эти значения игнорируются; Тем не менее, ячейки с нулевым значением включены. </para>
          <para>Аргументы, которые являются значениями ошибки или текстом, не преобразуемым в числа, вызывают ошибки. Если вы хотите включить логические значения и текстовые представления чисел в ссылку в рамках вычисления, используйте функцию СРЗНАЧА. </para>
          <para>Метод <b>Average</b> измеряет центральную тенденции, которая представляет собой расположение центра группы номеров в статистическом распределении. Ниже приведены три наиболее распространенные меры центральной тенденции.</para>
          <list type="bullet">
            <item>
              <description>Среднее арифметическое среднее значение, вычисляемое путем добавления группы чисел и деления их на количество этих номеров. Например, среднее значение 2, 3, 3, 5, 7 и 10 равно 30 на 6, что равно 5. </description>
            </item>
            <item>
              <description>Медиана — это средний номер группы чисел; то есть половины чисел имеют значения, превышающие медиану, а половина чисел — меньше, чем медиана. Например, медиана 2, 3, 3, 5, 7 и 10 — 4.</description>
            </item>
            <item>
              <description>Режим, который является наиболее часто встречающееся числом в группе номеров. Например, режим 2, 3, 3, 5, 7 и 10 — 3.</description>
            </item>
          </list>
          <para>Для симметричного распределения группы чисел эти три показателя центральной тенденции одинаковы. Для отклоненного распределения группы чисел они могут различаться.</para>
          <para>При усреднении ячеек имейте в виду различие между пустыми ячейками и ячейками, содержащими нулевое значение, особенно если снят флажок нулевые значения на вкладке Вид (команда Параметры, меню Сервис). Пустые ячейки не учитываются, но нулевые значения.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AverageIf">
      <MemberSignature Language="C#" Value="public double AverageIf (Microsoft.Office.Interop.Excel.Range Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 AverageIf([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.AverageIf(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AverageIf (Arg1 As Range, Arg2 As Object, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16867)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Одна или несколько ячеек для вычисления среднего значения.</param>
        <param name="Arg2">Критерий в форме числа, выражения, ссылки на ячейку или текста, определяющего среднее значение для ячеек. Например, критерий может быть выражен в виде 32, "32",&gt;"32", "яблоки" или B4.</param>
        <param name="Arg3">Фактический набор ячеек для среднего. Если этот параметр опущен, используется Range.</param>
        <summary>Возвращает среднее арифметическое всех ячеек в диапазоне, соответствующих заданному критерию.</summary>
        <returns>To be added.</returns>
        <remarks><para>Ячейки в диапазоне, содержащие значения <b>true</b> и <b>false</b> , игнорируются. </para>
          <para>Если ячейка в диапазоне или average_range — пустая ячейка, <b>СРЗНАЧЕСЛИ</b> игнорирует ее. </para>
          <para>Если ячейка в критерии условия пуста, <b>СРЗНАЧЕСЛИ</b> обрабатывает ее как значение 0. </para>
          <para>Если ни одна ячейка в диапазоне не соответствует критериям, <b>СРЗНАЧЕСЛИ</b> создает значение ошибки. </para>
          <para>В поле условия можно использовать подстановочные знаки, вопросительный знак (?) и звездочку (*). Вопросительный знак соответствует одному символу; Звездочка соответствует любой последовательности символов. Если вы хотите найти фактический вопросительный знак или звездочку, введите тильду (~) перед символом. </para>
          <para>Average_range не обязательно должны иметь тот же размер и форму, что и Range. Фактические ячейки среднего размера определяются с помощью верхней, левой ячейки в average_range в качестве начальной, а затем, включая ячейки, которые соответствуют размеру и формам диапазона. Пример:</para>
          <list type="table">
            <item>
              <term>A1: A5</term>
              <description>B1: B5</description>
              <description>B1: B5</description>
            </item>
            <item>
              <term>A1: A5</term>
              <description>B1: B3</description>
              <description>B1: B5</description>
            </item>
            <item>
              <term>A1: B4</term>
              <description>C1: D4</description>
              <description>C1: D4</description>
            </item>
            <item>
              <term>A1: B4</term>
              <description>C1: C2</description>
              <description>C1: D4</description>
            </item>
          </list>
          <para>Метод <b>СРЗНАЧЕСЛИ</b> измеряет центральную тенденции, которая представляет собой расположение центра группы номеров в статистическом распределении. Ниже приведены три наиболее распространенные меры центральной тенденции.</para>
          <list type="bullet">
            <item>
              <description>Среднее арифметическое среднее значение, вычисляемое путем добавления группы чисел и деления их на количество этих номеров. Например, среднее значение 2, 3, 3, 5, 7 и 10 равно 30 на 6, что равно 5. </description>
            </item>
            <item>
              <description>Медиана — это средний номер группы чисел; то есть половины чисел имеют значения, превышающие медиану, а половина чисел — меньше, чем медиана. Например, медиана 2, 3, 3, 5, 7 и 10 — 4.</description>
            </item>
            <item>
              <description>Режим, который является наиболее часто встречающееся числом в группе номеров. Например, режим 2, 3, 3, 5, 7 и 10 — 3.</description>
            </item>
          </list>
          <para>Для симметричного распределения группы чисел эти три показателя центральной тенденции одинаковы. Для отклоненного распределения группы чисел они могут различаться.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AverageIfs">
      <MemberSignature Language="C#" Value="public double AverageIfs (Microsoft.Office.Interop.Excel.Range Arg1, Microsoft.Office.Interop.Excel.Range Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 AverageIfs([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]class Microsoft.Office.Interop.Excel.Range Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.AverageIfs(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AverageIfs (Arg1 As Range, Arg2 As Range, Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16868)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Один или несколько диапазонов, в которых оцениваются связанные условия.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <summary>Возвращает среднее арифметическое всех ячеек, которые удовлетворяют нескольким условиям.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если ячейка в average_range — пустая ячейка, <b>СРЗНАЧЕСЛИМН</b> игнорирует ее. </para>
          <para>Если ячейка в диапазоне условий имеет пустое значение, <b>СРЗНАЧЕСЛИМН</b> рассматривает его как значение 0. </para>
          <para>Ячейки в диапазоне, содержащие <b>true</b> , оцениваются как 1; ячейки в диапазоне, содержащие <b>false</b> , оцениваются как 0 (ноль). </para>
          <para>Каждая ячейка average_range используется в среднем вычислении, только если для этой ячейки заданы все соответствующие критерии. </para>
          <para>Если ячейки в average_range пусты или содержат текстовые значения, которые не могут быть преобразованы в числа, <b>СРЗНАЧЕСЛИМН</b> создает ошибку. </para>
          <para>Если нет ячеек, соответствующих всем условиям, <b>СРЗНАЧЕСЛИМН</b> создает значение ошибки. </para>
          <para>В поле условия можно использовать подстановочные знаки, вопросительный знак (?) и звездочку (*). Вопросительный знак соответствует одному символу; Звездочка соответствует любой последовательности символов. Если вы хотите найти фактический вопросительный знак или звездочку, введите тильду (~) перед символом. </para>
          <para>Каждый criteria_range не должен иметь такой же размер и форму, что и average_range. Фактические ячейки среднего размера определяются с помощью верхней, левой ячейки в criteria_range в качестве начальной, а затем, включая ячейки, которые соответствуют размеру и формам диапазона. Пример:</para>
          <list type="table">
            <item>
              <term>A1: A5</term>
              <description>B1: B5</description>
              <description>B1: B5</description>
            </item>
            <item>
              <term>A1: A5</term>
              <description>B1: B3</description>
              <description>B1: B5</description>
            </item>
            <item>
              <term>A1: B4</term>
              <description>C1: D4</description>
              <description>C1: D4</description>
            </item>
            <item>
              <term>A1: B4</term>
              <description>C1: C2</description>
              <description>C1: D4</description>
            </item>
          </list>
          <para>Функция <b>СРЗНАЧЕСЛИМН</b> измеряет центральную тенденции, которая представляет собой расположение центра группы номеров в статистическом распределении. Ниже приведены три наиболее распространенные меры центральной тенденции.</para>
          <list type="bullet">
            <item>
              <description>Среднее арифметическое среднее значение, вычисляемое путем добавления группы чисел и деления их на количество этих номеров. Например, среднее значение 2, 3, 3, 5, 7 и 10 равно 30 на 6, что равно 5. </description>
            </item>
            <item>
              <description>Медиана — это средний номер группы чисел; то есть половины чисел имеют значения, превышающие медиану, а половина чисел — меньше, чем медиана. Например, медиана 2, 3, 3, 5, 7 и 10 — 4.</description>
            </item>
            <item>
              <description>Режим, который является наиболее часто встречающееся числом в группе номеров. Например, режим 2, 3, 3, 5, 7 и 10 — 3.</description>
            </item>
          </list>
          <para>Для симметричного распределения группы чисел эти три показателя центральной тенденции одинаковы. Для отклоненного распределения группы чисел они могут различаться.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="BahtText">
      <MemberSignature Language="C#" Value="public string BahtText (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string BahtText([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.BahtText(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function BahtText (Arg1 As Double) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ BahtText(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16752)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число, которое требуется преобразовать в текст или ссылку на ячейку, содержащую число, или формулу, вычисление которой дает число.</param>
        <summary>Преобразует число в тайский текст и добавляет суффикс "Бат".</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Base">
      <MemberSignature Language="C#" Value="public string Base (double Arg1, double Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Base([in]float64 Arg1, [in]float64 Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Base(System.Double,System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Base (Arg1 As Double, Arg2 As Double, Optional Arg3 As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16955)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число, которое требуется преобразовать.</param>
        <param name="Arg2">Базовое основание системы счисления, в которое нужно преобразовать номер.</param>
        <param name="Arg3">Минимальная длина возвращенной строки. Если опущены нули в начале, не добавляются.</param>
        <summary>Преобразует число в текстовое представление с заданным основанием системы счисления (Base).</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BesselI">
      <MemberSignature Language="C#" Value="public double BesselI (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 BesselI([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.BesselI(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BesselI (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double BesselI(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16812)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Значение, для которого вычисляется функция.</param>
        <param name="Arg2">Порядок функции Бесселя. Если n не целое, то оно усекается.</param>
        <summary>Возвращает модифицированную функцию Бесселя, которая эквивалентно вычислению функции Бесселя для чисто мнимого аргумента.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если x не число, то БЕССЕЛЬ. i возвращает #VALUE! значение ошибки. </para>
          <para>Если n не число, то БЕССЕЛЬ. i создает значение ошибки. </para>
          <para>Если n &lt; 0, Бессель. i создает значение ошибки. </para>
          <para>Функция Бесселя n-th для переменной x:</para>
          <para>Рисунок 1: функция Бесселя переменной x</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="BesselJ">
      <MemberSignature Language="C#" Value="public double BesselJ (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 BesselJ([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.BesselJ(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BesselJ (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double BesselJ(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16809)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Значение, для которого вычисляется функция.</param>
        <param name="Arg2">Порядок функции Бесселя. Если n не целое, то оно усекается.</param>
        <summary>Возвращает функцию Бесселя.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если x не является числом, <b>Бессель. j</b> создает значение ошибки. </para>
          <para>Если n не число, то <b>Бессель. j</b> возвращает значение ошибки. </para>
          <para>Если n &lt; 0, <b>Бессель. j</b> создает значение ошибки. </para>
          <para>Функция Бесселя порядка n для переменной x: </para>
          <para>Рисунок 1: функция Бесселя переменной x</para>
          <para> </para>
          <para> </para>
          <para>где:</para>
          <para>Рисунок 2: функция гамма</para>
          <para> </para>
          <para> </para>
          <para>— Это функция гаммы.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="BesselK">
      <MemberSignature Language="C#" Value="public double BesselK (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 BesselK([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.BesselK(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BesselK (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double BesselK(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16810)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Значение, для которого вычисляется функция.</param>
        <param name="Arg2">Порядок функции. Если n не целое, то оно усекается.</param>
        <summary>Возвращает модифицированную функцию Бесселя, эквивалентную функциям Бесселя, вычисленным для чисто мнимого аргумента.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если x не является числом, <b>Бессель. k</b> создает значение ошибки. </para>
          <para>Если n не число, то <b>Бессель. k</b> создает значение ошибки. </para>
          <para>Если n &lt; 0, <b>Бессель. k</b> создает значение ошибки. </para>
          <para>Функция Бесселя n-th для переменной x: </para>
          <para>Рисунок 1: функция Бесселя переменной x</para>
          <para> </para>
          <para> </para>
          <para>где ЖН и ин являются функциями Бесселя J и Y соответственно.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="BesselY">
      <MemberSignature Language="C#" Value="public double BesselY (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 BesselY([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.BesselY(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BesselY (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double BesselY(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16811)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Значение, для которого вычисляется функция.</param>
        <param name="Arg2">Порядок функции. Если n не целое, то оно усекается.</param>
        <summary>Возвращает функцию Бесселя, которая также называется функцией Вебер или функцией Неуманн.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если x не является числом, <b>Бессель. y</b> создает значение ошибки. </para>
          <para>Если n не число, то <b>Бессель. y</b> создает значение ошибки. </para>
          <para>Если n &lt; 0, <b>Бессель. y</b> создает значение ошибки. </para>
          <para>Функция Бесселя порядка n для переменной x: </para>
          <para>Рисунок 1: функция Бесселя переменной x</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Beta_Dist">
      <MemberSignature Language="C#" Value="public double Beta_Dist (double Arg1, double Arg2, double Arg3, bool Arg4, object Arg5, object Arg6);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Beta_Dist([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]bool Arg4, [in]object Arg5, [in]object Arg6) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Beta_Dist(System.Double,System.Double,System.Double,System.Boolean,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Beta_Dist (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Boolean, Optional Arg5 As Object, Optional Arg6 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16909)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Boolean" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Значение между A и B, для которого вычисляется функция.</param>
        <param name="Arg2">Альфа-параметр распределения.</param>
        <param name="Arg3">Параметр бета-версии распределения.</param>
        <param name="Arg4">Интегральная — логическое значение, определяющее форму функции. Если интегральная имеет <b>значение true</b>, бета-версия. РАСП возвращает интегральную функцию распределения; Если задано <b>значение false</b>, возвращается функция плотности вероятности.</param>
        <param name="Arg5">Необязательная нижняя граница для интервала x.</param>
        <param name="Arg6">Необязательная верхняя граница для интервала x.</param>
        <summary>Возвращает функцию интегрального бета-распределения.</summary>
        <returns>To be added.</returns>
        <remarks><para>Бета-распределение обычно используется для изучения вариации в различных примерах, таких как доля проезда людей, прошедшего Просмотр телепередач:</para>
          <list type="bullet">
            <item>
              <description>Если какой-либо аргумент не является числом, <b>Beta_Dist</b> возвращает #VALUE! значение ошибки.</description>
            </item>
            <item>
              <description>Если альфа ≤ 0 или бета ≤ 0, <b>Beta_Dist</b> создает значение ошибки.</description>
            </item>
            <item>
              <description>Если x &lt; A, x &gt; B или A = B, <b>Beta_Dist</b> создает значение ошибки.</description>
            </item>
            <item>
              <description>Если вы опускаете значения для A и B (Нижняя и верхняя граница), <b>Beta_Dist</b> использует стандартное интегральное бета-распределение, чтобы A = 0 и B = 1.</description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Beta_Inv">
      <MemberSignature Language="C#" Value="public double Beta_Inv (double Arg1, double Arg2, double Arg3, object Arg4, object Arg5);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Beta_Inv([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]object Arg4, [in]object Arg5) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Beta_Inv(System.Double,System.Double,System.Double,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Beta_Inv (Arg1 As Double, Arg2 As Double, Arg3 As Double, Optional Arg4 As Object, Optional Arg5 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16910)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Вероятность, связанная с бета-распределением.</param>
        <param name="Arg2">Альфа-параметр распределения.</param>
        <param name="Arg3">Параметр бета-версии распределения.</param>
        <param name="Arg4">Необязательная нижняя граница для интервала x.</param>
        <param name="Arg5">Необязательная верхняя граница для интервала x.</param>
        <summary>Возвращает обратное значение функции интегрального распределения для указанного бета-распределения. То есть, если вероятность = Beta_Dist (x,...), то Beta_Inv (вероятность,...) = x.</summary>
        <returns>To be added.</returns>
        <remarks><para>Бета-распределение можно использовать в планировании проекта, чтобы моделировать вероятные времена завершения и вариативность:</para>
          <list type="bullet">
            <item>
              <description>Если какой-либо аргумент не является числом, <b>Beta_Inv</b> создает значение ошибки.</description>
            </item>
            <item>
              <description>Если альфа ≤ 0 или бета ≤ 0, <b>Beta_Inv</b> создает значение ошибки.</description>
            </item>
            <item>
              <description>Если вероятность ≤ 0 или вероятность &gt; 1, <b>Beta_Inv</b> создает значение ошибки.</description>
            </item>
            <item>
              <description>Если вы опускаете значения для A и B (Нижняя и верхняя граница), <b>Beta_Inv</b> использует стандартное интегральное бета-распределение, чтобы A = 0 и B = 1.</description>
            </item>
          </list>
          <para>При наличии значения вероятности <b>Beta_Inv</b> ищет значение x таким, что Beta_Dist (x, альфа, бета, true, a, B) = вероятность. Таким образом, точность <b>Beta_Inv</b> зависит от точности <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Beta_Dist(System.Double,System.Double,System.Double,System.Boolean,System.Object,System.Object)" />. <b>Beta_Inv</b> использует метод итерации поиска.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="BetaDist">
      <MemberSignature Language="C#" Value="public double BetaDist (double Arg1, double Arg2, double Arg3, object Arg4, object Arg5);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 BetaDist([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]object Arg4, [in]object Arg5) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.BetaDist(System.Double,System.Double,System.Double,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BetaDist (Arg1 As Double, Arg2 As Double, Arg3 As Double, Optional Arg4 As Object, Optional Arg5 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16654)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Значение между A и B, для которого вычисляется функция.</param>
        <param name="Arg2">Параметр распределения.</param>
        <param name="Arg3">Параметр распределения.</param>
        <param name="Arg4">Необязательная нижняя граница для интервала x.</param>
        <param name="Arg5">Необязательная верхняя граница для интервала x.</param>
        <summary>Возвращает функцию интегрального бета-распределения.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>эта функция заменена одной или несколькими новыми функциями, которые могут улучшить точность и имена которых лучше отражают их использование. Эта функция по-прежнему доступна для совместимости с более ранними версиями Excel. Тем не менее, если обратная совместимость не требуется, рекомендуется использовать новые функции, так как они точнее описывают их функциональность. Более подробную информацию о функции New можно узнать в <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Beta_Dist(System.Double,System.Double,System.Double,System.Boolean,System.Object,System.Object)" /> методе.</para>
          <para>Бета-распределение обычно используется для изучения вариации в различных примерах, таких как доля проезда сотрудников на телевизоры.</para>
          <list type="bullet">
            <item>
              <description>Если какой-либо из аргументов не является числом, <b>БЕТАРАСП</b> возвращает #VALUE! значение ошибки.</description>
            </item>
            <item>
              <description>Если альфа ≤ 0 или бета ≤ 0, то функция <b>БЕТАРАСП</b> создает значение ошибки.</description>
            </item>
            <item>
              <description>Если x &lt; A, x &gt; B или A = B, то функция <b>БЕТАРАСП</b> создает значение ошибки.</description>
            </item>
            <item>
              <description>Если вы опускаете значения A и B, <b>БЕТАРАСП</b> использует стандартное интегральное бета-распределение, чтобы A = 0 и B = 1.</description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="BetaInv">
      <MemberSignature Language="C#" Value="public double BetaInv (double Arg1, double Arg2, double Arg3, object Arg4, object Arg5);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 BetaInv([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]object Arg4, [in]object Arg5) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.BetaInv(System.Double,System.Double,System.Double,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BetaInv (Arg1 As Double, Arg2 As Double, Arg3 As Double, Optional Arg4 As Object, Optional Arg5 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16656)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Вероятность, связанная с бета-распределением.</param>
        <param name="Arg2">Альфа-параметр распределения.</param>
        <param name="Arg3">Параметр бета-версии распределения.</param>
        <param name="Arg4">Необязательная нижняя граница для интервала x.</param>
        <param name="Arg5">Необязательная верхняя граница для интервала x.</param>
        <summary>Возвращает обратное значение функции интегрального распределения для указанного бета-распределения. То есть, если вероятность = БЕТАРАСП (x,...), то БЕТАОБР (вероятность,...) = x.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>эта функция заменена одной или несколькими новыми функциями, которые могут улучшить точность и имена которых лучше отражают их использование. Эта функция по-прежнему доступна для совместимости с более ранними версиями Excel. Тем не менее, если обратная совместимость не требуется, рекомендуется использовать новые функции, так как они точнее описывают их функциональность. Более подробную информацию о функции New можно узнать в <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Beta_Inv(System.Double,System.Double,System.Double,System.Object,System.Object)" /> методе.</para>
          <para>Бета-распределение можно использовать в планировании проекта, чтобы моделировать вероятные времена завершения и вариативность.</para>
          <list type="bullet">
            <item>
              <description>Если какой-либо из аргументов не является числом, <b>БЕТАОБР</b> создает значение ошибки.</description>
            </item>
            <item>
              <description>Если альфа ≤ 0 или бета ≤ 0, <b>БЕТАОБР</b> создает значение ошибки. </description>
            </item>
            <item>
              <description>Если вероятность ≤ 0 или вероятность &gt; 1, <b>БЕТАОБР</b> создает значение ошибки. </description>
            </item>
            <item>
              <description>Если вы опускаете значения для A и B, <b>БЕТАОБР</b> использует стандартное интегральное бета-распределение, чтобы A = 0 и B = 1.</description>
            </item>
          </list>
          <para>При наличии значения вероятности <b>БЕТАОБР</b> ищет значение x, равное БЕТАРАСП (x, альфа, бета, а, б) = вероятность. Таким образом, точность <b>БЕТАОБР</b> зависит от точности <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.BetaDist(System.Double,System.Double,System.Double,System.Object,System.Object)" />. <b>БЕТАОБР</b> использует метод итерации поиска. Если поиск не сходится после 100 итераций, функция создает значение ошибки.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Bin2Dec">
      <MemberSignature Language="C#" Value="public string Bin2Dec (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Bin2Dec([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Bin2Dec(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Bin2Dec (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Bin2Dec(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16777)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Двоичный номер, который требуется преобразовать. Число не может содержать более 10 символов (10 бит). Наиболее значащим битом числа является знаковый бит. Оставшиеся 9 бит являются битами величины. Отрицательные числа представлены с помощью нотации с двумя комплементарными числами.</param>
        <summary>Преобразует двоичное число в десятичное.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если число не является допустимым двоичным числом или число содержит более 10 символов (10 бит), дв. создает значение ошибки.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Bin2Hex">
      <MemberSignature Language="C#" Value="public string Bin2Hex (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Bin2Hex([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Bin2Hex(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Bin2Hex (Arg1 As Object, Optional Arg2 As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16779)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Двоичный номер, который требуется преобразовать. Число не может содержать более 10 символов (10 бит). Наиболее значащим битом числа является знаковый бит. Оставшиеся 9 бит являются битами величины. Отрицательные числа представлены с помощью нотации с двумя комплементарными числами.</param>
        <param name="Arg2">Количество используемых символов. Если разрядность опущена, <b>ДВ.</b> использует минимальное необходимое количество символов. Разрядность удобно использовать для заполнения возвращаемого значения с помощью ведущих нулей (нулей).</param>
        <summary>Преобразует двоичное число в шестнадцатеричное.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если число не является допустимым двоичным числом или число содержит более 10 символов (10 бит), <b>ДВ.</b> создает ошибку. </para>
          <para>Если число отрицательно, то <b>ДВ.</b> игнорирует разрядность и возвращает 10-значное шестнадцатеричное число. </para>
          <para>Если для <b>ДВ.</b> требуется больше символов, это приводит к ошибке. </para>
          <para>Если разрядность не целое число, то оно усекается. </para>
          <para>Если разрядность не число, <b>ДВ.</b> создает ошибку. </para>
          <para>Если разрядность отрицательна, <b>ДВ.</b> создает ошибку.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Bin2Oct">
      <MemberSignature Language="C#" Value="public string Bin2Oct (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Bin2Oct([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Bin2Oct(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Bin2Oct (Arg1 As Object, Optional Arg2 As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16778)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Двоичный номер, который требуется преобразовать. Число не может содержать более 10 символов (10 бит). Наиболее значащим битом числа является знаковый бит. Оставшиеся 9 бит являются битами величины. Отрицательные числа представлены с помощью нотации с двумя комплементарными числами.</param>
        <param name="Arg2">Количество используемых символов. Если разрядность опущена, <b>ДВ.</b> использует минимальное необходимое количество символов. Разрядность удобно использовать для заполнения возвращаемого значения с помощью ведущих нулей (нулей).</param>
        <summary>Преобразует двоичное число в восьмеричное.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если число не является допустимым двоичным числом или число содержит более 10 символов (10 бит), <b>ДВ.</b> создает ошибку. </para>
          <para>Если число отрицательно, <b>ДВ.</b> игнорирует разрядность и возвращает восьмеричное число из 10 знаков. </para>
          <para>Если для <b>ДВ.</b> требуется больше символов, это приводит к ошибке. </para>
          <para>Если разрядность не целое число, то оно усекается. </para>
          <para>Если разрядность не число, <b>ДВ.</b> создает ошибку. </para>
          <para>Если разрядность отрицательна, <b>ДВ.</b> создает ошибку.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Binom_Dist">
      <MemberSignature Language="C#" Value="public double Binom_Dist (double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Binom_Dist([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]bool Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Binom_Dist(System.Double,System.Double,System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Binom_Dist (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Binom_Dist(double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16870)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Arg1">Number_s — количество успешных испытаний.</param>
        <param name="Arg2">Число_испытаний — количество независимых испытаний.</param>
        <param name="Arg3">Probability_s — вероятность успеха при каждой пробной версии.</param>
        <param name="Arg4">Интегральная — логическое значение, определяющее форму функции. Если интегральная имеет <b>значение true</b>, <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Binom_Dist(System.Double,System.Double,System.Double,System.Boolean)" /> метод возвращает интегральную функцию распределения, которая является вероятностью выполнения не более number_s. Если <b>значение равно false</b>, возвращается функция плотности распределения, которая является вероятностью number_s успешных завершений.</param>
        <summary>Возвращает значение вероятности отдельного термина биномиальное распределение.</summary>
        <returns>To be added.</returns>
        <remarks><para>Используйте метод <b>Binom_Dist</b> при возникновении проблем с фиксированным количеством тестов или испытаний, если результаты любой пробной версии относятся только к успеху или неудачности, в случае независимых испытаний и при недействительной вероятности успешного выполнения в течение всего эксперимента. Например, метод <b>Binom_Dist</b> может вычислить вероятность того, что два из трех следующих трех из трех следующих трех бабиесов имеют контакт "штекер". </para>
          <list type="bullet">
            <item>
              <description>Number_s и число_испытаний усекаются до целых. </description>
            </item>
            <item>
              <description>Если number_s, число_испытаний или probability_s не являются числовыми, метод <b>Binom_Dist</b> создает ошибку. </description>
            </item>
            <item>
              <description>Если number_s &lt; 0 или number_s &gt; испытаний, метод <b>Binom_Dist</b> создает ошибку. </description>
            </item>
            <item>
              <description>Если probability_s &lt; 0 или probability_s &gt; 1, метод <b>Binom_Dist</b> создаст ошибку. Функция плотности плотности: </description>
            </item>
          </list>
          <para>Где:</para>
          <para>Рисунок 2: формула</para>
          <para> </para>
          <para> </para>
          <para>— COMBINABLE (n, x).</para>
          <para>Интегральное биномиальное распределение имеет следующий вид:</para>
          <para>Рисунок 3: интегральное биномиальное распределение</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Binom_Dist_Range">
      <MemberSignature Language="C#" Value="public double Binom_Dist_Range (double Arg1, double Arg2, double Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Binom_Dist_Range([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Binom_Dist_Range(System.Double,System.Double,System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Binom_Dist_Range (Arg1 As Double, Arg2 As Double, Arg3 As Double, Optional Arg4 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16958)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Количество независимых испытаний.</param>
        <param name="Arg2">Вероятность успеха в каждой пробной версии.</param>
        <param name="Arg3">Количество успешных испытаний.</param>
        <param name="Arg4">Если этот параметр указан, функция возвращает вероятность того, что количество успешных испытаний между arg3 и Arg4.</param>
        <summary>Возвращает вероятность результата пробной версии с использованием биномиальное распределения.</summary>
        <returns>Двойное с плавающей точкой</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Binom_Inv">
      <MemberSignature Language="C#" Value="public double Binom_Inv (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Binom_Inv([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Binom_Inv(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Binom_Inv (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Binom_Inv(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16871)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число_испытаний — число испытаний Бернулли.</param>
        <param name="Arg2">Probability_s — вероятность успеха при каждой пробной версии.</param>
        <param name="Arg3">Альфа — значение критерия.</param>
        <summary>Возвращает обратное значение вероятности отдельного термина биномиальное распределение.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если число_испытаний, Probability_s или Alpha не являются числами, метод <b>Binom_Inv</b> создает ошибку. </para>
          <para>Если число_испытаний не является целым числом, оно усекается. </para>
          <para>Если число_испытаний &lt; 0, метод <b>Binom_Inv</b> создает ошибку. </para>
          <para>Если Probability_s &lt; 0 или Probability_s &gt; 1, метод <b>Binom_Inv</b> создаст ошибку. </para>
          <para>При альфа &lt; -составляющей 0 &gt; или Alpha 1 метод <b>Binom_Inv</b> создает ошибку.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="BinomDist">
      <MemberSignature Language="C#" Value="public double BinomDist (double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 BinomDist([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]bool Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.BinomDist(System.Double,System.Double,System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function BinomDist (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double BinomDist(double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16657)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Arg1">Количество успешных испытаний.</param>
        <param name="Arg2">Количество независимых испытаний.</param>
        <param name="Arg3">Вероятность успеха в каждой пробной версии.</param>
        <param name="Arg4">Логическое значение, определяющее форму функции. Если интегральная имеет <b>значение true</b>, то функция <b>БИНОМРАСП</b> возвращает интегральную функцию распределения, которая является вероятностью выполнения не более number_s. Если <b>значение равно false</b>, возвращается функция плотности распределения, которая является вероятностью number_s успешных завершений.</param>
        <summary>Возвращает значение вероятности отдельного термина биномиальное распределение.</summary>
        <returns>To be added.</returns>
        <remarks><para>Используйте элемент <b>БИНОМРАСП</b> при возникновении проблем с фиксированным количеством тестов или испытаний, если результаты любой пробной версии относятся только к успеху или неудачности, а также когда вероятность недействительна в течение всего эксперимента. Например, <b>функция БИНОМРАСП</b> может вычислить вероятность того, что два из трех следующих трех ближайших бабиесов имеют контакт "штекер". </para>
          <para>Number_s и число_испытаний усекаются до целых. </para>
          <para>Если number_s, число_испытаний или probability_s не является числом, то <b>функция БИНОМРАСП</b> создает ошибку. </para>
          <para>Если number_s &lt; 0 или number_s &gt; испытаний, то <b>функция БИНОМРАСП</b> создает ошибку. </para>
          <para>Если probability_s &lt; 0 или probability_s &gt; 1, то <b>функция БИНОМРАСП</b> создает ошибку. </para>
          <para>Функция плотности плотности: </para>
          <para>Рисунок 1: функция плотности распределения плотности</para>
          <para> </para>
          <para> </para>
          <para>Где:</para>
          <para>Рисунок 2: формула</para>
          <para> </para>
          <para> </para>
          <para>— COMBINABLE (n, x).</para>
          <para>Интегральное биномиальное распределение имеет следующий вид:</para>
          <para>Рисунок 3: интегральное биномиальное распределение</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Bitand">
      <MemberSignature Language="C#" Value="public double Bitand (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Bitand([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Bitand(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Bitand (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Bitand(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16946)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Десятичное представление двоичного числа, которое необходимо оценить.</param>
        <param name="Arg2">Десятичное представление двоичного числа, которое необходимо оценить.</param>
        <summary>Возвращает значение "побитовое и" для двух чисел.</summary>
        <returns>ДВОЙНОЙ</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bitlshift">
      <MemberSignature Language="C#" Value="public double Bitlshift (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Bitlshift([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Bitlshift(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Bitlshift (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Bitlshift(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16949)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Десятичное представление двоичного числа, которое необходимо оценить.</param>
        <param name="Arg2">Число битов, на которые вы хотите сдвинуть задолженность.</param>
        <summary>Возвращает числовое значение, которое было смещено влево shift_amount бит.</summary>
        <returns>ДВОЙНОЙ</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bitor">
      <MemberSignature Language="C#" Value="public double Bitor (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Bitor([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Bitor(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Bitor (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Bitor(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16947)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Десятичное представление двоичного числа, которое необходимо оценить.</param>
        <param name="Arg2">Десятичное представление двоичного числа, которое необходимо оценить.</param>
        <summary>Возвращает побитовое или 2 числа.</summary>
        <returns>ДВОЙНОЙ</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bitrshift">
      <MemberSignature Language="C#" Value="public double Bitrshift (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Bitrshift([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Bitrshift(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Bitrshift (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Bitrshift(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16950)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Десятичное представление двоичного числа, которое необходимо оценить.</param>
        <param name="Arg2">Количество разрядов, которые необходимо сдвинуть вправо.</param>
        <summary>Возвращает числовое значение, которое смещается вправо с shift_amount бит.</summary>
        <returns>ДВОЙНОЙ</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bitxor">
      <MemberSignature Language="C#" Value="public double Bitxor (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Bitxor([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Bitxor(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Bitxor (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Bitxor(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16948)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Десятичное представление двоичного числа, которое необходимо оценить.</param>
        <param name="Arg2">Десятичное представление двоичного числа, которое необходимо оценить.</param>
        <summary>Возвращает побитовое "исключающее" или "для двух чисел".</summary>
        <returns>ДВОЙНОЙ</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ceiling">
      <MemberSignature Language="C#" Value="public double Ceiling (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Ceiling([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Ceiling(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ceiling (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Ceiling(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16672)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число — округляемое значение.</param>
        <param name="Arg2">Точность — кратное, для которого требуется округлить.</param>
        <summary>Возвращает число, округленное вверх, от нуля до ближайшего множителя, кратного значимости.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>эта функция заменена одной или несколькими новыми функциями, которые могут улучшить точность и имена которых лучше отражают их использование. Эта функция по-прежнему доступна для совместимости с более ранними версиями Excel. Тем не менее, если обратная совместимость не требуется, рекомендуется использовать новые функции, так как они точнее описывают их функциональность. Более подробную информацию о функции New можно узнать в <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Ceiling_Precise(System.Double,System.Object)" /> методе.</para>
          <para>Например, если вы хотите избежать использования пенниес в ценах, а ваш продукт равен $4,42, используйте формулу ceiling (4.42, 0,05), чтобы округлить цены вплоть до ближайшего никкел.</para>
          <para>Если любой из аргументов не является числом, то <b>Ceiling</b> создает ошибку. </para>
          <para>Независимо от знака числа, значение округляется при коррекции с нуля. Если число является точным, кратным точности, то никакого округления не выполняется. </para>
          <para>Если число и точность имеют разные знаки, то <b>Ceiling</b> приводит к ошибке.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Ceiling_Math">
      <MemberSignature Language="C#" Value="public double Ceiling_Math (double Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Ceiling_Math([in]float64 Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Ceiling_Math(System.Double,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ceiling_Math (Arg1 As Double, Optional Arg2 As Object, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16975)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Значение, которое вы хотите округлить.</param>
        <param name="Arg2">Точность, с которой вы хотите округлить.</param>
        <param name="Arg3">Если заданное и ненулевое значение, эта функция будет округлять от нуля.</param>
        <summary>Округляет число вверх до ближайшего целого числа или до ближайшего числа, кратного значимости.</summary>
        <returns>ДВОЙНОЙ</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ceiling_Precise">
      <MemberSignature Language="C#" Value="public double Ceiling_Precise (double Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Ceiling_Precise([in]float64 Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Ceiling_Precise(System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ceiling_Precise (Arg1 As Double, Optional Arg2 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16930)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число — округляемое значение.</param>
        <param name="Arg2">Точность — кратное, для которого требуется округлить.</param>
        <summary>Возвращает указанное число, округленное до ближайшего значения, кратного значимости.</summary>
        <returns>To be added.</returns>
        <remarks><para>Например, если вы хотите избежать использования пенниес в ценах, а ваш продукт равен $4,42, используйте формулу ceiling (4.42, 0,05), чтобы округлить цены вплоть до ближайшего никкел.</para>
          <para>В зависимости от знака числового и значимого аргументов, метод <b>Ceiling_Precise</b> округляет либо в сторону нуля.</para>
          <list type="table">
            <item>
              <term>-/-</term>
              <description>Округляет в сторону нуля.</description>
            </item>
            <item>
              <term>+/+</term>
              <description>Округляет в сторону от нуля.</description>
            </item>
            <item>
              <term>-/+</term>
              <description>Округляет в сторону нуля.</description>
            </item>
            <item>
              <term>+/-</term>
              <description>Округляет в сторону от нуля.</description>
            </item>
          </list>
          <para>Если любой из аргументов не является числом, <b>Ceiling_Precise</b> создает ошибку. </para>
          <para>Если число является точным, кратным точности, то никакого округления не выполняется.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ChiDist">
      <MemberSignature Language="C#" Value="public double ChiDist (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ChiDist([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiDist(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChiDist (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double ChiDist(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16658)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Значение, для которого необходимо оценить распределение.</param>
        <param name="Arg2">Число степеней свободы.</param>
        <summary>Возвращает одностороннюю вероятность распределения хи — квадрат.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>эта функция заменена одной или несколькими новыми функциями, которые могут улучшить точность и имена которых лучше отражают их использование. Эта функция по-прежнему доступна для совместимости с более ранними версиями Excel. Тем не менее, если обратная совместимость не требуется, рекомендуется использовать новые функции, так как они точнее описывают их функциональность. Более подробную информацию о новых функциях можно узнать <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiSq_Dist_RT(System.Double,System.Double)" /> в <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiSq_Dist(System.Double,System.Double,System.Boolean)" /> статье методы и.</para>
          <para>Распределение χ2 связано с тестом χ2. Используйте тест χ2 для сравнения наблюдаемых и ожидаемых значений.</para>
          <para>Например, эксперимент женетик может быть уверенным в том, что в следующем поколении растений будет демонстрироваться определенный набор цветов. Сравнивая наблюдаемые результаты с ожидаемыми, вы можете решить, является ли исходная гипотеза допустимой.</para>
          <para>Если любой из аргументов не является числом, <b>ХИ2РАСП</b> создает ошибку. </para>
          <para>Если x отрицательно, то <b>ХИ2РАСП</b> создает ошибку. </para>
          <para>Если degrees_freedom не целое, то оно усекается. </para>
          <para>Если degrees_freedom &lt; 1 или degrees_freedom &gt; 10 ^ 10, <b>ХИ2РАСП</b> создаст ошибку. </para>
          <para>
            <b>ХИ2РАСП</b> вычисляется как Хи2расп = P (x&gt;X), где X — это случайная переменная χ2.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ChiInv">
      <MemberSignature Language="C#" Value="public double ChiInv (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ChiInv([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiInv(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChiInv (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double ChiInv(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16659)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Вероятность, связанная с распределением хи — квадрат.</param>
        <param name="Arg2">Число степеней свободы.</param>
        <summary>Возвращает обратную величину односторонней вероятности распределения хи — квадрат.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>эта функция заменена одной или несколькими новыми функциями, которые могут улучшить точность и имена которых лучше отражают их использование. Эта функция по-прежнему доступна для совместимости с более ранними версиями Excel. Тем не менее, если обратная совместимость не требуется, рекомендуется использовать новые функции, так как они точнее описывают их функциональность. Более подробную информацию о новых функциях можно узнать <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiSq_Inv_RT(System.Double,System.Double)" /> в <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiSq_Inv(System.Double,System.Double)" /> статье методы и.</para>
          <para>Если вероятность = Хи2расп (x,...), то функция Хи2обр (вероятность,...) = x. Используйте эту функцию для сравнения наблюдаемых результатов с ожидаемыми, чтобы решить, является ли исходная гипотеза допустимой.</para>
          <para>Если любой из аргументов не является числом, <b>ХИ2ОБР</b> создает ошибку. </para>
          <para>Если вероятность &lt; 0 или вероятность &gt; 1, <b>ХИ2ОБР</b> создает ошибку. </para>
          <para>Если degrees_freedom не целое, то оно усекается. </para>
          <para>Если degrees_freedom &lt; 1 или degrees_freedom ≥ 10 ^ 10, <b>ХИ2ОБР</b> создает ошибку.</para>
          <para>При наличии значения вероятности функция <b>ХИ2ОБР</b> ищет значение x, для которого ХИ2РАСП (x, degrees_freedom) = вероятность. Таким образом, точность <b>ХИ2ОБР</b> зависит от точности <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiDist(System.Double,System.Double)" />. В <b>ХИ2ОБР</b> используется метод итерации поиска. Если поиск не сходится после 64 итераций, функция создает ошибку.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ChiSq_Dist">
      <MemberSignature Language="C#" Value="public double ChiSq_Dist (double Arg1, double Arg2, bool Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ChiSq_Dist([in]float64 Arg1, [in]float64 Arg2, [in]bool Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiSq_Dist(System.Double,System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChiSq_Dist (Arg1 As Double, Arg2 As Double, Arg3 As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double ChiSq_Dist(double Arg1, double Arg2, bool Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16911)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Arg1">X — значение, для которого необходимо оценить распределение.</param>
        <param name="Arg2">Deg_freedom — число степеней свободы.</param>
        <param name="Arg3">Интегральная — логическое значение, определяющее форму функции. Если интегральная имеет <b>значение true</b>, CHISQ_DIST возвращает интегральную функцию распределения; Если задано <b>значение false</b>, возвращается функция плотности вероятности.</param>
        <summary>Возвращает распределение хи — квадрат.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если какой-либо аргумент не является числом, CHISQ_DIST возвращает #VALUE! значение ошибки. </para>
          <para>Если x отрицательно, то CHISQ_DIST Возвращает #NUM! значение ошибки. </para>
          <para>Если deg_freedom не целое, то оно усекается. </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ChiSq_Dist_RT">
      <MemberSignature Language="C#" Value="public double ChiSq_Dist_RT (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ChiSq_Dist_RT([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiSq_Dist_RT(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChiSq_Dist_RT (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double ChiSq_Dist_RT(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16912)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Значение, для которого необходимо оценить распределение.</param>
        <param name="Arg2">Число степеней свободы.</param>
        <summary>Возвращает прямоугольную вероятность распределения хи — квадрат.</summary>
        <returns>To be added.</returns>
        <remarks><para>Распределение χ2 связано с тестом χ2. Используйте тест χ2 для сравнения наблюдаемых и ожидаемых значений.</para>
          <para>Например, эксперимент женетик может быть уверенным в том, что в следующем поколении растений будет демонстрироваться определенный набор цветов. Сравнивая наблюдаемые результаты с ожидаемыми, вы можете решить, является ли исходная гипотеза допустимой.</para>
          <para>Если любой из аргументов не является числом, <b>ChiSq_Dist_RT</b> создает ошибку. </para>
          <para>Если x отрицательно, <b>ChiSq_Dist_RT</b> создает ошибку. </para>
          <para>Если degrees_freedom не целое, то оно усекается. </para>
          <para>Если degrees_freedom &lt; 1 или degrees_freedom &gt; 10 ^ 10, <b>ChiSq_Dist_RT</b> создаст ошибку. <b>ChiSq_Dist_RT</b> вычисляется как ChiSq_Dist_RT = P (x&gt;X), где X — это случайная переменная χ2.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ChiSq_Inv">
      <MemberSignature Language="C#" Value="public double ChiSq_Inv (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ChiSq_Inv([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiSq_Inv(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChiSq_Inv (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double ChiSq_Inv(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16913)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Вероятность — вероятность, связанная с распределением хи — квадрат.</param>
        <param name="Arg2">Deg_freedom — число степеней свободы.</param>
        <summary>Возвращает значение, обратное к левой вероятности распределения хи — квадрат.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если какой-либо аргумент не является числом, <b>ChiSq_Inv</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если вероятность &lt; 0 или вероятность &gt; 1, <b>ChiSq_Inv</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если deg_freedom не целое, то оно усекается. </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ChiSq_Inv_RT">
      <MemberSignature Language="C#" Value="public double ChiSq_Inv_RT (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ChiSq_Inv_RT([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiSq_Inv_RT(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChiSq_Inv_RT (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double ChiSq_Inv_RT(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16914)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Вероятность, связанная с распределением хи — квадрат.</param>
        <param name="Arg2">Число степеней свободы.</param>
        <summary>Возвращает значение, обратное с правой стороной вероятности распределения хи — квадрат.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если вероятность = ChiSq_Dist_RT (x,...), то ChiSq_Inv_RT (вероятность,...) = x. Используйте эту функцию для сравнения наблюдаемых результатов с ожидаемыми, чтобы решить, является ли исходная гипотеза допустимой.</para>
          <para>Если любой из аргументов не является числом, <b>ChiSq_Inv_RT</b> создает ошибку. </para>
          <para>Если вероятность &lt; 0 или вероятность &gt; 1, <b>ChiSq_Inv_RT</b> создает ошибку. </para>
          <para>Если degrees_freedom не целое, то оно усекается. </para>
          <para>Если degrees_freedom &lt; 1 или degrees_freedom ≥ 10 ^ 10, <b>ChiSq_Inv_RT</b> выдает ошибку.</para>
          <para>При наличии значения вероятности <b>ChiSq_Inv_RT</b> ищет значение x таким, что ChiSq_Dist_RT (x, degrees_freedom) = вероятность. Таким образом, точность <b>ChiSq_Inv_RT</b> зависит от точности <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiSq_Dist_RT(System.Double,System.Double)" />. <b>ChiSq_Inv_RT</b> использует метод итерации поиска. Если поиск не сходится после 64 итераций, функция создает ошибку.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ChiSq_Test">
      <MemberSignature Language="C#" Value="public double ChiSq_Test (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ChiSq_Test([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiSq_Test(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChiSq_Test (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double ChiSq_Test(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16874)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Диапазон данных, содержащий наблюдения, которые необходимо проверить на соответствие ожидаемым значениям.</param>
        <param name="Arg2">Диапазон данных, содержащий отношение произведения итогов по строкам и столбцов к общему итогу.</param>
        <summary>Возвращает тест на независимость.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>ChiSq_Test</b> возвращает значение распределения хи-квадрат (χ2) для статистики и соответствующих степеней свободы. Вы можете использовать тесты χ2, чтобы определить, проверяются ли гипотетическые результаты экспериментом.</para>
          <para>Если actual_range и expected_range имеют различное количество точек данных, <b>ChiSq_Test</b> возвращает значение ошибки #N/a. </para>
          <para>Сначала тест χ2 вычисляет статистику χ2, используя формулу: </para>
          <para>Рисунок 1: формула для тестового x-квадрата</para>
          <para> </para>
          <para> </para>
          <para>где:</para>
          <list type="bullet">
            <item>
              <description>Аиж = фактическая частота в i – ой строке, j – TH столбце</description>
            </item>
            <item>
              <description>Еиж = ожидаемая частота в i – ой строке, j – TH столбце</description>
            </item>
            <item>
              <description>r = число или строки</description>
            </item>
            <item>
              <description>c = количество столбцов</description>
            </item>
          </list>
          <para>Небольшое значение χ2 — индикатор независимости. Как видно из формулы, χ2 всегда является положительным или 0, а 0 только если Аиж = Еиж для каждого i, j.</para>
          <para>
            <b>ChiSq_Test</b> возвращает вероятность того, что значение статистики χ2 по крайней мере до тех пор, пока значение, вычисленное приведенной выше формулой, могло быть вызвано шансом относительно независимости. При вычислении этой вероятности <b>ChiSq_Test</b> использует распределение χ2 с соответствующим числом степеней свободы (DF). Если r &gt; 1 и c &gt; 1, то DF = (r-1) (c-1). Если r = 1 и c &gt; 1, то DF = c – 1 или r &gt; 1 и c = 1, затем DF = r – 1. r = c = 1 не разрешено и приводит к ошибке.</para>
          <para>Использование <b>ChiSq_Test</b> наиболее уместно, если еиж не слишком мал. Некоторые статистиЦианс предполагают, что каждый Еиж должен быть больше или равен 5.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ChiTest">
      <MemberSignature Language="C#" Value="public double ChiTest (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ChiTest([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiTest(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChiTest (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double ChiTest(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16690)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Диапазон данных, содержащий наблюдения, которые необходимо проверить на соответствие ожидаемым значениям.</param>
        <param name="Arg2">Функция Импортантсис заменена одной или несколькими новыми функциями, которые могут улучшить точность и их имена лучше отражают их использование. Эта функция по-прежнему доступна для совместимости с более ранними версиями Excel. Тем не менее, если обратная совместимость не требуется, рекомендуется использовать новые функции, так как они точнее описывают их функциональность. Более подробную информацию о функции New можно узнать в <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ChiSq_Test(System.Object,System.Object)" /> методе. Диапазон данных, содержащий отношение произведения итогов по строкам и столбцов к общему итогу.</param>
        <summary>Возвращает тест на независимость.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>ХИ2ТЕСТ</b> возвращает значение распределения хи-квадрат (χ2) для статистики и соответствующих степеней свободы. Вы можете использовать тесты χ2, чтобы определить, проверяются ли гипотетическые результаты экспериментом.</para>
          <para>Если actual_range и expected_range имеют различное количество точек данных, то <b>ХИ2ТЕСТ</b> возвращает значение ошибки #N/a. </para>
          <para>Сначала тест χ2 вычисляет статистику χ2, используя формулу: </para>
          <para>Рисунок 1: формула для тестового x-квадрата</para>
          <para> </para>
          <para> </para>
          <para>где:</para>
          <list type="bullet">
            <item>
              <description>Аиж = фактическая частота в i – ой строке, j – TH столбце</description>
            </item>
            <item>
              <description>Еиж = ожидаемая частота в i – ой строке, j – TH столбце</description>
            </item>
            <item>
              <description>r = число или строки</description>
            </item>
            <item>
              <description>c = количество столбцов</description>
            </item>
          </list>
          <para> </para>
          <para>Небольшое значение χ2 — индикатор независимости. Как видно из формулы, χ2 всегда является положительным или 0, а 0 только если Аиж = Еиж для каждого i, j.</para>
          <para>
            <b>ХИ2ТЕСТ</b> возвращает вероятность того, что значение статистики χ2 по крайней мере до тех пор, пока значение, вычисленное приведенной выше формулой, могло быть вызвано шансом относительно независимости. При выстроении этой вероятности <b>ХИ2ТЕСТ</b> использует распределение χ2 с соответствующим числом степеней свободы, DF. Если r &gt; 1 и c &gt; 1, то DF = (r-1) (c-1). Если r = 1 и c &gt; 1, то DF = c – 1 или r &gt; 1 и c = 1, затем DF = r – 1. r = c = 1 не разрешено и приводит к ошибке.</para>
          <para>Использование <b>ХИ2ТЕСТ</b> наиболее уместно, если еиж не слишком мал. Некоторые статистиЦианс предполагают, что каждый Еиж должен быть больше или равен 5.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Choose">
      <MemberSignature Language="C#" Value="public object Choose (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Choose([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Choose(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Choose (Arg1 As Object, Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16484)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Указывает, какой параметр value выбран. Arg1 должен быть числом от 1 до 29, формулой или ссылкой на ячейку, содержащую число от 1 до 29.</param>
        <param name="Arg2">1 — 29 аргументов value, из которых выбирается значение или действие, выполняемое с учетом arg1. Аргументы могут быть числами, ссылками на ячейки, определенными именами, формулами, функциями или текстом.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Используется <paramref name="Arg1" /> в качестве индекса для возврата значения из списка аргументов значения.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если <paramref name="Arg1" /> выбрано значение <b>1, то</b> возвращается значение значение1; Если задано значение 2, <b>выбирается</b> возвращает значение value2; и т. д. </para>
          <para>Если <paramref name="Arg1" /> значение меньше 1 или больше, чем номер последнего значения в списке, <b>выберите пункт</b> создает ошибку. </para>
          <para>Если <paramref name="Arg1" /> параметр является дробным, перед использованием он усекается до наименьшего целого числа. </para>
          <para>Если <paramref name="Arg1" /> это массив, каждое значение оценивается при оценке <b>выбора</b> . </para>
          <para>Аргументы Value для <b>Choose</b> могут быть ссылками на диапазоны, а также одиночными значениями. Например, формула:</para>
          <para>= SUM ("выбор" (2, a1: A10, B1: B10, C1: C10))</para>
          <para>оценивается следующим образом:</para>
          <para>= SUM (B1: B10)</para>
          <para>в результате чего возвращается значение на основе значений из диапазона B1: B10.</para>
          <para>Функция <b>Choose</b> вычисляется первой, возвращая ссылку B1: B10. Затем функция SUM вычисляется с помощью B1: B10, результат функции <b>Choose</b> в качестве аргумента.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Clean">
      <MemberSignature Language="C#" Value="public string Clean (string Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Clean([in]string Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Clean(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Clean (Arg1 As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Clean(System::String ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16546)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Arg1">Любая информация листа, из которой требуется удалить непечатаемые символы.</param>
        <summary>Удаляет все непечатаемые символы из текста.</summary>
        <returns>To be added.</returns>
        <remarks><para>Используйте команду <b>очистить</b> для текста, импортированного из других приложений, которые содержат символы, которые не могут быть напечатаны в операционной системе. Например, с помощью параметра <b>Clean</b> можно удалить определенный компьютер с небольшим уровнем, который часто работает в начале и конце файлов данных и не может быть напечатан.</para>
          <para>
            <b>Важно!</b>функция <b>Clean</b> была разработана для удаления первых 32 непечатаемых символов в 7-разрядном коде ASCII (значений от 0 до 31) из текста. В наборе символов Юникода имеются дополнительные непечатаемые символы (значения 127, 129, 141, 143, 144 и 157). Сама функция <b>Clean</b> не удаляет эти дополнительные непечатаемые символы.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Combin">
      <MemberSignature Language="C#" Value="public double Combin (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Combin([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Combin(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Combin (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Combin(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16660)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Количество элементов.</param>
        <param name="Arg2">Число элементов в каждом сочетании.</param>
        <summary>Возвращает число комбинаций для определенного числа элементов. Используйте параметр <b>combinable</b> , чтобы определить общее возможное количество групп для определенного числа элементов.</summary>
        <returns>To be added.</returns>
        <remarks><para>Числовые аргументы усекаются до целых. </para>
          <para>Если любой из аргументов не число, то <b>combinable</b> создает ошибку. </para>
          <para>Если число &lt; 0, number_chosen &lt; 0 или Number &lt; number_chosen, то <b>combinable</b> создает ошибку. </para>
          <para>Сочетание — это любое множество или подмножество элементов, независимо от их внутреннего заказа. Комбинации отличаются от перестановок, для которых внутренний порядок важен. </para>
          <para>Число комбинаций выглядит следующим образом, где number = n и number_chosen = k: </para>
          <para>Рисунок 1: число комбинаций</para>
          <para> </para>
          <para> </para>
          <para>Где:</para>
          <para>Рисунок 2: формула</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Combina">
      <MemberSignature Language="C#" Value="public double Combina (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Combina([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Combina(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Combina (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Combina(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16952)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Общее число элементов.</param>
        <param name="Arg2">Число элементов в каждом сочетании.</param>
        <summary>Возвращает число комбинаций с повторениями для определенного числа элементов.</summary>
        <returns>ДВОЙНОЙ</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Complex">
      <MemberSignature Language="C#" Value="public string Complex (object Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Complex([in]object Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Complex (Arg1 As Object, Arg2 As Object, Optional Arg3 As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16795)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Фактический коэффициент комплексного числа.</param>
        <param name="Arg2">Коэффициент при мнимой части комплексного числа.</param>
        <param name="Arg3">Суффикс мнимого компонента комплексного числа. Если этот параметр опущен, то предполагается, что используется суффикс "i".</param>
        <summary>Преобразует действительные и мнимые коэффициенты в комплексное число форм x + yi или x + yj.</summary>
        <returns>To be added.</returns>
        <remarks><para>Все функции комплексных чисел принимают "i" и "j" для суффикса, но не "I" и "J". При использовании прописных букв возникает ошибка. Все функции, принимающие два или более сложных числа, требуют, чтобы все суффиксы были согласованы.</para>
          <para>Если <paramref name="Arg1" /> не число, то <b>Complex</b> создает ошибку. </para>
          <para>Если <paramref name="Arg2" /> не число, то <b>Complex</b> создает ошибку. </para>
          <para>Если <paramref name="Arg3" /> не является ни "i", ни "j", то <b>Complex</b> создает ошибку.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Confidence">
      <MemberSignature Language="C#" Value="public double Confidence (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Confidence([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Confidence(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Confidence (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Confidence(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16661)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Уровень важности, используемый для вычисления уровня вероятности. Степень вероятности равна 100 * (1-Alpha)% или другими словами, значение альфа-канала 0,05 указывает уровень вероятности 95%.</param>
        <param name="Arg2">Стандартное отклонение заполнения для диапазона данных и считается известным.</param>
        <param name="Arg3">Размер выборки.</param>
        <summary>Возвращает значение, которое можно использовать для создания доверительного интервала для среднего Генеральной совокупности.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>эта функция заменена одной или несколькими новыми функциями, которые могут улучшить точность и имена которых лучше отражают их использование. Эта функция по-прежнему доступна для совместимости с более ранними версиями Excel. Тем не менее, если обратная совместимость не требуется, рекомендуется использовать новые функции, так как они точнее описывают их функциональность. Более подробную информацию о новых функциях можно узнать <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Confidence_Norm(System.Double,System.Double,System.Double)" /> в <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Confidence_T(System.Double,System.Double,System.Double)" /> статье методы и.</para>
          <para>Доверительный интервал — это диапазон значений. Пример среднего уровня, x, находится в центре этого диапазона, а диапазон — x ± <b>уверенности</b>. Например, если x — это среднее время доставки продуктов, заказанных по почте, то <b>степенью</b> Генеральной совокупности является диапазон Генеральной совокупности. Для любого среднего Генеральной совокупности, μ0, в этом диапазоне, вероятность получения выборочного среднего из μ0, чем x, больше альфа; для любого среднего Генеральной совокупности, μ0, а не из этого диапазона, вероятность получения выборочного среднего из μ0, чем x, меньше альфа-канала. Другими словами, предположим, что мы используем x, standard_dev и size для создания двустороннего теста на уровне значимости для предположения, что среднее заполнение равно μ0. После этого мы не будем отклонять эту гипотезу, если μ0 находится в интервале доверия и отклоняет эту гипотезу, если μ0 не находится в пределах доверительного интервала. Доверительный интервал не позволяет нам определить, что существует вероятность 1 – альфа, что наш следующий пакет будет принимать время доставки с учетом доверительного интервала. </para>
          <para>Если какой-либо из аргументов не является числом, <b>достоверность</b> приводит к ошибке. </para>
          <para>Если альфа ≤ 0 или Alpha ≥ <b>1, то</b> создается сообщение об ошибке. </para>
          <para>Если standard_dev ≤ 0, то <b>достоверность</b> приводит к ошибке. </para>
          <para>Если размер не является целым числом, он усекается. </para>
          <para>Если размер &lt; 1, <b>достоверность</b> приводит к ошибке. </para>
          <para>Если предполагается, что альфа равняется 0,05, необходимо вычислить область под стандартной обычной кривой, которая равняется (1-альфа), или 95 процентов. Это значение равно ± 1,96. Таким образом, интервал доверия: </para>
          <para>Рисунок 1: доверительный интервал</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Confidence_Norm">
      <MemberSignature Language="C#" Value="public double Confidence_Norm (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Confidence_Norm([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Confidence_Norm(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Confidence_Norm (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Confidence_Norm(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16872)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Уровень важности, используемый для вычисления уровня вероятности. Степень вероятности равна 100 * (1-Alpha)% или другими словами, значение альфа-канала 0,05 указывает уровень вероятности 95%.</param>
        <param name="Arg2">Стандартное отклонение заполнения для диапазона данных и считается известным.</param>
        <param name="Arg3">Размер выборки.</param>
        <summary>Возвращает значение, которое можно использовать для создания доверительного интервала для среднего Генеральной совокупности.</summary>
        <returns>To be added.</returns>
        <remarks><para>Доверительный интервал — это диапазон значений. Пример среднего значения x находится в центре этого диапазона, а диапазон — x ± <b>Confidence_Norm</b>. Например, если x — это среднее время доставки продуктов, заказанных по почте, x ± <b>Confidence_Norm</b> — это диапазон Генеральной совокупности. Для любого среднего Генеральной совокупности, μ0, в этом диапазоне, вероятность получения выборочного среднего из μ0, чем x, больше альфа; для любого среднего Генеральной совокупности, μ0, а не из этого диапазона, вероятность получения выборочного среднего из μ0, чем x, меньше альфа-канала. Другими словами, предположим, что x, standard_dev и size используются для создания двустороннего теста на уровне значимости, равном значению для Генеральной совокупности, μ0. После этого мы не будем отклонять эту гипотезу, если μ0 находится в интервале доверия и отклоняет эту гипотезу, если μ0 не находится в пределах доверительного интервала. Доверительный интервал не позволяет выводить на себя вероятность 1 – альфа, что следующий пакет будет принимать время доставки в пределах доверительного интервала.</para>
          <para>Если какой-либо аргумент не является числом, <b>Confidence_Norm</b> создает ошибку. </para>
          <para>Если альфа ≤ 0 или Alpha ≥ 1, <b>Confidence_Norm</b> создает ошибку. </para>
          <para>Если standard_dev ≤ 0, <b>Confidence_Norm</b> создает ошибку. </para>
          <para>Если размер не является целым числом, он усекается. </para>
          <para>Если размер &lt; 1, <b>Confidence_Norm</b> генерирует ошибку. </para>
          <para>Если предполагается, что альфа равняется 0,05, вычисляется область под стандартной обычной кривой, равной (1-альфа) или 95 процентов. Это значение равно ± 1,96. Таким образом, интервал доверия: </para>
          <para>Рисунок 1: доверительный интервал</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Confidence_T">
      <MemberSignature Language="C#" Value="public double Confidence_T (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Confidence_T([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Confidence_T(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Confidence_T (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Confidence_T(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16873)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Альфа — уровень значимости, используемый для вычисления уровня вероятности. Степень вероятности равна 100 * (1-Alpha)% или другими словами, значение альфа-канала 0,05 указывает уровень вероятности 95%.</param>
        <param name="Arg2">Standard_dev — стандартное отклонение заполнения для диапазона данных и считается известным.</param>
        <param name="Arg3">Size — размер выборки.</param>
        <summary>Возвращает доверительный интервал для среднего Генеральной совокупности с помощью распределения Стьюдента.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если какой-либо аргумент не является числом, <b>Confidence_T</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если альфа ≤ 0 или Alpha ≥ 1, <b>Confidence_T</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если standard_dev ≤ 0, <b>Confidence_T</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если размер не является целым числом, он усекается. </para>
          <para>Если размер равен 1, <b>Confidence_T</b> возвращает значение #DIV/0! значение ошибки. </para>
          <para>Если размер равен 1, <b>Confidence_T</b> возвращает значение #DIV/0! значение ошибки.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public double Convert (object Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Convert([in]object Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Convert(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Convert (Arg1 As Object, Arg2 As Object, Arg3 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Convert(System::Object ^ Arg1, System::Object ^ Arg2, System::Object ^ Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16852)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Значение в from_units, которое требуется преобразовать.</param>
        <param name="Arg2">Единицы измерения для Number.</param>
        <param name="Arg3">Единицы для результата. <b>Convert</b> принимает следующие текстовые значения (в кавычках) для from_unit и to_unit, перечисленных в разделе "Примечания" ниже.</param>
        <summary>Преобразует число из одной системы измерения в другую. Например, <b>Преобразование</b> может привести к сдвигу таблицы расстояний в милях на таблицу расстояний в километрах.</summary>
        <returns>To be added.</returns>
        <remarks><list type="table">
            <item>
              <term>Результаты</term>
              <description>финансов</description>
            </item>
            <item>
              <term>Пуск</term>
              <description>SG</description>
            </item>
            <item>
              <term>Фунт (эвердьюпойс)</term>
              <description>"ЛБМ"</description>
            </item>
            <item>
              <term>U (атомная единица массы)</term>
              <description>интерфейса</description>
            </item>
            <item>
              <term>Унция (эвердьюпойс)</term>
              <description>"ОЗМ"</description>
            </item>
          </list>
          <list type="table">
            <item>
              <term>Батарей</term>
              <description>Пн</description>
            </item>
            <item>
              <term>Статутная миля</term>
              <description>мм</description>
            </item>
            <item>
              <term>Морских миля</term>
              <description>Управление</description>
            </item>
            <item>
              <term>Дюйм</term>
              <description>возврата</description>
            </item>
            <item>
              <term>Области</term>
              <description>метр</description>
            </item>
            <item>
              <term>Дома</term>
              <description>ГД</description>
            </item>
            <item>
              <term>ангстром</term>
              <description>"анг"</description>
            </item>
            <item>
              <term>Пика (1/72 в)</term>
              <description>Пики</description>
            </item>
          </list>
          <list type="table">
            <item>
              <term>Год</term>
              <description>"Ир"</description>
            </item>
            <item>
              <term>Day</term>
              <description>открыт</description>
            </item>
            <item>
              <term>Часы</term>
              <description>HR</description>
            </item>
            <item>
              <term>Минуты</term>
              <description>MN</description>
            </item>
            <item>
              <term>Секунды</term>
              <description>секунду</description>
            </item>
          </list>
          <list type="table">
            <item>
              <term>Стиле</term>
              <description>"PA" (или "p")</description>
            </item>
            <item>
              <term>Атмосфера</term>
              <description>"ATM" (или "at")</description>
            </item>
            <item>
              <term>mm для столба</term>
              <description>"Ммхг"</description>
            </item>
          </list>
          <list type="table">
            <item>
              <term>невтон</term>
              <description>.\N\n\-</description>
            </item>
            <item>
              <term>дине</term>
              <description>"Дин" (или "dy")</description>
            </item>
            <item>
              <term>Фунт силы</term>
              <description>"ЛБФ"</description>
            </item>
          </list>
          <list type="table">
            <item>
              <term>жауле</term>
              <description>J</description>
            </item>
            <item>
              <term>ерг</term>
              <description>e</description>
            </item>
            <item>
              <term>Сермодинамик калорие</term>
              <description>диска</description>
            </item>
            <item>
              <term>ИТ калорие</term>
              <description>лицензии</description>
            </item>
            <item>
              <term>Электронного вольт</term>
              <description>"eV" (или "EV")</description>
            </item>
            <item>
              <term>Лошадиная сила — час</term>
              <description>"ХФ" (или "HH")</description>
            </item>
            <item>
              <term>Ватт в час</term>
              <description>"Что такое" (или "что")</description>
            </item>
            <item>
              <term>Нижний (фунт)</term>
              <description>"флб"</description>
            </item>
            <item>
              <term>бту</term>
              <description>"БТУ" (или "БТУ")</description>
            </item>
          </list>
          <list type="table">
            <item>
              <term>Лошади</term>
              <description>"HP" (или "h")</description>
            </item>
            <item>
              <term>Потребляем</term>
              <description>"W" (или "w")</description>
            </item>
          </list>
          <list type="table">
            <item>
              <term>тесла</term>
              <description>Д</description>
            </item>
            <item>
              <term>ГАУСС</term>
              <description>Начало</description>
            </item>
          </list>
          <list type="table">
            <item>
              <term>Градус Цельсия</term>
              <description>"C" (или "цел")</description>
            </item>
            <item>
              <term>Градус Фаренгейта</term>
              <description>"F" (или "Фах")</description>
            </item>
            <item>
              <term>Кельвина</term>
              <description>"K" (или "Кел")</description>
            </item>
          </list>
          <list type="table">
            <item>
              <term>теаспун</term>
              <description>TSP</description>
            </item>
            <item>
              <term>Мерных</term>
              <description>загружен</description>
            </item>
            <item>
              <term>Жидкие унция</term>
              <description>"Оз"</description>
            </item>
            <item>
              <term>Кружк</term>
              <description>кружк</description>
            </item>
            <item>
              <term>США пинт</term>
              <description>"PT" (или "us_pt")</description>
            </item>
            <item>
              <term>Королевств пинт</term>
              <description>"uk_pt"</description>
            </item>
            <item>
              <term>Кварт</term>
              <description>Qt</description>
            </item>
            <item>
              <term>Галлон</term>
              <description>списке</description>
            </item>
            <item>
              <term>литер</term>
              <description>"l" (или "lt")</description>
            </item>
          </list>
          <para>Следующие сокращения префиксов устройств можно добавлять в начало любой метрики from_unit или to_unit.</para>
          <list type="table">
            <item>
              <term>екса</term>
              <description>1E + 18</description>
              <description>E</description>
            </item>
            <item>
              <term>пета</term>
              <description>1E + 15</description>
              <description>Ш</description>
            </item>
            <item>
              <term>тера</term>
              <description>1E + 12</description>
              <description>Д</description>
            </item>
            <item>
              <term>гига</term>
              <description>1E + 09</description>
              <description>Финансов</description>
            </item>
            <item>
              <term>Мегапиксели</term>
              <description>1E + 06</description>
              <description>Пн</description>
            </item>
            <item>
              <term>кило</term>
              <description>1E + 03</description>
              <description>звонить</description>
            </item>
            <item>
              <term>хекто</term>
              <description>1E + 02</description>
              <description>высоты</description>
            </item>
            <item>
              <term>декао</term>
              <description>1E + 01</description>
              <description>e</description>
            </item>
            <item>
              <term>деЦи</term>
              <description>1E – 01</description>
              <description>d</description>
            </item>
            <item>
              <term>центи</term>
              <description>1E – 02</description>
              <description>диска</description>
            </item>
            <item>
              <term>передачи</term>
              <description>1E — 03</description>
              <description>Пн</description>
            </item>
            <item>
              <term>контроллер</term>
              <description>1E – 06</description>
              <description>интерфейса</description>
            </item>
            <item>
              <term>Nano</term>
              <description>1E – 09</description>
              <description>.\n\n\-</description>
            </item>
            <item>
              <term>пико</term>
              <description>1E – 12</description>
              <description>ш</description>
            </item>
            <item>
              <term>фемто</term>
              <description>1E – 15</description>
              <description>СКР</description>
            </item>
            <item>
              <term>ATTO</term>
              <description>1E – 18</description>
              <description>определенно</description>
            </item>
          </list>
          <para>Если типы входных данных неверны, то <b>функция ПРЕОБР</b> создает ошибку. </para>
          <para>Если единица измерения не существует, то <b>функция ПРЕОБР</b> создает ошибку. </para>
          <para>Если единица измерения не поддерживает сокращенные префиксы единиц измерения, то <b>функция ПРЕОБР</b> создает ошибку. </para>
          <para>Если единицы измерения находятся в разных группах, то <b>функция ПРЕОБР</b> создает ошибку. </para>
          <para>Имена единиц и префиксы чувствительны к регистру.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Correl">
      <MemberSignature Language="C#" Value="public double Correl (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Correl([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Correl(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Correl (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Correl(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16691)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Диапазон значений ячеек.</param>
        <param name="Arg2">Второй диапазон значений в ячейке.</param>
        <summary>Возвращает коэффициент корреляции диапазонов <paramref name="Arg1" /> и <paramref name="Arg2" /> диапазонов ячеек.</summary>
        <returns>To be added.</returns>
        <remarks><para>Используйте коэффициент корреляции для определения отношения между двумя свойствами. Например, вы можете проверить отношение между средней температурой и использованием кондиционеров.</para>
          <para>Если аргумент array или Reference содержит текст, логические значения или пустые ячейки, эти значения игнорируются; Тем не менее, ячейки с нулевым значением включены. </para>
          <para>Если <paramref name="Arg1" /> и <paramref name="Arg2" /> имеет разное количество точек данных, <b>КОРРЕЛ</b> создает ошибку. </para>
          <para>Если пустое значение или значение параметра s (стандартное отклонение) их значений равно нулю, КОРРЕЛ создает ошибку. <b>Correl</b> <paramref name="Arg1" /> <paramref name="Arg2" /> </para>
          <para>Уравнение для коэффициента корреляции:</para>
          <para>Рисунок 1: формула для коэффициента корреляции</para>
          <para> </para>
          <para> </para>
          <para>где x и y — пример среднего (arg1) и среднего (arg2).</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Cosh">
      <MemberSignature Language="C#" Value="public double Cosh (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Cosh([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Cosh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Cosh (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Cosh(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16614)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Любое действительное число, для которого нужно найти гиперболический косинус.</param>
        <summary>Возвращает гиперболический косинус числа.</summary>
        <returns>To be added.</returns>
        <remarks><para>Формула для гиперболического косинуса: </para>
          <para>Рисунок 1: Формула гиперболического косинуса</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Cot">
      <MemberSignature Language="C#" Value="public double Cot (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Cot([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Cot(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Cot (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Cot(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16934)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Угол в радианах, для которого требуется получить котангенс.</param>
        <summary>Возвращает котангенс угла.</summary>
        <returns>ДВОЙНОЙ</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Coth">
      <MemberSignature Language="C#" Value="public double Coth (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Coth([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Coth(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Coth (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Coth(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16935)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Угол в радианах, для которого требуется получить гиперболический котангенс.</param>
        <summary>Возвращает гиперболический котангенс числа.</summary>
        <returns>ДВОЙНОЙ</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public double Count (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Count([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Count(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Count (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16384)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">от 1 до 30 аргументов, которые могут содержать или ссылаться на различные типы данных, но подсчитываются только числа.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Подсчитывает количество ячеек, содержащих числа, и подсчета номеров в списке аргументов.</summary>
        <returns>To be added.</returns>
        <remarks><para>Используйте <b>Count</b> , чтобы получить количество записей в числовом поле, которое находится в диапазоне или массиве чисел. </para>
          <para>Подсчитываются аргументы, которые являются числами, датами или текстовым представлением чисел. </para>
          <para>Учитываются логические значения и текстовые представления чисел, которые вы вводите непосредственно в список аргументов. </para>
          <para>Аргументы, которые являются значениями ошибки или текстом, которые не могут быть преобразованы в числа, игнорируются. </para>
          <para>Если аргумент является массивом или ссылкой, подсчитываются только числа в этом массиве или ссылке. Пустые ячейки, логические значения, текст и значения ошибок в массиве или ссылке игнорируются. </para>
          <para>Если требуется подсчитать логические значения, текстовые значения или значения ошибок, используйте <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.CountA(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> функцию.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CountA">
      <MemberSignature Language="C#" Value="public double CountA (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 CountA([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.CountA(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CountA (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16553)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">от 1 до 30 аргументов, представляющих значения, которые необходимо подсчитать.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Подсчитывает количество непустых ячеек и значений в списке аргументов.</summary>
        <returns>To be added.</returns>
        <remarks><para>Чтобы подсчитать количество ячеек, содержащих данные в диапазоне или массиве, используйте функцию <b>Count</b> .</para>
          <para>Значение — это любой тип данных, включая значения ошибок и пустой текст (""). Значение не включает пустые ячейки. </para>
          <para>Если аргумент представляет собой массив или ссылку, используются только значения из этого массива или ссылки. Пустые ячейки и текстовые значения в массиве или ссылке игнорируются. </para>
          <para>Если вам не нужно подсчитывать логические значения, текстовые значения и значения ошибок, используйте <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Count(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> функцию.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CountBlank">
      <MemberSignature Language="C#" Value="public double CountBlank (Microsoft.Office.Interop.Excel.Range Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 CountBlank([in]class Microsoft.Office.Interop.Excel.Range Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.CountBlank(Microsoft.Office.Interop.Excel.Range)" />
      <MemberSignature Language="VB.NET" Value="Public Function CountBlank (Arg1 As Range) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double CountBlank(Microsoft::Office::Interop::Excel::Range ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16731)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
      </Parameters>
      <Docs>
        <param name="Arg1">Диапазон, из которого требуется подсчитать количество пустых ячеек.</param>
        <summary>Подсчитывает количество пустых ячеек в указанном диапазоне ячеек.</summary>
        <returns>To be added.</returns>
        <remarks><para>Также подсчитываются ячейки с формулами, которые возвращают "" (пустой текст). Ячейки с нулевым значением не учитываются.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CountIf">
      <MemberSignature Language="C#" Value="public double CountIf (Microsoft.Office.Interop.Excel.Range Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 CountIf([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.CountIf(Microsoft.Office.Interop.Excel.Range,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CountIf (Arg1 As Range, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double CountIf(Microsoft::Office::Interop::Excel::Range ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16730)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Диапазон ячеек, для которых необходимо подсчитать количество ячеек.</param>
        <param name="Arg2">Критерий в форме числа, выражения, ссылки на ячейку или текста, который определяет, какие ячейки будут подсчитаны. Например, критерий может быть выражен в виде 32, "32",&gt;"32", "яблоки" или B4.</param>
        <summary>Подсчитывает количество ячеек в диапазоне, соответствующих заданным условиям.</summary>
        <returns>Возвращает <see cref="T:System.Double" />значение.</returns>
        <remarks><para>Для критериев можно использовать подстановочные знаки, вопросительный знак (?) и звездочку (*). Вопросительный знак соответствует одному символу; Звездочка соответствует любой последовательности символов. Если вы хотите найти фактический вопросительный знак или звездочку, введите тильду (~) перед символом.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CountIfs">
      <MemberSignature Language="C#" Value="public double CountIfs (Microsoft.Office.Interop.Excel.Range Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 CountIfs([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.CountIfs(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CountIfs (Arg1 As Range, Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16865)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Один или несколько диапазонов, в которых оцениваются связанные условия.</param>
        <param name="Arg2">Одно или несколько критериев в форме числа, выражения, ссылки на ячейки или текста, которые определяют, какие ячейки будут подсчитываться. Например, критерий может быть выражен в виде 32, "32",&gt;"32", "яблоки" или B4.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Подсчитывает количество ячеек в диапазоне, соответствующих нескольким условиям.</summary>
        <returns>To be added.</returns>
        <remarks><para>Каждая ячейка в диапазоне подсчитывается только в том случае, если для этой ячейки заданы все соответствующие условия. </para>
          <para>Если ячейка в любом аргументе — пустая ячейка, <b>СЧЁТЕСЛИМН</b> обрабатывает ее как значение 0. </para>
          <para>В поле условия можно использовать подстановочные знаки, вопросительный знак (?) и звездочку (*). Вопросительный знак соответствует одному символу; Звездочка соответствует любой последовательности символов. Если вы хотите найти фактический вопросительный знак или звездочку, введите тильду (~) перед символом.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CoupDayBs">
      <MemberSignature Language="C#" Value="public double CoupDayBs (object Arg1, object Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 CoupDayBs([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.CoupDayBs(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CoupDayBs (Arg1 As Object, Arg2 As Object, Arg3 As Object, Optional Arg4 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16836)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Дата соглашения для безопасности. Дата сопоставления безопасности — это дата после даты выпускной сделки, когда она передается покупателю.</param>
        <param name="Arg2">Срок погашения для системы безопасности. Срок погашения — это дата истечения срока действия системы безопасности.</param>
        <param name="Arg3">Количество выплат по купонам за год. Для ежегодных выплат частота = 1; для полугодий частота = 2; для ежеквартальных выплат частота = 4.</param>
        <param name="Arg4">Используемый тип расчета дня.</param>
        <summary>Возвращает количество дней от начала периода купона до даты соглашения.</summary>
        <returns>To be added.</returns>
        <remarks><para>В приведенной ниже таблице содержится список значений для <paramref name="Arg4" />.</para>
          <list type="table">
            <item>
              <term>0 или опущен</term>
              <description>АМЕРИКАНСКИЙ (NASD) 30/360</description>
            </item>
            <item>
              <term>1,1</term>
              <description>Фактический/фактический</description>
            </item>
            <item>
              <term>2</term>
              <description>Фактический/360</description>
            </item>
            <item>
              <term>4</term>
              <description>Фактические/365</description>
            </item>
            <item>
              <term>4 </term>
              <description>Европейская 30/360</description>
            </item>
          </list>
          <para>Microsoft Excel хранит даты как последовательные серийные номера, чтобы их можно было использовать в вычислениях. По умолчанию 1 января 1900 года является порядковым номером 1, а 1 января 2008 — порядковым номером 39448, так как он составляет 39 448 дней после 1 января 1900. Microsoft Excel для Macintosh использует в качестве значения по умолчанию другую систему дат. </para>
          <para>Дата соглашения — это дата приобретения покупателем купона, например облигации. Дата погашения — это дата истечения срока действия купона. Например, предположим, что 30-летний облигация составляет 1 января 2008 г., и позднее он покупается покупателем за шесть месяцев. Дата выпуска — 1 января 2008 года, Дата расчета — 1 июля 2008, а срок погашения — 1 января 2038 г., 30 лет после даты выпуска 1 января 2008 г. </para>
          <para>Все аргументы усекаются до целых. </para>
          <para>Если дата_согл или дата_вступл_в_силу не является допустимой датой, <b>ДНЕЙКУПОНДО</b> создает ошибку. </para>
          <para>Если частота является любым числом, отличным от 1, 2 или 4, <b>ДНЕЙКУПОНДО</b> создает ошибку. </para>
          <para>Если базис &lt; 0 или базис &gt; 4, <b>ДНЕЙКУПОНДО</b> создает ошибку. </para>
          <para>Если дата_соглашения ≥ дата_вступления_в_силу, <b>ДНЕЙКУПОНДО</b> создает ошибку.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CoupDays">
      <MemberSignature Language="C#" Value="public double CoupDays (object Arg1, object Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 CoupDays([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.CoupDays(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CoupDays (Arg1 As Object, Arg2 As Object, Arg3 As Object, Optional Arg4 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16837)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Дата соглашения для безопасности. Дата сопоставления безопасности — это дата после даты выпускной сделки, когда она передается покупателю.</param>
        <param name="Arg2">Срок погашения для системы безопасности. Срок погашения — это дата истечения срока действия системы безопасности.</param>
        <param name="Arg3">Количество выплат по купонам за год. Для ежегодных выплат частота = 1; для полугодий частота = 2; для ежеквартальных выплат частота = 4.</param>
        <param name="Arg4">Используемый тип расчета дня.</param>
        <summary>Возвращает количество дней в периоде купона, который содержит дату соглашения.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>для ввода дат используется функция Дата или результаты других формул или функций. Например, используйте DATE (2008, 5, 23) для 23-дневного дня мая 2008. Проблемы могут возникать, если даты вводятся как текст.</para>
          <para>В следующей таблице приведены значения, используемые в <paramref name="Arg4" />.</para>
          <list type="table">
            <item>
              <term>0 или опущен</term>
              <description>АМЕРИКАНСКИЙ (NASD) 30/360</description>
            </item>
            <item>
              <term>1,1</term>
              <description>Фактический/фактический</description>
            </item>
            <item>
              <term>2</term>
              <description>Фактический/360</description>
            </item>
            <item>
              <term>4</term>
              <description>Фактические/365</description>
            </item>
            <item>
              <term>4 </term>
              <description>Европейская 30/360</description>
            </item>
          </list>
          <para>Microsoft Excel хранит даты как последовательные серийные номера, чтобы их можно было использовать в вычислениях. По умолчанию 1 января 1900 года является порядковым номером 1, а 1 января 2008 — порядковым номером 39448, так как он составляет 39 448 дней после 1 января 1900. Microsoft Excel для Macintosh использует в качестве значения по умолчанию другую систему дат. </para>
          <para>Дата соглашения — это дата приобретения покупателем купона, например облигации. Дата погашения — это дата истечения срока действия купона. Например, предположим, что 30-летний облигация составляет 1 января 2008 г., и позднее он покупается покупателем за шесть месяцев. Дата выпуска — 1 января 2008 года, Дата соглашения — 1 июля 2008, а срок погашения — 1 января 2038 г., 30 лет после даты выпуска 1 января 2008 года. </para>
          <para>Все аргументы усекаются до целых. </para>
          <para>Если дата_согл или дата_вступл_в_силу не является допустимой датой, <b>ДНЕЙКУПОН</b> создает ошибку. </para>
          <para>Если частота является любым числом, отличным от 1, 2 или 4, <b>ДНЕЙКУПОН</b> создает ошибку. </para>
          <para>Если базис &lt; 0 или базис &gt; 4, <b>ДНЕЙКУПОН</b> создает ошибку. </para>
          <para>Если дата_соглашения ≥ дата_вступления_в_силу, <b>ДНЕЙКУПОН</b> создает ошибку.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CoupDaysNc">
      <MemberSignature Language="C#" Value="public double CoupDaysNc (object Arg1, object Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 CoupDaysNc([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.CoupDaysNc(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CoupDaysNc (Arg1 As Object, Arg2 As Object, Arg3 As Object, Optional Arg4 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16838)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Дата соглашения для безопасности. Дата сопоставления безопасности — это дата после даты выпускной сделки, когда она передается покупателю.</param>
        <param name="Arg2">Срок погашения для системы безопасности. Срок погашения — это дата истечения срока действия системы безопасности.</param>
        <param name="Arg3">Количество выплат по купонам за год. Для ежегодных выплат частота = 1; для полугодий частота = 2; для ежеквартальных выплат частота = 4.</param>
        <param name="Arg4">Используемый тип расчета дня.</param>
        <summary>Возвращает количество дней от даты соглашения до даты следующего купона.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>для ввода дат используется функция Дата или результаты других формул или функций. Например, используйте DATE (2008, 5, 23) для 23-дневного дня мая 2008. Проблемы могут возникать, если даты вводятся как текст.</para>
          <para>В следующей таблице приведены значения, используемые в <paramref name="Arg4" />.</para>
          <list type="table">
            <item>
              <term>0 или опущен</term>
              <description>АМЕРИКАНСКИЙ (NASD) 30/360</description>
            </item>
            <item>
              <term>1,1</term>
              <description>Фактический/фактический</description>
            </item>
            <item>
              <term>2</term>
              <description>Фактический/360</description>
            </item>
            <item>
              <term>4</term>
              <description>Фактические/365</description>
            </item>
            <item>
              <term>4 </term>
              <description>Европейская 30/360</description>
            </item>
          </list>
          <para>Microsoft Excel хранит даты как последовательные серийные номера, чтобы их можно было использовать в вычислениях. По умолчанию 1 января 1900 года является порядковым номером 1, а 1 января 2008 — порядковым номером 39448, так как он составляет 39 448 дней после 1 января 1900. Microsoft Excel для Macintosh использует в качестве значения по умолчанию другую систему дат. </para>
          <para>Дата соглашения — это дата приобретения покупателем купона, например облигации. Дата погашения — это дата истечения срока действия купона. Например, предположим, что 30-летний облигация составляет 1 января 2008 г., и позднее он покупается покупателем за шесть месяцев. Дата выпуска — 1 января 2008 года, Дата расчета — 1 июля 2008, а срок погашения — 1 января 2038 г., что составляет 30 лет после даты выпуска 1 января, 2008 года. </para>
          <para>Все аргументы усекаются до целых. </para>
          <para>Если дата_согл или дата_вступл_в_силу не является допустимой датой, <b>ДНЕЙКУПОНПОСЛЕ</b> создает ошибку. </para>
          <para>Если частота является любым числом, отличным от 1, 2 или 4, <b>ДНЕЙКУПОНПОСЛЕ</b> создает ошибку. </para>
          <para>Если базис &lt; 0 или базис &gt; 4, <b>ДНЕЙКУПОНПОСЛЕ</b> создает ошибку. </para>
          <para>Если дата_соглашения ≥ дата_вступления_в_силу, <b>ДНЕЙКУПОНПОСЛЕ</b> создает ошибку.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CoupNcd">
      <MemberSignature Language="C#" Value="public double CoupNcd (object Arg1, object Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 CoupNcd([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.CoupNcd(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CoupNcd (Arg1 As Object, Arg2 As Object, Arg3 As Object, Optional Arg4 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16839)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Дата соглашения для безопасности. Дата сопоставления безопасности — это дата после даты выпускной сделки, когда она передается покупателю.</param>
        <param name="Arg2">Срок погашения для системы безопасности. Срок погашения — это дата истечения срока действия системы безопасности.</param>
        <param name="Arg3">Количество выплат по купонам за год. Для ежегодных выплат частота = 1; для полугодий частота = 2; для ежеквартальных выплат частота = 4.</param>
        <param name="Arg4">Используемый тип расчета дня.</param>
        <summary>Возвращает число, представляющее дату следующего купона после даты соглашения.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>для ввода дат используется функция Дата или результаты других формул или функций. Например, используйте DATE (2008, 5, 23) для 23-дневного дня мая 2008. Проблемы могут возникать, если даты вводятся как текст.</para>
          <para>В следующей таблице приведены значения, используемые в <paramref name="Arg4" />.</para>
          <list type="table">
            <item>
              <term>0 или опущен</term>
              <description>АМЕРИКАНСКИЙ (NASD) 30/360</description>
            </item>
            <item>
              <term>1,1</term>
              <description>Фактический/фактический</description>
            </item>
            <item>
              <term>2</term>
              <description>Фактический/360</description>
            </item>
            <item>
              <term>4</term>
              <description>Фактические/365</description>
            </item>
            <item>
              <term>4 </term>
              <description>Европейская 30/360</description>
            </item>
          </list>
          <para>Microsoft Excel хранит даты как последовательные серийные номера, чтобы их можно было использовать в вычислениях. По умолчанию 1 января 1900 года является порядковым номером 1, а 1 января 2008 — порядковым номером 39448, так как он составляет 39 448 дней после 1 января 1900. Microsoft Excel для Macintosh использует в качестве значения по умолчанию другую систему дат. </para>
          <para>Дата соглашения — это дата приобретения покупателем купона, например облигации. Дата погашения — это дата истечения срока действия купона. Например, предположим, что 30-летний облигация составляет 1 января 2008 г., и позднее он покупается покупателем за шесть месяцев. Дата выпуска — 1 января 2008 года, Дата расчета — 1 июля 2008, а срок погашения — 1 января 2038 г., что составляет 30 лет после даты выпуска 1 января, 2008 года. </para>
          <para>Все аргументы усекаются до целых. </para>
          <para>Если дата_согл или дата_вступл_в_силу не является допустимой датой, <b>ДАТАКУПОНПОСЛЕ</b> создает ошибку. </para>
          <para>Если частота является любым числом, отличным от 1, 2 или 4, <b>ДАТАКУПОНПОСЛЕ</b> создает ошибку. </para>
          <para>Если базис &lt; 0 или базис &gt; 4, <b>ДАТАКУПОНПОСЛЕ</b> создает ошибку. </para>
          <para>Если дата_соглашения ≥ дата_вступления_в_силу, <b>ДАТАКУПОНПОСЛЕ</b> создает ошибку.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CoupNum">
      <MemberSignature Language="C#" Value="public double CoupNum (object Arg1, object Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 CoupNum([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.CoupNum(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CoupNum (Arg1 As Object, Arg2 As Object, Arg3 As Object, Optional Arg4 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16840)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Дата соглашения для безопасности. Дата сопоставления безопасности — это дата после даты выпускной сделки, когда она передается покупателю.</param>
        <param name="Arg2">Срок погашения для системы безопасности. Срок погашения — это дата истечения срока действия системы безопасности.</param>
        <param name="Arg3">Количество выплат по купонам за год. Для ежегодных выплат частота = 1; для полугодий частота = 2; для ежеквартальных выплат частота = 4.</param>
        <param name="Arg4">Используемый тип расчета дня.</param>
        <summary>Возвращает количество купонов между датой расчета и датой погашения, округленным до ближайшего целого купона.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>для ввода дат используется функция Дата или результаты других формул или функций. Например, используйте DATE (2008, 5, 23) для 23-дневного дня мая 2008. Проблемы могут возникать, если даты вводятся как текст.</para>
          <para>В следующей таблице приведены значения, используемые в <paramref name="Arg4" />.</para>
          <list type="table">
            <item>
              <term>0 или опущен</term>
              <description>АМЕРИКАНСКИЙ (NASD) 30/360</description>
            </item>
            <item>
              <term>1,1</term>
              <description>Фактический/фактический</description>
            </item>
            <item>
              <term>2</term>
              <description>Фактический/360</description>
            </item>
            <item>
              <term>4</term>
              <description>Фактические/365</description>
            </item>
            <item>
              <term>4 </term>
              <description>Европейская 30/360</description>
            </item>
          </list>
          <para>Microsoft Excel хранит даты как последовательные серийные номера, чтобы их можно было использовать в вычислениях. По умолчанию 1 января 1900 года является порядковым номером 1, а 1 января 2008 — порядковым номером 39448, так как он составляет 39 448 дней после 1 января 1900. Microsoft Excel для Macintosh использует в качестве значения по умолчанию другую систему дат. </para>
          <para>Дата соглашения — это дата приобретения покупателем купона, например облигации. Дата погашения — это дата истечения срока действия купона. Например, предположим, что 30-летний облигация составляет 1 января 2008 г., и позднее он покупается покупателем за шесть месяцев. Дата выпуска — 1 января 2008 года, Дата расчета — 1 июля 2008, а срок погашения — 1 января 2038 г., что составляет 30 лет после даты выпуска 1 января, 2008 года. </para>
          <para>Все аргументы усекаются до целых. </para>
          <para>Если дата_согл или дата_вступл_в_силу не является допустимой датой, то функция <b>ЧИСЛКУПОН</b> создает ошибку. </para>
          <para>Если частота является любым числом, отличным от 1, 2 или 4, то функция <b>ЧИСЛКУПОН</b> создает ошибку. </para>
          <para>Если базис &lt; 0 или базис &gt; 4, то функция <b>ЧИСЛКУПОН</b> создает ошибку. </para>
          <para>Если дата_соглашения ≥ дата_вступления_в_силу, то функция <b>ЧИСЛКУПОН</b> создает ошибку.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CoupPcd">
      <MemberSignature Language="C#" Value="public double CoupPcd (object Arg1, object Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 CoupPcd([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.CoupPcd(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CoupPcd (Arg1 As Object, Arg2 As Object, Arg3 As Object, Optional Arg4 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16841)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Дата соглашения для безопасности. Дата сопоставления безопасности — это дата после даты выпускной сделки, когда она передается покупателю.</param>
        <param name="Arg2">Срок погашения для системы безопасности. Срок погашения — это дата истечения срока действия системы безопасности.</param>
        <param name="Arg3">Количество выплат по купонам за год. Для ежегодных выплат частота = 1; для полугодий частота = 2; для ежеквартальных выплат частота = 4.</param>
        <param name="Arg4">Используемый тип расчета дня.</param>
        <summary>Возвращает дату предыдущего купона, предшествующую дате расчета.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>для ввода дат используется функция Дата или результаты других формул или функций. Например, используйте DATE (2008, 5, 23) для 23-дневного дня мая 2008. Проблемы могут возникать, если даты вводятся как текст.</para>
          <para>В следующей таблице приведены значения, используемые в <paramref name="Arg4" />.</para>
          <list type="table">
            <item>
              <term>0 или опущен</term>
              <description>АМЕРИКАНСКИЙ (NASD) 30/360</description>
            </item>
            <item>
              <term>1,1</term>
              <description>Фактический/фактический</description>
            </item>
            <item>
              <term>2</term>
              <description>Фактический/360</description>
            </item>
            <item>
              <term>4</term>
              <description>Фактические/365</description>
            </item>
            <item>
              <term>4 </term>
              <description>Европейская 30/360</description>
            </item>
          </list>
          <para>Microsoft Excel хранит даты как последовательные серийные номера, чтобы их можно было использовать в вычислениях. По умолчанию 1 января 1900 года является порядковым номером 1, а 1 января 2008 — порядковым номером 39448, так как он составляет 39 448 дней после 1 января 1900. Microsoft Excel для Macintosh использует в качестве значения по умолчанию другую систему дат. </para>
          <para>Дата соглашения — это дата приобретения покупателем купона, например облигации. Дата погашения — это дата истечения срока действия купона. Например, предположим, что 30-летний облигация составляет 1 января 2008 г., и позднее он покупается покупателем за шесть месяцев. Дата выпуска — 1 января 2008 года, Дата расчета — 1 июля 2008, а срок погашения — 1 января 2038 г., что составляет 30 лет после даты выпуска 1 января, 2008 года. </para>
          <para>Все аргументы усекаются до целых. </para>
          <para>Если дата_согл или дата_вступл_в_силу не является допустимой датой, <b>ДАТАКУПОНДО</b> создает ошибку. </para>
          <para>Если частота является любым числом, отличным от 1, 2 или 4, <b>ДАТАКУПОНДО</b> создает ошибку. </para>
          <para>Если базис &lt; 0 или базис &gt; 4, <b>ДАТАКУПОНДО</b> создает ошибку. </para>
          <para>Если дата_соглашения ≥ дата_вступления_в_силу, <b>ДАТАКУПОНДО</b> создает ошибку.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Covar">
      <MemberSignature Language="C#" Value="public double Covar (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Covar([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Covar(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Covar (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Covar(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16692)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Первый диапазон целых чисел.</param>
        <param name="Arg2">Второй диапазон целых чисел.</param>
        <summary>Возвращает ковариацию среднее арифметическое продуктов отклонений для каждой из этих точек данных.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>эта функция заменена одной или несколькими новыми функциями, которые могут улучшить точность и имена которых лучше отражают их использование. Эта функция по-прежнему доступна для совместимости с более ранними версиями Excel. Тем не менее, если обратная совместимость не требуется, рекомендуется использовать новые функции, так как они точнее описывают их функциональность. Более подробную информацию о новых функциях можно узнать <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Covariance_P(System.Object,System.Object)" /> в <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Covariance_S(System.Object,System.Object)" /> разделе метод и.</para>
          <para>Используйте ковариацию для определения связи между двумя наборами данных. Например, вы можете проверить, повышают ли доходы больше уровней образования. </para>
          <para>Аргументы должны быть либо числами, либо именами, массивами или ссылками, содержащими числа. </para>
          <para>Если аргумент array или Reference содержит текст, логические значения или пустые ячейки, эти значения игнорируются; Тем не менее, ячейки с нулевым значением включены. </para>
          <para>Если <paramref name="Arg1" /> и <paramref name="Arg2" /> число точек данных различное, <b>Ковар</b> создает ошибку. </para>
          <para>Если один <paramref name="Arg1" /> или <paramref name="Arg2" /> пуст, <b>Ковар</b> создает ошибку. </para>
          <para>Ковариация: </para>
          <para>Рисунок 1: формула для ковариации</para>
          <para> </para>
          <para> </para>
          <para>где x и y — пример среднего значения (массив1) и СРЗНАЧ (массив2), а n — это размер выборки.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Covariance_P">
      <MemberSignature Language="C#" Value="public double Covariance_P (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Covariance_P([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Covariance_P(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Covariance_P (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Covariance_P(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16876)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Первый диапазон целых чисел.</param>
        <param name="Arg2">Второй диапазон целых чисел.</param>
        <summary>Возвращает ковариацию Генеральной совокупности, в среднем на продукты отклонений для каждой из этих точек данных.</summary>
        <returns>To be added.</returns>
        <remarks><para>Для определения связи между двумя наборами данных используйте <b>Covariance_P</b> . Например, вы можете проверить, повышают ли доходы больше уровней образования.</para>
          <para>Аргументы должны быть либо числами, либо именами, массивами или ссылками, содержащими числа. </para>
          <para>Если аргумент array или Reference содержит текст, логические значения или пустые ячейки, эти значения игнорируются; Тем не менее, ячейки с нулевым значением включены. </para>
          <para>Если <paramref name="Arg1" /> и <paramref name="Arg2" /> число точек данных различное, <b>Covariance_P</b> создает ошибку. </para>
          <para>Если один <paramref name="Arg1" /> или <paramref name="Arg2" /> пуст, <b>Covariance_P</b> генерирует ошибку. </para>
          <para>Ковариация: </para>
          <para>Рисунок 1: формула для ковариации</para>
          <para> </para>
          <para> </para>
          <para>где x и y — пример среднего значения (массив1) и СРЗНАЧ (массив2), а n — это размер выборки.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Covariance_S">
      <MemberSignature Language="C#" Value="public double Covariance_S (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Covariance_S([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Covariance_S(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Covariance_S (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Covariance_S(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16877)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Массив1 — первый диапазон целых чисел.</param>
        <param name="Arg2">Массив2 — второй диапазон целых чисел в ячейке.</param>
        <summary>Возвращает образец ковариации — среднее арифметическое продуктов отклонений для каждой из этих точек данных в двух наборах данных.</summary>
        <returns>To be added.</returns>
        <remarks><para>Аргументы должны быть либо числами, либо именами, массивами или ссылками, содержащими числа. </para>
          <para>Если аргумент array или Reference содержит текст, логические значения или пустые ячейки, эти значения игнорируются; Тем не менее, ячейки с нулевым значением включены. </para>
          <para>Если массив1 и массив2 имеют различное число точек данных, <b>Covariance_S</b> возвращает значение ошибки #N/a. </para>
          <para>Если массив1 или массив2 пуст или содержит только 1 точка данных, <b>Covariance_S</b> возвращает #DIV/0! значение ошибки.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.WorksheetFunction.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает 32-битное целое число, указывающее на приложение, в котором объект был создан. <b>Целое число</b> , доступное только для чтения (int в C#).</summary>
        <value>To be added.</value>
        <remarks><para>Если объект был создан в Microsoft Excel, это свойство возвращает строку КСЦЕЛ, которая эквивалентна шестнадцатеричному числу 5843454C. Свойство <b>Creator</b> предназначено для использования в Microsoft Excel для Macintosh, где каждое приложение содержит код создателя из четырех символов. Например, в Microsoft Excel есть код создателя КСЦЕЛ.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CritBinom">
      <MemberSignature Language="C#" Value="public double CritBinom (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 CritBinom([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.CritBinom(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function CritBinom (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double CritBinom(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16662)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число испытаний Бернулли.</param>
        <param name="Arg2">Вероятность успеха в каждой пробной версии.</param>
        <param name="Arg3">Значение критерия.</param>
        <summary>Возвращает наименьшее значение, для которого интегральное биномиальное распределение превышает или равно значению условия.</summary>
        <returns>To be added.</returns>
        <remarks><para>Используйте эту функцию для приложений контроля качества. Например, используйте функцию <b>КРИТБИНОМ</b> , чтобы определить наибольшее количество дефектных частей, которые могут быть запущены из строки сборки, не отклоняя весь лот.</para>
          <para>Если какой-либо из аргументов не является числом, <b>КРИТБИНОМ</b> создает ошибку. </para>
          <para>Если число_испытаний не является целым числом, оно усекается. </para>
          <para>Если число_испытаний &lt; 0, то <b>функция КРИТБИНОМ</b> создает ошибку. </para>
          <para>Если probability_s &lt; 0 или probability_s &gt; 1, то <b>функция КРИТБИНОМ</b> создает ошибку. </para>
          <para>Если альфа &lt; 0 или Alpha &gt; 1, то <b>функция КРИТБИНОМ</b> создает ошибку.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Csc">
      <MemberSignature Language="C#" Value="public double Csc (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Csc([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Csc(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Csc (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Csc(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16936)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Угол в радианах, для которого требуется получить косеканс.</param>
        <summary>Возвращает косеканс угла.</summary>
        <returns><b>DOUBLE</b></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Csch">
      <MemberSignature Language="C#" Value="public double Csch (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Csch([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Csch(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Csch (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Csch(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16937)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Угол в радианах, для которого требуется получить гиперболический косеканс.</param>
        <summary>Возвращает гиперболический косеканс угла.</summary>
        <returns><b>DOUBLE</b></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CumIPmt">
      <MemberSignature Language="C#" Value="public double CumIPmt (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 CumIPmt([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.CumIPmt(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CumIPmt (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Arg5 As Object, Arg6 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double CumIPmt(System::Object ^ Arg1, System::Object ^ Arg2, System::Object ^ Arg3, System::Object ^ Arg4, System::Object ^ Arg5, System::Object ^ Arg6);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16832)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Процентная ставка.</param>
        <param name="Arg2">Общее число периодов выплат.</param>
        <param name="Arg3">Текущее значение.</param>
        <param name="Arg4">Первый период вычисления. Платежные периоды нумеруются начиная с 1.</param>
        <param name="Arg5">Последний период вычисления.</param>
        <param name="Arg6">Время оплаты.</param>
        <summary>Возвращает кумулятивный процент, уплаченный по ссуде между start_period и end_period.</summary>
        <returns>To be added.</returns>
        <remarks><para>В приведенных ниже таблицах перечислены <paramref name="Arg6" />значения, используемые в.</para>
          <list type="table">
            <item>
              <term>0 (ноль)</term>
              <description>Платеж в конце периода</description>
            </item>
            <item>
              <term>1,1</term>
              <description>Платеж в начале периода</description>
            </item>
          </list>
          <para>Убедитесь, что вы последовательны в выборе единиц измерения, используемых для указания коэффициента и кпер. Если вы вносите ежемесячные платежи по ссуде из четырех лет с годовой процентной ставкой 12 процентов, используйте 12%/12 для ставки и 4 * <paramref name="Arg2" />12 для. Если вы вносите годовые платежи в одну и ту же ссуду, используйте 12% <paramref name="Arg2" />для ставки и 4 для. </para>
          <para>
            <paramref name="Arg2" />, <paramref name="Arg4" />, <paramref name="Arg5" />, и тип усекаются до целых. </para>
          <para>Если ставка ≤ 0, <paramref name="Arg2" /> ≤ 0 или <paramref name="Arg3" /> ≤ 0, <b>ОБЩПЛАТ</b> создает ошибку. </para>
          <para>Если <paramref name="Arg4" /> &lt; 1, <paramref name="Arg5" /> &lt; <paramref name="Arg4" /> &gt; 1 или <paramref name="Arg5" /> <b>ОБЩПЛАТ</b> генерирует ошибку. </para>
          <para>Если <paramref name="Arg6" /> это любое число, отличное от 0 или 1, <b>ОБЩПЛАТ</b> создает ошибку.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CumPrinc">
      <MemberSignature Language="C#" Value="public double CumPrinc (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 CumPrinc([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.CumPrinc(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CumPrinc (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Arg5 As Object, Arg6 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double CumPrinc(System::Object ^ Arg1, System::Object ^ Arg2, System::Object ^ Arg3, System::Object ^ Arg4, System::Object ^ Arg5, System::Object ^ Arg6);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16831)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Процентная ставка.</param>
        <param name="Arg2">Общее число периодов выплат.</param>
        <param name="Arg3">Текущее значение.</param>
        <param name="Arg4">Первый период вычисления. Платежные периоды нумеруются начиная с 1.</param>
        <param name="Arg5">Последний период вычисления.</param>
        <param name="Arg6">Последний период вычисления.</param>
        <summary>Возвращает кумулятивный субъект, уплаченный по ссуде между start_period и end_period.</summary>
        <returns>To be added.</returns>
        <remarks><para>В приведенных ниже таблицах перечислены <paramref name="Arg6" />значения, используемые в.</para>
          <list type="table">
            <item>
              <term>0 (ноль)</term>
              <description>Платеж в конце периода</description>
            </item>
            <item>
              <term>1,1</term>
              <description>Платеж в начале периода</description>
            </item>
          </list>
          <para>Убедитесь, что вы последовательны в выборе единиц измерения, используемых для указания коэффициента и кпер. Если вы вносите ежемесячные платежи по ссуде из четырех лет с годовой процентной ставкой 12 процентов, используйте 12%/12 для ставки и 4 * <paramref name="Arg2" />12 для. Если вы вносите годовые платежи в одну и ту же ссуду, используйте 12% <paramref name="Arg2" />для ставки и 4 для. </para>
          <para>
            <paramref name="Arg2" />, <paramref name="Arg4" />, <paramref name="Arg5" />, и тип усекаются до целых. </para>
          <para>Если ставка ≤ 0, <paramref name="Arg2" /> ≤ 0 или <paramref name="Arg3" /> ≤ 0, <b>ОБЩДОХОД</b> создает ошибку. </para>
          <para>Если <paramref name="Arg4" /> &lt; 1, <paramref name="Arg5" /> &lt; <paramref name="Arg4" /> &gt; 1 или <paramref name="Arg5" /> <b>ОБЩДОХОД</b> генерирует ошибку. </para>
          <para>Если <paramref name="Arg6" /> это любое число, отличное от 0 или 1, <b>ОБЩДОХОД</b> создает ошибку.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DAverage">
      <MemberSignature Language="C#" Value="public double DAverage (Microsoft.Office.Interop.Excel.Range Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 DAverage([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DAverage(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DAverage (Arg1 As Range, Arg2 As Object, Arg3 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double DAverage(Microsoft::Office::Interop::Excel::Range ^ Arg1, System::Object ^ Arg2, System::Object ^ Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16426)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Диапазон ячеек, составляющий список или базу данных. База данных — это список связанных данных, в котором строки связанной информации представляют собой записи, а столбцы данных — поля. Первая строка списка содержит подписи для каждого столбца.</param>
        <param name="Arg2">Указывает, какой столбец используется в функции. Введите заголовок столбца между двойными кавычками, например "Age" или "yield", или числом (без кавычек), которое представляет позицию столбца в списке: 1 для первого столбца, 2 для второго столбца и т. д.</param>
        <param name="Arg3">Диапазон ячеек, который содержит заданные условия. Можно использовать любой диапазон для аргумента условия_отбора, если он включает по крайней мере одну подпись столбца и по крайней мере одну ячейку под меткой столбца, в которой указано условие для столбца.</param>
        <summary>Усредняет значения в столбце списка или базы данных, которые совпадают с заданными условиями.</summary>
        <returns>To be added.</returns>
        <remarks><para>Так как знак равенства используется для обозначения формулы при вводе текста или значения в ячейке, Microsoft Excel оценивает введенные значения; Однако это может привести к неожиданным результатам фильтра. Чтобы указать оператор сравнения на равенство для текста или значения, введите критерии в виде строкового выражения в соответствующую ячейку в диапазоне условий: </para>
          <para>= ' ' = запись ' '</para>
          <para>Где находится текст или значение, которое нужно найти. Пример:</para>
          <list type="table">
            <item>
              <term>= "= Белов"</term>
              <description>= Белова</description>
            </item>
            <item>
              <term>= "= 3000"</term>
              <description>= 3000</description>
            </item>
          </list>
          <para>При фильтрации текстовых данных Excel не различает прописные и строчные буквы. Тем не менее, с помощью формулы можно выполнять поиск с учетом регистра.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Days">
      <MemberSignature Language="C#" Value="public double Days (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Days([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Days(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Days (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Days(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16957)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">start_date (arg2) и end_date (arg1) — это две даты, количество дней между которыми нужно узнать.</param>
        <param name="Arg2">start_date (arg2) и end_date (arg1) — это две даты, количество дней между которыми нужно узнать.</param>
        <summary>Возвращает количество дней между двумя датами.</summary>
        <returns><b>DOUBLE</b></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Days360">
      <MemberSignature Language="C#" Value="public double Days360 (object Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Days360([in]object Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Days360(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Days360 (Arg1 As Object, Arg2 As Object, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16604)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Две даты, количество дней между которыми необходимо определить. Если start_date (arg1) происходит после end_date (arg2), дней 360 возвращает отрицательное число. Даты следует вводить с помощью функции Дата или в качестве результатов других формул или функций.</param>
        <param name="Arg2">Две даты, количество дней между которыми необходимо определить. Если start_date (arg1) происходит после end_date (arg2), дней 360 возвращает отрицательное число. Даты следует вводить с помощью функции Дата или в качестве результатов других формул или функций.</param>
        <param name="Arg3">Логическое значение, указывающее, следует ли использовать в вычислениях американский или Европейский метод.</param>
        <summary>Возвращает количество дней между двумя датами на основе 360-дневного года (12 30-день месяцев), которые используются в некоторых вычислениях учета.</summary>
        <returns>To be added.</returns>
        <remarks><para>Используйте эту функцию, чтобы рассчитать платежи, если ваша система учета основана на 12 30-дневных месяцах. В приведенных ниже таблицах содержатся <paramref name="Arg3" />значения для параметров.</para>
          <list type="table">
            <item>
              <term>
                <b>false</b> или опущено</term>
              <description>Американский метод (NASD). Если дата начала представляет собой 31 месяц, она становится равна 30-му тому же месяцу. Если дата окончания соответствует 31 месяцу, а Дата начала предшествует 30-му месяцу, конечная дата становится равна первой из следующих месяцев. в противном случае Дата окончания будет равна 30 месяцам того же месяца.</description>
            </item>
            <item>
              <term>
                <b>относится</b>
              </term>
              <description>Европейский метод. Даты начала и окончания, которые происходят на 31 месяц, становятся 30 раз в один и тот же месяц.</description>
            </item>
          </list>
          <para>Microsoft Excel хранит даты как последовательные серийные номера, чтобы их можно было использовать в вычислениях. По умолчанию 1 января 1900 года является порядковым номером 1, а 1 января 2008 — порядковым номером 39448, так как он составляет 39 448 дней после 1 января 1900. Microsoft Excel для Macintosh использует в качестве значения по умолчанию другую систему дат.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Db">
      <MemberSignature Language="C#" Value="public double Db (double Arg1, double Arg2, double Arg3, double Arg4, object Arg5);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Db([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]float64 Arg4, [in]object Arg5) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Db(System.Double,System.Double,System.Double,System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Db (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Double, Optional Arg5 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16631)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Double" />
        <Parameter Name="Arg5" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Нач_стоимость — начальная стоимость актива.</param>
        <param name="Arg2">Остаточная_стоимость — значение в конце амортизации (иногда называется остаточной стоимостью актива).</param>
        <param name="Arg3">Life — количество периодов, в течение которых Амортизация актива (иногда называется сроком эксплуатации актива).</param>
        <param name="Arg4">Period (период) — период, для которого требуется вычислить амортизацию. Период должен использовать те же единицы, что и Life.</param>
        <param name="Arg5">Month — количество месяцев в первом году. Если аргумент month опущен, предполагается, что он равен 12.</param>
        <summary>Возвращает амортизацию актива за указанный период, используя метод фиксированного уменьшения остатка.</summary>
        <returns>To be added.</returns>
        <remarks><para>Метод фиксированного уменьшения остатка вычисляет амортизацию по фиксированной частоте. В базе данных используются следующие формулы для вычисления амортизации за период:</para>
          <para>(нач_стоимость-общая амортизация за предшествующие периоды) * ставка</para>
          <para>где:</para>
          <para>ставка = 1 ((остаточная_стоимость-затраты) ^ (1/время_эксплуатации)), с округлением до трех десятичных разрядов</para>
          <para>Амортизация для первого и последнего периодов является особым случаем. Для первого периода в базе данных используется следующая формула:</para>
          <para>затраты * ставка * месяц/12</para>
          <para>Для последнего периода в базе данных используется следующая формула:</para>
          <para>((стоимость — общая амортизация за предшествующие периоды) * Rate * (12-месяц))/12</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Dbcs">
      <MemberSignature Language="C#" Value="public string Dbcs (string Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Dbcs([in]string Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Dbcs(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dbcs (Arg1 As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Dbcs(System::String ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16599)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Arg1">Текст или ссылка на ячейку, содержащую текст, который требуется изменить.</param>
        <summary>Преобразует буквы половинной ширины (однобайтовые) в строке символов в полноширинные (двухбайтовые) символы. Имя функции (и символы, которые она преобразует) зависит от языковых параметров.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DCount">
      <MemberSignature Language="C#" Value="public double DCount (Microsoft.Office.Interop.Excel.Range Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 DCount([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DCount(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DCount (Arg1 As Range, Arg2 As Object, Arg3 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double DCount(Microsoft::Office::Interop::Excel::Range ^ Arg1, System::Object ^ Arg2, System::Object ^ Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16424)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Database — диапазон ячеек, составляющий список или базу данных. База данных — это список связанных данных, в котором строки связанной информации представляют собой записи, а столбцы данных — поля. Первая строка списка содержит подписи для каждого столбца.</param>
        <param name="Arg2">Field — указывает, какой столбец используется в функции. Введите заголовок столбца между двойными кавычками, например "Age" или "yield", или числом (без кавычек), которое представляет позицию столбца в списке: 1 для первого столбца, 2 для второго столбца и т. д.</param>
        <param name="Arg3">Условия_отбора — диапазон ячеек, который содержит заданные условия. Можно использовать любой диапазон для аргумента критерия, если аргумент включает по крайней мере одну подпись столбца и по крайней мере одну ячейку под меткой столбца, в которой указано условие для столбца.</param>
        <summary>Подсчитывает количество ячеек, содержащих числа, в столбце списка или базы данных, которые совпадают с заданными условиями.</summary>
        <returns>To be added.</returns>
        <remarks><para>Так как знак равенства используется для обозначения формулы при вводе текста или значения в ячейке, Microsoft Excel оценивает введенные значения; Однако это может привести к неожиданным результатам фильтра. Чтобы указать оператор сравнения на равенство для текста или значения, введите критерии в виде строкового выражения в соответствующую ячейку в диапазоне условий: </para>
          <para>= ' ' = запись ' '</para>
          <para>Где запись это текст или значение, которое требуется найти. Пример:</para>
          <list type="table">
            <item>
              <term>= "= Белов"</term>
              <description>= Белова</description>
            </item>
            <item>
              <term>= "= 3000"</term>
              <description>= 3000</description>
            </item>
          </list>
          <para>При фильтрации текстовых данных Excel не различает прописные и строчные буквы. Тем не менее, с помощью формулы можно выполнять поиск с учетом регистра.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DCountA">
      <MemberSignature Language="C#" Value="public double DCountA (Microsoft.Office.Interop.Excel.Range Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 DCountA([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DCountA(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DCountA (Arg1 As Range, Arg2 As Object, Arg3 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double DCountA(Microsoft::Office::Interop::Excel::Range ^ Arg1, System::Object ^ Arg2, System::Object ^ Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16583)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Database — диапазон ячеек, составляющий список или базу данных. База данных — это список связанных данных, в котором строки связанной информации представляют собой записи, а столбцы данных — поля. Первая строка списка содержит подписи для каждого столбца.</param>
        <param name="Arg2">Field — указывает, какой столбец используется в функции. Введите заголовок столбца между двойными кавычками, например "Age" или "yield", или числом (без кавычек), которое представляет позицию столбца в списке: 1 для первого столбца, 2 для второго столбца и т. д.</param>
        <param name="Arg3">Условия_отбора — диапазон ячеек, который содержит заданные условия. Можно использовать любой диапазон для аргумента условия_отбора, если он включает по крайней мере одну подпись столбца и по крайней мере одну ячейку под меткой столбца, в которой указано условие для столбца.</param>
        <summary>Подсчитывает количество непустых ячеек в столбце списка или базы данных, которые совпадают с заданными условиями.</summary>
        <returns>To be added.</returns>
        <remarks><para>Так как знак равенства используется для обозначения формулы при вводе текста или значения в ячейке, Microsoft Excel оценивает введенные значения; Однако это может привести к неожиданным результатам фильтра. Чтобы указать оператор сравнения на равенство для текста или значения, введите критерии в виде строкового выражения в соответствующую ячейку в диапазоне условий: </para>
          <para>= ' ' = запись ' '</para>
          <para>Где запись это текст или значение, которое требуется найти. Пример:</para>
          <list type="table">
            <item>
              <term>= "= Белов"</term>
              <description>= Белова</description>
            </item>
            <item>
              <term>= "= 3000"</term>
              <description>= 3000</description>
            </item>
          </list>
          <para>При фильтрации текстовых данных Excel не различает прописные и строчные буквы. Тем не менее, с помощью формулы можно выполнять поиск с учетом регистра.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Ddb">
      <MemberSignature Language="C#" Value="public double Ddb (double Arg1, double Arg2, double Arg3, double Arg4, object Arg5);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Ddb([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]float64 Arg4, [in]object Arg5) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Ddb(System.Double,System.Double,System.Double,System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ddb (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Double, Optional Arg5 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16528)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Double" />
        <Parameter Name="Arg5" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Нач_стоимость — начальная стоимость актива.</param>
        <param name="Arg2">Остаточная_стоимость — значение в конце амортизации (иногда называется остаточной стоимостью актива). Это значение может быть равно 0.</param>
        <param name="Arg3">Life — количество периодов, в течение которых Амортизация актива (иногда называется сроком эксплуатации актива).</param>
        <param name="Arg4">Period (период) — период, для которого требуется вычислить амортизацию. Период должен использовать те же единицы, что и Life.</param>
        <param name="Arg5">Factor — частота, с которой баланс отклоняется. Если параметр Factor опущен, предполагается, что он равен 2 (метод двойного уменьшения остатка).</param>
        <summary>Возвращает сумму амортизации актива за указанный период, используя метод двойного уменьшения остатка или другой указанный метод.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>все пять аргументов должны быть положительными числами.</para>
          <para>Метод двойной амортизации убывающего баланса вычисляет амортизацию с ускоренной ставкой. Амортизация максимальна за первый период и уменьшается в последующие периоды. Для вычисления амортизации за период с помощью <b>DDB</b> используется следующая формула:</para>
          <code>Min( (cost - total depreciation from prior periods) * (factor/life), (cost - salvage -  total depreciation from prior periods) )
</code>
          <para>Изменение коэффициента, если вы не хотите использовать метод двойного уменьшения остатка. </para>
          <para>Используйте <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Vdb(System.Double,System.Double,System.Double,System.Double,System.Double,System.Object,System.Object)" /> функцию, если вы хотите переключиться на метод амортизации методом SL, когда амортизация превышает расчет снижающегося остатка.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Dec2Bin">
      <MemberSignature Language="C#" Value="public string Dec2Bin (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Dec2Bin([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Dec2Bin(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dec2Bin (Arg1 As Object, Optional Arg2 As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16771)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Number — десятичное целое число, которое требуется преобразовать. Если число отрицательно, допустимые значения для параметра Place игнорируются, а <b>дес.</b> возвращает 10-разрядный (10-разрядный) двоичный номер, в котором старший бит является знаковым битом. Оставшиеся 9 бит являются битами величины. Отрицательные числа представлены с помощью нотации с двумя комплементарными числами.</param>
        <param name="Arg2">Разрядность — количество используемых символов. Если разрядность опущена, <b>дес.</b> использует минимальное необходимое количество символов. Разрядность удобно использовать для заполнения возвращаемого значения с помощью ведущих нулей (нулей).</param>
        <summary>Преобразует десятичное число в двоичное.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если Number &lt; – 512 или Number &gt; 511, <b>дес.</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если число не является числом, <b>дес.</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если для <b>дес.</b> требуется больше символов, то возвращается #NUM! значение ошибки. </para>
          <para>Если разрядность не целое число, то оно усекается. </para>
          <para>Если разрядность не число, то <b>дес.</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если разрядность нулевое или отрицательное, <b>дес.</b> Возвращает #NUM! значение ошибки.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Dec2Hex">
      <MemberSignature Language="C#" Value="public string Dec2Hex (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Dec2Hex([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Dec2Hex(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dec2Hex (Arg1 As Object, Optional Arg2 As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16772)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Number — десятичное целое число, которое требуется преобразовать. Если число отрицательно, разряды игнорируются, а дес., <b>дес</b> . возвращает 10-разрядное (40-разрядное) шестнадцатеричное число, в котором старший бит является знаковым битом. Остальные 39 бит являются битами. Отрицательные числа представлены с помощью нотации с двумя комплементарными числами.</param>
        <param name="Arg2">Разрядность — количество используемых символов. Если разрядность опущена, то <b>дес</b> . использует минимальное необходимое количество символов. Разрядность удобно использовать для заполнения возвращаемого значения с помощью ведущих нулей (нулей).</param>
        <summary>Преобразует десятичное число в шестнадцатеричное.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если Number &lt; – 549 755 813 888 или Number &gt; 549 755 813 887, то <b>дес</b> . Возвращает #NUM! значение ошибки. </para>
          <para>Если число не является числом, то <b>дес</b> . возвращает #VALUE! значение ошибки. </para>
          <para>Если для параметра <b>дес</b> требуется больше символов, он Возвращает #NUM! значение ошибки. </para>
          <para>Если разрядность не целое число, то оно усекается. </para>
          <para>Если разрядность не число, то <b>дес</b> . возвращает #VALUE! значение ошибки. </para>
          <para>Если разрядность отрицательна, то <b>дес</b> . Возвращает #NUM! значение ошибки.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Dec2Oct">
      <MemberSignature Language="C#" Value="public string Dec2Oct (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Dec2Oct([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Dec2Oct(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dec2Oct (Arg1 As Object, Optional Arg2 As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16773)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Number — десятичное целое число, которое требуется преобразовать. Если число отрицательно, разряды игнорируются, а дес. в. <b>дес</b> возвращает 10-разрядное (30-разрядное) восьмеричное число, в котором старший бит является знаковым битом. Остальные 29 бит являются битами. Отрицательные числа представлены с помощью нотации с двумя комплементарными числами.</param>
        <param name="Arg2">Разрядность — количество используемых символов. Если разрядность опущена, то в файле <b>дес</b> используется минимальное количество необходимых символов. Разрядность удобно использовать для заполнения возвращаемого значения с помощью ведущих нулей (нулей).</param>
        <summary>Преобразует десятичное число в восьмеричное.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если Number &lt; – 536 870 912 или Number &gt; 536 870 911, то <b>дес</b> . Возвращает #NUM! значение ошибки. </para>
          <para>Если число не число, то <b>дес</b> . возвращает #VALUE! значение ошибки. </para>
          <para>Если в файле <b>дес</b> требуется больше символов, он Возвращает #NUM! значение ошибки. </para>
          <para>Если разрядность не целое число, то оно усекается. </para>
          <para>Если разрядность не число, то ДЕС. в. <b>дес</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если разрядность отрицательна, то ДЕС. в. <b>дес</b> Возвращает #NUM! значение ошибки.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Decimal">
      <MemberSignature Language="C#" Value="public double Decimal (string Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Decimal([in]string Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Decimal(System.String,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Decimal (Arg1 As String, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Decimal(System::String ^ Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16956)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число, которое требуется преобразовать.</param>
        <param name="Arg2">Базовое основание преобразуемого числа.</param>
        <summary>Преобразует текстовое представление числа на основе заданной базы в десятичное число.</summary>
        <returns><b>DOUBLE</b></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Degrees">
      <MemberSignature Language="C#" Value="public double Degrees (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Degrees([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Degrees(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Degrees (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Degrees(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16727)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Угол — угол в радианах, который требуется преобразовать.</param>
        <summary>Преобразует радианы в градусы.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delta">
      <MemberSignature Language="C#" Value="public double Delta (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Delta([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Delta(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Delta (Arg1 As Object, Optional Arg2 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16802)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число1 — первый номер.</param>
        <param name="Arg2">Число2 — второе число. Если опущено, то аргумент число2 считается равным нулю.</param>
        <summary>Проверяет, равны ли два значения. Возвращает 1, если число1 = число2; Возвращает значение 0 в противном случае.</summary>
        <returns>To be added.</returns>
        <remarks><para>Эта функция используется для фильтрации набора значений. Например, суммируя несколько функций <b>Delta</b> , вы вычисляете количество равных пар. Эта функция также называется функцией Delta Кронеккер.</para>
          <para>Если число1 не число, то <b>Дельта</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если number2 не число, то <b>Дельта</b> возвращает #VALUE! значение ошибки.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DevSq">
      <MemberSignature Language="C#" Value="public double DevSq (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 DevSq([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DevSq(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DevSq (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16702)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число1, число2,... — от 1 до 30 аргументов, для которых требуется вычислить сумму квадратов отклонений. Вы также можете использовать один массив или ссылку на массив вместо аргументов, разделенных запятыми.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Возвращает сумму квадратов отклонений точек данных от выборочного среднего.</summary>
        <returns>To be added.</returns>
        <remarks><para>Аргументы могут быть числами или именами, массивами или ссылками, содержащими числа. </para>
          <para>Учитываются логические значения и текстовые представления чисел, которые вы вводите непосредственно в список аргументов. </para>
          <para>Если аргумент array или Reference содержит текст, логические значения или пустые ячейки, эти значения игнорируются; Тем не менее, ячейки с нулевым значением включены. </para>
          <para>Аргументы, которые являются значениями ошибки или текстом, не преобразуемым в числа, вызывают ошибки. </para>
          <para>Уравнение для суммы квадратов отклонений имеет следующий размер: </para>
          <para>Рисунок 1: Формула суммы квадратов отклонений</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DGet">
      <MemberSignature Language="C#" Value="public object DGet (Microsoft.Office.Interop.Excel.Range Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DGet([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DGet(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DGet (Arg1 As Range, Arg2 As Object, Arg3 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ DGet(Microsoft::Office::Interop::Excel::Range ^ Arg1, System::Object ^ Arg2, System::Object ^ Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16619)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Database — диапазон ячеек, составляющий список или базу данных. База данных — это список связанных данных, в котором строки связанной информации представляют собой записи, а столбцы данных — поля. Первая строка списка содержит подписи для каждого столбца.</param>
        <param name="Arg2">Field — указывает, какой столбец используется в функции. Введите заголовок столбца между двойными кавычками, например "Age" или "yield", или числом (без кавычек), которое представляет позицию столбца в списке: 1 для первого столбца, 2 для второго столбца и т. д.</param>
        <param name="Arg3">Условия_отбора — диапазон ячеек, который содержит заданные условия. Можно использовать любой диапазон для аргумента условия_отбора, если он включает по крайней мере одну подпись столбца и по крайней мере одну ячейку под меткой столбца, в которой указано условие для столбца.</param>
        <summary>Извлекает одно значение из столбца списка или базы данных, который соответствует заданным условиям.</summary>
        <returns>To be added.</returns>
        <remarks><para>Так как знак равенства используется для обозначения формулы при вводе текста или значения в ячейке, Microsoft Excel оценивает введенные значения; Однако это может привести к неожиданным результатам фильтра. Чтобы указать оператор сравнения на равенство для текста или значения, введите критерии в виде строкового выражения в соответствующую ячейку в диапазоне условий: </para>
          <para>= ' ' = запись ' '</para>
          <para>Где запись это текст или значение, которое требуется найти. Пример:</para>
          <list type="table">
            <item>
              <term>= "= Белов"</term>
              <description>= Белова</description>
            </item>
            <item>
              <term>= "= 3000"</term>
              <description>= 3000</description>
            </item>
          </list>
          <para>При фильтрации текстовых данных Excel не различает прописные и строчные буквы. Тем не менее, с помощью формулы можно выполнять поиск с учетом регистра.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Disc">
      <MemberSignature Language="C#" Value="public double Disc (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Disc([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Disc(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Disc (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Optional Arg5 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16819)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Дата_согл — Дата соглашения по ценным обозначением. Дата сопоставления безопасности — это дата после даты выпускной сделки, когда она передается покупателю.</param>
        <param name="Arg2">Дата_вступления_в_силу — срок погашения ценных бумаг. Срок погашения — это дата истечения срока действия системы безопасности.</param>
        <param name="Arg3">PR — Цена ценных бумаг на $100.</param>
        <param name="Arg4">Погашение — выкупная стоимость ценных бумаг на $100.</param>
        <param name="Arg5">Базис — используемый тип расчета дня.</param>
        <summary>Возвращает норму скидки для безопасности.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>для ввода дат используется функция Дата или результаты других формул или функций. Например, используйте DATE (2008, 5, 23) для 23-дневного дня мая 2008. Проблемы могут возникать, если даты вводятся как текст. </para>
          <para>Microsoft Excel хранит даты как последовательные серийные номера, чтобы их можно было использовать в вычислениях. По умолчанию 1 января 1900 года является порядковым номером 1, а 1 января 2008 — порядковым номером 39448, так как он составляет 39 448 дней после 1 января 1900. Microsoft Excel для Macintosh использует в качестве значения по умолчанию другую систему дат. </para>
          <para>Дата соглашения — это дата приобретения покупателем купона, например облигации. Дата погашения — это дата истечения срока действия купона. Например, предположим, что 30-летний облигация составляет 1 января 2008 г., и позднее он покупается покупателем за шесть месяцев. Дата выпуска — 1 января 2008 года, Дата расчета — 1 июля 2008, а срок погашения — 1 января 2038 г., 30 лет после даты выпуска 1 января 2008 г. </para>
          <para>Дата_согл, дата_вступл_в_силу и базис усекаются до целых. </para>
          <para>Если дата_согл или дата_вступл_в_силу не является допустимым порядковым номером даты, то параметр <b>CD</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если цена ≤ 0 или выкуп ≤ 0, то <b>возвращается #NUM</b> ! значение ошибки. </para>
          <para>Если базис &lt; 0 или базис &gt; 4, то параметр <b>CD</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если дата_соглашения ≥ дата_вступления_в_силу, то параметр <b>CD</b> Возвращает #NUM! значение ошибки. </para>
          <para>
            <b>Скидка</b> вычисляется следующим образом: </para>
          <para>Рисунок 1: формула для расчета метода для диска</para>
          <para> </para>
          <para> </para>
          <para>где:</para>
          <para>B — количество дней в году в зависимости от года.</para>
          <para>DSM = число дней между дата_согл и дата_вступл_в_силу.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DMax">
      <MemberSignature Language="C#" Value="public double DMax (Microsoft.Office.Interop.Excel.Range Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 DMax([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DMax(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DMax (Arg1 As Range, Arg2 As Object, Arg3 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double DMax(Microsoft::Office::Interop::Excel::Range ^ Arg1, System::Object ^ Arg2, System::Object ^ Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16428)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Database — диапазон ячеек, составляющий список или базу данных. База данных — это список связанных данных, в котором строки связанной информации представляют собой записи, а столбцы данных — поля. Первая строка списка содержит подписи для каждого столбца.</param>
        <param name="Arg2">Field — указывает, какой столбец используется в функции. Введите заголовок столбца между двойными кавычками, например "Age" или "yield", или числом (без кавычек), которое представляет позицию столбца в списке: 1 для первого столбца, 2 для второго столбца и т. д.</param>
        <param name="Arg3">Условия_отбора — диапазон ячеек, который содержит заданные условия. Можно использовать любой диапазон для аргумента условия_отбора, если он включает по крайней мере одну подпись столбца и по крайней мере одну ячейку под меткой столбца, в которой указано условие для столбца.</param>
        <summary>Возвращает наибольшее число в столбце списка или базы данных, которое соответствует заданным условиям.</summary>
        <returns>To be added.</returns>
        <remarks><para>Так как знак равенства используется для обозначения формулы при вводе текста или значения в ячейке, Microsoft Excel оценивает введенные значения; Однако это может привести к неожиданным результатам фильтра. Чтобы указать оператор сравнения на равенство для текста или значения, введите критерии в виде строкового выражения в соответствующую ячейку в диапазоне условий: </para>
          <para>= ' ' = запись ' '</para>
          <para>Где запись это текст или значение, которое требуется найти. Пример:</para>
          <list type="table">
            <item>
              <term>= "= Белов"</term>
              <description>= Белова</description>
            </item>
            <item>
              <term>= "= 3000"</term>
              <description>= 3000</description>
            </item>
          </list>
          <para>При фильтрации текстовых данных Excel не различает прописные и строчные буквы. Тем не менее, с помощью формулы можно выполнять поиск с учетом регистра.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DMin">
      <MemberSignature Language="C#" Value="public double DMin (Microsoft.Office.Interop.Excel.Range Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 DMin([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DMin(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DMin (Arg1 As Range, Arg2 As Object, Arg3 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double DMin(Microsoft::Office::Interop::Excel::Range ^ Arg1, System::Object ^ Arg2, System::Object ^ Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16427)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Database — диапазон ячеек, составляющий список или базу данных. База данных — это список связанных данных, в котором строки связанной информации представляют собой записи, а столбцы данных — поля. Первая строка списка содержит подписи для каждого столбца.</param>
        <param name="Arg2">Field — указывает, какой столбец используется в функции. Введите заголовок столбца между двойными кавычками, например "Age" или "yield", или числом (без кавычек), которое представляет позицию столбца в списке: 1 для первого столбца, 2 для второго столбца и т. д.</param>
        <param name="Arg3">Условия_отбора — диапазон ячеек, который содержит заданные условия. Можно использовать любой диапазон для аргумента условия_отбора, если он включает по крайней мере одну подпись столбца и по крайней мере одну ячейку под меткой столбца, в которой указано условие для столбца.</param>
        <summary>Возвращает наименьшее число в столбце списка или базы данных, которое соответствует заданным условиям.</summary>
        <returns>To be added.</returns>
        <remarks><para>Так как знак равенства используется для обозначения формулы при вводе текста или значения в ячейке, Microsoft Excel оценивает введенные значения; Однако это может привести к неожиданным результатам фильтра. Чтобы указать оператор сравнения на равенство для текста или значения, введите критерии в виде строкового выражения в соответствующую ячейку в диапазоне условий: </para>
          <para>= ' ' = запись ' '</para>
          <para>Где запись это текст или значение, которое требуется найти. Пример:</para>
          <list type="table">
            <item>
              <term>= "= Белов"</term>
              <description>= Белова</description>
            </item>
            <item>
              <term>= "= 3000"</term>
              <description>= 3000</description>
            </item>
          </list>
          <para>При фильтрации текстовых данных Excel не различает прописные и строчные буквы. Тем не менее, с помощью формулы можно выполнять поиск с учетом регистра.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Dollar">
      <MemberSignature Language="C#" Value="public string Dollar (double Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Dollar([in]float64 Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Dollar(System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dollar (Arg1 As Double, Optional Arg2 As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16397)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число — число, ссылка на ячейку, содержащую число, или формула, вычисление которой дает число.</param>
        <param name="Arg2">Число_знаков — количество цифр справа от десятичной точки. Если число_знаков отрицательно, то число округляется слева от десятичной точки. Если вы опускаете число_знаков, предполагается, что он равен 2.</param>
        <summary>Функция, описанная в этом разделе справки, преобразует число в текстовый формат и применяет обозначение денежной единицы. Имя функции (и символ, к которому она применяется) зависит от языковых параметров.</summary>
        <returns>To be added.</returns>
        <remarks><para>Основное различие между форматированием ячейки, содержащей число с командой Cells (меню "формат") и форматированием числа непосредственно с помощью функции <b>доллара</b> , заключается в том, что в <b>долларе</b> преобразуется результат в текст. Число, отформатированное с помощью команды Cells, по-прежнему является числом. Вы можете продолжать использовать числа, отформатированные в формулах, так как Microsoft Excel преобразует числа, введенные как текстовые <b>, в</b> числовые значения при расчете.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DollarDe">
      <MemberSignature Language="C#" Value="public double DollarDe (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 DollarDe([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DollarDe(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DollarDe (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double DollarDe(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16827)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Fractional_dollar-это число, выраженное в виде дроби.</param>
        <param name="Arg2">Дробь — целое число, используемое в качестве знаменателя дроби.</param>
        <summary>Преобразует цену в рублях, выраженную в виде дроби, в цену в рублях, выраженную в виде десятичного числа. Используйте рубль. дес для преобразования дробных номеров в долларах, таких как цены ценных бумаг, в десятичные числа.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если дробь не является целым числом, она усекается. </para>
          <para>Если дробь меньше 0, <b>рубль. дес</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если дробь равно 0, <b>рубль. дес</b> возвращает #DIV/0! значение ошибки.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DollarFr">
      <MemberSignature Language="C#" Value="public double DollarFr (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 DollarFr([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DollarFr(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DollarFr (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double DollarFr(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16828)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Decimal_dollar-это десятичное число.</param>
        <param name="Arg2">Дробь — целое число, используемое в качестве знаменателя дроби.</param>
        <summary>Преобразует цену в рублях, выраженную в виде десятичного числа, в цену в рублях, выраженную в виде дроби. Используйте рубль. дробь для преобразования десятичных чисел в дробные номера, например цены на ценные бумаги.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если дробь не является целым числом, она усекается. </para>
          <para>Если дробь меньше 0, <b>рубль. дробь</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если дробь равно 0, <b>рубль. дробь</b> возвращает #DIV/0! значение ошибки.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DProduct">
      <MemberSignature Language="C#" Value="public double DProduct (Microsoft.Office.Interop.Excel.Range Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 DProduct([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DProduct(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DProduct (Arg1 As Range, Arg2 As Object, Arg3 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double DProduct(Microsoft::Office::Interop::Excel::Range ^ Arg1, System::Object ^ Arg2, System::Object ^ Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16573)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Database — это диапазон ячеек, составляющий список или базу данных. База данных — это список связанных данных, в котором строки связанной информации представляют собой записи, а столбцы данных — поля. Первая строка списка содержит подписи для каждого столбца.</param>
        <param name="Arg2">Поле указывает используемый столбец в функции. Введите заголовок столбца между двойными кавычками, например "Age" или "yield", или числом (без кавычек), которое представляет позицию столбца в списке: 1 для первого столбца, 2 для второго столбца и т. д.</param>
        <param name="Arg3">Критерий — это диапазон ячеек, который содержит заданные условия. Можно использовать любой диапазон для аргумента условия_отбора, если он включает по крайней мере одну подпись столбца и по крайней мере одну ячейку под меткой столбца, в которой указано условие для столбца.</param>
        <summary>Умножает значения в столбце списка или базы данных, которые совпадают с заданными условиями.</summary>
        <returns>To be added.</returns>
        <remarks><para>Так как знак равенства используется для обозначения формулы при вводе текста или значения в ячейке, Microsoft Excel оценивает введенные значения; Однако это может привести к неожиданным результатам фильтра. Чтобы указать оператор сравнения на равенство для текста или значения, введите критерии в виде строкового выражения в соответствующую ячейку в диапазоне условий: </para>
          <para>= ' ' = запись ' '</para>
          <para>Где запись это текст или значение, которое требуется найти. Пример:</para>
          <list type="table">
            <item>
              <term>= "= Белов"</term>
              <description>= Белова</description>
            </item>
            <item>
              <term>= "= 3000"</term>
              <description>= 3000</description>
            </item>
          </list>
          <para>При фильтрации текстовых данных Excel не различает прописные и строчные буквы. Тем не менее, с помощью формулы можно выполнять поиск с учетом регистра.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DStDev">
      <MemberSignature Language="C#" Value="public double DStDev (Microsoft.Office.Interop.Excel.Range Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 DStDev([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DStDev(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DStDev (Arg1 As Range, Arg2 As Object, Arg3 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double DStDev(Microsoft::Office::Interop::Excel::Range ^ Arg1, System::Object ^ Arg2, System::Object ^ Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16429)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Database — диапазон ячеек, составляющий список или базу данных. База данных — это список связанных данных, в котором строки связанной информации представляют собой записи, а столбцы данных — поля. Первая строка списка содержит подписи для каждого столбца.</param>
        <param name="Arg2">Field — указывает, какой столбец используется в функции. Введите заголовок столбца между двойными кавычками, например "Age" или "yield", или числом (без кавычек), которое представляет позицию столбца в списке: 1 для первого столбца, 2 для второго столбца и т. д.</param>
        <param name="Arg3">Условия_отбора — диапазон ячеек, который содержит заданные условия. Можно использовать любой диапазон для аргумента условия_отбора, если он включает по крайней мере одну подпись столбца и по крайней мере одну ячейку под меткой столбца, в которой указано условие для столбца.</param>
        <summary>Оценивает стандартное отклонение для Генеральной совокупности на основе образца, используя числа в столбце списка или базы данных, которые совпадают с заданными условиями.</summary>
        <returns>To be added.</returns>
        <remarks><para>Так как знак равенства используется для обозначения формулы при вводе текста или значения в ячейке, Microsoft Excel оценивает введенные значения; Однако это может привести к неожиданным результатам фильтра. Чтобы указать оператор сравнения на равенство для текста или значения, введите критерии в виде строкового выражения в соответствующую ячейку в диапазоне условий: </para>
          <para>= ' ' = запись ' '</para>
          <para>Где запись это текст или значение, которое требуется найти. Пример:</para>
          <list type="table">
            <item>
              <term>= "= Белов"</term>
              <description>= Белова</description>
            </item>
            <item>
              <term>= "= 3000"</term>
              <description>= 3000</description>
            </item>
          </list>
          <para>При фильтрации текстовых данных Excel не различает прописные и строчные буквы. Тем не менее, с помощью формулы можно выполнять поиск с учетом регистра.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DStDevP">
      <MemberSignature Language="C#" Value="public double DStDevP (Microsoft.Office.Interop.Excel.Range Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 DStDevP([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DStDevP(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DStDevP (Arg1 As Range, Arg2 As Object, Arg3 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double DStDevP(Microsoft::Office::Interop::Excel::Range ^ Arg1, System::Object ^ Arg2, System::Object ^ Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16579)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Database — это диапазон ячеек, составляющий список или базу данных. База данных — это список связанных данных, в котором строки связанной информации представляют собой записи, а столбцы данных — поля. Первая строка списка содержит подписи для каждого столбца.</param>
        <param name="Arg2">Field — указывает, какой столбец используется в функции. Введите заголовок столбца между двойными кавычками, например "Age" или "yield", или числом (без кавычек), которое представляет позицию столбца в списке: 1 для первого столбца, 2 для второго столбца и т. д.</param>
        <param name="Arg3">Условия_отбора — диапазон ячеек, который содержит заданные условия. Можно использовать любой диапазон для аргумента условия_отбора, если он включает по крайней мере одну подпись столбца и по крайней мере одну ячейку под меткой столбца, в которой указано условие для столбца.</param>
        <summary>Вычисляет стандартное отклонение для Генеральной совокупности, используя числа в столбце списка или базы данных, которые совпадают с заданными условиями.</summary>
        <returns>To be added.</returns>
        <remarks><para>Так как знак равенства используется для обозначения формулы при вводе текста или значения в ячейке, Microsoft Excel оценивает введенные значения; Однако это может привести к неожиданным результатам фильтра. Чтобы указать оператор сравнения на равенство для текста или значения, введите критерии в виде строкового выражения в соответствующую ячейку в диапазоне условий: </para>
          <para>= ' ' = запись ' '</para>
          <para>Где запись это текст или значение, которое требуется найти. Пример:</para>
          <list type="table">
            <item>
              <term>= "= Белов"</term>
              <description>= Белова</description>
            </item>
            <item>
              <term>= "= 3000"</term>
              <description>= 3000</description>
            </item>
          </list>
          <para>При фильтрации текстовых данных Excel не различает прописные и строчные буквы. Тем не менее, с помощью формулы можно выполнять поиск с учетом регистра.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DSum">
      <MemberSignature Language="C#" Value="public double DSum (Microsoft.Office.Interop.Excel.Range Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 DSum([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DSum(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DSum (Arg1 As Range, Arg2 As Object, Arg3 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double DSum(Microsoft::Office::Interop::Excel::Range ^ Arg1, System::Object ^ Arg2, System::Object ^ Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16425)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Database — диапазон ячеек, составляющий список или базу данных. База данных — это список связанных данных, в котором строки связанной информации представляют собой записи, а столбцы данных — поля. Первая строка списка содержит подписи для каждого столбца.</param>
        <param name="Arg2">Field — указывает, какой столбец используется в функции. Введите заголовок столбца между двойными кавычками, например "Age" или "yield", или числом (без кавычек), которое представляет позицию столбца в списке: 1 для первого столбца, 2 для второго столбца и т. д.</param>
        <param name="Arg3">Условия_отбора — диапазон ячеек, который содержит заданные условия. Можно использовать любой диапазон для аргумента условия_отбора, если он включает по крайней мере одну подпись столбца и по крайней мере одну ячейку под меткой столбца, в которой указано условие для столбца.</param>
        <summary>Добавляет числа в столбец списка или базы данных, которые совпадают с заданными условиями.</summary>
        <returns>To be added.</returns>
        <remarks><para>Так как знак равенства используется для обозначения формулы при вводе текста или значения в ячейке, Microsoft Excel оценивает введенные значения; Однако это может привести к неожиданным результатам фильтра. Чтобы указать оператор сравнения на равенство для текста или значения, введите критерии в виде строкового выражения в соответствующую ячейку в диапазоне условий: </para>
          <para>= ' ' = запись ' '</para>
          <para>Где запись это текст или значение, которое требуется найти. Пример:</para>
          <list type="table">
            <item>
              <term>= "= Белов"</term>
              <description>= Белова</description>
            </item>
            <item>
              <term>= "= 3000"</term>
              <description>= 3000</description>
            </item>
          </list>
          <para>При фильтрации текстовых данных Excel не различает прописные и строчные буквы. Тем не менее, с помощью формулы можно выполнять поиск с учетом регистра.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy19">
      <MemberSignature Language="C#" Value="public object Dummy19 (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy19([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Dummy19(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy19 (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2827)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Зарезервировано для внутреннего использования.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy21">
      <MemberSignature Language="C#" Value="public double Dummy21 (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Dummy21([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Dummy21(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy21 (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Dummy21(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2826)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <summary>Зарезервировано для внутреннего использования.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public double Duration (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Duration([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Duration(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Duration (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Arg5 As Object, Optional Arg6 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16842)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Дата_согл — Дата соглашения по ценным обозначением. Дата сопоставления безопасности — это дата после даты выпускной сделки, когда она передается покупателю.</param>
        <param name="Arg2">Дата_вступления_в_силу — срок погашения ценных бумаг. Срок погашения — это дата истечения срока действия системы безопасности.</param>
        <param name="Arg3">Купон — годовая ставка для купонов по ценным обозначением.</param>
        <param name="Arg4">Доход — ежегодный доход по ценным бумагам.</param>
        <param name="Arg5">Периодичность — количество выплат по купонам за год. Для ежегодных выплат частота = 1; для полугодий частота = 2; для ежеквартальных выплат частота = 4.</param>
        <param name="Arg6">Базис — используемый тип расчета дня.</param>
        <summary>Возвращает Макаулэй длительность для предполагаемой номинальной стоимости $100. Продолжительность определяется как взвешенное среднее текущее значение денежных потоков и используется как мера отклика цены по облигации на изменения в доходе.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>для ввода дат используется функция Дата или результаты других формул или функций. Например, используйте DATE (2008, 5, 23) для 23-дневного дня мая 2008. Проблемы могут возникать, если даты вводятся как текст.</para>
          <list type="table">
            <item>
              <term>0 или опущен</term>
              <description>АМЕРИКАНСКИЙ (NASD) 30/360</description>
            </item>
            <item>
              <term>1,1</term>
              <description>Фактический/фактический</description>
            </item>
            <item>
              <term>2</term>
              <description>Фактический/360</description>
            </item>
            <item>
              <term>4</term>
              <description>Фактические/365</description>
            </item>
            <item>
              <term>4 </term>
              <description>Европейская 30/360</description>
            </item>
          </list>
          <para>Microsoft Excel хранит даты как последовательные серийные номера, чтобы их можно было использовать в вычислениях. По умолчанию 1 января 1900 года является порядковым номером 1, а 1 января 2008 — порядковым номером 39448, так как он составляет 39 448 дней после 1 января 1900. Microsoft Excel для Macintosh использует в качестве значения по умолчанию другую систему дат. </para>
          <para>Дата соглашения — это дата приобретения покупателем купона, например облигации. Дата погашения — это дата истечения срока действия купона. Например, предположим, что 30-летний облигация составляет 1 января 2008 г., и позднее он покупается покупателем за шесть месяцев. Дата выпуска — 1 января 2008 года, Дата расчета — 1 июля 2008, а срок погашения — 1 января 2038 г., что составляет 30 лет после даты выпуска 1 января, 2008 года. </para>
          <para>Дата_согл, дата_вступл_в_силу, частота и базис усекаются до целых. </para>
          <para>Если дата_согл или дата_вступл_в_силу не является допустимой датой, то <b>Duration</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если купон &lt; 0 или доход &lt; 0, то <b>Duration</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если частота является любым числом, отличным от 1, 2 или 4, то <b>Duration</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если базис &lt; 0 или базис &gt; 4, то <b>Duration</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если дата_соглашения ≥ дата_вступления_в_силу, то <b>Duration</b> Возвращает #NUM! значение ошибки.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DVar">
      <MemberSignature Language="C#" Value="public double DVar (Microsoft.Office.Interop.Excel.Range Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 DVar([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DVar(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DVar (Arg1 As Range, Arg2 As Object, Arg3 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double DVar(Microsoft::Office::Interop::Excel::Range ^ Arg1, System::Object ^ Arg2, System::Object ^ Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16431)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Database — диапазон ячеек, составляющий список или базу данных. База данных — это список связанных данных, в котором строки связанной информации представляют собой записи, а столбцы данных — поля. Первая строка списка содержит подписи для каждого столбца.</param>
        <param name="Arg2">Field — указывает, какой столбец используется в функции. Введите заголовок столбца между двойными кавычками, например "Age" или "yield", или числом (без кавычек), которое представляет позицию столбца в списке: 1 для первого столбца, 2 для второго столбца и т. д.</param>
        <param name="Arg3">Условия_отбора — диапазон ячеек, который содержит заданные условия. Можно использовать любой диапазон для аргумента условия_отбора, если он включает по крайней мере одну подпись столбца и по крайней мере одну ячейку под меткой столбца, в которой указано условие для столбца.</param>
        <summary>Оценивает дисперсию для Генеральной совокупности, используя числа в столбце списка или базы данных, которые совпадают с заданными условиями.</summary>
        <returns>To be added.</returns>
        <remarks><para>Так как знак равенства используется для обозначения формулы при вводе текста или значения в ячейке, Microsoft Excel оценивает введенные значения; Однако это может привести к неожиданным результатам фильтра. Чтобы указать оператор сравнения на равенство для текста или значения, введите критерии в виде строкового выражения в соответствующую ячейку в диапазоне условий: </para>
          <para>= ' ' = запись ' '</para>
          <para>Где запись это текст или значение, которое требуется найти. Пример:</para>
          <list type="table">
            <item>
              <term>= "= Белов"</term>
              <description>= Белова</description>
            </item>
            <item>
              <term>= "= 3000"</term>
              <description>= 3000</description>
            </item>
          </list>
          <para>При фильтрации текстовых данных Excel не различает прописные и строчные буквы. Тем не менее, с помощью формулы можно выполнять поиск с учетом регистра.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DVarP">
      <MemberSignature Language="C#" Value="public double DVarP (Microsoft.Office.Interop.Excel.Range Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 DVarP([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.DVarP(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DVarP (Arg1 As Range, Arg2 As Object, Arg3 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double DVarP(Microsoft::Office::Interop::Excel::Range ^ Arg1, System::Object ^ Arg2, System::Object ^ Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16580)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Database — диапазон ячеек, составляющий список или базу данных. База данных — это список связанных данных, в котором строки связанной информации представляют собой записи, а столбцы данных — поля. Первая строка списка содержит подписи для каждого столбца.</param>
        <param name="Arg2">Field — указывает, какой столбец используется в функции. Введите заголовок столбца между двойными кавычками, например "Age" или "yield", или числом (без кавычек), которое представляет позицию столбца в списке: 1 для первого столбца, 2 для второго столбца и т. д.</param>
        <param name="Arg3">Условия_отбора — диапазон ячеек, который содержит заданные условия. Можно использовать любой диапазон для аргумента условия_отбора, если он включает по крайней мере одну подпись столбца и по крайней мере одну ячейку под меткой столбца, в которой указано условие для столбца.</param>
        <summary>Вычисляет дисперсию для Генеральной совокупности, используя числа в столбце списка или базы данных, которые совпадают с заданными условиями.</summary>
        <returns>To be added.</returns>
        <remarks><para>Так как знак равенства используется для обозначения формулы при вводе текста или значения в ячейке, Microsoft Excel оценивает введенные значения; Однако это может привести к неожиданным результатам фильтра. Чтобы указать оператор сравнения на равенство для текста или значения, введите критерии в виде строкового выражения в соответствующую ячейку в диапазоне условий: </para>
          <para>= ' ' = запись ' '</para>
          <para>Где запись это текст или значение, которое требуется найти. Пример:</para>
          <list type="table">
            <item>
              <term>= "= Белов"</term>
              <description>= Белова</description>
            </item>
            <item>
              <term>= "= 3000"</term>
              <description>= 3000</description>
            </item>
          </list>
          <para>При фильтрации текстовых данных Excel не различает прописные и строчные буквы. Тем не менее, с помощью формулы можно выполнять поиск с учетом регистра.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EDate">
      <MemberSignature Language="C#" Value="public double EDate (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 EDate([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.EDate(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function EDate (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double EDate(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16833)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Start_date — Дата, представляющая дату начала. Даты следует вводить с помощью функции Дата или в качестве результатов других формул или функций. Например, используйте DATE (2008, 5, 23) для 23-дневного дня мая 2008. Проблемы могут возникать, если даты вводятся как текст.</param>
        <param name="Arg2">Months — количество месяцев до или после start_date. Положительное значение для месяцев дает будущую дату; отрицательное значение дает прошедшую дату.</param>
        <summary>Возвращает порядковый номер, представляющий дату, отстоящую на указанное число месяцев до или после указанной даты (start_date). Используйте ДАТАМЕС, чтобы рассчитать сроки погашения или сроки выполнения, которые попадают в тот же день месяца, что и Дата выпуска.</summary>
        <returns>To be added.</returns>
        <remarks><para>Microsoft Excel хранит даты как последовательные серийные номера, чтобы их можно было использовать в вычислениях. По умолчанию 1 января 1900 года является порядковым номером 1, а 1 января 2008 — порядковым номером 39448, так как он составляет 39 448 дней после 1 января 1900. Microsoft Excel для Macintosh использует в качестве значения по умолчанию другую систему дат. </para>
          <para>Если start_date не является допустимой датой, <b>ДАТАМЕС</b> возвращает значение #VALUE! значение ошибки. </para>
          <para>Если месяцы не являются целыми числами, оно усекается.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Effect">
      <MemberSignature Language="C#" Value="public double Effect (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Effect([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Effect(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Effect (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Effect(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16830)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Nominal_rate номинальной процентной ставки.</param>
        <param name="Arg2">Нпери — количество периодов в году.</param>
        <summary>Возвращает эффективную годовую процентную ставку с учетом номинальной годовой процентной ставки и количества периодов в году.</summary>
        <returns>To be added.</returns>
        <remarks><para>Нпери усекается до целого числа. </para>
          <para>Если любой из аргументов не является числом, то <b>результат</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если nominal_rate ≤ 0 или нпери &lt; 1, то <b>результатом</b> будет возврат #NUM! значение ошибки. </para>
          <para>
            <b>Результаты</b> рассчитываются следующим образом: </para>
          <para>Рисунок 1: формула для вычисления метода Effect</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeURL">
      <MemberSignature Language="C#" Value="public object EncodeURL (string Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EncodeURL([in]string Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.EncodeURL(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EncodeURL (Arg1 As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ EncodeURL(System::String ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16981)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Arg1">Текст, который необходимо закодировать.</param>
        <summary>URL кодирует аргумент.</summary>
        <returns><b>DOUBLE</b></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EoMonth">
      <MemberSignature Language="C#" Value="public double EoMonth (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 EoMonth([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.EoMonth(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function EoMonth (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double EoMonth(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16834)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Start_date — Дата, представляющая дату начала. Даты следует вводить с помощью функции Дата или в качестве результатов других формул или функций. Например, используйте DATE (2008, 5, 23) для 23-дневного дня мая 2008. Проблемы могут возникать, если даты вводятся как текст.</param>
        <param name="Arg2">Months — количество месяцев до или после start_date. Положительное значение для месяцев дает будущую дату; отрицательное значение дает прошедшую дату.</param>
        <summary>Возвращает порядковый номер последнего дня месяца, который равен указанному числу месяцев до или после start_date. Используйте КОНМЕСЯЦА, чтобы рассчитать сроки погашения или сроки выполнения, которые попадают в последний день месяца.</summary>
        <returns>To be added.</returns>
        <remarks><para>Microsoft Excel хранит даты как последовательные серийные номера, чтобы их можно было использовать в вычислениях. По умолчанию 1 января 1900 года является порядковым номером 1, а 1 января 2008 — порядковым номером 39448, так как он составляет 39 448 дней после 1 января 1900. Microsoft Excel для Macintosh использует в качестве значения по умолчанию другую систему дат. </para>
          <para>Если start_date не является допустимой датой, <b>КОНМЕСЯЦА</b> возвращает значение #NUM! значение ошибки. </para>
          <para>Если start_date плюс месяцы дает недопустимую дату, <b>КОНМЕСЯЦА</b> возвращает значение #NUM! значение ошибки.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Erf">
      <MemberSignature Language="C#" Value="public double Erf (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Erf([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Erf(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Erf (Arg1 As Object, Optional Arg2 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16807)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Lower_limit — Нижняя граница для интеграции <b>Фош</b>.</param>
        <param name="Arg2">Upper_limit — верхняя граница для интеграции <b>Фош</b>. Если этот параметр опущен, Фош интегрируется между нулем и lower_limit.</param>
        <summary>Возвращает функцию ошибки, интегрированную между lower_limit и upper_limit.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>эта функция заменена одной или несколькими новыми функциями, которые могут улучшить точность и имена которых лучше отражают их использование. Эта функция по-прежнему доступна для совместимости с более ранними версиями Excel. Тем не менее, если обратная совместимость не требуется, рекомендуется использовать новые функции, так как они точнее описывают их функциональность. Более подробную информацию о функции New можно узнать в <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Erf_Precise(System.Object)" /> методе.</para>
          <para>Если lower_limit не является числом, <b>Фош</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если lower_limit отрицательно, <b>Фош</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если upper_limit не является числом, <b>Фош</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если upper_limit отрицательно, <b>Фош</b> Возвращает #NUM! значение ошибки. </para>
          <para>Рисунок 1: формула для вычисления метода Фош</para>
          <para> </para>
          <para> </para>
          <para>Рисунок 2: уравнение для вычисления метода Фош</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Erf_Precise">
      <MemberSignature Language="C#" Value="public double Erf_Precise (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Erf_Precise([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Erf_Precise(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Erf_Precise (Arg1 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Erf_Precise(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16927)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Lower_limit — Нижняя граница для интеграции Фош.</param>
        <summary>Возвращает функцию ошибки, интегрированную между нулем и lower_limit.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если lower_limit не является числом, <b>Erf_Precise</b> создает ошибку. Если lower_limit отрицательно, <b>Erf_Precise</b> создает ошибку.</para>
          <para>Рисунок 1: уравнение для вычисления метода Erf_Precise</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ErfC">
      <MemberSignature Language="C#" Value="public double ErfC (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ErfC([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ErfC(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ErfC (Arg1 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double ErfC(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16808)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Первый аргумент.</param>
        <summary>Возвращает дополнительную функцию Фош, интегрированную между указанным параметром и бесконечностью.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>эта функция заменена одной или несколькими новыми функциями, которые могут улучшить точность и имена которых лучше отражают их использование. Эта функция по-прежнему доступна для совместимости с более ранними версиями Excel. Тем не менее, если обратная совместимость не требуется, рекомендуется использовать новые функции, так как они точнее описывают их функциональность. Более подробную информацию о функции New можно узнать в <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ErfC_Precise(System.Object)" /> методе.</para>
          <para>Если эта функция недоступна и возвращает #NAME? ошибки необходимо установить и загрузить надстройку пакета анализа.</para>
          <para>Если параметр не число, <b>функция ДФОШ</b> возвращает #VALUE! значение ошибки.</para>
          <para>Если параметр имеет отрицательное значение, <b>функция ДФОШ</b> Возвращает #NUM! значение ошибки.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ErfC_Precise">
      <MemberSignature Language="C#" Value="public double ErfC_Precise (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ErfC_Precise([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ErfC_Precise(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ErfC_Precise (Arg1 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double ErfC_Precise(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16928)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Значение, с которым вычисляется значение.</param>
        <summary>Возвращает дополнительную функцию ошибки, интегрированную между заданным значением и бесконечностью.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если указанное значение не является числом, <b>ErfC_Precise</b> создает ошибку.</para>
          <para>Если указанное значение отрицательно, <b>ErfC_Precise</b> создает ошибку.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Even">
      <MemberSignature Language="C#" Value="public double Even (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Even([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Even(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Even (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Even(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16663)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Number — округляемое значение.</param>
        <summary>Возвращает число, округленное до ближайшего четного целого числа. Эту функцию можно использовать для обработки элементов, поступающих в ТВОС. Например, упаковочный ящик принимает строки из одного или двух элементов. Ящик считается заполненным, когда число элементов, округленное до ближайших двух, соответствует емкости ящика.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если число не является числом, <b>даже</b> возвращает #VALUE! значение ошибки. </para>
          <para>Независимо от знака числа, значение округляется при коррекции с нуля. Если число является четным целым, то никакого округления не выполняется.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Expon_Dist">
      <MemberSignature Language="C#" Value="public double Expon_Dist (double Arg1, double Arg2, bool Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Expon_Dist([in]float64 Arg1, [in]float64 Arg2, [in]bool Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Expon_Dist(System.Double,System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Expon_Dist (Arg1 As Double, Arg2 As Double, Arg3 As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Expon_Dist(double Arg1, double Arg2, bool Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16878)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Arg1">X — значение функции.</param>
        <param name="Arg2">Лямбда — значение параметра.</param>
        <param name="Arg3">Интегральная — логическое значение, которое указывает, какую форму экспоненциальной функции следует предоставить. Если интегральная имеет <b>значение true</b>, <b>Expon_Dist</b> возвращает интегральную функцию распределения; Если задано <b>значение false</b>, возвращается функция плотности вероятности.</param>
        <summary>Возвращает экспоненциальное распределение. Используйте EXPON_DIST для моделирования времени между событиями, например, как долго автоматизированный банк будет выполнять доставку наличных средств. Например, вы можете использовать EXPON_DIST, чтобы определить вероятность того, что процесс занимает не более 1 минуты.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если x или лямбда не являются числами, <b>Expon_Dist</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если x &lt; 0, <b>Expon_Dist</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если лямбда ≤ 0, <b>Expon_Dist</b> Возвращает #NUM! значение ошибки. </para>
          <para>Уравнение для функции плотности вероятности имеет следующий значение: </para>
          <para>Рисунок 1: формула для функции плотности вероятности</para>
          <para> </para>
          <para> </para>
          <para>Для функции интегральная функция распределения используется следующий уравнение:</para>
          <para>Рис. 2: формула для интегральной функции распределения</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ExponDist">
      <MemberSignature Language="C#" Value="public double ExponDist (double Arg1, double Arg2, bool Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ExponDist([in]float64 Arg1, [in]float64 Arg2, [in]bool Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ExponDist(System.Double,System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExponDist (Arg1 As Double, Arg2 As Double, Arg3 As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double ExponDist(double Arg1, double Arg2, bool Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16664)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Arg1">X — значение функции.</param>
        <param name="Arg2">Лямбда — значение параметра.</param>
        <param name="Arg3">Интегральная — логическое значение, которое указывает, какую форму экспоненциальной функции следует предоставить. Если интегральная имеет <b>значение true</b>, то <b>функция ЭКСПРАСП</b> возвращает интегральную функцию распределения; Если задано <b>значение false</b>, возвращается функция плотности вероятности.</param>
        <summary>Возвращает экспоненциальное распределение. Используйте функцию <b>ЭКСПРАСП</b> для моделирования времени между событиями, например, как долго автоматизированный банк выполняет доставку денег. Например, функцию <b>ЭКСПРАСП</b> можно использовать, чтобы определить вероятность того, что процесс занимает не более 1 минуты.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>эта функция заменена одной или несколькими новыми функциями, которые могут улучшить точность и имена которых лучше отражают их использование. Эта функция по-прежнему доступна для совместимости с более ранними версиями Excel. Тем не менее, если обратная совместимость не требуется, рекомендуется использовать новые функции, так как они точнее описывают их функциональность. Более подробную информацию о функции New можно узнать в <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Expon_Dist(System.Double,System.Double,System.Boolean)" /> методе.</para>
          <para>Если x или лямбда не являются числами, то <b>функция ЭКСПРАСП</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если x &lt; 0, то <b>функция ЭКСПРАСП</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если лямбда ≤ 0, то <b>функция ЭКСПРАСП</b> Возвращает #NUM! значение ошибки. </para>
          <para>Уравнение для функции плотности вероятности имеет следующий значение: </para>
          <para>Рисунок 1: формула для функции плотности вероятности</para>
          <para> </para>
          <para> </para>
          <para>Для функции интегральная функция распределения используется следующий уравнение:</para>
          <para>Рис. 2: формула для интегральной функции распределения</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="F_Dist">
      <MemberSignature Language="C#" Value="public double F_Dist (double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 F_Dist([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]bool Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.F_Dist(System.Double,System.Double,System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function F_Dist (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double F_Dist(double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16915)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Arg1">X — значение, для которого вычисляется функция.</param>
        <param name="Arg2">Deg_freedom1 — Числитель степеней свободы.</param>
        <param name="Arg3">Deg_freedom2 — знаменатель степеней свободы.</param>
        <param name="Arg4">Интегральная — логическое значение, определяющее форму функции. Если интегральная имеет <b>значение true</b>, <b>F_Dist</b> возвращает интегральную функцию распределения; Если задано <b>значение false</b>, возвращается функция плотности вероятности.</param>
        <summary>Возвращает F — распределение вероятности.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если какой-либо аргумент не является числом, <b>F_Dist</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если x отрицательно, то <b>F_Dist</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если deg_freedom1 или deg_freedom2 не являются целыми числами, оно усекается. </para>
          <para>Если deg_freedom1 &lt; 1, <b>F_Dist</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если deg_freedom &lt; 1, <b>F_Dist</b> Возвращает #NUM! значение ошибки.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="F_Dist_RT">
      <MemberSignature Language="C#" Value="public double F_Dist_RT (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 F_Dist_RT([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.F_Dist_RT(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function F_Dist_RT (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double F_Dist_RT(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16916)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">X — значение, для которого вычисляется функция.</param>
        <param name="Arg2">Degrees_freedom1 — Числитель степеней свободы.</param>
        <param name="Arg3">Degrees_freedom2 — знаменатель степеней свободы.</param>
        <summary>Возвращает правое двустороннее F — распределение вероятности. Эту функцию можно использовать, чтобы определить, имеют ли два набора данных различные степени плотности. Например, вы можете проверить результаты тестирования мужчин и женщин, вводя высокие учебные заведения, и определить, отличается ли вариативность в женщин от найденной в мужчин.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если какой-либо аргумент не является числом, <b>F_Dist_RT</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если x отрицательно, то <b>F_Dist_RT</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если degrees_freedom1 или degrees_freedom2 не являются целыми числами, оно усекается. </para>
          <para>Если degrees_freedom1 &lt; 1 или degrees_freedom1 ≥ 10 ^ 10, <b>F_Dist_RT</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если degrees_freedom2 &lt; 1 или degrees_freedom2 ≥ 10 ^ 10, <b>F_Dist_RT</b> Возвращает #NUM! значение ошибки. </para>
          <para>
            <b>F_Dist_RT</b> вычисляется как F_DIST_RT = P (f&gt;x), где f — это случайная переменная с f распределением с degrees_freedom1 и degrees_freedom2 степенями свободы.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="F_Inv">
      <MemberSignature Language="C#" Value="public double F_Inv (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 F_Inv([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.F_Inv(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function F_Inv (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double F_Inv(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16917)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Вероятность — вероятность, связанная с F интегральное распределением.</param>
        <param name="Arg2">Deg_freedom1 — Числитель степеней свободы.</param>
        <param name="Arg3">Deg_freedom2 — знаменатель степеней свободы.</param>
        <summary>Возвращает обратное значение распределения вероятностей F.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если какой-либо аргумент не является числом, <b>F_Inv</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если вероятность &lt; 0 или вероятность &gt; 1, <b>F_Inv</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если deg_freedom1 или deg_freedom2 не являются целыми числами, оно усекается. </para>
          <para>Если deg_freedom1 &lt; 1 или deg_freedom2 &lt; 1, <b>F_Inv</b> Возвращает #NUM! значение ошибки. </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="F_Inv_RT">
      <MemberSignature Language="C#" Value="public double F_Inv_RT (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 F_Inv_RT([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.F_Inv_RT(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function F_Inv_RT (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double F_Inv_RT(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16918)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Вероятность — вероятность, связанная с F интегральное распределением.</param>
        <param name="Arg2">Degrees_freedom1 — Числитель степеней свободы.</param>
        <param name="Arg3">Degrees_freedom2 — знаменатель степеней свободы.</param>
        <summary>Возвращает обратное обратное распределение вероятности F с префиксом вероятности. Если p = F_DIST_RT (x,...), то F_INV_RT (p,...) = x.</summary>
        <returns>To be added.</returns>
        <remarks><para>F-распределение можно использовать в F-тесте, который сравнивает степень вариативности в двух наборах данных. Например, вы можете проанализировать распределения доходов в США и Канаде, чтобы определить, имеют ли две страны подобную степень плотности доходов.</para>
          <para>Если какой-либо аргумент не является числом, <b>F_Inv_RT</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если вероятность &lt; 0 или вероятность &gt; 1, <b>F_Inv_RT</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если degrees_freedom1 или degrees_freedom2 не являются целыми числами, оно усекается. </para>
          <para>Если degrees_freedom1 &lt; 1 или degrees_freedom1 ≥ 10 ^ 10, <b>F_Inv_RT</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если degrees_freedom2 &lt; 1 или degrees_freedom2 ≥ 10 ^ 10, <b>F_Inv_RT</b> Возвращает #NUM! значение ошибки.</para>
          <para>
            <b>F_Inv_RT</b> можно использовать для возврата критически важных значений из F распределения. Например, выходные данные расчета "ДВУХФАКТОРНЫЙ" часто включают данные для значения F статистики, F вероятности и критического значения F на уровне важности 0,05. Чтобы получить критическое значение F, используйте уровень значимости в качестве аргумента вероятности для <b>F_Inv_RT</b>.</para>
          <para>При наличии значения вероятности <b>F_Inv_RT</b> ищет значение x таким, что F_DIST_RT (x, degrees_freedom1, degrees_freedom2) = вероятность. Таким образом, точность <b>F_Inv_RT</b> зависит от точности <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.F_Dist_RT(System.Double,System.Double,System.Double)" />. <b>F_Inv_RT</b> использует метод итерации поиска. Если поиск не сходится после 64 итераций, функция возвращает значение ошибки #N/A.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="F_Test">
      <MemberSignature Language="C#" Value="public double F_Test (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 F_Test([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.F_Test(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function F_Test (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double F_Test(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16875)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Массив1 — первый массив или диапазон данных.</param>
        <param name="Arg2">Массив2 — второй массив или диапазон данных.</param>
        <summary>Возвращает результат F-теста. F-тест возвращает двустороннее вероятность того, что дисперсии в массив1 и массив2 не отличаются. Используйте эту функцию, чтобы определить, отличаются ли различия между двумя примерами. Например, при выданных тестовых показателях из общедоступных и частных учебных заведений вы можете проверить, имеют ли эти школы различные уровни расплотности тестовых показателей.</summary>
        <returns>To be added.</returns>
        <remarks><para>Аргументы должны быть числами или именами, массивами или ссылками, содержащими числа. </para>
          <para>Если аргумент array или Reference содержит текст, логические значения или пустые ячейки, эти значения игнорируются; Тем не менее, ячейки с нулевым значением включены. </para>
          <para>Если количество точек данных в массив1 или массив2 меньше, чем 2, или если значение аргумента массив1 или массив2 равно нулю, то <b>F_Test</b> возвращает #DIV/0! значение ошибки.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Fact">
      <MemberSignature Language="C#" Value="public double Fact (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Fact([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Fact(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Fact (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Fact(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16568)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Number — неотрицательное число, факториал которого вычисляется. Если число не целое, оно усекается.</param>
        <summary>Возвращает факториал числа. Факториал числа равен 1*2*3 *...* Number.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FactDouble">
      <MemberSignature Language="C#" Value="public double FactDouble (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 FactDouble([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.FactDouble(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FactDouble (Arg1 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double FactDouble(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16799)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Number — значение, для которого возвращается двойной факториал. Если число не целое, оно усекается.</param>
        <summary>Возвращает двойной факториал числа.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если число не является числом, <b>ДВФАКТР</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если число отрицательно, <b>ДВФАКТР</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если число четное: </para>
          <para>Рисунок 1: формула для четных и нечетных компонентов</para>
          <para> </para>
          <para> </para>
          <para>Если число нечетно:</para>
          <para>Рисунок 2: формула для нечетного</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FDist">
      <MemberSignature Language="C#" Value="public double FDist (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 FDist([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.FDist(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function FDist (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double FDist(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16665)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">X — значение, для которого вычисляется функция.</param>
        <param name="Arg2">Degrees_freedom1 — Числитель степеней свободы.</param>
        <param name="Arg3">Degrees_freedom2 — знаменатель степеней свободы.</param>
        <summary>Возвращает F — распределение вероятности. Эту функцию можно использовать, чтобы определить, имеют ли два набора данных различные степени плотности. Например, вы можете проверить результаты тестирования мужчин и женщин, вводя высокие учебные заведения, и определить, отличается ли вариативность в женщин от найденной в мужчин.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>эта функция заменена одной или несколькими новыми функциями, которые могут улучшить точность и имена которых лучше отражают их использование. Эта функция по-прежнему доступна для совместимости с более ранними версиями Excel. Тем не менее, если обратная совместимость не требуется, рекомендуется использовать новые функции, так как они точнее описывают их функциональность. Более подробную информацию о новых функциях можно узнать <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.F_Dist_RT(System.Double,System.Double,System.Double)" /> в <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.F_Dist(System.Double,System.Double,System.Double,System.Boolean)" /> статье методы и.</para>
          <para>Если какой-либо из аргументов не является числом, <b>FРАСП</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если x отрицательно, <b>FРАСП</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если degrees_freedom1 или degrees_freedom2 не являются целыми числами, оно усекается. </para>
          <para>Если degrees_freedom1 &lt; 1 или degrees_freedom1 ≥ 10 ^ 10, <b>FРАСП</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если degrees_freedom2 &lt; 1 или degrees_freedom2 ≥ 10 ^ 10, <b>FРАСП</b> Возвращает #NUM! значение ошибки. </para>
          <para>
            <b>FРАСП</b> вычисляется как FРАСП = P (F&gt;x), где f — это случайная переменная, которая имеет f-распределение с degrees_freedom1 и degrees_freedom2 степенями свободы.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterXML">
      <MemberSignature Language="C#" Value="public object FilterXML (string Arg1, string Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FilterXML([in]string Arg1, [in]string Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.FilterXML(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FilterXML (Arg1 As String, Arg2 As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FilterXML(System::String ^ Arg1, System::String ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16979)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
        <Parameter Name="Arg2" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Arg1">Допустимая строка XML.</param>
        <param name="Arg2">Строка запроса XPath.</param>
        <summary>Получение определенных данных из возвращенного XML-кода, обычно из вызова функции <b>WebService</b> .</summary>
        <returns><b>ТИПОМ</b></returns>
        <remarks><para>Длина параметра XPath не может превышать 1024 символов.</para>
          <para>Функция <b>филтерксмл</b> возвращает результаты, которые анализируются с помощью указанного пользователем языкового стандарта данных.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public double Find (string Arg1, string Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Find([in]string Arg1, [in]string Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Find(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (Arg1 As String, Arg2 As String, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16508)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
        <Parameter Name="Arg2" Type="System.String" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Имя листа.</param>
        <param name="Arg2">Имя диапазона.</param>
        <param name="Arg3">Имя аргумента для уточнения поиска.</param>
        <summary>Находит определенную информацию на листе.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindB">
      <MemberSignature Language="C#" Value="public double FindB (string Arg1, string Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 FindB([in]string Arg1, [in]string Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.FindB(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindB (Arg1 As String, Arg2 As String, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16589)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
        <Parameter Name="Arg2" Type="System.String" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Find_text — текст, который требуется найти.</param>
        <param name="Arg2">Within_text — текст, содержащий искомый текст.</param>
        <param name="Arg3">Start_num — указывает символ, с которого начинается поиск. Первый символ в within_text — символ 1. Если опустить start_num, предполагается, что он равен 1.</param>
        <summary><see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Find(System.String,System.String,System.Object)" />и <b>НАЙТИБ</b> находят одну текстовую строку в второй текстовой строке и возвращать номер начальной позиции первой строки текста из первого символа второй строки текста.</summary>
        <returns>To be added.</returns>
        <remarks><para><see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Find(System.String,System.String,System.Object)" /> 
            <b>Важно!</b>предназначено для использования с языками, использующими однобайтовый набор знаков (SBCS), тогда как <b>НАЙТИБ</b> предназначен для использования с языками, использующими набор двухбайтовых символов (DBCS). Параметры языка по умолчанию для компьютера влияют на возвращаемое значение следующим образом:</para>
          <list type="bullet">
            <item>
              <description>
                <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Find(System.String,System.String,System.Object)" />всегда подсчитывает каждый символ (однобайтовый или двухбайтовый), как 1, независимо от значения параметра язык по умолчанию.</description>
            </item>
            <item>
              <description>
                <b>НАЙТИБ</b> подсчитывает каждый двухбайтовый символ как 2, если вы включили редактирование языка, ПОДДЕРЖИВАЮЩего DBCS, а затем назначить его языком по умолчанию. В противном случае <b>НАЙТИБ</b> подсчитывает каждый символ как 1.</description>
            </item>
          </list>
          <para>Языки, поддерживающие DBCS, включают японский, китайский (упрощенное письмо), китайский (традиционное письмо), китайский (традиционное письмо) и корейский. </para>
          <para>
            <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Find(System.String,System.String,System.Object)" />и <b>НАЙТИБ</b> различаются с учетом регистра и не разрешают подстановочные знаки. Если вы не хотите выполнять поиск с учетом регистра или использовать подстановочные знаки, можно использовать <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Search(System.String,System.String,System.Object)" /> и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SearchB(System.String,System.String,System.Object)" />. </para>
          <para>Если find_text "" (пустой текст), <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Find(System.String,System.String,System.Object)" /> соответствует первому символу в строке поиска (то есть, символ пронумерован start_num или 1). </para>
          <para>Find_text не могут содержать подстановочные знаки. </para>
          <para>Если find_text не отображается в within_text, <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Find(System.String,System.String,System.Object)" /> а <b>НАЙТИБ</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если start_num не больше нуля, <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Find(System.String,System.String,System.Object)" /> а <b>найтиб</b> возвращает значение #VALUE! значение ошибки. </para>
          <para>Если start_num превышает длину within_text, <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Find(System.String,System.String,System.Object)" /> а <b>НАЙТИБ</b> возвращает #VALUE! значение ошибки. </para>
          <para>Используйте start_num, чтобы пропустить указанное количество символов. Предположим <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Find(System.String,System.String,System.Object)" /> , что в качестве примера вы работаете с текстовой строкой "AYF0093". Йоунгменсаппарел ". Чтобы найти номер первого знака "Y" в части текстовой строки, установите start_num равное 8, чтобы не выполнять поиск в части текста с серийным номером. <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Find(System.String,System.String,System.Object)" />начинается с символа 8, находит find_text в следующем символе и возвращает число 9. <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Find(System.String,System.String,System.Object)" />всегда возвращает число символов из начала within_text, считая пропускаемые символы, если start_num больше 1.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FInv">
      <MemberSignature Language="C#" Value="public double FInv (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 FInv([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.FInv(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function FInv (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double FInv(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16666)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Вероятность — вероятность, связанная с F интегральное распределением.</param>
        <param name="Arg2">Degrees_freedom1 — Числитель степеней свободы.</param>
        <param name="Arg3">Degrees_freedom2-это знаменатель степеней свободы.</param>
        <summary>Возвращает обратное значение распределения вероятностей F. Если p = FРАСП (x,...), то функция FРАСПОБР (p,...) = x.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>эта функция заменена одной или несколькими новыми функциями, которые могут улучшить точность и имена которых лучше отражают их использование. Эта функция по-прежнему доступна для совместимости с более ранними версиями Excel. Тем не менее, если обратная совместимость не требуется, рекомендуется использовать новые функции, так как они точнее описывают их функциональность. Более подробную информацию о новых функциях можно узнать <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.F_Inv_RT(System.Double,System.Double,System.Double)" /> в <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.F_Inv(System.Double,System.Double,System.Double)" /> статье методы и.</para>
          <para>F-распределение можно использовать в F-тесте, который сравнивает степень вариативности в двух наборах данных. Например, вы можете проанализировать распределения доходов в США и Канаде, чтобы определить, имеют ли две страны подобную степень плотности доходов.</para>
          <para>Если какой-либо из аргументов не является числом, <b>FРАСПОБР</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если вероятность &lt; 0 или вероятность &gt; 1, то функция <b>FРАСПОБР</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если degrees_freedom1 или degrees_freedom2 не являются целыми числами, оно усекается. </para>
          <para>Если degrees_freedom1 &lt; 1 или degrees_freedom1 ≥ 10 ^ 10, то функция <b>FРАСПОБР</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если degrees_freedom2 &lt; 1 или degrees_freedom2 ≥ 10 ^ 10, то функция <b>FРАСПОБР</b> Возвращает #NUM! значение ошибки.</para>
          <para>
            <b>FРАСПОБР</b> можно использовать для возврата критических значений из F распределения. Например, выходные данные расчета "ДВУХФАКТОРНЫЙ" часто включают данные для значения F статистики, F вероятности и критического значения F на уровне важности 0,05. Чтобы возвратить критическое значение F, используйте уровень значимости в качестве аргумента вероятности для <b>FРАСПОБР</b>.</para>
          <para>При наличии значения вероятности функция <b>FРАСПОБР</b> ищет значение x, равное x, например, FРАСП (x, degrees_freedom1, degrees_freedom2) = вероятность. Таким образом, точность <b>FРАСПОБР</b> зависит от точности <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.FDist(System.Double,System.Double,System.Double)" />. <b>FРАСПОБР</b> использует метод итерации поиска. Если поиск не сходится после 64 итераций, функция возвращает значение ошибки #N/A.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Fisher">
      <MemberSignature Language="C#" Value="public double Fisher (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Fisher([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Fisher(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Fisher (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Fisher(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16667)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">x — числовое значение, для которого требуется выполнить преобразование.</param>
        <summary>Возвращает преобразование Фишера по оси x. Это преобразование создает функцию, которая обычно распространяется, а не наклонена. Используйте эту функцию, чтобы проводить проверку коэффициента корреляции.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если x не число, то функция <b>Фишер</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если x ≤ – 1 или x ≥ 1, то функция <b>Фишер</b> Возвращает #NUM! значение ошибки. </para>
          <para>Уравнение преобразования Фишера имеет следующий вид:</para>
          <para>Рисунок 1: уравнение преобразования Фишера</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FisherInv">
      <MemberSignature Language="C#" Value="public double FisherInv (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 FisherInv([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.FisherInv(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function FisherInv (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double FisherInv(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16668)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">y — значение, для которого необходимо выполнить обратное преобразование.</param>
        <summary>Возвращает обратное преобразование Фишера. Используйте это преобразование при анализе корреляции между диапазонами или массивами данных. Если y = Фишер (x), то ФИШЕРОБР (y) = x.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если y не число, то <b>ФИШЕРОБР</b> возвращает #VALUE! значение ошибки. </para>
          <para>Уравнение для обратного преобразования Фишера имеет следующий вид:</para>
          <para>Рисунок 1: уравнение для обратного преобразования Фишера</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Fixed">
      <MemberSignature Language="C#" Value="public string Fixed (double Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Fixed([in]float64 Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Fixed(System.Double,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Fixed (Arg1 As Double, Optional Arg2 As Object, Optional Arg3 As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16398)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Number — число, которое требуется округлить и преобразовать в текст.</param>
        <param name="Arg2">Число_знаков — количество цифр справа от десятичной точки.</param>
        <param name="Arg3">No_commas — логическое значение, которое при <b>значении true</b>предотвращает <b>включение запятых в</b> возвращенный текст.</param>
        <summary>Округляет число до указанного количества десятичных знаков, форматирует число в десятичном формате с использованием точки и запятыми и возвращает результат в виде текста.</summary>
        <returns>To be added.</returns>
        <remarks><para>Числа в Microsoft Excel никогда не могут содержать более 15 значащих цифр, но десятичные числа могут иметь размер до 127. </para>
          <para>Если число_знаков отрицательно, то число округляется слева от десятичной точки. </para>
          <para>Если вы опускаете число_знаков, предполагается, что он равен 2. </para>
          <para>Если no_commas имеет <b>значение false</b> или опущено, возвращаемый текст включает запятые как обычно. </para>
          <para>Основное различие между форматированием ячейки с числом с помощью команды ячейки (меню Формат) и форматированием числа непосредственно с помощью функции FIXED заключается в том, что <b>fixed</b> преобразует результат в текст. Число, отформатированное с помощью команды Cells, по-прежнему является числом.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Floor">
      <MemberSignature Language="C#" Value="public double Floor (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Floor([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Floor(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Floor (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Floor(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16669)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Number — числовое значение, которое вы хотите округлить.</param>
        <param name="Arg2">Точность — кратное, для которого требуется округлить.</param>
        <summary>Округляет число в сторону от нуля до ближайшего множителя, кратного значимости.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>эта функция заменена одной или несколькими новыми функциями, которые могут улучшить точность и имена которых лучше отражают их использование. Эта функция по-прежнему доступна для совместимости с более ранними версиями Excel. Тем не менее, если обратная совместимость не требуется, рекомендуется использовать новые функции, так как они точнее описывают их функциональность. Более подробную информацию о функции New можно узнать в <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Floor_Precise(System.Double,System.Object)" /> методе.</para>
          <para>Если любой из аргументов не является числом, <b>Floor</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если число и точность имеют разные знаки, то <b>Floor</b> Возвращает #NUM! значение ошибки. </para>
          <para>Независимо от знака числа, значение округляется вниз при исправлении от нуля. Если число является точным, кратным точности, то никакого округления не выполняется.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Floor_Math">
      <MemberSignature Language="C#" Value="public double Floor_Math (double Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Floor_Math([in]float64 Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Floor_Math(System.Double,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Floor_Math (Arg1 As Double, Optional Arg2 As Object, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16976)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Значение, которое вы хотите округлить.</param>
        <param name="Arg2">Точность, с которой вы хотите округлить.</param>
        <param name="Arg3">Если указано ненулевое число, эта функция округляет в сторону ноль.</param>
        <summary>Округляет число вниз до ближайшего целого или до ближайшего кратного значения.</summary>
        <returns><b>DOUBLE</b></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Floor_Precise">
      <MemberSignature Language="C#" Value="public double Floor_Precise (double Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Floor_Precise([in]float64 Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Floor_Precise(System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Floor_Precise (Arg1 As Double, Optional Arg2 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16931)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Number — числовое значение, которое вы хотите округлить.</param>
        <param name="Arg2">Точность — кратное, для которого требуется округлить.</param>
        <summary>Округляет указанное число до ближайшего значения, кратного значимости.</summary>
        <returns>To be added.</returns>
        <remarks><para>В зависимости от знака числового и значимого аргументов, метод <b>Floor_Precise</b> округляет либо в сторону нуля.</para>
          <list type="table">
            <item>
              <term>-/-</term>
              <description>Округляет в сторону от нуля.</description>
            </item>
            <item>
              <term>+/+</term>
              <description>Округляет в сторону нуля.</description>
            </item>
            <item>
              <term>-/+</term>
              <description>Округляет в сторону от нуля.</description>
            </item>
            <item>
              <term>+/-</term>
              <description>Округляет в сторону нуля.</description>
            </item>
          </list>
          <para>Если любой из аргументов не является числом, метод <b>Floor_Precise</b> создает ошибку. </para>
          <para>Если число является точным, кратным точности, то никакого округления не выполняется.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Forecast">
      <MemberSignature Language="C#" Value="public double Forecast (double Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Forecast([in]float64 Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Forecast(System.Double,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Forecast (Arg1 As Double, Arg2 As Object, Arg3 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Forecast(double Arg1, System::Object ^ Arg2, System::Object ^ Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16693)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">X — точка данных, для которой требуется предсказать значение.</param>
        <param name="Arg2">Known_y — зависимый массив или диапазон данных.</param>
        <param name="Arg3">Known_x — независимый массив или диапазон данных.</param>
        <summary>Вычисляет или прогнозирует будущее значение с учетом существующих значений. Прогнозируемое значение — это значение "y" для заданного значения "x". Известные значения — это уже имеющиеся значения "x" и "y", а новое значение прогнозируется с использованием линейной регрессии. Вы можете использовать эту функцию для прогнозирования будущих продаж, необходимого запаса товара или тенденций потребительских предпочтений.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если x не является числом, то <b>Прогноз</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если known_y и known_x пусты или содержат различное количество точек данных, то <b>Прогноз</b> возвращает значение ошибки #N/a. </para>
          <para>Если дисперсия known_x равно нулю, то <b>Прогноз</b> возвращает значение #DIV/0! значение ошибки. </para>
          <para>Уравнение для <b>ПРЕДСКАЗ</b> имеет значение + BX, где: </para>
          <para>Рисунок 1: формула для метода прогноза</para>
          <para> </para>
          <para> </para>
          <para>С</para>
          <para>Рисунок 2: формула для метода прогноза</para>
          <para> </para>
          <para> </para>
          <para>где x и y — пример среднего значения (known_x) и СРЗНАЧ (известный y).</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Frequency">
      <MemberSignature Language="C#" Value="public object Frequency (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Frequency([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Frequency(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Frequency (Arg1 As Object, Arg2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Frequency(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16636)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Data_array — массив или ссылка на набор значений, для которых нужно подсчитать частоты. Если data_array не содержит значений, то <b>Частота</b> возвращает массив нулей.</param>
        <param name="Arg2">Bins_array — массив или ссылка на интервалы, в которые необходимо сгруппировать значения в data_array. Если bins_array не содержит значений, то <b>Частота</b> возвращает количество элементов в data_array.</param>
        <summary>Вычисляет частоту значений в диапазоне значений, а затем возвращает вертикальный массив чисел. Например, используйте <b>частоту</b> для подсчета количества оценок тестов, которые попадают в диапазоны показателей. Так как <b>Частота</b> возвращает массив, он должен вводиться в виде формулы массива.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Частота</b> вводится как формула массива после выбора диапазона смежных ячеек, на которые будет отображаться возвращаемое распределение. </para>
          <para>Количество элементов в возвращенном массиве — это значение, превышающее количество элементов в bins_array. Элемент Extra в возвращенном массиве возвращает количество значений, превышающих наибольший интервал. Например, при подсчете трех диапазонов значений (интервалов), введенных в три ячейки, необходимо ввести <b>частоту</b> в четыре ячейки для результатов. Дополнительная ячейка возвращает число значений в data_array, превышающих третье значение интервала. </para>
          <para>
            <b>Частота</b> игнорирует пустые ячейки и текст. </para>
          <para>Формулы, возвращающие массивы, должны вводиться как формулы массива.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FTest">
      <MemberSignature Language="C#" Value="public double FTest (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 FTest([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.FTest(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FTest (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double FTest(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16694)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Массив1 — первый массив или диапазон данных.</param>
        <param name="Arg2">Массив2 — второй массив или диапазон данных.</param>
        <summary>Возвращает результат F-теста. F-тест возвращает двустороннее вероятность того, что дисперсии в массив1 и массив2 не отличаются. Используйте эту функцию, чтобы определить, отличаются ли различия между двумя примерами. Например, при выданных тестовых показателях из общедоступных и частных учебных заведений вы можете проверить, имеют ли эти школы различные уровни расплотности тестовых показателей.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>эта функция заменена одной или несколькими новыми функциями, которые могут улучшить точность и имена которых лучше отражают их использование. Эта функция по-прежнему доступна для совместимости с более ранними версиями Excel. Тем не менее, если обратная совместимость не требуется, рекомендуется использовать новые функции, так как они точнее описывают их функциональность. Более подробную информацию о функции New можно узнать в <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.F_Test(System.Object,System.Object)" /> методе.</para>
          <para>Аргументы должны быть числами или именами, массивами или ссылками, содержащими числа. </para>
          <para>Если аргумент array или Reference содержит текст, логические значения или пустые ячейки, эти значения игнорируются; Тем не менее, ячейки с нулевым значением включены. </para>
          <para>Если количество точек данных в массив1 или массив2 меньше, чем 2, или если значение аргумента массив1 или массив2 равно нулю, <b>фтест</b> возвращает #DIV/0! значение ошибки.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Fv">
      <MemberSignature Language="C#" Value="public double Fv (double Arg1, double Arg2, double Arg3, object Arg4, object Arg5);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Fv([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]object Arg4, [in]object Arg5) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Fv(System.Double,System.Double,System.Double,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Fv (Arg1 As Double, Arg2 As Double, Arg3 As Double, Optional Arg4 As Object, Optional Arg5 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16441)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Ставка — процентная ставка за период.</param>
        <param name="Arg2">Кол_пер — общее количество периодов выплат в аннуитете.</param>
        <param name="Arg3">ПЛТ — платеж, выполняемый в каждом периоде; Он не может измениться в течение всего периода выплат. Обычно плт содержит основные и процентные, но не другие сборы или налоги. Если аргумент ПЛТ опущен, необходимо указать аргумент НЗ.</param>
        <param name="Arg4">НЗ — текущее значение или общая сумма, на которую вы поинтересовали серию будущих платежей. Если аргумент нз опущен, предполагается, что он равен 0 (нулю), а аргумент ПЛТ должен быть включен.</param>
        <param name="Arg5">Тип — число 0 или 1, обозначающее, когда следует оплатить платежи. Если параметр type опущен, предполагается, что он равен 0.</param>
        <summary>Возвращает будущее значение инвестиции на основе периодических постоянных выплат и постоянной процентной ставки.</summary>
        <returns>To be added.</returns>
        <remarks><para>Более полное описание аргументов в <b>аргументе БС</b> и дополнительные сведения о функциях аннуитета приведены в разделе <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Pv(System.Double,System.Double,System.Double,System.Object,System.Object)" />.</para>
          <list type="table">
            <item>
              <term>нуль</term>
              <description>В конце периода</description>
            </item>
            <item>
              <term>1,1</term>
              <description>В начале периода</description>
            </item>
          </list>
          <para>Убедитесь, что вы последовательны в выборе единиц измерения, используемых для указания коэффициента и кпер. Если вы выплачиваете ежемесячные выплаты по ссуде на 4% ежегодно, используйте 12%/12 для расчета ставка и 4 * 12 для кпер. Если вы вносите годовые платежи в одну и ту же ссуду, используйте значение 12% для параметра ставка и 4 для параметра кпер. </para>
          <para>Для всех аргументов выплачиваемые деньги, например депозиты для экономии, представлены отрицательными числами; денежные средства, которые вы получаете, например чеки для дивидендов, представлены положительными числами.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FVSchedule">
      <MemberSignature Language="C#" Value="public double FVSchedule (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 FVSchedule([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.FVSchedule(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FVSchedule (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double FVSchedule(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16860)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Principal — текущее значение.</param>
        <param name="Arg2">Schedule — массив процентных ставок, которые необходимо применить.</param>
        <summary>Возвращает будущее значение начального участника после применения ряда сложных процентных ставок. Используйте БЗРАСПИС, чтобы рассчитать будущее значение инвестиции с переменными или регулируемой ставкой.</summary>
        <returns>To be added.</returns>
        <remarks><para>Значения в расписании могут быть числами или пустыми ячейками; любое другое значение создает #VALUE! значение ошибки для <b>БЗРАСПИС</b>. Пустые ячейки берутся как нули (без интересов).</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Gamma">
      <MemberSignature Language="C#" Value="public double Gamma (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Gamma([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Gamma(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Gamma (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Gamma(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16959)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Значение, для которого требуется вычислить гамма.</param>
        <summary>Возвращает значение гамма-функции.</summary>
        <returns><b>DOUBLE</b></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Gamma_Dist">
      <MemberSignature Language="C#" Value="public double Gamma_Dist (double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Gamma_Dist([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]bool Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Gamma_Dist(System.Double,System.Double,System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Gamma_Dist (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Gamma_Dist(double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16879)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Arg1">X — значение, для которого необходимо оценить распределение.</param>
        <param name="Arg2">Альфа — параметр распределения.</param>
        <param name="Arg3">Бета — параметр распределения. Если бета = 1, <b>Gamma_Dist</b> возвращает стандартное гамма-распределение.</param>
        <param name="Arg4">Интегральная — логическое значение, определяющее форму функции. Если интегральная имеет <b>значение true</b>, <b>Gamma_Dist</b> возвращает интегральную функцию распределения; Если задано <b>значение false</b>, возвращается функция плотности вероятности.</param>
        <summary>Возвращает гамма-распределение. Эту функцию можно использовать для изучения переменных, которые могут иметь асимметричное распределение. Гамма-распределение обычно используется в анализе очередей.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если x, альфа или бета не является числом, <b>Gamma_Dist</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если x &lt; 0, <b>Gamma_Dist</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если альфа ≤ 0 или бета ≤ 0, <b>Gamma_Dist</b> Возвращает #NUM! значение ошибки. </para>
          <para>Уравнение для функции плотности вероятности гаммы имеет следующий цвет: </para>
          <para>Рисунок 1: функция плотности вероятности гаммы</para>
          <para> </para>
          <para> </para>
          <para>Стандартная функция плотности вероятности имеет следующие характеристики:</para>
          <para>Рис. 2: Стандартная функция плотности вероятности гаммы</para>
          <para> </para>
          <para> </para>
          <para>Если альфа = 1, <b>Gamma_Dist</b> возвращает экспоненциальное распределение со следующим:</para>
          <para>Рисунок 3: формула</para>
          <para> </para>
          <para> </para>
          <para>Для положительного целого числа n, если альфа = n/2, Beta = 2 и Интегральная = <b>true</b>, <b>Gamma_Dist</b> ВОЗВРАЩАЕТ (1-ХИ2РАСП (x)) с n степенями свободы. </para>
          <para>Если альфа — положительное целое число, <b>Gamma_Dist</b> также называется распределением ерланг.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Gamma_Inv">
      <MemberSignature Language="C#" Value="public double Gamma_Inv (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Gamma_Inv([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Gamma_Inv(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Gamma_Inv (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Gamma_Inv(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16880)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Вероятность — вероятность, связанная с гамма-распределением.</param>
        <param name="Arg2">Альфа — параметр распределения.</param>
        <param name="Arg3">Бета — параметр распределения. Если бета = 1, <b>Gamma_Inv</b> возвращает стандартное гамма-распределение.</param>
        <summary>Возвращает обратное интегральное гамма-распределение. Если p = GAMMA_DIST (x,...), то GAMMA_INV (p,...) = x.</summary>
        <returns>To be added.</returns>
        <remarks><para>С помощью этой функции можно изучите переменную, распространение которой может быть наклонено.</para>
          <para>Если какой-либо аргумент является текстом, <b>Gamma_Inv</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если вероятность &lt; 0 или вероятность &gt; 1, <b>Gamma_Inv</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если альфа ≤ 0 или бета ≤ 0, <b>Gamma_Inv</b> Возвращает #NUM! значение ошибки.</para>
          <para>При наличии значения вероятности <b>Gamma_Inv</b> ищет значение x таким, что GAMMA_DIST (x, альфа, бета, true) = вероятность. Таким образом, точность <b>Gamma_Inv</b> зависит от точности <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Gamma_Dist(System.Double,System.Double,System.Double,System.Boolean)" />. <b>Gamma_Inv</b> использует метод итерации поиска. Если поиск не сходится после 100 итераций, функция возвращает значение ошибки #N/A.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GammaDist">
      <MemberSignature Language="C#" Value="public double GammaDist (double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 GammaDist([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]bool Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.GammaDist(System.Double,System.Double,System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GammaDist (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GammaDist(double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16670)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Arg1">X — значение, для которого необходимо оценить распределение.</param>
        <param name="Arg2">Альфа — параметр распределения.</param>
        <param name="Arg3">Бета — параметр распределения. Если бета = 1, <b>ГАММАРАСП</b> возвращает стандартное гамма-распределение.</param>
        <param name="Arg4">Интегральная — логическое значение, определяющее форму функции. Если интегральная имеет <b>значение true</b>, то функция <b>ГАММАРАСП</b> возвращает интегральную функцию распределения; Если задано <b>значение false</b>, возвращается функция плотности вероятности.</param>
        <summary>Возвращает гамма-распределение. Эту функцию можно использовать для изучения переменных, которые могут иметь асимметричное распределение. Гамма-распределение обычно используется в анализе очередей.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>эта функция заменена одной или несколькими новыми функциями, которые могут улучшить точность и имена которых лучше отражают их использование. Эта функция по-прежнему доступна для совместимости с более ранними версиями Excel. Тем не менее, если обратная совместимость не требуется, рекомендуется использовать новые функции, так как они точнее описывают их функциональность. Более подробную информацию о функции New можно узнать в <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Gamma_Dist(System.Double,System.Double,System.Double,System.Boolean)" /> методе.</para>
          <para>Если x, альфа или бета не является числом, <b>ГАММАРАСП</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если x &lt; 0, <b>ГАММАРАСП</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если альфа ≤ 0 или бета ≤ 0, <b>ГАММАРАСП</b> Возвращает #NUM! значение ошибки. </para>
          <para>Уравнение для функции плотности вероятности гаммы имеет следующий цвет: </para>
          <para>Рисунок 1: функция плотности вероятности гаммы</para>
          <para> </para>
          <para> </para>
          <para>Стандартная функция плотности вероятности имеет следующие характеристики:</para>
          <para>Рис. 2: Стандартная функция плотности вероятности гаммы</para>
          <para> </para>
          <para> </para>
          <para>Если альфа = 1, <b>ГАММАРАСП</b> возвращает экспоненциальное распределение со следующим:</para>
          <para>Рисунок 3: формула</para>
          <para> </para>
          <para> </para>
          <para>Для положительного целого числа n, если альфа = n/2, Beta = 2 и Интегральная = <b>true</b>, <b>ГАММАРАСП</b> ВОЗВРАЩАЕТ (1-ХИ2РАСП (x)) с n степенями свободы. </para>
          <para>Если альфа — положительное целое число, <b>ГАММАРАСП</b> также называется распределением ерланг.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GammaInv">
      <MemberSignature Language="C#" Value="public double GammaInv (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 GammaInv([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.GammaInv(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function GammaInv (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GammaInv(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16671)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Вероятность — вероятность, связанная с гамма-распределением.</param>
        <param name="Arg2">Альфа — параметр распределения.</param>
        <param name="Arg3">Бета — параметр распределения. Если бета = 1, <b>ГАММАОБР</b> возвращает стандартное гамма-распределение.</param>
        <summary>Возвращает обратное интегральное гамма-распределение. Если p = ГАММАРАСП (x,...), то ГАММАОБР (p,...) = x.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>эта функция заменена одной или несколькими новыми функциями, которые могут улучшить точность и имена которых лучше отражают их использование. Эта функция по-прежнему доступна для совместимости с более ранними версиями Excel. Тем не менее, если обратная совместимость не требуется, рекомендуется использовать новые функции, так как они точнее описывают их функциональность. Более подробную информацию о функции New можно узнать в <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Gamma_Inv(System.Double,System.Double,System.Double)" /> методе.</para>
          <para>С помощью этой функции можно изучите переменную, распространение которой может быть наклонено.</para>
          <para>Если аргумент имеет значение Text, <b>ГАММАОБР</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если вероятность &lt; 0 или вероятность &gt; 1, <b>ГАММАОБР</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если альфа ≤ 0 или бета ≤ 0, то функция <b>ГАММАОБР</b> Возвращает #NUM! значение ошибки.</para>
          <para>Если задано значение вероятности, функция <b>ГАММАОБР</b> ищет значение x, для которого функция ГАММАРАСП (x, альфа, бета, true) = вероятность. Таким образом, точность для <b>ГАММАОБР</b> зависит от точности <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.GammaDist(System.Double,System.Double,System.Double,System.Boolean)" />. Функция <b>ГАММАОБР</b> использует метод итерации поиска. Если поиск не сходится после 64 итераций, функция возвращает значение ошибки #N/A.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GammaLn">
      <MemberSignature Language="C#" Value="public double GammaLn (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 GammaLn([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.GammaLn(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function GammaLn (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GammaLn(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16655)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">X — значение, для которого требуется вычислить ГАММАНЛОГ.</param>
        <summary>Возвращает натуральный логарифм гамма-функции, Γ (x).</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>эта функция заменена одной или несколькими новыми функциями, которые могут улучшить точность и имена которых лучше отражают их использование. Эта функция по-прежнему доступна для совместимости с более ранними версиями Excel. Тем не менее, если обратная совместимость не требуется, рекомендуется использовать новые функции, так как они точнее описывают их функциональность. Более подробную информацию о функции New можно узнать в <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.GammaLn_Precise(System.Double)" /> методе.</para>
          <para>Если x не число, то функция <b>ГАММАНЛОГ</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если x ≤ 0, то функция <b>ГАММАНЛОГ</b> Возвращает #NUM! значение ошибки. </para>
          <para>Число e, возведенное в степень ГАММАНЛОГ (i), где i — целое число, возвращает такой же результат, как (i-1)!. </para>
          <para>Функция 
            <b>ГАММАНЛОГ</b> вычисляется следующим образом: </para>
          <para>Рисунок 1: формула для метода ГАММАНЛОГ</para>
          <para> </para>
          <para> </para>
          <para>Где:</para>
          <para>Рисунок 2: формула</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GammaLn_Precise">
      <MemberSignature Language="C#" Value="public double GammaLn_Precise (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 GammaLn_Precise([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.GammaLn_Precise(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function GammaLn_Precise (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GammaLn_Precise(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16929)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">X — значение, для которого требуется вычислить ГАММАНЛОГ.</param>
        <summary>Возвращает натуральный логарифм гамма-функции, Γ (x).</summary>
        <returns>To be added.</returns>
        <remarks><para>Если x не является числом, метод <b>GammaLn_Precise</b> создает ошибку. </para>
          <para>Если x ≤ 0, метод <b>GammaLn_Precise</b> создает ошибку. </para>
          <para>Число e, возведенное в степень ГАММАНЛОГ (i), где i — целое число, возвращает такой же результат, как (i-1)!. </para>
          <para>Функция ГАММАНЛОГ вычисляется следующим образом: </para>
          <para>Рисунок 1: уравнение для метода GammaLn_Precise</para>
          <para> </para>
          <para> </para>
          <para>Где:</para>
          <para>Рисунок 2: формула</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Gauss">
      <MemberSignature Language="C#" Value="public double Gauss (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Gauss([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Gauss(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Gauss (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Gauss(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16961)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Значение, для которого строится распределение.</param>
        <summary>Возвращает 0,5 меньше стандартного нормального интегрального распределения.</summary>
        <returns><b>DOUBLE</b></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Gcd">
      <MemberSignature Language="C#" Value="public double Gcd (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Gcd([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Gcd(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Gcd (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16857)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число1, число2,... от – 1 до 29 значений. Если какое-либо значение не является целым числом, оно усекается.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Возвращает наибольший общий делитель двух или более целых чисел. Наибольший общий делитель — это наибольшее целое число, которое делит Число1 и число2 без остатка.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если какой-либо аргумент не является числом, <b>Нод</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если какой-либо из аргументов меньше нуля, <b>Нод</b> Возвращает #NUM! значение ошибки. </para>
          <para>Один делит любое значение на равное. </para>
          <para>Простое число имеет только себя и один и тот же делители.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GeoMean">
      <MemberSignature Language="C#" Value="public double GeoMean (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 GeoMean([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.GeoMean(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GeoMean (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16703)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число1, число2,... – 1 — 30 аргументов, для которых вычисляется среднее. Вы также можете использовать один массив или ссылку на массив вместо аргументов, разделенных запятыми.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Возвращает среднее геометрическое значение массива или диапазона положительных данных. Например, можно использовать геосредние значения, чтобы рассчитать среднюю частоту роста при использовании сложных процентов с переменными частотами.</summary>
        <returns>To be added.</returns>
        <remarks><para>Аргументы могут быть числами или именами, массивами или ссылками, содержащими числа. </para>
          <para>Учитываются логические значения и текстовые представления чисел, которые вы вводите непосредственно в список аргументов. </para>
          <para>Если аргумент array или Reference содержит текст, логические значения или пустые ячейки, эти значения игнорируются; Тем не менее, ячейки с нулевым значением включены. </para>
          <para>Аргументы, которые являются значениями ошибки или текстом, не преобразуемым в числа, вызывают ошибки. </para>
          <para>Если любая точка данных ≤ 0, то <b>геометрическое</b> значение Возвращает #NUM! значение ошибки. </para>
          <para>Уравнение для среднего геометрического значения: </para>
          <para>Рисунок 1: Уравнение среднего геометрического</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GeStep">
      <MemberSignature Language="C#" Value="public double GeStep (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 GeStep([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.GeStep(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GeStep (Arg1 As Object, Optional Arg2 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16803)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Number — значение, проверяемое относительно этапа.</param>
        <param name="Arg2">Step — пороговое значение. Если опустить значение для Step, <b>порог</b> использует ноль.</param>
        <summary>Возвращает 1, если число ≥ Step; Возвращает значение 0 (ноль) в противном случае. Эта функция используется для фильтрации набора значений. Например, суммируя несколько функций <b>порог</b> , вы вычисляете количество значений, превышающих пороговое значение.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если какой-либо аргумент не является числом, <b>порог</b> возвращает #VALUE! значение ошибки.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Growth">
      <MemberSignature Language="C#" Value="public object Growth (object Arg1, object Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Growth([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Growth(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Growth (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16436)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Known_y — набор значений y, которые уже известны в соотношении y = b * m ^ x.</param>
        <param name="Arg2">Known_x — необязательный набор значений x, которые, возможно, уже известны в соотношении y = b * m ^ x.</param>
        <param name="Arg3">Новые значения по оси x New_x, для которых требуется <b>рост</b> , возвращающий соответствующие значения y.</param>
        <param name="Arg4">Const — логическое значение, указывающее, следует ли принудительно установить значение константы b равным 1.</param>
        <summary>Вычисляет прогнозируемый экспоненциальный рост с использованием существующих данных. <b>Расширение</b> возвращает значения y для ряда новых значений x, которые задаются с помощью существующих значений x и y. Функцию листа <b>рост</b> можно также использовать для соответствия экспоненциальной кривой с существующими значениями x и y.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если known_y массива находится в одной колонке, то каждый столбец known_x интерпретируется как отдельная переменная. </para>
          <para>Если массив known_y находится в одной строке, то каждая строка known_x интерпретируется как отдельная переменная. </para>
          <para>Если какое-либо из чисел в known_y равно 0 или отрицательно, то <b>рост</b> возвращает значение #NUM! значение ошибки. </para>
          <para>Known_x массива может включать один или несколько наборов переменных. Если используется только одна переменная, known_y и known_x могут быть диапазонами любой фигуры, если у них одинаковый размер. Если используется несколько переменных, known_y должен быть векторным (то есть диапазоном с высотой одной строки или шириной в один столбец). </para>
          <para>Если параметр known_x опущен, предполагается, что он равен массиву {1, 2, 3,...} такой же размер, что и known_y. </para>
          <para>Для каждой независимой переменной New_x должен быть включен столбец (или строка), как и для known_x. Таким образом, если known_y находится в одном столбце, known_x и new_x должны иметь одинаковое число столбцов. Если known_y находится в одной строке, known_x и new_x должны иметь одинаковое число строк. </para>
          <para>Если параметр new_x опущен, предполагается, что он совпадает с known_x. </para>
          <para>Если опущены known_x и new_x, предполагается, что это массив {1, 2, 3,...} такой же размер, что и known_y. </para>
          <para>Если конст имеет <b>значение true</b> или опущено, то b вычисляется обычным образом. </para>
          <para>Если конст имеет <b>значение false</b>, b задается равным 1, а значения m корректируются таким образом, чтобы y = m ^ x. </para>
          <para>Формулы, возвращающие массивы, должны вводиться как формулы массива после выбора правильного числа ячеек. </para>
          <para>При вводе массива константы для аргумента, например known_x, запятые используются для разделения значений в одной строке, а точка с запятой — для разделения строк.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="HarMean">
      <MemberSignature Language="C#" Value="public double HarMean (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 HarMean([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.HarMean(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function HarMean (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16704)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число1, число2,... – 1 — 30 аргументов, для которых вычисляется среднее. Вы также можете использовать один массив или ссылку на массив вместо аргументов, разделенных запятыми.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Возвращает среднее гармоническое набора данных. Среднее гармоническое — это обратная величина арифметического среднего обратной стороны.</summary>
        <returns>To be added.</returns>
        <remarks><para>Среднее гармоническое всегда меньше среднего геометрического, что всегда меньше среднего арифметического. </para>
          <para>Аргументы могут быть числами или именами, массивами или ссылками, содержащими числа. </para>
          <para>Учитываются логические значения и текстовые представления чисел, которые вы вводите непосредственно в список аргументов. </para>
          <para>Если аргумент array или Reference содержит текст, логические значения или пустые ячейки, эти значения игнорируются; Тем не менее, ячейки с нулевым значением включены. </para>
          <para>Аргументы, которые являются значениями ошибки или текстом, не преобразуемым в числа, вызывают ошибки. </para>
          <para>Если любая точка данных ≤ 0, <b>СРГАРМ</b> Возвращает #NUM! значение ошибки. Уравнение для среднего гармонического имеет следующий смысл: </para>
          <para>Рисунок 1: Уравнение среднего гармонического</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Hex2Bin">
      <MemberSignature Language="C#" Value="public string Hex2Bin (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Hex2Bin([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Hex2Bin(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Hex2Bin (Arg1 As Object, Optional Arg2 As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16768)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Number — шестнадцатеричное число, которое требуется преобразовать. Число не может содержать более 10 символов. Наиболее значащим битом числа является знаковый бит (40th бит от правого). Оставшиеся 9 бит являются битами величины. Отрицательные числа представлены с помощью нотации с двумя комплементарными числами.</param>
        <param name="Arg2">Разрядность — количество используемых символов. Если разрядность опущена, <b>ШЕСТН.</b> использует минимальное необходимое количество символов. Разрядность удобно использовать для заполнения возвращаемого значения с помощью ведущих нулей (нулей).</param>
        <summary>Преобразует шестнадцатеричное число в двоичное.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если число отрицательно, <b>ШЕСТН.</b> игнорирует разрядность и возвращает 10-значный двоичный номер. </para>
          <para>Если число отрицательно, оно не может быть меньше, чем FFFFFFFE00, а если число положительно, оно не может быть больше, чем 1FF. </para>
          <para>Если число не является допустимым шестнадцатеричным числом, <b>ШЕСТН.</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если для <b>ШЕСТН.</b> требуется больше символов, то возвращается #NUM! значение ошибки. Если разрядность не целое число, то оно усекается. </para>
          <para>Если разрядность не число, то <b>ШЕСТН.</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если разрядность отрицательна, <b>ШЕСТН.</b> Возвращает #NUM! значение ошибки.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Hex2Dec">
      <MemberSignature Language="C#" Value="public string Hex2Dec (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Hex2Dec([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Hex2Dec(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Hex2Dec (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Hex2Dec(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16769)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Number — шестнадцатеричное число, которое требуется преобразовать. Число не может содержать более 10 символов (40 бит). Наиболее значащим битом числа является знаковый бит. Остальные 39 бит являются битами. Отрицательные числа представлены с помощью нотации с двумя комплементарными числами.</param>
        <summary>Преобразует шестнадцатеричное число в десятичное.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если число не является допустимым шестнадцатеричным числом, <b>ШЕСТН.</b> Возвращает #NUM! значение ошибки.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Hex2Oct">
      <MemberSignature Language="C#" Value="public string Hex2Oct (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Hex2Oct([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Hex2Oct(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Hex2Oct (Arg1 As Object, Optional Arg2 As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16770)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Number — шестнадцатеричное число, которое требуется преобразовать. Число не может содержать более 10 символов. Наиболее значащим битом числа является знаковый бит. Остальные 39 бит являются битами. Отрицательные числа представлены с помощью нотации с двумя комплементарными числами.</param>
        <param name="Arg2">Разрядность — количество используемых символов. Если разрядность опущена, <b>ШЕСТН.</b> использует минимальное необходимое количество символов. Разрядность удобно использовать для заполнения возвращаемого значения с помощью ведущих нулей (нулей).</param>
        <summary>Преобразует шестнадцатеричное число в восьмеричное.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если число отрицательно, <b>ШЕСТН.</b> игнорирует разрядность и возвращает восьмеричное число из 10 знаков. </para>
          <para>Если число отрицательно, оно не может быть меньше, чем FFE0000000, а если число положительно, оно не может быть больше, чем 1FFFFFFF. </para>
          <para>Если число не является допустимым шестнадцатеричным числом, <b>ШЕСТН.</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если для <b>ШЕСТН.</b> требуется больше символов, то возвращается #NUM! значение ошибки. </para>
          <para>Если разрядность не целое число, то оно усекается. </para>
          <para>Если разрядность не число, то <b>ШЕСТН.</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если разрядность отрицательна, <b>ШЕСТН.</b> Возвращает #NUM! значение ошибки.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="HLookup">
      <MemberSignature Language="C#" Value="public object HLookup (object Arg1, object Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object HLookup([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.HLookup(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function HLookup (Arg1 As Object, Arg2 As Object, Arg3 As Object, Optional Arg4 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16485)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Lookup_value — значение, которое должно быть найдено в первой строке таблицы. Lookup_value может быть значением, ссылкой или текстовой строкой.</param>
        <param name="Arg2">Table_array таблица сведений, в которой ищутся данные. Используйте ссылку на диапазон или имя диапазона.</param>
        <param name="Arg3">Row_index_num — номер строки в table_array, из которой будет возвращено совпадающее значение. Row_index_num, равное 1, возвращает значение первой строки в table_array, row_index_num 2 Возвращает значение второй строки в table_array и т. д. Если row_index_num меньше 1, то <b>функция ГПР</b> возвращает значение #VALUE! значение ошибки; Если row_index_num превышает количество строк в table_array, то <b>функция ГПР</b> возвращает #REF! значение ошибки.</param>
        <param name="Arg4">Range_lookup — логическое значение, указывающее, требуется ли, чтобы <b>функция ГПР искала</b> точное или приближенное совпадение. Если этот параметр <b>имеет значение true</b> или опущен, возвращается приближенное значение. Другими словами, если точное совпадение не найдено, возвращается следующее наибольшее значение, меньшее lookup_value. Если задано <b>значение false</b>, <b>функция ГПР</b> обнаружит точное совпадение. Если он не найден, возвращается значение ошибки #N/A.</param>
        <summary>Ищет значение в верхней строке таблицы или массива значений, а затем возвращает значение в том же столбце из строки, указанной в таблице или массиве. Используйте ГПР, если значения для сравнения расположены в строке в верхней части таблицы данных, и вы хотите просмотреть заданное число строк. Используйте <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.VLookup(System.Object,System.Object,System.Object,System.Object)" /> , когда значения для сравнения расположены в столбце слева от данных, которые требуется найти.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если функции <b>ГПР</b> не удается найти lookup_value, а range_lookup имеет значение <b>true</b>, используется наибольшее значение, меньшее, чем lookup_value. </para>
          <para>Если lookup_value меньше наименьшего значения в первой строке table_array, то <b>функция ГПР</b> возвращает значение ошибки #N/a. </para>
          <para>Если range_lookup имеет значение FALSE и lookup_value является текстом, можно использовать подстановочные знаки, вопросительные знаки (?) и звездочки (*) в lookup_value. Вопросительный знак соответствует одному символу; Звездочка соответствует любой последовательности символов. Если вы хотите найти фактический вопросительный знак или звездочку, введите тильду (~) перед символом.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="HypGeom_Dist">
      <MemberSignature Language="C#" Value="public double HypGeom_Dist (double Arg1, double Arg2, double Arg3, double Arg4, bool Arg5);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 HypGeom_Dist([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]float64 Arg4, [in]bool Arg5) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.HypGeom_Dist(System.Double,System.Double,System.Double,System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function HypGeom_Dist (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Double, Arg5 As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double HypGeom_Dist(double Arg1, double Arg2, double Arg3, double Arg4, bool Arg5);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16919)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Double" />
        <Parameter Name="Arg5" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Arg1">Sample_s — количество успехов в выборке.</param>
        <param name="Arg2">Number_sample — размер примера.</param>
        <param name="Arg3">Population_s — количество успехов в заполнении.</param>
        <param name="Arg4">Number_population — размер Генеральной совокупности.</param>
        <param name="Arg5">Интегральная — логическое значение, определяющее форму функции. Если интегральная имеет <b>значение true</b>, то <b>HypGeom_Dist</b> возвращает интегральную функцию распределения; Если задано <b>значение false</b>, то возвращается функция плотности плотности.</param>
        <summary>Возвращает геометрическое распределение. <b>HypGeom_Dist</b> возвращает вероятность того, что количество успешных попыток задается для выборки размера, успешности заполнения и размера заполнения. Используйте <b>HypGeom_Dist</b> для проблем с конечным заполнением, где каждое наблюдение является либо успехом, либо сбоем, и каждый подмножество заданного размера выбирается с равной вероятностью.</summary>
        <returns>To be added.</returns>
        <remarks><para>Все аргументы усекаются до целых. </para>
          <para>Если какой-либо аргумент не является числом, <b>HypGeom_Dist</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если sample_s &lt; 0 или sample_s больше, чем меньше number_sample или population_s, <b>HypGeom_Dist</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если sample_s меньше, чем значение 0, или (number_sample-number_population + population_s), <b>HypGeom_Dist</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если number_sample ≤ 0 или number_sample &gt; number_population, <b>HypGeom_Dist</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если population_s ≤ 0 или population_s &gt; number_population, <b>HypGeom_Dist</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если number_population ≤ 0, <b>HypGeom_Dist</b> Возвращает #NUM! значение ошибки. </para>
          <para>Уравнение для геометрического распределения: </para>
          <para>Рисунок 1: уравнение для геометрического распределения</para>
          <para> </para>
          <para> </para>
          <para>где:</para>
          <para>x = sample_s</para>
          <para>n = number_sample</para>
          <para>M = population_s</para>
          <para>N = number_population</para>
          <para>
            <b>HypGeom_Dist</b> используется при выборке без замены из конечной Генеральной совокупности.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="HypGeomDist">
      <MemberSignature Language="C#" Value="public double HypGeomDist (double Arg1, double Arg2, double Arg3, double Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 HypGeomDist([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]float64 Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.HypGeomDist(System.Double,System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function HypGeomDist (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double HypGeomDist(double Arg1, double Arg2, double Arg3, double Arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16673)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Sample_s — количество успехов в выборке.</param>
        <param name="Arg2">Number_sample — размер примера.</param>
        <param name="Arg3">Population_s — количество успехов в заполнении.</param>
        <param name="Arg4">Number_population — размер Генеральной совокупности.</param>
        <summary>Возвращает геометрическое распределение. <b>Функция ГИПЕРГЕОМЕТ</b> возвращает вероятность того, что количество успешных попыток задается в примере размера, успешности заполнения и размера Генеральной совокупности. Используйте параметр <b>ГИПЕРГЕОМЕТ</b> для проблем с конечным заполнением, где каждое наблюдение является либо успешным, либо неудачным, а каждое подмножество заданного размера выбирается с равной вероятностью.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>эта функция заменена одной или несколькими новыми функциями, которые могут улучшить точность и имена которых лучше отражают их использование. Эта функция по-прежнему доступна для совместимости с более ранними версиями Excel. Тем не менее, если обратная совместимость не требуется, рекомендуется использовать новые функции, так как они точнее описывают их функциональность. Более подробную информацию о функции New можно узнать в <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.HypGeom_Dist(System.Double,System.Double,System.Double,System.Double,System.Boolean)" /> методе.</para>
          <para>Все аргументы усекаются до целых. </para>
          <para>Если какой-либо из аргументов не является числом, <b>ГИПЕРГЕОМЕТ</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если sample_s &lt; 0 или sample_s больше, чем меньше number_sample или population_s, то <b>функция гипергеомет</b> возвращает значение #NUM! значение ошибки. </para>
          <para>Если sample_s меньше, чем больше 0 или (number_sample-number_population + population_s), то <b>функция ГИПЕРГЕОМЕТ</b> возвращает значение #NUM! значение ошибки. </para>
          <para>Если number_sample ≤ 0 или number_sample &gt; number_population, то функция ГИПЕРГЕОМЕТ возвращает значение #NUM! значение ошибки. </para>
          <para>Если population_s ≤ 0 или population_s &gt; number_population, то <b>функция гипергеомет</b> возвращает значение #NUM! значение ошибки. </para>
          <para>Если number_population ≤ 0, то <b>функция ГИПЕРГЕОМЕТ</b> возвращает значение #NUM! значение ошибки. </para>
          <para>Уравнение для геометрического распределения: </para>
          <para>Рисунок 1: уравнение для геометрического распределения</para>
          <para> </para>
          <para> </para>
          <para>где:</para>
          <para>x = sample_s</para>
          <para>n = number_sample</para>
          <para>M = population_s</para>
          <para>N = number_population</para>
          <para>
            <b>Функция ГИПЕРГЕОМЕТ</b> используется при выборке без замены из конечной Генеральной совокупности.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IfError">
      <MemberSignature Language="C#" Value="public object IfError (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object IfError([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IfError(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IfError (Arg1 As Object, Arg2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ IfError(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16864)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Value — аргумент, который проверяется на наличие ошибки.</param>
        <param name="Arg2">Value_if_error — значение, которое возвращается, если формула возвращает ошибку. Оцениваются следующие типы ошибок: #N/A, #VALUE!, #REF!, #DIV/0!, #NUM!, #NAME? или #NULL!.</param>
        <summary>Возвращает значение, указывающее, является ли формула ошибкой; в противном случае возвращает результат формулы. Используйте функцию <b>IfError</b> для перехвата и обработки ошибок в формуле.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если значение или value_if_error — пустая ячейка, <b>IfError</b> рассматривает его как пустое строковое значение (""). </para>
          <para>Если значение — формула массива, <b>IfError</b> возвращает массив результатов для каждой ячейки в диапазоне, указанном значением. Просмотрите второй пример ниже.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IfNa">
      <MemberSignature Language="C#" Value="public object IfNa (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object IfNa([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IfNa(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IfNa (Arg1 As Object, Arg2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ IfNa(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16974)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Value: любое значение или выражение или ссылка.</param>
        <param name="Arg2">value_if_na: любое значение или выражение или ссылка.</param>
        <summary>Возвращает значение, которое вы указываете, если выражение разрешается в #N/A, в противном случае возвращает результат выражения.</summary>
        <returns><b>ТИПОМ</b></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImAbs">
      <MemberSignature Language="C#" Value="public string ImAbs (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImAbs([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImAbs(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImAbs (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImAbs(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16783)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Компл_число — комплексное число, для которого требуется получить абсолютное значение.</param>
        <summary>Возвращает абсолютное значение (модуль) комплексного числа в формате x + yi или x + yj.</summary>
        <returns>To be added.</returns>
        <remarks><para>Используется <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" /> для преобразования действительных и мнимых коэффициентов в комплексное число. </para>
          <para>Абсолютным значением комплексного числа является: </para>
          <para>Рисунок 1: формула для абсолютного значения комплексного числа</para>
          <para> </para>
          <para> </para>
          <para>где:</para>
          <para>z = x + yi</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Imaginary">
      <MemberSignature Language="C#" Value="public double Imaginary (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Imaginary([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Imaginary(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Imaginary (Arg1 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Imaginary(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16793)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Компл_число — комплексное число, для которого вычисляется коэффициент мнимой части.</param>
        <summary>Возвращает коэффициент при мнимой части комплексного числа в текстовом формате x + yi или x + yj.</summary>
        <returns>To be added.</returns>
        <remarks><para>Используется <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" /> для преобразования действительных и мнимых коэффициентов в комплексное число.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ImArgument">
      <MemberSignature Language="C#" Value="public string ImArgument (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImArgument([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImArgument(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImArgument (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImArgument(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16791)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Компл_число — это комплексное число, для которого требуется аргумент тета.</param>
        <summary>Возвращает аргумент (тета), выраженный в радианах, например:</summary>
        <returns>To be added.</returns>
        <remarks><para>Используется <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" /> для преобразования действительных и мнимых коэффициентов в комплексное число. </para>
          <para>
            <b>Аргумент</b> unвычисляется следующим образом: </para>
          <para>Рисунок 1: формула для метода мнимых аргументов</para>
          <para> </para>
          <para> </para>
          <para>Где:</para>
          <para>Рисунок 2: формула</para>
          <para> </para>
          <para> </para>
          <para>и</para>
          <para>z = x + yi</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ImConjugate">
      <MemberSignature Language="C#" Value="public string ImConjugate (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImConjugate([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImConjugate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImConjugate (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImConjugate(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16792)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Компл_число — комплексное число, для которого требуется сопряженное.</param>
        <summary>Возвращает комплексно сопряженное число комплексного числа в текстовом формате x + yi или x + yj.</summary>
        <returns>To be added.</returns>
        <remarks><para>Используется <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" /> для преобразования действительных и мнимых коэффициентов в комплексное число. </para>
          <para>Сопряженное число комплексного числа определяется следующим образом: </para>
          <para>Рисунок 1: формула для сопряженного комплексного числа</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ImCos">
      <MemberSignature Language="C#" Value="public string ImCos (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImCos([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImCos(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImCos (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImCos(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16789)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Компл_число — комплексное число, для которого требуется вычислить косинус.</param>
        <summary>Возвращает косинус комплексного числа в текстовом формате x + yi или x + yj.</summary>
        <returns>To be added.</returns>
        <remarks><para>Используется <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" /> для преобразования действительных и мнимых коэффициентов в комплексное число. </para>
          <para>Если Компл_число является логическим значением, <b>МНИМ. cos</b> возвращает #VALUE! значение ошибки. </para>
          <para>Косинус комплексного числа определяется следующим образом: </para>
          <para>Рисунок 1: косинус комплексного числа</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ImCosh">
      <MemberSignature Language="C#" Value="public string ImCosh (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImCosh([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImCosh(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImCosh (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImCosh(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16978)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Комплексное число, для которого требуется получить гиперболический косинус.</param>
        <summary>Возвращает гиперболический косинус комплексного числа.</summary>
        <returns>Задает логическое условие соответствия для текстовой строки.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImCot">
      <MemberSignature Language="C#" Value="public string ImCot (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImCot([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImCot(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImCot (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImCot(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16941)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Комплексное число, для которого требуется выполнить котангенс.</param>
        <summary>Возвращает котангенс комплексного числа.</summary>
        <returns>Задает логическое условие соответствия для текстовой строки.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImCsc">
      <MemberSignature Language="C#" Value="public string ImCsc (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImCsc([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImCsc(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImCsc (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImCsc(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16942)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Комплексное число, для которого требуется найти косеканс.</param>
        <summary>Возвращает косеканс комплексного числа.</summary>
        <returns>Задает логическое условие соответствия для текстовой строки.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImCsch">
      <MemberSignature Language="C#" Value="public string ImCsch (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImCsch([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImCsch(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImCsch (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImCsch(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16943)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Комплексное число, для которого требуется получить гиперболический косеканс.</param>
        <summary>Возвращает гиперболический косеканс комплексного числа.</summary>
        <returns>Задает логическое условие соответствия для текстовой строки.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImDiv">
      <MemberSignature Language="C#" Value="public string ImDiv (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImDiv([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImDiv(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImDiv (Arg1 As Object, Arg2 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImDiv(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16781)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Компл_число1 — комплексный числитель или делимое.</param>
        <param name="Arg2">Компл_число2 — это комплексный знаменатель или делитель.</param>
        <summary>Возвращает частное двух комплексных чисел в текстовом формате x + yi или x + yj.</summary>
        <returns>To be added.</returns>
        <remarks><para>Используется <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" /> для преобразования действительных и мнимых коэффициентов в комплексное число. </para>
          <para>Частное двух комплексных чисел определяется следующим образом: </para>
          <para>Рисунок 1: частное от деления двух комплексных чисел</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ImExp">
      <MemberSignature Language="C#" Value="public string ImExp (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImExp([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImExp(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImExp (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImExp(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16790)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Компл_число — это комплексное число, для которого вычисляется экспонента.</param>
        <summary>Возвращает экспоненту комплексного числа в текстовом формате x + yi или x + yj.</summary>
        <returns>To be added.</returns>
        <remarks><para>Используется <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" /> для преобразования действительных и мнимых коэффициентов в комплексное число. </para>
          <para>Экспонента комплексного числа определяется следующим образом: </para>
          <para>Рисунок 1: экспонента комплексного числа</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ImLn">
      <MemberSignature Language="C#" Value="public string ImLn (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImLn([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImLn(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImLn (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImLn(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16785)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Компл_число — это комплексное число, для которого вычисляется натуральный логарифм.</param>
        <summary>Возвращает натуральный логарифм комплексного числа в текстовом формате x + yi или x + yj.</summary>
        <returns>To be added.</returns>
        <remarks><para>Используется <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" /> для преобразования действительных и мнимых коэффициентов в комплексное число. </para>
          <para>Натуральный логарифм комплексного числа определяется следующим образом: </para>
          <para>Рисунок 1: натуральный логарифм комплексного числа</para>
          <para> </para>
          <para> </para>
          <para>где:</para>
          <para>Рисунок 2: формула</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ImLog10">
      <MemberSignature Language="C#" Value="public string ImLog10 (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImLog10([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImLog10(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImLog10 (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImLog10(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16787)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Компл_число — это комплексное число, для которого вычисляется общий логарифм.</param>
        <summary>Возвращает общий логарифм (основание 10) комплексного числа в формате x + yi или x + yj.</summary>
        <returns>To be added.</returns>
        <remarks><para>Используется <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" /> для преобразования действительных и мнимых коэффициентов в комплексное число. </para>
          <para>Общий логарифм комплексного числа можно вычислить с помощью натурального логарифма следующим образом: </para>
          <para>Рисунок 1: формула для обычного логарифма комплексного числа</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ImLog2">
      <MemberSignature Language="C#" Value="public string ImLog2 (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImLog2([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImLog2(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImLog2 (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImLog2(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16786)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Компл_число — это комплексное число, для которого требуется логарифм с основанием 2.</param>
        <summary>Возвращает логарифм по основанию 2 комплексного числа в текстовом формате x + yi или x + yj.</summary>
        <returns>To be added.</returns>
        <remarks><para>Используется <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" /> для преобразования действительных и мнимых коэффициентов в комплексное число. </para>
          <para>Логарифм с основанием 2 комплексного числа можно вычислить с помощью натурального логарифма следующим образом: </para>
          <para>Рисунок 1: уравнение для логарифма с основанием 2 комплексного числа</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ImPower">
      <MemberSignature Language="C#" Value="public string ImPower (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImPower([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImPower(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImPower (Arg1 As Object, Arg2 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImPower(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16782)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Компл_число — комплексное число, которое вы хотите возвести в степени.</param>
        <param name="Arg2">Number — возвращающее число, возвращающее комплексное число.</param>
        <summary>Возвращает комплексное число в текстовом формате x + yi или x + yj, возведенном в степени.</summary>
        <returns>To be added.</returns>
        <remarks><para>Используется <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" /> для преобразования действительных и мнимых коэффициентов в комплексное число. </para>
          <para>Если число не является числом <b>, то</b> возвращается #VALUE! значение ошибки. </para>
          <para>Число может быть целым, дробным или отрицательным. </para>
          <para>Комплексное число, возведенное в мощь, вычисляется следующим образом: </para>
          <para>Рисунок 1: комплексное число формулы, возведенное в мощь</para>
          <para> </para>
          <para> </para>
          <para>где:</para>
          <para>Рисунок 2: формула</para>
          <para> </para>
          <para> </para>
          <para>И в следующем примере:</para>
          <para>Рисунок 3: формула</para>
          <para> </para>
          <para> </para>
          <para>И в следующем примере:</para>
          <para>Рисунок 4: формула</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ImProduct">
      <MemberSignature Language="C#" Value="public string ImProduct (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImProduct([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImProduct(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImProduct (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16797)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Компл_число1, Компл_число2,... от – 1 до 29 сложных чисел для перемножения.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Возвращает произведение от 2 до 29 сложных чисел в текстовом формате x + yi или x + yj.</summary>
        <returns>To be added.</returns>
        <remarks><para>Используется <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" /> для преобразования действительных и мнимых коэффициентов в комплексное число. </para>
          <para>Произведение двух комплексных чисел определяется следующим образом:</para>
          <para>Рисунок 1: произведение двух комплексных чисел</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ImReal">
      <MemberSignature Language="C#" Value="public double ImReal (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ImReal([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImReal(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImReal (Arg1 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double ImReal(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16794)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Компл_число — комплексное число, для которого вычисляется действительный коэффициент.</param>
        <summary>Возвращает действительный коэффициент комплексного числа в текстовом формате x + yi или x + yj.</summary>
        <returns>To be added.</returns>
        <remarks><para>Используется <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" /> для преобразования действительных и мнимых коэффициентов в комплексное число.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ImSec">
      <MemberSignature Language="C#" Value="public string ImSec (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImSec([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImSec(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImSec (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImSec(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16944)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Комплексное число, для которого требуется получить гиперболический косеканс.</param>
        <summary>Возвращает гиперболический косеканс комплексного числа.</summary>
        <returns>Задает логическое условие соответствия для текстовой строки.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImSech">
      <MemberSignature Language="C#" Value="public string ImSech (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImSech([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImSech(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImSech (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImSech(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16945)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Комплексное число, для которого требуется получить гиперболический секанс.</param>
        <summary>Возвращает секанс комплексного числа.</summary>
        <returns>Задает логическое условие соответствия для текстовой строки.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImSin">
      <MemberSignature Language="C#" Value="public string ImSin (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImSin([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImSin(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImSin (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImSin(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16788)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Компл_число — комплексное число, для которого вычисляется синус.</param>
        <summary>Возвращает синус комплексного числа в текстовом формате x + yi или x + yj.</summary>
        <returns>To be added.</returns>
        <remarks><para>Используется <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" /> для преобразования действительных и мнимых коэффициентов в комплексное число. </para>
          <para>Синус комплексного числа определяется следующим образом: </para>
          <para>Рисунок 1: синус комплексного числа</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ImSinh">
      <MemberSignature Language="C#" Value="public string ImSinh (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImSinh([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImSinh(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImSinh (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImSinh(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16977)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Комплексное число, для которого требуется получить гиперболический синус.</param>
        <summary>Возвращает гиперболический синус комплексного числа.</summary>
        <returns>Задает логическое условие соответствия для текстовой строки.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImSqrt">
      <MemberSignature Language="C#" Value="public string ImSqrt (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImSqrt([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImSqrt(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImSqrt (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImSqrt(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16784)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Компл_число — комплексное число, для которого требуется вычислить квадратный корень.</param>
        <summary>Возвращает квадратный корень комплексного числа в формате x + yi или x + yj.</summary>
        <returns>To be added.</returns>
        <remarks><para>Используется <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" /> для преобразования действительных и мнимых коэффициентов в комплексное число. Квадратный корень комплексного числа: </para>
          <para>Рисунок 1: квадратный корень комплексного числа</para>
          <para> </para>
          <para> </para>
          <para>где:</para>
          <para>Рисунок 2: формула</para>
          <para> </para>
          <para> </para>
          <para>И в следующем примере:</para>
          <para>Рисунок 3: формула</para>
          <para> </para>
          <para> </para>
          <para>И в следующем примере:</para>
          <para>Рисунок 4: формула</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ImSub">
      <MemberSignature Language="C#" Value="public string ImSub (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImSub([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImSub(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImSub (Arg1 As Object, Arg2 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImSub(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16780)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Компл_число1 — комплексное число, от которого следует вычесть Компл_число2.</param>
        <param name="Arg2">Компл_число2 — комплексное число, которое вычитается из Компл_число1.</param>
        <summary>Возвращает разность двух комплексных чисел в текстовом формате x + yi или x + yj.</summary>
        <returns>To be added.</returns>
        <remarks><para>Используется <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" /> для преобразования действительных и мнимых коэффициентов в комплексное число.</para>
          <para>Разность двух комплексных чисел определяется следующим образом:</para>
          <para>Рисунок 1: разница между двумя комплексными числами</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ImSum">
      <MemberSignature Language="C#" Value="public string ImSum (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImSum([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImSum(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImSum (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16796)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Компл_число1, Компл_число2,...-1 – 29 сложных чисел для добавления.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Возвращает сумму двух или более комплексных чисел в текстовом формате x + yi или x + yj.</summary>
        <returns>To be added.</returns>
        <remarks><para>Используется <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Complex(System.Object,System.Object,System.Object)" /> для преобразования действительных и мнимых коэффициентов в комплексное число. </para>
          <para>Сумма двух комплексных чисел определяется следующим образом:</para>
          <para>Рисунок 1: сумма двух комплексных чисел</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ImTan">
      <MemberSignature Language="C#" Value="public string ImTan (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImTan([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ImTan(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImTan (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ImTan(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16940)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Комплексное число, для которого требуется получить тангенс.</param>
        <summary>Возвращает тангенс комплексного числа.</summary>
        <returns>Задает логическое условие соответствия для текстовой строки.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public object Index (object Arg1, double Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Index([in]object Arg1, [in]float64 Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Index(System.Object,System.Double,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Index (Arg1 As Object, Arg2 As Double, Optional Arg3 As Object, Optional Arg4 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16413)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Array или Reference — диапазон ячеек или массив констант. Для ссылок это ссылка на один или несколько диапазонов ячеек.</param>
        <param name="Arg2">Row_num — выбирает строку в массиве, из которой возвращается значение. Если row_num опущено, column_num является обязательным. Для ссылок — номер строки в поле Ссылка, из которой возвращается ссылка.</param>
        <param name="Arg3">Column_num — выбирает столбец в массиве, из которого возвращается значение. Если column_num опущено, row_num является обязательным. Для ссылки — номер столбца в ссылке, для которого возвращается ссылка.</param>
        <param name="Arg4">Area_num используется только при возврате ссылок. Выбирает диапазон в поле Ссылка, из которого возвращается пересечение row_num и column_num. Первая выделенная или введенная область пронумерована 1, вторая — 2 и т. д. Если параметр area_num опущен, то <b>индекс</b> использует область 1.</param>
        <summary>Возвращает значение или ссылку на значение из таблицы или диапазона. Существует две формы функции <b>index</b> : форма массива и справочная форма.</summary>
        <returns>To be added.</returns>
        <remarks><para>Форма массива</para>
          <para>Возвращает значение элемента в таблице или массиве, выбранном с помощью индексов строк и столбцов.</para>
          <para>Используйте форму массива, если первый аргумент для <b>index</b> является константой массива.</para>
          <para>Если используются оба аргумента row_num и column_num, то <b>index</b> возвращает значение в ячейке на пересечении row_num и column_num. </para>
          <para>Если для row_num или column_num задано значение 0 (ноль), то <b>index</b> возвращает массив значений для всего столбца или строки соответственно. Чтобы использовать значения, возвращаемые в виде массива, введите функцию <b>index</b> как формулу массива в горизонтальном диапазоне ячеек для строки и в вертикальном диапазоне ячеек для столбца. Чтобы ввести формулу массива, нажмите клавиши CTRL + SHIFT + ВВОД. </para>
          <para>Row_num и column_num должны указать на ячейку в массиве; в противном случае <b>index</b> возвращает #REF! значение ошибки. </para>
          <para>Форма ссылок</para>
          <para>Возвращает ссылку на ячейку на пересечении определенной строки и столбца. Если ссылка состоит из несмежных выделений, вы можете выбрать вариант для поиска. Если каждая область в ссылке содержит только одну строку или столбец, то аргумент row_num или column_num соответственно является необязательным. Например, для ссылки на одну строку используйте индекс (Reference, column_num). </para>
          <para>После того как ссылка и area_num выбрали определенный диапазон, row_num и column_num выберите определенную ячейку: row_num 1 — это первая строка диапазона, column_num 1 — первый столбец и т. д. Ссылка, возвращаемая по <b>индексу</b> , это пересечение row_num и column_num. </para>
          <para>Если для row_num или column_num задано значение 0 (ноль), то <b>index</b> возвращает ссылку для всего столбца или строки соответственно.</para>
          <para>Row_num, column_num и area_num должны указывать на ячейку в ссылке; в противном случае <b>index</b> возвращает #REF! значение ошибки. Если row_num и column_num опущены, то <b>index</b> возвращает область в ссылке, заданную в area_num. </para>
          <para>Результат функции <b>index</b> является ссылкой и интерпретируется так же, как в других формулах. В зависимости от формулы, возвращаемое значение INDEX можно использовать как ссылку или как значение. Например, ЯЧЕЙКа формулы ("Width", INDEX (a1: B2, 1, 2)) эквивалентна ЯЧЕЙКе ("Width", B1). Функция ЯЧЕЙКа использует возвращаемое значение INDEX в качестве ссылки на ячейку. С другой стороны, формула, например 2 * INDEX (a1: B2, 1, 2), преобразует возвращаемое значение <b>индекса</b> в число в ячейке B1.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Intercept">
      <MemberSignature Language="C#" Value="public double Intercept (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Intercept([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Intercept(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Intercept (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Intercept(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16695)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Known_y — зависимый набор наблюдений или данных.</param>
        <param name="Arg2">Known_x — независимый набор наблюдений или данных.</param>
        <summary>Вычисляет точку, в которой линия пересекает ось y с использованием существующих значений x и y. Точка перехвата основана на наилучшей линии регрессии, построенной по известным значениям x и известным значениям y. Используйте функцию <b>перехвата</b> , если требуется определить значение зависимой переменной, если она имеет значение 0 (ноль). Например, вы можете использовать функцию <b>перехвата</b> для прогнозирования электрического сопротивления на металлической температуре по 0 °c при достижении точки данных в комнатной температуре и выше.</summary>
        <returns>To be added.</returns>
        <remarks><para>Аргументы должны быть числами или именами, массивами или ссылками, содержащими числа. </para>
          <para>Если аргумент array или Reference содержит текст, логические значения или пустые ячейки, эти значения игнорируются; Тем не менее, ячейки с нулевым значением включены. </para>
          <para>Если known_y и known_x содержат различное количество точек данных или не содержат точек данных, то <b>Конст</b> возвращает значение ошибки #N/a. </para>
          <para>Уравнение для перехвата линии регрессия (a) имеет следующий значение:</para>
          <para>Рисунок 1: формула пересечения линии регрессии</para>
          <para> </para>
          <para> </para>
          <para>где наклон, b, вычисляется следующим образом:</para>
          <para>Рисунок 2: уравнение для наклона</para>
          <para> </para>
          <para> </para>
          <para>где x и y — пример среднего значения (known_x) и СРЗНАЧ (known_y).</para>
          <para>Базовый алгоритм, используемый в функциях <b>Конст</b> и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Slope(System.Object,System.Object)" /> функциях, отличается от базового алгоритма, <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LinEst(System.Object,System.Object,System.Object,System.Object)" /> используемого в функции. Различия между этими алгоритмами могут приводить к различным результатам, если данные неопределены и коллинеарность. Например, если точки данных для аргумента known_y — 0, а точки данных для аргумента known_x — 1: </para>
          <list type="bullet">
            <item>
              <description>
                <b>Перехватите</b> и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Slope(System.Object,System.Object)" /> возвратите #DIV/0! ошибкой. Алгоритм <b>Intercept</b> "конст <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Slope(System.Object,System.Object)" /> " и "алгоритм" предназначен для поиска одного и только одного ответа, и в этом случае может быть несколько ответов. </description>
            </item>
            <item>
              <description>
                <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LinEst(System.Object,System.Object,System.Object,System.Object)" />Возвращает значение 0. <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LinEst(System.Object,System.Object,System.Object,System.Object)" /> Алгоритм предназначен для получения разумных результатов для данных коллинеарности, и в этом случае можно найти по крайней мере один ответ.</description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IntRate">
      <MemberSignature Language="C#" Value="public double IntRate (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 IntRate([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IntRate(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IntRate (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Optional Arg5 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16817)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Дата_согл — Дата соглашения по ценным обозначением. Дата сопоставления безопасности — это дата после даты выпускной сделки, когда она передается покупателю.</param>
        <param name="Arg2">Дата_вступления_в_силу — срок погашения ценных бумаг. Срок погашения — это дата истечения срока действия системы безопасности.</param>
        <param name="Arg3">Инвестиция — сумма, инвестированная в систему безопасности.</param>
        <param name="Arg4">Погашение — сумма, которая должна быть получена при погашении.</param>
        <param name="Arg5">Базис — используемый тип расчета дня.</param>
        <summary>Возвращает процентную ставку для полностью инвестированной системы безопасности.</summary>
        <returns>To be added.</returns>
        <remarks><list type="table">
            <item>
              <term>0 или опущен</term>
              <description>АМЕРИКАНСКИЙ (NASD) 30/360</description>
            </item>
            <item>
              <term>1,1</term>
              <description>Фактический/фактический</description>
            </item>
            <item>
              <term>2</term>
              <description>Фактический/360</description>
            </item>
            <item>
              <term>4</term>
              <description>Фактические/365</description>
            </item>
            <item>
              <term>4 </term>
              <description>Европейская 30/360</description>
            </item>
          </list>
          <para>Microsoft Excel хранит даты как последовательные серийные номера, чтобы их можно было использовать в вычислениях. По умолчанию 1 января 1900 года является порядковым номером 1, а 1 января 2008 — порядковым номером 39448, так как он составляет 39 448 дней после 1 января 1900. Microsoft Excel для Macintosh использует в качестве значения по умолчанию другую систему дат. </para>
          <para>Дата соглашения — это дата приобретения покупателем купона, например облигации. Дата погашения — это дата истечения срока действия купона. Например, предположим, что 30-летний облигация составляет 1 января 2008 г., и позднее он покупается покупателем за шесть месяцев. Дата выпуска — 1 января 2008 года, Дата расчета — 1 июля 2008, а срок погашения — 1 января 2038 г., что составляет 30 лет после даты выпуска 1 января, 2008 года. </para>
          <para>Дата_согл, дата_вступл_в_силу и базис усекаются до целых. </para>
          <para>Если дата_согл или дата_вступл_в_силу не является допустимой датой, <b>ИНОРМА</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если инвестиция ≤ 0 или выкуп ≤ 0, <b>ИНОРМА</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если базис &lt; 0 или базис &gt; 4, <b>ИНОРМА</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если дата_соглашения ≥ дата_вступления_в_силу, <b>ИНОРМА</b> Возвращает #NUM! значение ошибки. </para>
          <para>
            <b>ИНОРМА</b> вычисляется следующим образом: </para>
          <para>Рисунок 1: уравнение для метода ИНОРМА</para>
          <para> </para>
          <para> </para>
          <para>где:</para>
          <para>B — количество дней в году в зависимости от года.</para>
          <para>DIM = количество дней от даты соглашения до даты погашения.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Ipmt">
      <MemberSignature Language="C#" Value="public double Ipmt (double Arg1, double Arg2, double Arg3, double Arg4, object Arg5, object Arg6);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Ipmt([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]float64 Arg4, [in]object Arg5, [in]object Arg6) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Ipmt(System.Double,System.Double,System.Double,System.Double,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ipmt (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Double, Optional Arg5 As Object, Optional Arg6 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16551)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Double" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Ставка — процентная ставка за период.</param>
        <param name="Arg2">За период, для которого нужно найти интерес, и должен находиться в диапазоне от 1 до кпер.</param>
        <param name="Arg3">Кол_пер — общее количество периодов выплат в аннуитете.</param>
        <param name="Arg4">НЗ — текущее значение или общая сумма, на которую вы поинтересовали серию будущих платежей.</param>
        <param name="Arg5">БС — будущее значение или баланс наличности, который вы хотите достичь после последнего платежа. Если аргумент бс опущен, предполагается, что он равен 0 (например, будущее значение ссуды равно 0).</param>
        <param name="Arg6">Тип — число 0 или 1, обозначающее, когда следует оплатить платежи. Если параметр type опущен, предполагается, что он равен 0.</param>
        <summary>Возвращает процентную оплату за данный период для инвестиций на основе периодических, постоянных выплат и постоянной процентной ставки.</summary>
        <returns>To be added.</returns>
        <remarks><list type="table">
            <item>
              <term>нуль</term>
              <description>В конце периода</description>
            </item>
            <item>
              <term>1,1</term>
              <description>В начале периода</description>
            </item>
          </list>
          <para>Убедитесь, что вы последовательны в выборе единиц измерения, используемых для указания коэффициента и кпер. Если вы выплачиваете ежемесячные выплаты по ссуде на 4% ежегодно, используйте 12%/12 для расчета ставка и 4 * 12 для кпер. Если вы вносите годовые платежи в одну и ту же ссуду, используйте значение 12% для параметра ставка и 4 для параметра кпер. </para>
          <para>Для всех аргументов выплачиваемые деньги, например депозиты для экономии, представлены отрицательными числами; денежные средства, которые вы получаете, например чеки для дивидендов, представлены положительными числами.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Irr">
      <MemberSignature Language="C#" Value="public double Irr (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Irr([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Irr(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Irr (Arg1 As Object, Optional Arg2 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16446)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Values — массив или ссылка на ячейки, содержащие числа, для которых необходимо вычислить внутреннюю ставку доходности.</param>
        <param name="Arg2">Guess — выпадающее число близко к результату ВСД.</param>
        <summary>Возвращает внутреннюю норму прибыли для ряда денежных потоков, представленных числами в значениях. Эти денежные потоки не обязательно должны быть четными, так как они будут использоваться для аннуитета. Тем не менее, эти денежные потоки должны выполняться через определенные промежутки времени, например ежемесячно или ежегодно. Внутренняя ставка доходности — это процентная ставка, полученная для инвестиций, состоящей из платежей (отрицательных значений) и доходов (положительных значений), которые происходят в обычном периоде.</summary>
        <returns>To be added.</returns>
        <remarks><para>Значения должны содержать по крайней мере одно положительное значение и одно отрицательное значение, чтобы вычислить внутреннюю ставку доходности. </para>
          <para>ВСД использует порядок значений для интерпретации порядка денежных потоков. Обязательно укажите значения платежей и доходов в нужной последовательности. </para>
          <para>Если аргумент array или Reference содержит текст, логические значения или пустые ячейки, эти значения игнорируются.</para>
          <para>В Microsoft Excel используется итеративный метод вычисления <b>ВСД</b>. Начиная с предположения, <b>ВСД</b> циклически проходит через вычисление до тех пор, пока результат не станет точным в пределах 0,00001 процентов. Если функции <b>ВСД</b> не удается найти результат, который работает после 20 попыток, то #NUM! возвращается значение ошибки. </para>
          <para>В большинстве случаев нет необходимости предоставлять прогноз для расчета <b>ВСД</b> . Если параметр Guess опущен, предполагается, что он равен 0,1 (10 процентов). </para>
          <para>Если функция <b>ВСД</b> предоставляет #NUM! значение ошибки или, если результат не близко к ожидаемому, повторите попытку, указав другое значение для предположения.</para>
          <para>
            <b>ВСД</b> тесно связан с <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Npv(System.Double,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />функцией чистой приведенной стоимости. Процентное значение, вычисляемое <b>ВСД</b> , представляет собой процентную ставку, соответствующую 0 (нулевое) остаточное значение. В следующей формуле показано <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Npv(System.Double,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> , как и <b>ВСД</b> связаны:</para>
          <para>ЧПС (ВСД (B1: B6), B1: B6) равняется: 3,60 E-08 [в точности вычисления <b>ВСД</b> значение 3,60 e-08 фактически равно 0 (ноль).]</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsErr">
      <MemberSignature Language="C#" Value="public bool IsErr (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsErr([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsErr(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsErr (Arg1 As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsErr(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16510)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Value — значение, которое вы хотите проверить. Значение может быть пустым (пустой ячейкой), ошибкой, логическим, текстом, числом или значением ссылки, а также именем, ссылающимся на любое из этих элементов, которое нужно протестировать.</param>
        <summary>Проверяет тип значения и возвращает значение <b>true</b> или <b>false</b> в зависимости от того, относится ли значение к любому значению ошибки, кроме #N/а.</summary>
        <returns>To be added.</returns>
        <remarks><para>Аргументы Value для функций — не преобразуются. Например, в большинстве других функций, где требуется число, текстовое значение "19" преобразуется в число 19. Однако в формуле ("19") "19" не преобразуется из текстового значения, а <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsNumber(System.Object)" /> функция возвращает <b>значение false</b>. </para>
          <para>Функции функции — используются в формулах для проверки результатов вычислений. При объединении с функцией если они предоставляют метод для поиска ошибок в формулах.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsError">
      <MemberSignature Language="C#" Value="public bool IsError (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsError([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsError(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsError (Arg1 As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsError(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16387)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Value — значение, которое вы хотите проверить. Значение может быть пустым (пустой ячейкой), ошибкой, логическим, текстом, числом или значением ссылки, а также именем, ссылающимся на любое из этих элементов, которое нужно протестировать.</param>
        <summary>Проверяет тип значения и возвращает значение <b>true</b> или <b>false</b> в зависимости от того, какое значение относится к какому-либо значению ошибки (#N/a, #VALUE!, #REF!, #DIV/0!, #NUM!, #NAME? или #NULL!).</summary>
        <returns>To be added.</returns>
        <remarks><para>Аргументы Value для функций — не преобразуются. Например, в большинстве других функций, где требуется число, текстовое значение "19" преобразуется в число 19. Однако в формуле ("19") "19" не преобразуется из текстового значения, а <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsNumber(System.Object)" /> функция возвращает <b>значение false</b>. </para>
          <para>Функции функции — используются в формулах для проверки результатов вычислений. При объединении с функцией если они предоставляют метод для поиска ошибок в формулах.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEven">
      <MemberSignature Language="C#" Value="public bool IsEven (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsEven([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsEven(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEven (Arg1 As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsEven(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16804)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Value — значение, которое вы хотите проверить. Значение может быть пустым (пустой ячейкой), ошибкой, логическим, текстом, числом или значением ссылки, а также именем, ссылающимся на любое из этих элементов, которое нужно протестировать.</param>
        <summary>Проверяет тип значения и возвращает значение <b>true</b> или <b>false</b> в зависимости от того, является ли значение четным.</summary>
        <returns>To be added.</returns>
        <remarks><para>Аргументы Value для функций — не преобразуются. Например, в большинстве других функций, где требуется число, текстовое значение "19" преобразуется в число 19. Однако в формуле ("19") "19" не преобразуется из текстового значения, а <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsNumber(System.Object)" /> функция возвращает <b>значение false</b>. </para>
          <para>Функции функции — используются в формулах для проверки результатов вычислений. При объединении с функцией если они предоставляют метод для поиска ошибок в формулах.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFormula">
      <MemberSignature Language="C#" Value="public bool IsFormula (Microsoft.Office.Interop.Excel.Range Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsFormula([in]class Microsoft.Office.Interop.Excel.Range Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsFormula(Microsoft.Office.Interop.Excel.Range)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsFormula (Arg1 As Range) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsFormula(Microsoft::Office::Interop::Excel::Range ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16973)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
      </Parameters>
      <Docs>
        <param name="Arg1">Ссылка на ячейку, которую необходимо протестировать. Ссылка может быть ссылкой на ячейку, формулой или именем, ссылающейся на ячейку.</param>
        <summary>Проверяет, является ли ссылка на ячейку, содержащую формулу, и возвращает <b>значение true</b> или <b>false</b>.</summary>
        <returns><b>BOOL</b></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLogical">
      <MemberSignature Language="C#" Value="public bool IsLogical (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsLogical([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsLogical(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsLogical (Arg1 As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsLogical(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16582)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Value — значение, которое вы хотите проверить. Значение может быть пустым (пустой ячейкой), ошибкой, логическим, текстом, числом или значением ссылки, а также именем, ссылающимся на любое из этих элементов, которое нужно протестировать.</param>
        <summary>Проверяет тип значения и возвращает значение <b>true</b> или <b>false</b> в зависимости от того, относится ли значение к логическому значению.</summary>
        <returns>To be added.</returns>
        <remarks><para>Аргументы Value для функций — не преобразуются. Например, в большинстве других функций, где требуется число, текстовое значение "19" преобразуется в число 19. Однако в формуле ("19") "19" не преобразуется из текстового значения, а <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsNumber(System.Object)" /> функция возвращает <b>значение false</b>. </para>
          <para>Функции функции — используются в формулах для проверки результатов вычислений. При объединении с функцией если они предоставляют метод для поиска ошибок в формулах.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNA">
      <MemberSignature Language="C#" Value="public bool IsNA (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsNA([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsNA(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNA (Arg1 As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNA(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16386)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Value — значение, которое вы хотите проверить. Значение может быть пустым (пустой ячейкой), ошибкой, логическим, текстом, числом или значением ссылки, а также именем, ссылающимся на любое из этих элементов, которое нужно протестировать.</param>
        <summary>Проверяет тип значения и возвращает значение <b>true</b> или <b>false</b> в зависимости от того, относится ли значение к значению ошибки #N/a (значение недоступно).</summary>
        <returns>To be added.</returns>
        <remarks><para>Аргументы Value для функций — не преобразуются. Например, в большинстве других функций, где требуется число, текстовое значение "19" преобразуется в число 19. Однако в формуле ("19") "19" не преобразуется из текстового значения, а <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsNumber(System.Object)" /> функция возвращает <b>значение false</b>. </para>
          <para>Функции функции — используются в формулах для проверки результатов вычислений. При объединении с функцией если они предоставляют метод для поиска ошибок в формулах.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNonText">
      <MemberSignature Language="C#" Value="public bool IsNonText (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsNonText([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsNonText(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNonText (Arg1 As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNonText(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16574)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Value — значение, которое вы хотите проверить. Значение может быть пустым (пустой ячейкой), ошибкой, логическим, текстом, числом или значением ссылки, а также именем, ссылающимся на любое из этих элементов, которое нужно протестировать.</param>
        <summary>Проверяет тип значения и возвращает значение <b>true</b> или <b>false</b> в зависимости от того, относится ли значение к любому элементу, который не является текстом. (Обратите внимание, что эта функция возвращает <b>значение true</b> , если значение ссылается на пустую ячейку).</summary>
        <returns>To be added.</returns>
        <remarks><para>Аргументы Value для функций — не преобразуются. Например, в большинстве других функций, где требуется число, текстовое значение "19" преобразуется в число 19. Однако в формуле ("19") "19" не преобразуется из текстового значения, а <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsNumber(System.Object)" /> функция возвращает <b>значение false</b>. </para>
          <para>Функции функции — используются в формулах для проверки результатов вычислений. При объединении с функцией если они предоставляют метод для поиска ошибок в формулах.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNumber">
      <MemberSignature Language="C#" Value="public bool IsNumber (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsNumber([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsNumber(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNumber (Arg1 As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNumber(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16512)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Value — значение, которое вы хотите проверить. Значение может быть пустым (пустой ячейкой), ошибкой, логическим, текстом, числом или значением ссылки, а также именем, ссылающимся на любое из этих элементов, которое нужно протестировать.</param>
        <summary>Проверяет тип значения и возвращает значение <b>true</b> или <b>false</b> в зависимости от того, указывает ли значение на число.</summary>
        <returns>To be added.</returns>
        <remarks><para>Аргументы Value для функций — не преобразуются. Например, в большинстве других функций, где требуется число, текстовое значение "19" преобразуется в число 19. Однако в формуле ("19") "19" не преобразуется из текстового значения, а <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsNumber(System.Object)" /> функция возвращает <b>значение false</b>. </para>
          <para>Функции функции — используются в формулах для проверки результатов вычислений. При объединении с функцией если они предоставляют метод для поиска ошибок в формулах.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ISO_Ceiling">
      <MemberSignature Language="C#" Value="public double ISO_Ceiling (double Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ISO_Ceiling([in]float64 Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ISO_Ceiling(System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ISO_Ceiling (Arg1 As Double, Optional Arg2 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16907)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Number — округляемое значение.</param>
        <param name="Arg2">Точность — Необязательный множитель, для которого требуется округлить число. Если разрядность опущена, значение по умолчанию равно 1.</param>
        <summary>Возвращает число, округленное до ближайшего целого числа или до ближайшего числа, кратного значимости.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOdd">
      <MemberSignature Language="C#" Value="public bool IsOdd (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsOdd([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsOdd(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsOdd (Arg1 As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOdd(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16805)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Value — значение, которое вы хотите проверить. Значение может быть пустым (пустой ячейкой), ошибкой, логическим, текстом, числом или значением ссылки, а также именем, ссылающимся на любое из этих элементов, которое нужно протестировать.</param>
        <summary>Проверяет тип значения и возвращает значение <b>true</b> или <b>false</b> в зависимости от того, является ли значение нечетным.</summary>
        <returns>To be added.</returns>
        <remarks><para>Аргументы Value для функций — не преобразуются. Например, в большинстве других функций, где требуется число, текстовое значение "19" преобразуется в число 19. Однако в формуле ("19") "19" не преобразуется из текстового значения, а <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsNumber(System.Object)" /> функция возвращает <b>значение false</b>. </para>
          <para>Функции функции — используются в формулах для проверки результатов вычислений. При объединении с функцией если они предоставляют метод для поиска ошибок в формулах.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsoWeekNum">
      <MemberSignature Language="C#" Value="public double IsoWeekNum (double Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 IsoWeekNum([in]float64 Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsoWeekNum(System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsoWeekNum (Arg1 As Double, Optional Arg2 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16968)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Код даты и времени, используемый Excel для вычисления даты и времени.</param>
        <param name="Arg2">Этот аргумент недоступен в функции.</param>
        <summary>Возвращает номер недели в году по стандарту ISO для заданной даты.</summary>
        <returns><b>DOUBLE</b></returns>
        <remarks><para>Возвращает порядковый номер недели календаря [ISO8601] в году для заданной даты. ISO 8601 определяет календарную неделю как интервал времени в семь календарных дней, начиная с понедельника, и первый календарный день года, который включает первый четверг этого года.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Ispmt">
      <MemberSignature Language="C#" Value="public double Ispmt (double Arg1, double Arg2, double Arg3, double Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Ispmt([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]float64 Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Ispmt(System.Double,System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ispmt (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Ispmt(double Arg1, double Arg2, double Arg3, double Arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16734)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Ставка — процентная ставка инвестиций.</param>
        <param name="Arg2">Для каждого периода, для которого нужно найти интерес, и должно быть между 1 и кпер.</param>
        <param name="Arg3">Кол_пер — общее число периодов выплат для инвестиции.</param>
        <param name="Arg4">НЗ — текущая стоимость инвестиции. Для ссуды НЗ — это сумма ссуды.</param>
        <summary>Вычисляет процентную оплату за определенный период инвестиции. Эта функция предназначена для совместимости с Lotus 1-2-3.</summary>
        <returns>To be added.</returns>
        <remarks><para>Убедитесь, что вы последовательны в выборе единиц измерения, используемых для указания коэффициента и кпер. Если вы вносите ежемесячные платежи по ссуде из четырех лет на годовую процентную ставку в 12 процентов, используйте 12%/12 для параметра ставка и 4 * 12 для параметра кпер. Если вы вносите годовые платежи в одну и ту же ссуду, используйте значение 12% для параметра ставка и 4 для параметра кпер. </para>
          <para>Для всех аргументов выплачиваемые деньги, например депозиты на сберегательные или другие изъятия, представлены отрицательными числами; получаемые деньги, например чеки для дивидендов и другие депозиты, представлены положительными числами. </para>
          <para>Дополнительную информацию о финансовых функциях можно узнать в <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Pv(System.Double,System.Double,System.Double,System.Object,System.Object)" /> статье функция.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsText">
      <MemberSignature Language="C#" Value="public bool IsText (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsText([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsText(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsText (Arg1 As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsText(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16511)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Value — значение, которое вы хотите проверить. Значение может быть пустым (пустой ячейкой), ошибкой, логическим, текстом, числом или значением ссылки, а также именем, ссылающимся на любое из этих элементов, которое нужно протестировать.</param>
        <summary>Проверяет тип значения и возвращает значение <b>true</b> или <b>false</b> в зависимости от того, относится ли значение к тексту.</summary>
        <returns>To be added.</returns>
        <remarks><para>Аргументы Value для функций — не преобразуются. Например, в большинстве других функций, где требуется число, текстовое значение "19" преобразуется в число 19. Однако в формуле ("19") "19" не преобразуется из текстового значения, а <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsNumber(System.Object)" /> функция возвращает <b>значение false</b>. </para>
          <para>Функции функции — используются в формулах для проверки результатов вычислений. При объединении с функцией если они предоставляют метод для поиска ошибок в формулах.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsThaiDigit">
      <MemberSignature Language="C#" Value="public bool IsThaiDigit (string Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsThaiDigit([in]string Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.IsThaiDigit(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsThaiDigit (Arg1 As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsThaiDigit(System::String ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16759)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <summary>Зарезервировано для внутреннего использования.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Kurt">
      <MemberSignature Language="C#" Value="public double Kurt (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Kurt([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Kurt(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Kurt (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16706)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число1, число2,... – 1 — 30 аргументов, для которых требуется вычислить эксцесс. Вы также можете использовать один массив или ссылку на массив вместо аргументов, разделенных запятыми.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Возвращает эксцесс набора данных. Эксцесс характеризует относительную пеакеднесс или плоскость распределения по сравнению с нормальным распределением. Положительный эксцесс указывает относительно пиковое распределение. Отрицательный эксцесс обозначает относительно сглаженное распределение.</summary>
        <returns>To be added.</returns>
        <remarks><para>Аргументы могут быть числами или именами, массивами или ссылками, содержащими числа. </para>
          <para>Учитываются логические значения и текстовые представления чисел, которые вы вводите непосредственно в список аргументов. </para>
          <para>Если аргумент array или Reference содержит текст, логические значения или пустые ячейки, эти значения игнорируются; Тем не менее, ячейки с нулевым значением включены. </para>
          <para>Аргументы, которые являются значениями ошибки или текстом, не преобразуемым в числа, вызывают ошибки. </para>
          <para>При наличии менее четырех точек данных или если стандартное отклонение примера равно нулю, <b>эксцесс</b> возвращает #DIV/0! значение ошибки. </para>
          <para>Эксцесс определяется следующим образом: </para>
          <para>Рисунок 1: уравнение эксцесс</para>
          <para> </para>
          <para> </para>
          <para>где s — это пример стандартного отклонения.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Large">
      <MemberSignature Language="C#" Value="public double Large (object Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Large([in]object Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Large(System.Object,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Large (Arg1 As Object, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Large(System::Object ^ Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16709)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Array — массив или диапазон данных, для которых необходимо определить k TH максимальное значение.</param>
        <param name="Arg2">K — позиция (начиная с наибольшей) в массиве или диапазоне ячеек данных для возврата.</param>
        <summary>Возвращает k TH максимальное значение в наборе данных. С помощью этой функции можно выбрать значение в зависимости от его относительного положения. Например, вы можете использовать <b>крупный</b> для возврата оценки самого высокого, возможного или третьего места.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если массив пуст, то <b>крупный</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если k ≤ 0 или k больше, чем число точек данных, то <b>крупный</b> Возвращает #NUM! значение ошибки.</para>
          <para>Если n — число точек данных в диапазоне, то крупный (массив, 1) возвращает наибольшее значение, а крупный (Array, n) возвращает наименьшее значение.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Lcm">
      <MemberSignature Language="C#" Value="public double Lcm (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Lcm([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Lcm(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Lcm (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16859)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число1, число2,...-от 1 до 29 значений, для которых требуется наименьшее общее кратное. Если значение не является целым числом, оно усекается.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Возвращает наименьшее общее кратное целочисленного значения. Наименьшее общее Кратие — это наименьшее положительное целое число, которое кратно всем целочисленным аргументам число1, число2 и т. д. Используйте LCM для добавления дробей с разными знаменателями.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если какой-либо из аргументов не является числом, <b>LCM</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если какой-либо из аргументов меньше нуля, <b>LCM</b> Возвращает #NUM! значение ошибки.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="LinEst">
      <MemberSignature Language="C#" Value="public object LinEst (object Arg1, object Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object LinEst([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LinEst(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function LinEst (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16433)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Known_y — набор значений y, которые уже известны в соотношении y = mx + b.</param>
        <param name="Arg2">Known_x — необязательный набор значений x, которые, возможно, уже известны в соотношении y = mx + b.</param>
        <param name="Arg3">Const — логическое значение, указывающее, следует ли принудительно установить значение константы b равным 0.</param>
        <param name="Arg4">Stats — логическое значение, указывающее, следует ли возвращать дополнительную статистику по регрессии.</param>
        <summary>Вычисляет статистику для строки с помощью метода "наименьшие квадраты", чтобы вычислить прямую линию, которая лучше всего подходит для данных, и возвращает массив, описывающий линию. Так как эта функция возвращает массив значений, она должна вводиться как формула массива.</summary>
        <returns>To be added.</returns>
        <remarks><para>Уравнение для строки имеет следующий следующий текст:</para>
          <para>y = mx + b или</para>
          <para>y = m1x1 + m2x2 +... + b (при наличии нескольких диапазонов значений x)</para>
          <para>где зависимое значение y является функцией независимых значений x. Значения m — это коэффициенты, соответствующие каждому значению x, а b — константное значение. Обратите внимание, что y, x и m могут быть векторами. <b>Функция ЛИНЕЙН</b> возвращает массив {mn, MN-1,..., M1, b}. <b>ЛИНЕЙН</b> также может возвращать дополнительную статистику по регрессии.</para>
          <para>Если known_y массива находится в одной колонке, то каждый столбец known_x интерпретируется как отдельная переменная. </para>
          <para>Если массив known_y находится в одной строке, то каждая строка known_x интерпретируется как отдельная переменная. </para>
          <para>Known_x массива может включать один или несколько наборов переменных. Если используется только одна переменная, known_y и known_x могут быть диапазонами любой фигуры, если у них одинаковый размер. Если используется несколько переменных, known_y должен быть векторным (то есть диапазоном с высотой одной строки или шириной в один столбец). </para>
          <para>Если параметр known_x опущен, предполагается, что он равен массиву {1, 2, 3,...} такой же размер, что и known_y. </para>
          <para>Если конст имеет <b>значение true</b> или опущено, то b вычисляется обычным образом. </para>
          <para>Если конст имеет <b>значение false</b>, b задается равным 0, а значения m корректируются по y = mx. </para>
          <para>Если параметр stats имеет значение <b>труууе</b>, то <b>функция ЛИНЕЙН</b> возвращает дополнительную статистику по регрессии, поэтому возвращаемый массив имеет значение {MN, MN-1,..., M1, b; Сен, Сен-1,..., SE1, СЕБ; R2, Сэй; F, DF; ссрег, ссресид}. </para>
          <para>Если параметр stats имеет <b>значение false</b> или опущен, <b>функция ЛИНЕЙН</b> возвращает только коэффициенты m и константу b. </para>
          <para>Дополнительная регрессионная статистика приведена ниже.</para>
          <list type="table">
            <item>
              <term>SE1, SE2,..., Сен</term>
              <description>Стандартные значения ошибок для коэффициента M1, m2,..., MN.</description>
            </item>
            <item>
              <term>себ</term>
              <description>Стандартное значение ошибки для константы b (СЕБ = #N/A, если конст имеет <b>значение false</b>).</description>
            </item>
            <item>
              <term>Семейство</term>
              <description>Коэффициент определения. Сравнивает предполагаемые и фактические значения y, а диапазоны в значении от 0 до 1. Если он равен 1, то существует идеальная корреляция в примере — разница между предполагаемыми значениями y и фактическим значением y отсутствует. С другой стороны, если коэффициент определения равен 0, уравнение регрессии не имеет значения для предсказания значения y. </description>
            </item>
            <item>
              <term>сэй</term>
              <description>Стандартная ошибка для оценки y.</description>
            </item>
            <item>
              <term>F</term>
              <description>F статистика или F — наблюдаемое значение. Используйте F статистика, чтобы определить, есть ли отслеживаемое отношение между зависимыми и независимыми переменными.</description>
            </item>
            <item>
              <term>DF</term>
              <description>Степени свободы. С помощью степеней свободы вы сможете находить критически важные значения в статистической таблице. Сравните значения, найденные в таблице, с помощью F статистики, возвращаемой функцией <b>ЛИНЕЙН</b> , чтобы определить уровень вероятности для модели. </description>
            </item>
            <item>
              <term>ссрег</term>
              <description>Регрессионная сумма квадратов.</description>
            </item>
            <item>
              <term>ссресид</term>
              <description>Остаточная сумма квадратов.</description>
            </item>
          </list>
          <para>На следующем рисунке показан порядок, в котором возвращается дополнительная статистика регрессии.</para>
          <para>Рисунок 1: лист</para>
          <para> </para>
          <para> </para>
          <para>Вы можете описать любую прямую линию с наклоном и пересечением по оси y: </para>
          <para>Наклон (m):</para>
          <para>
Чтобы найти наклон линии, часто записывается как m, выполните две точки в линии (x1, y1) и (x2, Y2); наклон равен (Y2-Y1)/(x2-x1).</para>
          <para>Пересечение с осью Y (b):</para>
          <para>
Пересечением y строки, часто записывается как b, является значение y в точке пересечения оси y.</para>
          <para>Уравнение прямой линии имеет значение y = mx + b. Зная значения m и b, вы можете вычислить любую точку на линии, подключив значение y или x к этому уравнению. Вы также можете использовать <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Trend(System.Object,System.Object,System.Object,System.Object)" /> функцию.</para>
          <para>Если у вас только одна независимая переменная x, вы можете получить наклон и y – пересечение напрямую, используя следующие формулы: </para>
          <para>Же</para>
          <para>
= Индекс (ЛИНЕЙН (known_y, known_x), 1)</para>
          <para>Пересечение с осью Y:</para>
          <para>
= Индекс (ЛИНЕЙН (known_y, known_x), 2)</para>
          <para>Точность линии, вычисленную по <b>графику</b> , зависит от степени точечной точки в данных. Чем больше данные, тем точнее <b>Линейная модель.</b> <b>Линейка</b> использует метод наименьших квадратов для определения наилучшего размещения данных. Если у вас только одна независимая переменная x, вычисления для m и b основываются на следующих формулах: </para>
          <para>Рисунок 2: формула</para>
          <para> </para>
          <para> </para>
          <para>Рисунок 3: формула</para>
          <para> </para>
          <para> </para>
          <para>где x и y — это средние значения, например x = AVERAGE (известные x) и y = СРЗНАЧ (known_y).</para>
          <para>Функции линейного и изогнутого <b>зачеркивания</b> и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LogEst(System.Object,System.Object,System.Object,System.Object)" /> могут вычислить наилучшую прямую линию или экспоненциальную кривую, подходящую под ваши данные. Тем не менее, необходимо решить, какой из двух результатов лучше всего подходит для ваших данных. Можно вычислить ТЕНДЕНЦИю (known_y, known_x) для прямой линии или расширения (known_y, known_x) для экспоненциальной кривой. Эти функции, без аргумента new_x, возвращают массив значений y, прогнозируемых вдоль линии или кривой в фактических точках данных. Затем можно сравнить прогнозируемые значения с фактическими значениями. Вы можете запланировать их для визуального сравнения. </para>
          <para>В регрессионном анализе Microsoft Excel вычисляет для каждой точки квадратное различие между значением y, рассчитанным для этой точки, и фактическим значением y. Сумма этих квадратов различий называется остаточной суммой квадратов, ссресид. Затем Microsoft Excel вычисляет общую сумму квадратов, сстотал. Если константа = <b>true</b>или опущена, то общая сумма квадратов — это сумма квадратов разностей между фактическими значениями y и средним значением y. Если константа = <b>false</b>, Общая сумма квадратов представляет собой сумму квадратов фактических значений по оси y (без вычитания среднего значения по оси y из каждого отдельного значения y). Затем сумма регрессии квадратов, ссрег, может быть найдена из: ссрег = сстотал. ссресид. Чем меньше остаточная сумма квадратов, но и как общая сумма квадратов, тем больше значение коэффициента для определения, R2, который является индикатором того, насколько хорошо уравнение, полученное в результате регрессионного анализа, объясняет связь между переменными. R2 равняется ссрег/сстотал. </para>
          <para>В некоторых случаях один или несколько столбцов X (предполагается, что столбцы Y и X —) могут не иметь дополнительных прогнозируемых значений в других столбцах X. Другими словами, удаление одного или нескольких столбцов X может привести к прогнозируемым значениям Y, которые являются одинаково точными. В этом случае эти избыточные столбцы X следует опустить из модели регрессии. Это явление называется "коллинеарностью", так как любой избыточный столбец X можно выразить как сумму кратных столбцов X без избыточности. <b>ЛИНЕЙН</b> проверяет наличие коллинеарности и удаляет лишние столбцы X из модели регрессии при их идентификации. Удаленные столбцы X могут быть распознаны в выходных данных <b>ЛИНЕЙН</b> как коэффициенты 0 и 0 SE. Если один или несколько столбцов удалены как избыточные, то DF будет затронуты, так как DF зависит от количества столбцов X, которые фактически используются для целей прогнозирования. Если значение параметра DF изменилось из-за удаления избыточных столбцов X, также затрагиваются значения Сэй и F. Коллинеарность следует относительно редким методом. Тем не менее, если некоторые столбцы X содержат 0 и 1, в качестве индикаторов того, является ли тема в эксперименте или не является участником определенной группы. Если константа <b>имеет значение истина</b> или опущена, <b>ЛИНЕЙН</b> фактически вставляет дополнительный столбец X для моделирования объекта Конст. Если у вас есть столбец с 1 для каждой темы (если он имеет значение "штекер"), значение 0, если нет, а также столбец с 1 для каждого субъекта, если он есть, или 0 если нет, то этот последний столбец является избыточным, так как записи в нем можно получить от вычитания записи в столбце "признак конца" из записи в дополнительном столбце <b>1.</b> </para>
          <para>DF вычисляется следующим образом, когда из модели не удаляются столбцы X из-за коллинеарности: если имеются столбцы k known_x и const = <b>true</b> или опущены, то DF = n – k – 1. Если константа = <b>false</b>, то DF = n – k. В обоих случаях удаление столбцов X из-за коллинеарности приводит к увеличению значения DF на 1. </para>
          <para>Формулы, возвращающие массивы, должны вводиться как формулы массива. При вводе массива констант, например known_x в качестве аргумента, используйте запятые для разделения значений в одной строке и точку с запятой для разделения строк. Символы-разделители могут различаться в зависимости от параметров языкового стандарта в компоненте "язык и региональные стандарты" в панели управления. </para>
          <para>Обратите внимание, что значения y, предсказанные уравнением регрессии, могут быть недействительными, если они выходят за пределы диапазона значений y, которые использовались для определения уравнения. Базовый алгоритм, используемый в функции <b>ЛИНЕЙН</b> , отличается от базового алгоритма, <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Slope(System.Object,System.Object)" /> используемого в функциях <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Intercept(System.Object,System.Object)" /> и. Различия между этими алгоритмами могут приводить к различным результатам, если данные неопределены и коллинеарность. Например, если точки данных для аргумента known_y — 0, а точки данных для аргумента known_x — 1: </para>
          <para>
            <b>Line</b> возвращает значение 0. Алгоритм <b>ЛИНЕЙН</b> позволяет получить разумные результаты для данных коллинеарности, и в этом случае можно найти по крайней мере один ответ. <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Slope(System.Object,System.Object)" />и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Intercept(System.Object,System.Object)" /> возвратите #DIV/0! ошибкой. Алгоритм <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Slope(System.Object,System.Object)" /> and <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Intercept(System.Object,System.Object)" /> предназначен для поиска одного и только одного ответа, и в этом случае может быть несколько ответов.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Ln">
      <MemberSignature Language="C#" Value="public double Ln (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Ln([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Ln(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ln (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Ln(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16406)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число — положительное вещественное число, для которого вычисляется натуральный логарифм.</param>
        <summary>Возвращает натуральный логарифм числа. Натуральные логарифмы основываются на константе e (2.71828182845904).</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>LN</b> — это обратная функция EXP.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public double Log (double Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Log([in]float64 Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Log(System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Log (Arg1 As Double, Optional Arg2 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16493)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число — положительное вещественное число, для которого вычисляется логарифм.</param>
        <param name="Arg2">Основание — основание логарифма. Если параметр Base опущен, предполагается, что он равен 10.</param>
        <summary>Возвращает логарифм числа по указанному основанию.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Log10">
      <MemberSignature Language="C#" Value="public double Log10 (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Log10([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Log10(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Log10 (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Log10(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16407)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число — положительное вещественное число, для которого вычисляется логарифм основания в 10.</param>
        <summary>Возвращает десятичный логарифм числа.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogEst">
      <MemberSignature Language="C#" Value="public object LogEst (object Arg1, object Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object LogEst([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LogEst(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function LogEst (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16435)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Known_y — набор значений y, которые уже известны в соотношении y = b * m ^ x.</param>
        <param name="Arg2">Known_x — необязательный набор значений x, которые, возможно, уже известны в соотношении y = b * m ^ x.</param>
        <param name="Arg3">Const — логическое значение, указывающее, следует ли принудительно установить значение константы b равным 1.</param>
        <param name="Arg4">Stats — логическое значение, указывающее, следует ли возвращать дополнительную статистику по регрессии.</param>
        <summary>В регрессионном анализе вычисляется экспоненциальная кривая, соответствующая данным, и возвращается массив значений, описывающих кривую. Так как эта функция возвращает массив значений, она должна вводиться как формула массива.</summary>
        <returns>To be added.</returns>
        <remarks><para>Уравнение для кривой имеет следующий значение:</para>
          <para>y = b * m ^ x или</para>
          <para>y = (b *(M1 ^ x1)*(m2 ^ x2) * _) (при наличии нескольких значений x)</para>
          <para>где зависимое значение y является функцией независимых значений x. Значения m — это базовые значения, соответствующие экспоненте x-value, а b — константное значение. Обратите внимание, что y, x и m могут быть векторами. Функция <b>ЛИНЕЙН</b> возвращает массив {mn, MN-1,..., M1, b}.</para>
          <para>Если known_y массива находится в одной колонке, то каждый столбец known_x интерпретируется как отдельная переменная. </para>
          <para>Если массив known_y находится в одной строке, то каждая строка known_x интерпретируется как отдельная переменная. </para>
          <para>Known_x массива может включать один или несколько наборов переменных. Если используется только одна переменная, known_y и known_x могут быть диапазонами любой фигуры, если у них одинаковый размер. Если используется несколько переменных, known_y должен быть диапазоном ячеек с высотой одной строки или шириной в один столбец (который также называется векторным). </para>
          <para>Если параметр known_x опущен, предполагается, что он равен массиву {1, 2, 3,...} такой же размер, что и known_y. </para>
          <para>Если конст имеет <b>значение true</b> или опущено, то b вычисляется обычным образом.</para>
          <para>Если конст имеет <b>значение false</b>, b задается равным 1, а значения m заменяются на y = m ^ x.</para>
          <para>Если параметр stats имеет <b>значение true</b>, функция <b>ЛИНЕЙН</b> возвращает дополнительную статистику по регрессии, поэтому возвращаемый массив имеет значение {MN, MN-1,..., M1, b; Сен, Сен-1,..., SE1, СЕБ; r 2, Сэй; F, DF; ссрег, ссресид}. </para>
          <para>Если параметр stats имеет <b>значение false</b> или опущен, функция <b>ЛИНЕЙН</b> возвращает только коэффициенты m и константу b. </para>
          <para>Дополнительные сведения о дополнительной статистике по регрессии приведены <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LinEst(System.Object,System.Object,System.Object,System.Object)" />в разделе.</para>
          <para>Чем больше изображение будет выглядеть в экспоненциальной кривой, тем выше рассчитанная строка будет соответствовать данным. Например <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LinEst(System.Object,System.Object,System.Object,System.Object)" />, функция <b>ЛИНЕЙН</b> возвращает массив значений, который описывает отношение между значениями, но <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LinEst(System.Object,System.Object,System.Object,System.Object)" /> соответствует прямой линии для данных; Функция <b>ЛИНЕЙН</b> помещается в экспоненциальную кривую. Дополнительные сведения см. в статье <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LinEst(System.Object,System.Object,System.Object,System.Object)" />. </para>
          <para>Если у вас только одна независимая переменная x, вы можете получить значения y-Конст (b) напрямую, используя следующую формулу: </para>
          <para>Пересечение с осью Y (b):</para>
          <para>
INDEX (ЛИНЕЙН (known_y, known_x), 2)</para>
          <para>Вы можете использовать уравнение y = b * m ^ x для предсказания будущих значений y, но Microsoft Excel предоставляет <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Growth(System.Object,System.Object,System.Object,System.Object)" /> функцию для этого. Дополнительные сведения см. в статье <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Growth(System.Object,System.Object,System.Object,System.Object)" />.</para>
          <para>Формулы, возвращающие массивы, должны вводиться как формулы массива. </para>
          <para>При вводе массива констант, например known_x в качестве аргумента, используйте запятые для разделения значений в одной строке и точку с запятой для разделения строк. Символы-разделители могут различаться в зависимости от параметров языкового стандарта в компоненте "язык и региональные стандарты" в панели управления. </para>
          <para>Обратите внимание, что значения y, предсказанные уравнением регрессии, могут быть недействительными, если они выходят за пределы диапазона значений y, которые использовались для определения уравнения.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="LogInv">
      <MemberSignature Language="C#" Value="public double LogInv (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 LogInv([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LogInv(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function LogInv (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double LogInv(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16675)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Вероятность — вероятность, связанная с логарифмической выставкой.</param>
        <param name="Arg2">Среднее — среднее LN (x).</param>
        <param name="Arg3">Standard_dev — стандартное отклонение ln (x).</param>
        <summary>Используйте логарифмическое распределение для анализа преобразованных данных логарисмикалли.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>эта функция заменена одной или несколькими новыми функциями, которые могут улучшить точность и имена которых лучше отражают их использование. Эта функция по-прежнему доступна для совместимости с более ранними версиями Excel. Тем не менее, если обратная совместимость не требуется, рекомендуется использовать новые функции, так как они точнее описывают их функциональность. Более подробную информацию о функции New можно узнать в <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LogNorm_Inv(System.Double,System.Double,System.Double)" /> методе.</para>
          <para>Если любой из аргументов не является числом, функция <b>ЛОГНОРМОБР</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если вероятность &lt;= 0 или вероятность &gt;= 1, функция <b>ЛОГНОРМОБР</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если standard_dev &lt;= 0, функция <b>логнормобр</b> возвращает значение #NUM! значение ошибки. </para>
          <para>Обратная функция логарифмического нормального распределения состоит из следующих компонентов: </para>
          <para>Рис. 1: обратная функция логарифмического распределения</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="LogNorm_Dist">
      <MemberSignature Language="C#" Value="public double LogNorm_Dist (double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 LogNorm_Dist([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]bool Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LogNorm_Dist(System.Double,System.Double,System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function LogNorm_Dist (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double LogNorm_Dist(double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16920)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Arg1">X — значение, для которого вычисляется функция.</param>
        <param name="Arg2">Среднее — среднее LN (x).</param>
        <param name="Arg3">Standard_dev — стандартное отклонение ln (x).</param>
        <param name="Arg4">Интегральная — логическое значение, определяющее форму функции. Если интегральная имеет <b>значение true</b>, <b>LogNorm_Dist</b> возвращает интегральную функцию распределения; Если задано <b>значение false</b>, возвращается функция плотности вероятности.</param>
        <summary>Возвращает логарифмическое распределение x, где ln (x), как правило, распространяется с параметрами среднего и standard_dev. Эта функция используется для анализа данных, которые были преобразованы в логарисмикалли.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если какой-либо аргумент не является числом, <b>LogNorm_Dist</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если x ≤ 0 или standard_dev ≤ 0, то <b>LogNorm_Dist</b> Возвращает #NUM! значение ошибки. </para>
          <para>Уравнение интегрального логарифмического распределения имеет следующий вид: </para>
          <para>Рисунок 1: формула для нормального интегрального распределения</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="LogNorm_Inv">
      <MemberSignature Language="C#" Value="public double LogNorm_Inv (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 LogNorm_Inv([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LogNorm_Inv(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function LogNorm_Inv (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double LogNorm_Inv(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16921)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Вероятность — вероятность, связанная с логарифмической выставкой.</param>
        <param name="Arg2">Среднее — среднее LN (x).</param>
        <param name="Arg3">Standard_dev — стандартное отклонение ln (x).</param>
        <summary>Возвращает обратную функцию логарифмического нормального распределения. Используйте логарифмическое распределение для анализа преобразованных данных логарисмикалли.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если какой-либо аргумент не является числом, <b>LogNorm_Inv</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если вероятность &lt;= 0 или вероятность &gt;= 1, <b>LogNorm_Inv</b> возвращает значение #NUM! значение ошибки. </para>
          <para>Если standard_dev &lt;= 0, <b>LogNorm_Inv</b> Возвращает #NUM! значение ошибки. </para>
          <para>Обратная функция логарифмического нормального распределения состоит из следующих компонентов: </para>
          <para>Рис. 1: обратная функция логарифмического распределения</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="LogNormDist">
      <MemberSignature Language="C#" Value="public double LogNormDist (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 LogNormDist([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LogNormDist(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function LogNormDist (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double LogNormDist(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16674)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">X — значение, для которого вычисляется функция.</param>
        <param name="Arg2">Среднее — среднее LN (x).</param>
        <param name="Arg3">Standard_dev — стандартное отклонение ln (x).</param>
        <summary>Возвращает кумулятивное нормальное распределение x, где ln (x), как правило, распространяется с параметрами среднего и standard_dev. Эта функция используется для анализа данных, которые были преобразованы в логарисмикалли.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>эта функция заменена одной или несколькими новыми функциями, которые могут улучшить точность и имена которых лучше отражают их использование. Эта функция по-прежнему доступна для совместимости с более ранними версиями Excel. Тем не менее, если обратная совместимость не требуется, рекомендуется использовать новые функции, так как они точнее описывают их функциональность. Более подробную информацию о функции New можно узнать в <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LogNorm_Dist(System.Double,System.Double,System.Double,System.Boolean)" /> методе.</para>
          <para>Если какой-либо аргумент не является числом, <b>ЛОГНОРМРАСП</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если x ≤ 0 или standard_dev ≤ 0, <b>ЛОГНОРМРАСП</b> возвращает значение #NUM! значение ошибки. </para>
          <para>Уравнение интегрального логарифмического распределения имеет следующий вид: </para>
          <para>Рисунок 1: формула для нормального интегрального распределения</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Lookup">
      <MemberSignature Language="C#" Value="public object Lookup (object Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Lookup([in]object Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Lookup(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Lookup (Arg1 As Object, Arg2 As Object, Optional Arg3 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16412)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Lookup_value — значение, которое средство <b>просмотра</b> ищет в первом векторе. Lookup_value может быть числом, текстом, логическим значением, именем или ссылкой, ссылающимися на значение.</param>
        <param name="Arg2">Lookup_vector или Array — в векторном виде, диапазон, содержащий только одну строку или один столбец. Значения в lookup_vector могут быть текстовыми, числовыми или логическими значениями. В форме массива — диапазон ячеек, который содержит текст, числа или логические значения, которые необходимо сравнить с lookup_value.</param>
        <param name="Arg3">Result_vector используется только с векторной формой. Диапазон, содержащий только одну строку или столбец. Он должен иметь тот же размер, что и lookup_vector.</param>
        <summary>Возвращает значение из диапазона из одной строки или из одного столбца или из массива. Функция Просмотр имеет две синтаксические формы: Векторная форма и форма массива.</summary>
        <returns>To be added.</returns>
        <remarks><list type="table">
            <item>
              <term>Просмотрите диапазон из одной строки или одного столбца (который называется вектором) для значения и возвратите значение из того же положения во втором диапазоне одной строки или одного столбца</term>
              <description>Векторная форма</description>
              <description>Используйте функцию "Векторная форма", если у вас есть большой список значений для поиска или когда значения могут изменяться со временем.</description>
            </item>
            <item>
              <term>Искать заданное значение в первой строке или столбце массива и возвращать значение из той же позиции в последней строке или столбце массива</term>
              <description>Форма массива</description>
              <description>Используйте форму массива, если у вас небольшой список значений, и значения не меняются со временем.</description>
            </item>
          </list>
          <para>
            <b>Note</b>: функцию <b>Lookup</b> можно также использовать в качестве альтернативной функции if для тщательного тестирования или тестирования для более семи условий. Просмотрите примеры в форме массив.</para>
          <para>Векторная форма</para>
          <para>Vector — это диапазон из одной строки или один столбец. В векторной форме <b>поиска</b> выполняется поиск по одной строке или одному столбцу (называемому вектором) для значения и возвращается значение из того же положения во втором диапазоне одной строки или один столбец. Используйте эту форму функции <b>Lookup</b> , когда необходимо указать диапазон, содержащий значения, которые требуется найти. Другая форма <b>поиска</b> автоматически просматривает первый столбец или строку.</para>
          <para>
            <b>Важно!</b>значения в lookup_vector должны быть размещены в возрастающем порядке:..., – 2, – 1, 0, 1, 2,..., A – Z, <b>false</b>, <b>true</b>; в противном случае <b>Поиск</b> может не дать правильное значение. Текст в верхнем и нижнем регистре эквивалентен.</para>
          <para>Если параметру LOOKUP не удается найти lookup_value, он соответствует наибольшему значению в lookup_vector, которое меньше или равно lookup_value. </para>
          <para>Если lookup_value меньше наименьшего значения в lookup_vector, <b>Поиск</b> даст значение ошибки #N/a.</para>
          <para>Форма массива</para>
          <para>Форма массива <b>Lookup</b> выполняет поиск указанного значения в первой строке или столбце массива и возвращает значение из той же позиции в последней строке или столбце массива. Используйте эту форму <b>подстановки</b> , если сравниваемые значения находятся в первой строке или столбце массива. Используйте другую форму <b>поиска</b> , когда необходимо указать расположение столбца или строки.</para>
          <para>
            <b>Совет</b>. в общем случае лучше всего использовать функцию или <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.HLookup(System.Object,System.Object,System.Object,System.Object)" /> <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.VLookup(System.Object,System.Object,System.Object,System.Object)" />, а не форму для <b>поиска</b>. Эта форма <b>поиска</b> предназначена для совместимости с другими программами электронных таблиц.</para>
          <para>Если функция <b>поиска</b> не может найти lookup_value, она использует наибольшее значение в массиве, которое меньше или равно lookup_value.</para>
          <para>Если lookup_value меньше наименьшего значения в первой строке или столбце (в зависимости от размера массива), то <b>Поиск</b> возвращает значение ошибки #N/a.</para>
          <para>Форма массива <b>поиска</b> очень похожа на функции <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.HLookup(System.Object,System.Object,System.Object,System.Object)" /> и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.VLookup(System.Object,System.Object,System.Object,System.Object)" /> функции. Разница заключается в том <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.HLookup(System.Object,System.Object,System.Object,System.Object)" /> , что поиск lookup_value в первой строке, <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.VLookup(System.Object,System.Object,System.Object,System.Object)" /> Поиск в первом столбце <b>, а поиск</b> выполняется в соответствии с размерами массива.</para>
          <para>Если массив охватывает область, превышающую высоту (больше столбцов, чем строк <b>), Поиск</b> ищет lookup_value в первой строке.</para>
          <para>Если массив является квадратным или имеет высоту, чем ширина (больше строк, чем столбцов <b>), Поиск</b> выполняется в первом столбце.</para>
          <para>С <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.HLookup(System.Object,System.Object,System.Object,System.Object)" /> и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.VLookup(System.Object,System.Object,System.Object,System.Object)" />, можно индексировать вниз или по горизонтали, но при <b>поиске</b> всегда выбирается последнее значение в строке или столбце.</para>
          <para>
            <b>Важно!</b>значения в массиве должны быть упорядочены по возрастанию:..., – 2, – 1, 0, 1, 2,..., A – Z, <b>false</b>, <b>true</b>; в противном случае <b>Поиск</b> может не дать правильное значение. Текст в верхнем и нижнем регистре эквивалентен.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public double Match (object Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Match([in]object Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Match(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Match (Arg1 As Object, Arg2 As Object, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16448)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Lookup_value — значение, которое используется для поиска нужного значения в таблице.</param>
        <param name="Arg2">Lookup_array — непрерывный диапазон ячеек, содержащий возможные значения подстановки. Lookup_array должен быть массивом или ссылкой на массив.</param>
        <param name="Arg3">Match_type — число — 1, 0 или 1. Match_type указывает, как Microsoft Excel сопоставляет lookup_value со значениями в lookup_array.</param>
        <summary>Возвращает относительное положение элемента в массиве, который соответствует заданному значению в указанном порядке. Используйте <b>Match</b> <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Lookup(System.Object,System.Object,System.Object)" /> функцию ПОИСКПОЗ вместо одной из функций, когда требуется положение элемента в диапазоне, а не сам элемент.</summary>
        <returns>To be added.</returns>
        <remarks><para>Lookup_value — это значение, которое нужно найти в lookup_array. Например, при поиске номера в телефонной книге используется имя пользователя в качестве значения подстановки, а номер телефона — это нужное значение.</para>
          <para>Lookup_value может быть значением (числом, текстом или логическим значением) или ссылкой на ячейку с числом, текстом или логическим значением.</para>
          <para>Если match_type 1, то <b>ПОИСКПОЗ</b> находит наибольшее значение, меньшее или равное lookup_value. Lookup_array необходимо поместить в возрастающем порядке:... – 2, – 1, 0, 1, 2,..., A – Z, <b>false</b>, <b>true</b>.</para>
          <para>Если match_type значение 0, то <b>ПОИСКПОЗ</b> находит первое значение, равное lookup_value. Lookup_array может быть в любом порядке.</para>
          <para>Если match_type равно-1, то <b>ПОИСКПОЗ</b> находит наименьшее значение, которое больше или равно lookup_value. Lookup_array должен быть упорядочен по убыванию: <b>true</b>, <b>false</b>, Z, A,... 2, 1, 0, – 1, – 2,... и т. д. Если параметр match_type опущен, предполагается, что он равен 1.</para>
          <para>
            <b>ПОИСКПОЗ</b> Возвращает позицию сопоставляемого значения в lookup_array, а не само значение. Например, ПОИСКПОЗ ("b", {"a", "b", "c"}, 0) возвращает 2, относительное положение "b" в массиве {"a", "b", "c"}. </para>
          <para>
            <b>Match</b> не различает прописные и строчные буквы при совпадении текстовых значений. </para>
          <para>Если <b>Поиск не дает результата,</b> возвращается значение ошибки #N/a. </para>
          <para>Если match_type имеет значение 0 и lookup_value является текстом, можно использовать подстановочные знаки, вопросительные знаки (?) и звездочки (*) в lookup_value. Вопросительный знак соответствует одному символу; Звездочка соответствует любой последовательности символов. Если вы хотите найти фактический вопросительный знак или звездочку, введите тильду (~) перед символом.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public double Max (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Max([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Max(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Max (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16391)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число1, число2,... – 1 — 30 чисел, для которых нужно найти максимальное значение.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Возвращает наибольшее значение в наборе значений.</summary>
        <returns>To be added.</returns>
        <remarks><para>Аргументы могут быть числами или именами, массивами или ссылками, содержащими числа. </para>
          <para>Учитываются логические значения и текстовые представления чисел, которые вы вводите непосредственно в список аргументов. </para>
          <para>Если аргумент представляет собой массив или ссылку, используются только числа в этом массиве или ссылке. Пустые ячейки, логические значения или текст в массиве или ссылке игнорируются. </para>
          <para>Если аргументы не содержат чисел, то функция <b>Макс</b> возвращает значение 0 (ноль). </para>
          <para>Аргументы, которые являются значениями ошибки или текстом, не преобразуемым в числа, вызывают ошибки. </para>
          <para>Если вы хотите включить логические значения и текстовые представления чисел в ссылку в качестве части вычисления, используйте <see cref="MAXA" /> функцию.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MDeterm">
      <MemberSignature Language="C#" Value="public double MDeterm (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 MDeterm([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.MDeterm(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function MDeterm (Arg1 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double MDeterm(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16547)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Массив — числовой массив с равным количеством строк и столбцов.</param>
        <summary>Возвращает определитель матрицы для массива.</summary>
        <returns>To be added.</returns>
        <remarks><para>Массив может быть определен как диапазон ячеек, например a1: C3; в виде константы массива, например {1, 2, 3; 4, 5, 6; 7, 8, 9}; или в качестве имени одного из этих элементов. <b>Мдетерм</b> возвращает #VALUE! Ошибка в следующих случаях: </para>
          <para>Все ячейки в массиве пусты или содержат текст. </para>
          <para>Массив не имеет равное количество строк и столбцов. </para>
          <para>Размер массива превышает 73 столбцов на 73 строк. </para>
          <para>Определитель матрицы это число, полученное из значений в массиве. Для массива с тремя строками и тремя столбцами a1: C3 определитель определяется следующим образом: </para>
          <code>MDETERM(A1:C3)</code>
          <para>достигает</para>
          <code>A1*(B2*C3-B3*C2) + A2*(B3*C1-B1*C3) + A3*(B1*C2-B2*C1)</code>
          <para>Детерминантс матрицы обычно используются для решения систем математических уравнений, включающих несколько переменных. </para>
          <para>
            <b>Мдетерм</b> вычисляется с точностью около 16 цифр, что может привести к небольшому числу ошибок, если вычисление не завершено. Например, определитель матрицы в единственном числе может отличаться от нуля до 1E – 16.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MDuration">
      <MemberSignature Language="C#" Value="public double MDuration (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 MDuration([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.MDuration(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function MDuration (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Arg5 As Object, Optional Arg6 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16843)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Дата_согл — Дата соглашения по ценным обозначением. Дата сопоставления безопасности — это дата после даты выпускной сделки, когда она передается покупателю.</param>
        <param name="Arg2">Дата_вступления_в_силу — срок погашения ценных бумаг. Срок погашения — это дата истечения срока действия системы безопасности.</param>
        <param name="Arg3">Купон — годовая ставка для купонов по ценным обозначением.</param>
        <param name="Arg4">Доход — ежегодный доход по ценным бумагам.</param>
        <param name="Arg5">Периодичность — количество выплат по купонам за год. Для ежегодных выплат частота = 1; для полугодий частота = 2; для ежеквартальных выплат частота = 4.</param>
        <param name="Arg6">Базис — используемый тип расчета дня.</param>
        <summary>Возвращает измененную Макаулэйную длительность для безопасности с предполагаемым значением $100.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>для ввода дат используется функция Дата или результаты других формул или функций. Например, используйте DATE (2008, 5, 23) для 23-дневного дня мая 2008. Проблемы могут возникать, если даты вводятся как текст.</para>
          <para>Microsoft Excel хранит даты как последовательные серийные номера, чтобы их можно было использовать в вычислениях. По умолчанию 1 января 1900 года является порядковым номером 1, а 1 января 2008 — порядковым номером 39448, так как он составляет 39 448 дней после 1 января 1900. Microsoft Excel для Macintosh использует в качестве значения по умолчанию другую систему дат. </para>
          <para>Дата соглашения — это дата приобретения покупателем купона, например облигации. Дата погашения — это дата истечения срока действия купона. Например, предположим, что 30-летний облигация составляет 1 января 2008 г., и позднее он покупается покупателем за шесть месяцев. Дата выпуска — 1 января 2008 года, Дата расчета — 1 июля 2008, а срок погашения — 1 января 2038 г., что составляет 30 лет после даты выпуска 1 января, 2008 года. </para>
          <para>Дата_согл, дата_вступл_в_силу, частота и базис усекаются до целых. </para>
          <para>Если дата_согл или дата_вступл_в_силу не является допустимой датой, то <b>функция МДЛИТ</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если доход &lt; 0 или купон &lt; 0, то <b>функция МДЛИТ</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если частота является любым числом, отличным от 1, 2 или 4, то <b>функция МДЛИТ</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если базис &lt; 0 или базис &gt; 4, то <b>функция МДЛИТ</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если дата_соглашения ≥ дата_вступления_в_силу, то <b>функция МДЛИТ</b> Возвращает #NUM! значение ошибки. </para>
          <para>Измененная длительность определяется следующим образом: </para>
          <para>Рисунок 1: формула для измененной длительности</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Median">
      <MemberSignature Language="C#" Value="public double Median (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Median([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Median(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Median (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16611)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число1, число2,... – 1 — 30 чисел, для которых вычисляется медиана.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Возвращает медиану заданному числу. Медиана — это число в середине набора чисел.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если в наборе есть четное число чисел, то функция <b>медиана</b> вычисляет среднее арифметическое двух чисел в середине. В этом примере показана вторая формула.</para>
          <para>Аргументы могут быть числами или именами, массивами или ссылками, содержащими числа. </para>
          <para>Учитываются логические значения и текстовые представления чисел, которые вы вводите непосредственно в список аргументов. </para>
          <para>Если аргумент array или Reference содержит текст, логические значения или пустые ячейки, эти значения игнорируются; Тем не менее, ячейки с нулевым значением включены. </para>
          <para>Аргументы, которые являются значениями ошибки или текстом, не преобразуемым в числа, вызывают ошибки.</para>
          <para>
            <b>Note</b>: функция <b>медиана</b> измеряет центральную тенденции, которая представляет собой расположение центра группы номеров в статистическом распределении. Ниже приведены три наиболее распространенные меры центральной тенденции.</para>
          <list type="bullet">
            <item>
              <description>Среднее арифметическое среднее значение, вычисляемое путем добавления группы чисел и деления их на количество этих номеров. Например, среднее значение 2, 3, 3, 5, 7 и 10 равно 30 на 6, что равно 5. </description>
            </item>
            <item>
              <description>Медиана — это средний номер группы чисел; то есть половины чисел имеют значения, превышающие медиану, а половина чисел — меньше, чем медиана. Например, медиана 2, 3, 3, 5, 7 и 10 — 4.</description>
            </item>
            <item>
              <description>Режим, который является наиболее часто встречающееся числом в группе номеров. Например, режим 2, 3, 3, 5, 7 и 10 — 3.</description>
            </item>
          </list>
          <para>Для симметричного распределения группы чисел эти три показателя центральной тенденции одинаковы. Для отклоненного распределения группы чисел они могут различаться.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public double Min (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Min([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Min(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Min (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16390)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число1, число2,... – 1 — 30 чисел, для которых нужно найти минимальное значение.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Возвращает наименьшее число из набора значений.</summary>
        <returns>To be added.</returns>
        <remarks><para>Аргументы могут быть числами или именами, массивами или ссылками, содержащими числа. </para>
          <para>Учитываются логические значения и текстовые представления чисел, которые вы вводите непосредственно в список аргументов. </para>
          <para>Если аргумент представляет собой массив или ссылку, используются только числа в этом массиве или ссылке. Пустые ячейки, логические значения или текст в массиве или ссылке игнорируются. </para>
          <para>Если аргументы не содержат чисел, то функция <b>min</b> возвращает значение 0. </para>
          <para>Аргументы, которые являются значениями ошибки или текстом, не преобразуемым в числа, вызывают ошибки. </para>
          <para>Если вы хотите включить логические значения и текстовые представления чисел в ссылку в качестве части вычисления, используйте функцию Мина.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MInverse">
      <MemberSignature Language="C#" Value="public object MInverse (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object MInverse([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.MInverse(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function MInverse (Arg1 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ MInverse(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16548)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Массив — числовой массив с равным количеством строк и столбцов.</param>
        <summary>Возвращает обратную матрицу для матрицы, хранящейся в массиве.</summary>
        <returns>To be added.</returns>
        <remarks><para>Размер массива не должен превышать 52 столбцов на 52 строк. Если это так, функция возвращает #VALUE! ошибкой. </para>
          <para>Массив может быть определен как диапазон ячеек, например a1: C3; в виде константы массива, например {1, 2, 3; 4, 5, 6; 7, 8, 9}; или как имя любого из этих вариантов. </para>
          <para>Если какие бы то ни было ячейки в массиве пусты или содержат текст, <b>минверсе</b> возвращает #VALUE! значение ошибки. </para>
          <para>
            <b>Минверсе</b> также возвращает #VALUE! значение ошибки, если массив не имеет равное количество строк и столбцов. </para>
          <para>Формулы, возвращающие массивы, должны вводиться как формулы массива. </para>
          <para>Обратные матрицы, такие как детерминантс, обычно используются для решения систем математических уравнений с использованием нескольких переменных. Произведение матрицы и обратная матрица — это квадратный массив, значение по диагонали которого равно 1, а все остальные значения равны 0. </para>
          <para>В качестве примера вычисления матрицы из двух строк и двух столбцов Предположим, что диапазон a1: B2 содержит буквы a, b, c и d, которые представляют четыре числа. В приведенной ниже таблице показано обратное значение матрицы a1: B2. </para>
          <list type="table">
            <item>
              <term>Строка 1</term>
              <description>d/(a*d-b*c)</description>
              <description>b/(b*c-a*d)</description>
            </item>
            <item>
              <term>Строка 2</term>
              <description>c/(b*c-a*d)</description>
              <description>a/(a*d-b*c)</description>
            </item>
          </list>
          <para>
            <b>Минверсе</b> вычисляется с точностью около 16 цифр, что может привести к небольшому числу ошибок, когда отмена не завершена. </para>
          <para>Некоторые квадратные матрицы невозможно инвертировать и будут возвращать #NUM! значение ошибки с <b>минверсе</b>. Определитель для неинверсной матрицы равен 0.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MIrr">
      <MemberSignature Language="C#" Value="public double MIrr (object Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 MIrr([in]object Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.MIrr(System.Object,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function MIrr (Arg1 As Object, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double MIrr(System::Object ^ Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16445)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Values — массив или ссылка на ячейки, содержащие числа. Эти номера представляют собой серии выплат (отрицательные значения) и доходы (положительные значения), происходящие через регулярные периоды.</param>
        <param name="Arg2">Finance_rate — процентная ставка, выплачиваемая на деньги, используемые в денежных взносах.</param>
        <param name="Arg3">Reinvest_rate — процентная ставка, получаемая по кассовым потокам во время их повторного инвестирования.</param>
        <summary>Возвращает модифицированную внутреннюю норму прибыли для ряда периодических денежных потоков. В MIRR учитывается стоимость инвестиций и полученный процент от реинвестиций в кассе.</summary>
        <returns>To be added.</returns>
        <remarks><para>Значения должны содержать по крайней мере одно положительное значение и одно отрицательное значение, чтобы рассчитать измененную внутреннюю норму доходности. В противном случае <b>MIrr</b> возвращает #DIV/0! значение ошибки. </para>
          <para>Если аргумент array или Reference содержит текст, логические значения или пустые ячейки, эти значения игнорируются; Тем не менее, ячейки с нулевым значением включены. </para>
          <para>
            <b>MIrr</b> использует порядок значений для интерпретации порядка денежных потоков. Не забудьте ввести значения платежей и доходов в нужную последовательность и с правильными знаками (положительные значения для полученных денежных средств, отрицательные значения денежных выплат). </para>
          <para>Если n — число денежных потоков в значениях, Фрате — это finance_rate, а ррате — reinvest_rate, то формула для <b>MIrr</b> : </para>
          <para>Рисунок 1: формула для метода MIrr</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MMult">
      <MemberSignature Language="C#" Value="public object MMult (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object MMult([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.MMult(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function MMult (Arg1 As Object, Arg2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ MMult(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16549)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Массив1, массив2 — массивы, которые необходимо умножить.</param>
        <param name="Arg2">Массив1, массив2 — массивы, которые необходимо умножить.</param>
        <summary>Возвращает матричное произведение двух массивов. Результатом является массив с таким же количеством строк, как массив1, и одинаковым числом столбцов, как массив2.</summary>
        <returns>To be added.</returns>
        <remarks><para>Количество столбцов в аргументе массив1 должно совпадать с числом строк в массив2, а оба массива должны содержать только цифры. </para>
          <para>Массив1 и массив2 могут быть указаны как диапазоны ячеек, константы массива или ссылки. </para>
          <para>
            <b>Ммулт</b> возвращает #VALUE! Ошибка в следующих случаях: </para>
          <para>Все ячейки пусты или содержат текст. </para>
          <para>Число столбцов в массив1 отличается от количества строк в массив2. </para>
          <para>Размер полученного массива равен или больше значения 5 461 ячеек. </para>
          <para>Массив в матрице a состоит из двух массивов b и c: </para>
          <para>Figure1: матричный массив a двух массивов b и c</para>
          <para> </para>
          <para> </para>
          <para>где i — это номер строки, а j — номер столбца.</para>
          <para>Формулы, возвращающие массивы, должны вводиться как формулы массива.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public double Mode (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Mode([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Mode(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Mode (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16714)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число1, число2,... от – 1 до 30 аргументов, для которых требуется вычислить режим. Вы также можете использовать один массив или ссылку на массив вместо аргументов, разделенных запятыми.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Возвращает наиболее часто встречающееся или повторяющееся значение в массиве или диапазоне данных.</summary>
        <returns>To be added.</returns>
        <remarks><para>Эта функция заменена одной или несколькими новыми функциями, которые могут улучшить точность и их имена лучше отражают их использование. Эта функция по-прежнему доступна для совместимости с более ранними версиями Excel. Тем не менее, если обратная совместимость не требуется, рекомендуется использовать новые функции, так как они точнее описывают их функциональность. Более подробную информацию о новых функциях можно узнать <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Mode_Sngl(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> в <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Mode_Mult(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> статье методы и.</para>
          <para>Аргументы могут быть числами или именами, массивами или ссылками, содержащими числа. </para>
          <para>Если аргумент array или Reference содержит текст, логические значения или пустые ячейки, эти значения игнорируются; Тем не менее, ячейки с нулевым значением включены. </para>
          <para>Аргументы, которые являются значениями ошибки или текстом, не преобразуемым в числа, вызывают ошибки. </para>
          <para>Если набор данных не содержит дублирующихся точек данных, то <b>mode</b> возвращает значение ошибки #N/a.</para>
          <para>
            <b>Note</b>: функция <b>mode</b> измеряет центральную тенденции, которая представляет собой расположение центра группы номеров в статистическом распределении. Ниже приведены три наиболее распространенные меры центральной тенденции.</para>
          <list type="bullet">
            <item>
              <description>Среднее арифметическое среднее значение, вычисляемое путем добавления группы чисел и деления их на количество этих номеров. Например, среднее значение 2, 3, 3, 5, 7 и 10 равно 30 на 6, что равно 5. </description>
            </item>
            <item>
              <description>Медиана — это средний номер группы чисел; то есть половины чисел имеют значения, превышающие медиану, а половина чисел — меньше, чем медиана. Например, медиана 2, 3, 3, 5, 7 и 10 — 4. </description>
            </item>
            <item>
              <description>Режим, который является наиболее часто встречающееся числом в группе номеров. Например, режим 2, 3, 3, 5, 7 и 10 — 3.</description>
            </item>
          </list>
          <para>Для симметричного распределения группы чисел эти три показателя центральной тенденции одинаковы. Для отклоненного распределения группы чисел они могут различаться.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Mode_Mult">
      <MemberSignature Language="C#" Value="public object Mode_Mult (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Mode_Mult([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Mode_Mult(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Mode_Mult (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16881)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число1 — первый числовой аргумент, для которого нужно вычислить режим.</param>
        <param name="Arg2">Число2 — Number30 — числовые аргументы от 2 до 30, для которых необходимо вычислить режим. Вы также можете использовать один массив или ссылку на массив вместо аргументов, разделенных запятыми.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Возвращает вертикальный массив наиболее часто встречающихся и повторяющихся значений в массиве или диапазоне данных.</summary>
        <returns>To be added.</returns>
        <remarks><para>Аргументы могут быть числами или именами, массивами или ссылками, содержащими числа. </para>
          <para>Если аргумент array или Reference содержит текст, логические значения или пустые ячейки, эти значения игнорируются; Тем не менее, ячейки с нулевым значением включены. </para>
          <para>Аргументы, которые являются значениями ошибки или текстом, не преобразуемым в числа, вызывают ошибки. </para>
          <para>Если набор данных не содержит дублирующихся точек данных, <b>Mode_Mult</b> возвращает значение ошибки #N/a.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Mode_Sngl">
      <MemberSignature Language="C#" Value="public double Mode_Sngl (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Mode_Sngl([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Mode_Sngl(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Mode_Sngl (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16882)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число1, число2,... от – 1 до 30 аргументов, для которых требуется вычислить режим. Вы также можете использовать один массив или ссылку на массив вместо аргументов, разделенных запятыми (,).</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Возвращает наиболее часто встречающееся или повторяющееся значение в массиве или диапазоне данных.</summary>
        <returns>To be added.</returns>
        <remarks><para>Аргументы могут быть числами или именами, массивами или ссылками, содержащими числа. </para>
          <para>Если аргумент array или Reference содержит текст, логические значения или пустые ячейки, эти значения игнорируются; Тем не менее, ячейки с нулевым значением включены. </para>
          <para>Аргументы, которые являются значениями ошибки или текстом, не преобразуемым в числа, вызывают ошибки. </para>
          <para>Если набор данных не содержит дублирующихся точек данных, <b>Mode_Sngl</b> возвращает значение ошибки #N/a.</para>
          <para>
            <b>Note</b>: функция <b>Mode_Sngl</b> измеряет центральную тенденции, которая представляет собой расположение центра группы номеров в статистическом распределении. Ниже приведены три наиболее распространенные меры центральной тенденции.</para>
          <list type="bullet">
            <item>
              <description>Среднее арифметическое среднее арифметическое, вычисляемое путем добавления группы чисел и деления их на количество этих номеров. Например, среднее значение 2, 3, 3, 5, 7 и 10 равно 30 на 6, что равно 5. </description>
            </item>
            <item>
              <description>Среднее значение среднего числа групп чисел; то есть половины чисел имеют значения, превышающие медиану, а половина чисел — меньше, чем медиана. Например, медиана 2, 3, 3, 5, 7 и 10 — 4. </description>
            </item>
            <item>
              <description>Mode — это наиболее часто встречающееся число в группе чисел. Например, режим 2, 3, 3, 5, 7 и 10 — 3.</description>
            </item>
          </list>
          <para>Для симметричного распределения группы чисел эти три показателя центральной тенденции одинаковы. Для отклоненного распределения группы чисел они могут различаться.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MRound">
      <MemberSignature Language="C#" Value="public double MRound (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 MRound([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.MRound(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function MRound (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double MRound(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16806)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Number — округляемое значение.</param>
        <param name="Arg2">Множество (кратное), для которого нужно округлить число.</param>
        <summary>Возвращает число, округленное до желаемого значения.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>ОКРУГЛТ</b> округляет в сторону от нуля, если оставшаяся часть деления числа на множители больше или равна половине значения Multiple.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiNomial">
      <MemberSignature Language="C#" Value="public double MultiNomial (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 MultiNomial([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.MultiNomial(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function MultiNomial (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16858)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число1, число2,... – 1 — 29 значений, для которых требуется получить МУЛЬТИНОМ.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Возвращает отношение факториала суммы значений к произведению факториалов.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если какой-либо аргумент не является числом, <b>МУЛЬТИНОМ</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если какой-либо из аргументов меньше нуля, <b>МУЛЬТИНОМ</b> Возвращает #NUM! значение ошибки. </para>
          <para>МУЛЬТИНОМ: </para>
          <para>Рисунок 1: формула для метода МУЛЬТИНОМ</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Munit">
      <MemberSignature Language="C#" Value="public object Munit (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Munit([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Munit(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Munit (Arg1 As Double) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Munit(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16966)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Целое число, определяющее размер матрицы единиц измерения, которую требуется возвратить.</param>
        <summary>Возвращает матрицу единиц для указанного измерения.</summary>
        <returns><b>ТИПОМ</b></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NegBinom_Dist">
      <MemberSignature Language="C#" Value="public double NegBinom_Dist (double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 NegBinom_Dist([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]bool Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.NegBinom_Dist(System.Double,System.Double,System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function NegBinom_Dist (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double NegBinom_Dist(double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16922)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Arg1">Number_f — количество неудачных попыток.</param>
        <param name="Arg2">Number_s — пороговое количество успешных попыток.</param>
        <param name="Arg3">Probability_s — вероятность успеха.</param>
        <param name="Arg4">Интегральная — логическое значение, определяющее форму функции. Если интегральная имеет <b>значение true</b>, <b>NegBinom_Dist</b> возвращает интегральную функцию распределения; Если задано <b>значение false</b>, возвращается функция плотности вероятности.</param>
        <summary>Возвращает отрицательное биномиальное распределение. <b>NegBinom_Dist</b> возвращает вероятность number_f сбоев до number_s успешного завершения, когда probability_s вероятность успешного выполнения. Эта функция аналогична биномиальноеу распределению, за исключением того, что количество успехов фиксировано, а количество испытаний — переменная. Как и в случае биномиальное, пробные версии считаются независимыми.</summary>
        <returns>To be added.</returns>
        <remarks><para>Например, вам нужно найти 10 людей с превосходными отклонениями, и вы знаете вероятность того, что кандидат имеет эти квалификации 0,3. <b>NegBinom_Dist</b> вычисляет вероятность проведения опроса определенного числа неквалифицированных кандидатов, прежде чем найти все 10 квалифицированных кандидатов: </para>
          <para>Number_f и number_s усекаются до целых. </para>
          <para>Если какой-либо аргумент не является числом, <b>NegBinom_Dist</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если probability_s &lt; 0 или вероятность &gt; 1, <b>NegBinom_Dist</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если number_f &lt; 0 или number_s &lt; 1, <b>NegBinom_Dist</b> Возвращает #NUM! значение ошибки. </para>
          <para>Уравнение для отрицательного биномиальное распределения имеет следующий результат: </para>
          <para>Рисунок 1: уравнение для отрицательного биномиальное распределения</para>
          <para> </para>
          <para> </para>
          <para>где:</para>
          <para>x — это number_f, r — number_s, а p — probability_s.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="NegBinomDist">
      <MemberSignature Language="C#" Value="public double NegBinomDist (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 NegBinomDist([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.NegBinomDist(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function NegBinomDist (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double NegBinomDist(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16676)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Number_f — количество неудачных попыток.</param>
        <param name="Arg2">Number_s — пороговое количество успешных попыток.</param>
        <param name="Arg3">Probability_s — вероятность успеха.</param>
        <summary>Возвращает отрицательное биномиальное распределение. Негбиномдист возвращает вероятность того, что при успешном завершении выполнения number_s возникнет number_f сбоев, когда возникнет вероятность probability_s. Эта функция аналогична биномиальноеу распределению, за исключением того, что количество успехов фиксировано, а количество испытаний — переменная. Как и в случае биномиальное, пробные версии считаются независимыми.</summary>
        <returns>To be added.</returns>
        <remarks><para>Эта функция заменена одной или несколькими новыми функциями, которые могут улучшить точность и их имена лучше отражают их использование. Эта функция по-прежнему доступна для совместимости с более ранними версиями Excel. Тем не менее, если обратная совместимость не требуется, рекомендуется использовать новые функции, так как они точнее описывают их функциональность. Более подробную информацию о функции New можно узнать в <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.NegBinom_Dist(System.Double,System.Double,System.Double,System.Boolean)" /> методе.</para>
          <para>Например, вам нужно найти 10 людей с превосходными отклонениями, и вы знаете вероятность того, что кандидат имеет эти квалификации 0,3. <b>Негбиномдист</b> вычисляет вероятность проведения опроса определенного числа неквалифицированных кандидатов, прежде чем искать все 10 квалифицированных кандидатов. </para>
          <para>Number_f и number_s усекаются до целых. </para>
          <para>Если какой-либо аргумент не является числом, <b>негбиномдист</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если probability_s &lt; 0 или вероятность &gt; 1, <b>негбиномдист</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если number_f &lt; 0 или number_s &lt; 1, <b>негбиномдист</b> Возвращает #NUM! значение ошибки. </para>
          <para>Уравнение для отрицательного биномиальное распределения имеет следующий результат: </para>
          <para>Рисунок 1: уравнение для отрицательного биномиальное распределения</para>
          <para> </para>
          <para> </para>
          <para>где:</para>
          <para>x — это number_f, r — number_s, а p — probability_s.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="NetworkDays">
      <MemberSignature Language="C#" Value="public double NetworkDays (object Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 NetworkDays([in]object Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.NetworkDays(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function NetworkDays (Arg1 As Object, Arg2 As Object, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16856)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Start_date — Дата, представляющая дату начала.</param>
        <param name="Arg2">End_date — Дата, представляющая дату окончания.</param>
        <param name="Arg3">Праздники — необязательный диапазон из одной или нескольких дат, которые необходимо исключить из рабочего календаря, такие как штатные и федеральные праздники и плавающие праздники. Список может быть либо диапазоном ячеек, содержащим даты, либо константой массива серийных номеров, представляющих даты.</param>
        <summary>Возвращает количество полных рабочих дней между start_date и end_date. Рабочие дни исключают выходные дни и даты, определенные в праздниках. Используйте <b>функция ЧИСТРАБДНИ</b> , чтобы рассчитать преимущества сотрудников, которые начисляются в соответствии с количеством дней, отработанных в течение определенного термина.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>для ввода дат используется функция Дата или результаты других формул или функций. Например, используйте DATE (2008, 5, 23) для 23-дневного дня мая 2008. Проблемы могут возникать, если даты вводятся как текст.</para>
          <para>Microsoft Excel хранит даты как последовательные серийные номера, чтобы их можно было использовать в вычислениях. По умолчанию 1 января 1900 года является порядковым номером 1, а 1 января 2008 — порядковым номером 39448, так как он составляет 39 448 дней после 1 января 1900. Microsoft Excel для Macintosh использует в качестве значения по умолчанию другую систему дат. </para>
          <para>Если какой-либо из аргументов не является допустимой датой, <b>функция ЧИСТРАБДНИ</b> возвращает #VALUE! значение ошибки.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="NetworkDays_Intl">
      <MemberSignature Language="C#" Value="public double NetworkDays_Intl (object Arg1, object Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 NetworkDays_Intl([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.NetworkDays_Intl(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function NetworkDays_Intl (Arg1 As Object, Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16904)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Start_date Дата начала, для которой вычисляется разница. Start_date может быть раньше, чем в end_date или более поздней версии.</param>
        <param name="Arg2">End_date Дата окончания, для которой вычисляется разница. Start_date может быть раньше, чем в end_date или более поздней версии.</param>
        <param name="Arg3">Выходные — указывает дни недели, которые являются выходными днями, и не включаются в число полных рабочих дней между start_date и end_date. Выходные — это номер выходной или строкой, указывающий время появления выходных дней.</param>
        <param name="Arg4">Праздники — необязательный набор из одной или нескольких дат, которые необходимо исключить из календаря рабочего дня. Праздники это диапазон ячеек, содержащих даты, или константа массива серийных значений, представляющих эти даты. Порядок следования дат или последовательного значения в праздниках может быть произвольным.</param>
        <summary>Возвращает количество полных рабочих дней между двумя датами с использованием параметров, определяющих, сколько дней выходные дни. Выходные дни и дни, указанные в качестве праздников, не рассматриваются как рабочие дни.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если start_date более поздняя, чем end_date, возвращаемое значение будет отрицательным, а величина будет равно количеству всех рабочих дней. </para>
          <para>Если start_date находится за пределами диапазона для текущего базового значения даты, <b>NetworkDays_Intl</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если end_date находится за пределами диапазона для текущего базового значения даты, <b>NetworkDays_Intl</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если выходная строка имеет недопустимую длину или содержит недопустимые символы, <b>NetworkDays_Intl</b> возвращает #VALUE! значение ошибки.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Nominal">
      <MemberSignature Language="C#" Value="public double Nominal (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Nominal([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Nominal(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Nominal (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Nominal(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16829)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Effect_rate эффективная процентная ставка.</param>
        <param name="Arg2">Нпери — количество периодов в году.</param>
        <summary>Возвращает номинальную годовую процентную ставку с учетом эффективности и количества периодов в году.</summary>
        <returns>To be added.</returns>
        <remarks><para>Нпери усекается до целого числа. </para>
          <para>Если любой из аргументов не является числом, то функция <b>номинал</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если effect_rate ≤ 0 или нпери &lt; 1, то функция <b>номинал</b> возвращает значение #NUM! значение ошибки. </para>
          <para>
            <b>Номинальное</b> значение связано <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Effect(System.Object,System.Object)" /> со следующим уравнением: </para>
          <para>Рисунок 1: уравнение</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Norm_Dist">
      <MemberSignature Language="C#" Value="public double Norm_Dist (double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Norm_Dist([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]bool Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Norm_Dist(System.Double,System.Double,System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Norm_Dist (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Norm_Dist(double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16883)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Arg1">X — значение, для которого строится распределение.</param>
        <param name="Arg2">Среднее — среднее арифметическое распределение.</param>
        <param name="Arg3">Standard_dev — стандартное отклонение распределения.</param>
        <param name="Arg4">Интегральная — логическое значение, определяющее форму функции. Если интегральная имеет <b>значение true</b>, <b>Norm_Dist</b> возвращает интегральную функцию распределения; Если задано <b>значение false</b>, то возвращается функция плотности плотности.</param>
        <summary>Возвращает нормальное распределение для указанного среднего и стандартного отклонения. Эта функция имеет широкий спектр приложений в статистике, включая тестирование гипотез.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если среднее или standard_dev не является числом, <b>Norm_Dist</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если standard_dev ≤ 0, <b>Norm_Dist</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если среднее = 0, standard_dev = 1, а интегральная = <b>true</b>, то <b>Norm_Dist</b> возвращает стандартное нормальное распределение <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Norm_S_Dist(System.Double,System.Boolean)" />. </para>
          <para>Формула для функции нормальной плотности (интегральная = <b>ложь</b>) имеет следующий вид: </para>
          <para>Рисунок 1: формула для функции нормальной плотности</para>
          <para> </para>
          <para> </para>
          <para>Если интегральная = <b>true</b>, формула представляет собой целое число от минус бесконечности до x заданной формулы.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Norm_Inv">
      <MemberSignature Language="C#" Value="public double Norm_Inv (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Norm_Inv([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Norm_Inv(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Norm_Inv (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Norm_Inv(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16884)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Вероятность — вероятность, соответствующая нормальному распределению.</param>
        <param name="Arg2">Среднее — среднее арифметическое распределение.</param>
        <param name="Arg3">Standard_dev — стандартное отклонение распределения.</param>
        <summary>Возвращает обратное нормальное интегральное распределение для указанного среднего и стандартного отклонения.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если какой-либо из аргументов не является числовым, <b>Norm_Inv</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если вероятность &lt;= 0 или вероятность &gt;= 1, <b>Norm_Inv</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если standard_dev ≤ 0, <b>Norm_Inv</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если среднее = 0 и standard_dev = 1, <b>Norm_Inv</b> использует стандартное нормальное распределение (см <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Norm_S_Inv(System.Double)" />.).</para>
          <para>При наличии значения вероятности <b>Norm_Inv</b> ищет значение x таким, что NORM_DIST (x, среднее, STANDARD_DEV, true) = вероятность. Таким образом, точность <b>Norm_Inv</b> зависит от точности <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Norm_Dist(System.Double,System.Double,System.Double,System.Boolean)" />.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Norm_S_Dist">
      <MemberSignature Language="C#" Value="public double Norm_S_Dist (double Arg1, bool Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Norm_S_Dist([in]float64 Arg1, [in]bool Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Norm_S_Dist(System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Norm_S_Dist (Arg1 As Double, Arg2 As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Norm_S_Dist(double Arg1, bool Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16923)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Arg1">Z — значение, для которого требуется получить распределение.</param>
        <param name="Arg2">Интегральная — логическое значение, определяющее форму функции. Если интегральная имеет <b>значение true</b>, <b>Norm_S_Dist</b> возвращает интегральную функцию распределения; Если задано <b>значение false</b>, то возвращается функция плотности плотности.</param>
        <summary>Возвращает стандартную функцию стандартного нормального распределения. Распределение имеет среднее значение 0 (ноль) и стандартное отклонение для единицы. Используйте эту функцию вместо таблицы стандартных областей с нормальным изгибом.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если z не является числом, <b>Norm_S_Dist</b> возвращает #VALUE! значение ошибки. </para>
          <para>Уравнение для стандартной нормальной плотности имеет следующий размер: </para>
          <para>Рисунок 1: формула для стандартного нормального распределения</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Norm_S_Inv">
      <MemberSignature Language="C#" Value="public double Norm_S_Inv (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Norm_S_Inv([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Norm_S_Inv(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Norm_S_Inv (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Norm_S_Inv(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16924)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Вероятность — вероятность, соответствующая нормальному распределению.</param>
        <summary>Возвращает обратное стандартное нормальное интегральное распределение. Распределение имеет среднее значение 0 (ноль) и стандартное отклонение для единицы.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если вероятность не является числом, <b>Norm_S_Inv</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если вероятность &lt; 0 или вероятность &gt; 1, <b>Norm_S_Inv</b> Возвращает #NUM! значение ошибки.</para>
          <para>При наличии значения вероятности <b>Norm_S_Inv</b> ищет значение z, равное NORM_S_DIST (z) = вероятность. Таким образом, точность <b>Norm_S_Inv</b>зависит от точности <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Norm_S_Dist(System.Double,System.Boolean)" />. <b>Norm_S_Inv</b> использует метод итерации поиска. Если поиск не сходится после 100 итераций, функция возвращает значение ошибки #N/A.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="NormDist">
      <MemberSignature Language="C#" Value="public double NormDist (double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 NormDist([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]bool Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.NormDist(System.Double,System.Double,System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function NormDist (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double NormDist(double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16677)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Arg1">X — значение, для которого строится распределение.</param>
        <param name="Arg2">Среднее — среднее арифметическое распределение.</param>
        <param name="Arg3">Standard_dev — стандартное отклонение распределения.</param>
        <param name="Arg4">Интегральная — логическое значение, определяющее форму функции. Если интегральная имеет <b>значение true</b>, то функция <b>НОРМРАСП</b> возвращает интегральную функцию распределения; Если задано <b>значение false</b>, то возвращается функция плотности плотности.</param>
        <summary>Возвращает нормальное распределение для указанного среднего и стандартного отклонения. Эта функция обладает очень широким спектром приложений в статистике, включая тестирование гипотез.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>эта функция заменена одной или несколькими новыми функциями, которые могут улучшить точность и имена которых лучше отражают их использование. Эта функция по-прежнему доступна для совместимости с более ранними версиями Excel. Тем не менее, если обратная совместимость не требуется, рекомендуется использовать новые функции, так как они точнее описывают их функциональность. Более подробную информацию о функции New можно узнать в <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Norm_Dist(System.Double,System.Double,System.Double,System.Boolean)" /> методе.</para>
          <para>Если среднее или standard_dev не является числом, <b>функция НОРМРАСП</b> возвращает значение #VALUE! значение ошибки. </para>
          <para>Если standard_dev ≤ 0, <b>функция НОРМРАСП</b> возвращает значение #NUM! значение ошибки. </para>
          <para>Если среднее = 0, standard_dev = 1, а интегральная = <b>true</b>, <b>функция НОРМРАСП</b> возвращает стандартное нормальное распределение, <b>НОРМРАСП</b>. </para>
          <para>Формула для функции нормальной плотности (интегральная = <b>ложь</b>) имеет следующий вид: </para>
          <para>Рисунок 1: формула для функции нормальной плотности</para>
          <para> </para>
          <para> </para>
          <para>Если интегральная = <b>true</b>, формула представляет собой целое число от минус бесконечности до x заданной формулы.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="NormInv">
      <MemberSignature Language="C#" Value="public double NormInv (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 NormInv([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.NormInv(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function NormInv (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double NormInv(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16679)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Вероятность — вероятность, соответствующая нормальному распределению.</param>
        <param name="Arg2">Среднее — среднее арифметическое распределение.</param>
        <param name="Arg3">Standard_dev — стандартное отклонение распределения.</param>
        <summary>Возвращает обратное нормальное интегральное распределение для указанного среднего и стандартного отклонения.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>эта функция заменена одной или несколькими новыми функциями, которые могут улучшить точность и имена которых лучше отражают их использование. Эта функция по-прежнему доступна для совместимости с более ранними версиями Excel. Тем не менее, если обратная совместимость не требуется, рекомендуется использовать новые функции, так как они точнее описывают их функциональность. Более подробную информацию о функции New можно узнать в <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Norm_Inv(System.Double,System.Double,System.Double)" /> методе.</para>
          <para>Если какой-либо из аргументов не является числом, <b>НОРМОБР</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если вероятность &lt; 0 или вероятность &gt; 1, <b>НОРМОБР</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если standard_dev ≤ 0, <b>НОРМОБР</b> возвращает значение #NUM! значение ошибки. </para>
          <para>Если среднее = 0 и standard_dev = 1, <b>НОРМОБР</b> использует стандартное нормальное распределение (см <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.NormSInv(System.Double)" />.). </para>
          <para>При наличии значения вероятности <b>функция НОРМОБР</b> ищет значение x, равное "НОРМРАСП" (x, среднее, STANDARD_DEV, true) = вероятность. Таким образом, точность <b>НОРМОБР</b> зависит от точности <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.NormDist(System.Double,System.Double,System.Double,System.Boolean)" />. <b>НОРМОБР</b> использует метод итерации поиска. Если поиск не сходится после 100 итераций, функция возвращает значение ошибки #N/A.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="NormSDist">
      <MemberSignature Language="C#" Value="public double NormSDist (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 NormSDist([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.NormSDist(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function NormSDist (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double NormSDist(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16678)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Z — значение, для которого требуется получить распределение.</param>
        <summary>Возвращает стандартную функцию стандартного нормального распределения. Распределение имеет среднее значение 0 (ноль) и стандартное отклонение для единицы. Используйте эту функцию вместо таблицы стандартных областей с нормальным изгибом.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>эта функция заменена одной или несколькими новыми функциями, которые могут улучшить точность и имена которых лучше отражают их использование. Эта функция по-прежнему доступна для совместимости с более ранними версиями Excel. Тем не менее, если обратная совместимость не требуется, рекомендуется использовать новые функции, так как они точнее описывают их функциональность. Более подробную информацию о функции New можно узнать в <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Norm_S_Dist(System.Double,System.Boolean)" /> методе.</para>
          <para>Если z не является числом, функция <b>НОРМСТРАСП</b> возвращает #VALUE! значение ошибки. </para>
          <para>Уравнение для стандартной нормальной плотности имеет следующий размер: </para>
          <para>Рисунок 1: формула для стандартного нормального распределения</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="NormSInv">
      <MemberSignature Language="C#" Value="public double NormSInv (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 NormSInv([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.NormSInv(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function NormSInv (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double NormSInv(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16680)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Вероятность — вероятность, соответствующая нормальному распределению.</param>
        <summary>Возвращает обратное стандартное нормальное интегральное распределение. Среднее значение для распределения равно нулю, а стандартное отклонение — единице.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>эта функция заменена одной или несколькими новыми функциями, которые могут улучшить точность и имена которых лучше отражают их использование. Эта функция по-прежнему доступна для совместимости с более ранними версиями Excel. Тем не менее, если обратная совместимость не требуется, рекомендуется использовать новые функции, так как они точнее описывают их функциональность. Более подробную информацию о функции New можно узнать в <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Norm_S_Inv(System.Double)" /> методе.</para>
          <para>Если вероятность не является числом, функция <b>НОРМСТОБР</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если вероятность &lt;= 0 или вероятность &gt;= 1, то функция <b>НОРМСТОБР</b> Возвращает #NUM! значение ошибки.</para>
          <para>При наличии значения вероятности функция <b>НОРМСТОБР</b> ищет значение z, равное НОРМСТРАСП (z) = вероятность. Таким образом, точность <b>НОРМСТОБР</b> зависит от точности <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.NormSDist(System.Double)" />.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="NPer">
      <MemberSignature Language="C#" Value="public double NPer (double Arg1, double Arg2, double Arg3, object Arg4, object Arg5);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 NPer([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]object Arg4, [in]object Arg5) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.NPer(System.Double,System.Double,System.Double,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function NPer (Arg1 As Double, Arg2 As Double, Arg3 As Double, Optional Arg4 As Object, Optional Arg5 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16442)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Ставка — процентная ставка за период.</param>
        <param name="Arg2">ПЛТ — платеж, выполняемый в каждом периоде; Он не может измениться в течение всего периода выплат. Обычно плт содержит основные и процентные, но не другие сборы или налоги.</param>
        <param name="Arg3">НЗ — текущее значение или общая сумма, на которую вы поинтересовали серию будущих платежей.</param>
        <param name="Arg4">БС — будущее значение или баланс наличности, который вы хотите достичь после последнего платежа. Если аргумент бс опущен, предполагается, что он равен 0 (например, будущее значение ссуды равно 0).</param>
        <param name="Arg5">Тип — число 0 или 1, обозначающее, когда следует оплатить платежи.</param>
        <summary>Возвращает количество периодов для инвестиции на основе периодических постоянных выплат и постоянной процентной ставки.</summary>
        <returns>To be added.</returns>
        <remarks><list type="table">
            <item>
              <term>0 или опущен</term>
              <description>В конце периода</description>
            </item>
            <item>
              <term>1,1</term>
              <description>В начале периода</description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Npv">
      <MemberSignature Language="C#" Value="public double Npv (double Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Npv([in]float64 Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Npv(System.Double,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Npv (Arg1 As Double, Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16395)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Rate — частота дисконтирования за один период.</param>
        <param name="Arg2">Значение1, значение2,... – 1 – 29 аргументов, представляющих платежи и доходы.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Вычисление чистой приведенной стоимости инвестиций с использованием льготного тарифа и серии будущих выплат (отрицательные значения) и дохода (положительные значения).</summary>
        <returns>To be added.</returns>
        <remarks><para>Значение1, значение2,... должны быть одинаковыми в течение времени и происходить в конце каждого периода. </para>
          <para>
            <b>ЧПС</b> использует порядок от Значение1, значение2,... для интерпретации порядка денежных потоков. Обязательно введите значения платежей и доходов в правильном порядке. </para>
          <para>Подсчитываются аргументы, которые являются числами, пустыми ячейками, логическими значениями или текстовыми представлениями чисел; аргументы, которые являются значениями ошибки или текстом, которые не могут быть преобразованы в числа, игнорируются. </para>
          <para>Если аргумент является массивом или ссылкой, подсчитываются только числа в этом массиве или ссылке. Пустые ячейки, логические значения, текст и значения ошибок в массиве или ссылке игнорируются.</para>
          <para>Инвестиция в <b>ЧПС</b> начинается на один период до даты движения денежных средств значение1 и заканчивается последним денежным движением в списке. Вычисление <b>ЧПС</b> основано на будущих денежных взносах. Если первый денежный процесс происходит в начале первого периода, первое значение должно быть добавлено к результату <b>ЧПС</b> , а не к аргументам значений. Более подробную информацию можно найти в приведенных ниже примерах. </para>
          <para>Если n — количество денежных потоков в списке значений, формула для <b>функции ЧПС</b> будет иметь следующий результат: </para>
          <para>Рисунок 1: формула для метода ЧПС</para>
          <para> </para>
          <para> </para>
          <para>
            <b>ЧПС</b> аналогична <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Pv(System.Double,System.Double,System.Double,System.Object,System.Object)" /> функции (текущее значение). Основное различие между ПС и <b>ЧПС</b> состоит в том <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Pv(System.Double,System.Double,System.Double,System.Object,System.Object)" /> , что позволяет кассовым потокам начинаться либо в конце периода, либо в начале периода. В отличие от переменной движения денежных средств для <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Pv(System.Double,System.Double,System.Double,System.Object,System.Object)" /> <b>функции ЧПС</b> , денежные потоки должны быть постоянными во время инвестиций. Сведения о аннуитетах и финансовых функциях приведены <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Pv(System.Double,System.Double,System.Double,System.Object,System.Object)" />в статье. </para>
          <para>
            <b>ЧПС</b> также относится к <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Irr(System.Object,System.Object)" /> функции (внутренняя ставка доходности). <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Irr(System.Object,System.Object)" />— Это частота, для которой <b>ЧПС</b> равняется нулю: ЧПС (ВСД (...),...) = 0.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberValue">
      <MemberSignature Language="C#" Value="public double NumberValue (string Arg1, string Arg2, string Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 NumberValue([in]string Arg1, [in]string Arg2, [in]string Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.NumberValue(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function NumberValue (Arg1 As String, Arg2 As String, Arg3 As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double NumberValue(System::String ^ Arg1, System::String ^ Arg2, System::String ^ Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16969)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
        <Parameter Name="Arg2" Type="System.String" />
        <Parameter Name="Arg3" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Arg1">Строка, представляющая число, которое требуется преобразовать.</param>
        <param name="Arg2">Символ, используемый в качестве разделителя целой и дробной части строки.</param>
        <param name="Arg3">Символ, используемый в качестве разделителя группы в строке.</param>
        <summary>Преобразует текст в число независимо от языкового стандарта.</summary>
        <returns><b>DOUBLE</b></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Oct2Bin">
      <MemberSignature Language="C#" Value="public string Oct2Bin (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Oct2Bin([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Oct2Bin(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Oct2Bin (Arg1 As Object, Optional Arg2 As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16774)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Number — преобразуемое восьмеричное число. Число не может содержать более 10 символов. Наиболее значащим битом числа является знаковый бит. Остальные 29 бит являются битами. Отрицательные числа представлены с помощью нотации с двумя комплементарными числами.</param>
        <param name="Arg2">Разрядность — количество используемых символов. Если разрядность опущена, <b>ВОСЬМ.</b> использует минимальное необходимое количество символов. Разрядность удобно использовать для заполнения возвращаемого значения с помощью ведущих нулей (нулей).</param>
        <summary>Преобразует восьмеричное число в двоичное.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если число отрицательно, <b>ВОСЬМ.</b> игнорирует разрядность и возвращает 10-значный двоичный номер. </para>
          <para>Если число отрицательно, оно не может быть меньше 7777777000, а если число положительно, оно не может быть больше 777. </para>
          <para>Если число не является допустимым восьмеричным числом, <b>ВОСЬМ.</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если для <b>ВОСЬМ.</b> требуется больше символов, то возвращается #NUM! значение ошибки. </para>
          <para>Если разрядность не целое число, то оно усекается. </para>
          <para>Если разрядность не число, то <b>ВОСЬМ.</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если разрядность отрицательна, <b>ВОСЬМ.</b> Возвращает #NUM! значение ошибки.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Oct2Dec">
      <MemberSignature Language="C#" Value="public string Oct2Dec (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Oct2Dec([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Oct2Dec(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Oct2Dec (Arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Oct2Dec(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16776)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Number — преобразуемое восьмеричное число. Число не может содержать более 10 восьмеричных символов (30 бит). Наиболее значащим битом числа является знаковый бит. Остальные 29 бит являются битами. Отрицательные числа представлены с помощью нотации с двумя комплементарными числами.</param>
        <summary>Преобразует восьмеричное число в десятичное.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если число не является допустимым восьмеричным числом, <b>ВОСЬМ.</b> Возвращает #NUM! значение ошибки.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Oct2Hex">
      <MemberSignature Language="C#" Value="public string Oct2Hex (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Oct2Hex([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Oct2Hex(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Oct2Hex (Arg1 As Object, Optional Arg2 As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16775)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Number — преобразуемое восьмеричное число. Число не может содержать более 10 восьмеричных символов (30 бит). Наиболее значащим битом числа является знаковый бит. Остальные 29 бит являются битами. Отрицательные числа представлены с помощью нотации с двумя комплементарными числами.</param>
        <param name="Arg2">Разрядность — количество используемых символов. Если разрядность опущена, <b>ВОСЬМ.</b> использует минимальное необходимое количество символов. Разрядность удобно использовать для заполнения возвращаемого значения с помощью ведущих нулей (нулей).</param>
        <summary>Преобразует восьмеричное число в шестнадцатеричное.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если число отрицательно, то <b>ВОСЬМ.</b> игнорирует разрядность и возвращает 10-значное шестнадцатеричное число. </para>
          <para>Если число не является допустимым восьмеричным числом, <b>ВОСЬМ.</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если для <b>ВОСЬМ.</b> требуется больше символов, то возвращается #NUM! значение ошибки. </para>
          <para>Если разрядность не целое число, то оно усекается. </para>
          <para>Если разрядность не число, то <b>ВОСЬМ.</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если разрядность отрицательна, <b>ВОСЬМ.</b> Возвращает #NUM! значение ошибки.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Odd">
      <MemberSignature Language="C#" Value="public double Odd (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Odd([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Odd(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Odd (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Odd(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16682)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Number — округляемое значение.</param>
        <summary>Возвращает число, округленное до ближайшего нечетного целого числа.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если число не является числом, <b>нечет</b> возвращает #VALUE! значение ошибки. </para>
          <para>Независимо от знака числа, значение округляется при коррекции с нуля. Если число является четным целым, то никакого округления не выполняется.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="OddFPrice">
      <MemberSignature Language="C#" Value="public double OddFPrice (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 OddFPrice([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.OddFPrice(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function OddFPrice (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Arg5 As Object, Arg6 As Object, Arg7 As Object, Arg8 As Object, Optional Arg9 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16846)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Дата_согл — Дата соглашения по ценным обозначением. Дата сопоставления безопасности — это дата после даты выпускной сделки, когда она передается покупателю.</param>
        <param name="Arg2">Дата_вступления_в_силу — срок погашения ценных бумаг. Срок погашения — это дата истечения срока действия системы безопасности.</param>
        <param name="Arg3">Issue — Дата выпуска для системы безопасности.</param>
        <param name="Arg4">First_coupon Дата первого купона для безопасности.</param>
        <param name="Arg5">Rate — процентная ставка по ценным бумагам.</param>
        <param name="Arg6">Доход — ежегодный доход по ценным бумагам.</param>
        <param name="Arg7">Погашение — выкупная стоимость ценных бумаг на $100.</param>
        <param name="Arg8">Периодичность — количество выплат по купонам за год. Для ежегодных выплат частота = 1; для полугодий частота = 2; для ежеквартальных выплат частота = 4.</param>
        <param name="Arg9">Базис — используемый тип расчета дня.</param>
        <summary>Возвращает значение price для каждой грани $100 для безопасности с нечетным (коротким или длинным) первым периодом.</summary>
        <returns>To be added.</returns>
        <remarks><list type="table">
            <item>
              <term>0 или опущен</term>
              <description>АМЕРИКАНСКИЙ (NASD) 30/360</description>
            </item>
            <item>
              <term>1,1</term>
              <description>Фактический/фактический</description>
            </item>
            <item>
              <term>2</term>
              <description>Фактический/360</description>
            </item>
            <item>
              <term>4</term>
              <description>Фактические/365</description>
            </item>
            <item>
              <term>4 </term>
              <description>Европейская 30/360</description>
            </item>
          </list>
          <para>Microsoft Excel хранит даты как последовательные серийные номера, чтобы их можно было использовать в вычислениях. По умолчанию 1 января 1900 года является порядковым номером 1, а 1 января 2008 — порядковым номером 39448, так как он составляет 39 448 дней после 1 января 1900. Microsoft Excel для Macintosh использует в качестве значения по умолчанию другую систему дат. </para>
          <para>Дата соглашения — это дата приобретения покупателем купона, например облигации. Дата погашения — это дата истечения срока действия купона. Например, предположим, что 30-летний облигация составляет 1 января 2008 г., и позднее он покупается покупателем за шесть месяцев. Дата выпуска — 1 января 2008 года, Дата расчета — 1 июля 2008, а срок погашения — 1 января 2038 г., что составляет 30 лет после даты выпуска 1 января, 2008 года. </para>
          <para>Дата_согл, дата_вступл_в_силу, выдача, first_coupon и базис усекаются до целых. </para>
          <para>Если дата_согл, дата_вступл_в_силу, Issue или first_coupon не является допустимой датой, <b>ЦЕНАПЕРВНЕРЕГ</b> возвращает значение #VALUE! значение ошибки. </para>
          <para>Если ставка &lt; 0 или доход &lt; 0, <b>ЦЕНАПЕРВНЕРЕГ</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если базис &lt; 0 или базис &gt; 4, <b>ЦЕНАПЕРВНЕРЕГ</b> Возвращает #NUM! значение ошибки. </para>
          <para>Следующее условие даты должно быть удовлетворено; в противном случае <b>ЦЕНАПЕРВНЕРЕГ</b> Возвращает #NUM! значение ошибки: </para>
          <para>выдача &gt; first_coupon с учетом сроков оплаты &gt; &gt;</para>
          <para> </para>
          <para>
            <b>ЦЕНАПЕРВНЕРЕГ</b> вычисляется следующим образом: нерегулярный короткий первый купон:</para>
          <para>Рисунок 1: нерегулярный короткий первый купон</para>
          <para> </para>
          <para> </para>
          <para>где:</para>
          <para>A = количество дней от начала периода купона до даты расчета (накопленные дни).</para>
          <para>DSC — количество дней от даты соглашения до даты следующего купона.</para>
          <para>ДФК = количество дней от начала нечетного первого купона до даты первого купона.</para>
          <para>E = количество дней в периоде купона.</para>
          <para>N = количество оплачиваемых купонов между датой расчета и датой погашения. (Если это число содержит дробь, оно вызывается до следующего целого числа.)</para>
          <para>Нечетный длинный первый купон:</para>
          <para>Рис. 2: нечетный длинный первый купон</para>
          <para> </para>
          <para> </para>
          <para>где:</para>
          <para>AI — количество дней от начала i-го или последнего квазикупонного периода в нерегулярном периоде.</para>
          <para>ДЦи = число дней от даты после даты (или даты выпуска) до первого квазикупонного (i = 1) или количество дней в квазикупонного (i = 2,..., i = NC).</para>
          <para>DSC — количество дней от даты соглашения до даты следующего купона.</para>
          <para>E = количество дней в периоде купона.</para>
          <para>N = количество оплачиваемых купонов между датой первого фактического купона и датой погашения. (Если это число содержит дробь, оно вызывается до следующего целого числа.)</para>
          <para>NC = количество периодов с нерегулярным купоном, которые соответствуют нерегулярным периодам. (Если это число содержит дробь, оно вызывается до следующего целого числа.)</para>
          <para>Нли = нормальная продолжительность в днях с полным i или последним периодом квазикупонного купона в нерегулярном периоде.</para>
          <para>НК = количество всех периодов квазикупонного периода между датой соглашения и первым купоном.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="OddFYield">
      <MemberSignature Language="C#" Value="public double OddFYield (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 OddFYield([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.OddFYield(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function OddFYield (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Arg5 As Object, Arg6 As Object, Arg7 As Object, Arg8 As Object, Optional Arg9 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16847)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Дата_согл — Дата соглашения по ценным обозначением. Дата сопоставления безопасности — это дата после даты выпускной сделки, когда она передается покупателю.</param>
        <param name="Arg2">Дата_вступления_в_силу — срок погашения ценных бумаг. Срок погашения — это дата истечения срока действия системы безопасности.</param>
        <param name="Arg3">Issue — Дата выпуска для системы безопасности.</param>
        <param name="Arg4">First_coupon Дата первого купона для безопасности.</param>
        <param name="Arg5">Rate — процентная ставка по ценным бумагам.</param>
        <param name="Arg6">Цена по ценным ценам.</param>
        <param name="Arg7">Погашение — выкупная стоимость ценных бумаг на $100.</param>
        <param name="Arg8">Периодичность — количество выплат по купонам за год. Для ежегодных выплат частота = 1; для полугодий частота = 2; для ежеквартальных выплат частота = 4.</param>
        <param name="Arg9">Базис — используемый тип расчета дня.</param>
        <summary>Возвращает доходность безопасности с нечетным (коротким или длинным) первым периодом.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>для ввода дат используется функция Дата или результаты других формул или функций. Например, используйте DATE (2008, 5, 23) для 23-дневного дня мая 2008. Проблемы могут возникать, если даты вводятся как текст.</para>
          <list type="table">
            <item>
              <term>0 или опущен</term>
              <description>АМЕРИКАНСКИЙ (NASD) 30/360</description>
            </item>
            <item>
              <term>1,1</term>
              <description>Фактический/фактический</description>
            </item>
            <item>
              <term>2</term>
              <description>Фактический/360</description>
            </item>
            <item>
              <term>4</term>
              <description>Фактические/365</description>
            </item>
            <item>
              <term>4 </term>
              <description>Европейская 30/360</description>
            </item>
          </list>
          <para>Microsoft Excel хранит даты как последовательные серийные номера, чтобы их можно было использовать в вычислениях. По умолчанию 1 января 1900 года является порядковым номером 1, а 1 января 2008 — порядковым номером 39448, так как он составляет 39 448 дней после 1 января 1900. Microsoft Excel для Macintosh использует в качестве значения по умолчанию другую систему дат. </para>
          <para>Дата соглашения — это дата приобретения покупателем купона, например облигации. Дата погашения — это дата истечения срока действия купона. Например, предположим, что 30-летний облигация составляет 1 января 2008 г., и позднее он покупается покупателем за шесть месяцев. Дата выпуска — 1 января 2008 года, Дата расчета — 1 июля 2008, а срок погашения — 1 января 2038 г., что составляет 30 лет после даты выпуска 1 января, 2008 года. </para>
          <para>Дата_согл, дата_вступл_в_силу, выдача, first_coupon и базис усекаются до целых. </para>
          <para>Если дата_согл, дата_вступл_в_силу, Issue или first_coupon не является допустимой датой, <b>ДОХОДПЕРВНЕРЕГ</b> возвращает значение #VALUE! значение ошибки. </para>
          <para>Если ставка &lt; составляет 0 или цена ≤ 0, <b>ДОХОДПЕРВНЕРЕГ</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если базис &lt; 0 или базис &gt; 4, <b>ДОХОДПЕРВНЕРЕГ</b> Возвращает #NUM! значение ошибки. </para>
          <para>Следующее условие даты должно быть удовлетворено; в противном случае <b>ДОХОДПЕРВНЕРЕГ</b> Возвращает #NUM! значение ошибки: </para>
          <para>выдача &gt; first_coupon с учетом сроков оплаты &gt; &gt;</para>
          <para>Для вычисления <b>ДОХОДПЕРВНЕРЕГ</b>в Excel используется итеративный метод. Эта функция использует метод Невтон на основе формулы, используемой для функции <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.OddFPrice(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />. Доход изменяется с 100 итераций до тех пор, пока предполагаемая цена с указанным доходом не будет близка к цене. Для <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.OddFPrice(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> формулы, используемой <b>ДОХОДПЕРВНЕРЕГ</b> , ознакомьтесь со статьей.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="OddLPrice">
      <MemberSignature Language="C#" Value="public double OddLPrice (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 OddLPrice([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.OddLPrice(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function OddLPrice (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Arg5 As Object, Arg6 As Object, Arg7 As Object, Optional Arg8 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16844)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Дата_согл — Дата соглашения по ценным обозначением. Дата сопоставления безопасности — это дата после даты выпускной сделки, когда она передается покупателю.</param>
        <param name="Arg2">Дата_вступления_в_силу — срок погашения ценных бумаг. Срок погашения — это дата истечения срока действия системы безопасности.</param>
        <param name="Arg3">Last_interest Дата последнего купона для ценных сведений.</param>
        <param name="Arg4">Rate — процентная ставка по ценным бумагам.</param>
        <param name="Arg5">Доход — ежегодный доход по ценным бумагам.</param>
        <param name="Arg6">Погашение — выкупная стоимость ценных бумаг на $100.</param>
        <param name="Arg7">Периодичность — количество выплат по купонам за год. Для ежегодных выплат частота = 1; для полугодий частота = 2; для ежеквартальных выплат частота = 4.</param>
        <param name="Arg8">Базис — используемый тип расчета дня.</param>
        <summary>Возвращает значение price для каждой грани $100 для безопасности с нечетным (коротким или длинным) последним купонным периодом.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>для ввода дат используется функция Дата или результаты других формул или функций. Например, используйте DATE (2008, 5, 23) для 23-дневного дня мая 2008. Проблемы могут возникать, если даты вводятся как текст.</para>
          <list type="table">
            <item>
              <term>0 или опущен</term>
              <description>АМЕРИКАНСКИЙ (NASD) 30/360</description>
            </item>
            <item>
              <term>1,1</term>
              <description>Фактический/фактический</description>
            </item>
            <item>
              <term>2</term>
              <description>Фактический/360</description>
            </item>
            <item>
              <term>4</term>
              <description>Фактические/365</description>
            </item>
            <item>
              <term>4 </term>
              <description>Европейская 30/360</description>
            </item>
          </list>
          <para>Microsoft Excel хранит даты как последовательные серийные номера, чтобы их можно было использовать в вычислениях. По умолчанию 1 января 1900 года является порядковым номером 1, а 1 января 2008 — порядковым номером 39448, так как он составляет 39 448 дней после 1 января 1900. Microsoft Excel для Macintosh использует в качестве значения по умолчанию другую систему дат. </para>
          <para>Дата соглашения — это дата приобретения покупателем купона, например облигации. Дата погашения — это дата истечения срока действия купона. Например, предположим, что 30-летний облигация составляет 1 января 2008 г., и позднее он покупается покупателем за шесть месяцев. Дата выпуска — 1 января 2008 года, Дата расчета — 1 июля 2008, а срок погашения — 1 января 2038 г., что составляет 30 лет после даты выпуска 1 января, 2008 года. </para>
          <para>Дата_согл, дата_вступл_в_силу, last_interest и базис усекаются до целых. </para>
          <para>Если дата_согл, дата_вступл_в_силу или last_interest не является допустимой датой, <b>ЦЕНАПОСЛНЕРЕГ</b> возвращает значение #VALUE! значение ошибки. </para>
          <para>Если ставка &lt; 0 или доход &lt; 0, <b>ЦЕНАПОСЛНЕРЕГ</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если базис &lt; 0 или базис &gt; 4, <b>ЦЕНАПОСЛНЕРЕГ</b> Возвращает #NUM! значение ошибки. </para>
          <para>Следующее условие даты должно быть удовлетворено; в противном случае <b>ЦЕНАПОСЛНЕРЕГ</b> Возвращает #NUM! значение ошибки: </para>
          <para>last_interest &gt; сопоставления &gt; сроков оплаты</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="OddLYield">
      <MemberSignature Language="C#" Value="public double OddLYield (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 OddLYield([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.OddLYield(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function OddLYield (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Arg5 As Object, Arg6 As Object, Arg7 As Object, Optional Arg8 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16845)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Дата_согл — Дата соглашения по ценным обозначением. Дата сопоставления безопасности — это дата после даты выпускной сделки, когда она передается покупателю.</param>
        <param name="Arg2">Дата_вступления_в_силу — срок погашения ценных бумаг. Срок погашения — это дата истечения срока действия системы безопасности.</param>
        <param name="Arg3">Last_interest Дата последнего купона для ценных сведений.</param>
        <param name="Arg4">Rate — процентная ставка по ценным бумагам.</param>
        <param name="Arg5">Цена по ценным ценам.</param>
        <param name="Arg6">Погашение — выкупная стоимость ценных бумаг на $100.</param>
        <param name="Arg7">Периодичность — количество выплат по купонам за год. Для ежегодных выплат частота = 1; для полугодий частота = 2; для ежеквартальных выплат частота = 4.</param>
        <param name="Arg8">Базис — используемый тип расчета дня.</param>
        <summary>Возвращает доходность безопасности с нечетным (коротким или длинным) последним периодом.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>для ввода дат используется функция Дата или результаты других формул или функций. Например, используйте DATE (2008, 5, 23) для 23-дневного дня мая 2008. Проблемы могут возникать, если даты вводятся как текст.</para>
          <list type="table">
            <item>
              <term>0 или опущен</term>
              <description>АМЕРИКАНСКИЙ (NASD) 30/360</description>
            </item>
            <item>
              <term>1,1</term>
              <description>Фактический/фактический</description>
            </item>
            <item>
              <term>2</term>
              <description>Фактический/360</description>
            </item>
            <item>
              <term>4</term>
              <description>Фактические/365</description>
            </item>
            <item>
              <term>4 </term>
              <description>Европейская 30/360</description>
            </item>
          </list>
          <para>Microsoft Excel хранит даты как последовательные серийные номера, чтобы их можно было использовать в вычислениях. По умолчанию 1 января 1900 года является порядковым номером 1, а 1 января 2008 — порядковым номером 39448, так как он составляет 39 448 дней после 1 января 1900. Microsoft Excel для Macintosh использует в качестве значения по умолчанию другую систему дат. </para>
          <para>Дата соглашения — это дата приобретения покупателем купона, например облигации. Дата погашения — это дата истечения срока действия купона. Например, предположим, что 30-летний облигация составляет 1 января 2008 г., и позднее он покупается покупателем за шесть месяцев. Дата выпуска — 1 января 2008 года, Дата расчета — 1 июля 2008, а срок погашения — 1 января 2038 г., что составляет 30 лет после даты выпуска 1 января, 2008 года. </para>
          <para>Дата_согл, дата_вступл_в_силу, last_interest и базис усекаются до целых. </para>
          <para>Если дата_согл, дата_вступл_в_силу или last_interest не является допустимой датой, <b>ДОХОДПОСЛНЕРЕГ</b> возвращает значение #VALUE! значение ошибки. </para>
          <para>Если ставка &lt; составляет 0 или цена ≤ 0, <b>ДОХОДПОСЛНЕРЕГ</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если базис &lt; 0 или базис &gt; 4, <b>ДОХОДПОСЛНЕРЕГ</b> Возвращает #NUM! значение ошибки. </para>
          <para>Следующее условие даты должно быть удовлетворено; в противном случае <b>ДОХОДПОСЛНЕРЕГ</b> Возвращает #NUM! значение ошибки: </para>
          <para>last_interest &gt; сопоставления &gt; сроков оплаты </para>
          <para>
            <b>ДОХОДПОСЛНЕРЕГ</b> вычисляется следующим образом: </para>
          <para>Рисунок 1: формула для метода ДОХОДПОСЛНЕРЕГ</para>
          <para> </para>
          <para> </para>
          <para>где:</para>
          <para>AI — количество начисленных дней для i-го или последнего квазикупонного периода в течение нерегулярного периода, пересчитанного с даты последнего процента до погашения.</para>
          <para>ДЦи = число дней, подсчитанных в i/или последнем квазикупонного периода, разделенных на длину фактического купона.</para>
          <para>NC = количество периодов с нерегулярным купоном, которые соответствуют нерегулярным периодам; Если это число содержит дробное число, оно будет выдаваться до следующего целого числа.</para>
          <para>Нли = нормальная продолжительность в днях i или Last, квазикупонного квазикупонного периода в нерегулярном купонном периоде.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Or">
      <MemberSignature Language="C#" Value="public bool Or (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Or([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Or(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Or (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16421)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Logical1, Logical2,...-от 1 до 30 проверяемых условий, которые могут иметь <b>значение true</b> или <b>false</b>.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Возвращает <b>значение true</b> , если любой из аргументов имеет <b>значение true</b>; Возвращает <b>значение false</b> , если все аргументы имеют <b>значение false</b>.</summary>
        <returns>To be added.</returns>
        <remarks><para>Аргументы должны оцениваться как логические значения (например, <b>true</b> или <b>false</b>) или в массивах или ссылках, содержащих логические значения. </para>
          <para>Если аргумент array или Reference содержит текст или пустые ячейки, эти значения игнорируются. </para>
          <para>Если указанный диапазон не содержит логических значений <b>или</b> возвращает #VALUE! значение ошибки. </para>
          <para>Можно использовать формулу <b>или</b> массив, чтобы проверить, встречается ли значение в массиве. Чтобы ввести формулу массива, нажмите клавиши CTRL + SHIFT + ВВОД.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.WorksheetFunction.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает родительский объект для указанного объекта. Только для чтения.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PDuration">
      <MemberSignature Language="C#" Value="public double PDuration (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 PDuration([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.PDuration(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function PDuration (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double PDuration(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16954)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Процентная ставка за период.</param>
        <param name="Arg2">Текущее значение инвестиции.</param>
        <param name="Arg3">Предполагаемое будущее значение инвестиций.</param>
        <summary>Возвращает количество периодов, необходимых инвестициям для достижения указанного значения.</summary>
        <returns><b>DOUBLE</b></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pearson">
      <MemberSignature Language="C#" Value="public double Pearson (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Pearson([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Pearson(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Pearson (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Pearson(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16696)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Массив1 — набор независимых значений.</param>
        <param name="Arg2">Массив2 — набор зависимых значений.</param>
        <summary>Возвращает коэффициент корреляции Пирсона r, индекс, который не имеет размерности, в диапазоне от – 1,0 до 1,0 включительно и отражает степень линейного отношения между двумя наборами данных.</summary>
        <returns>To be added.</returns>
        <remarks><para>Аргументы должны быть числами или именами, константами массива или ссылками, содержащими числа. </para>
          <para>Если аргумент array или Reference содержит текст, логические значения или пустые ячейки, эти значения игнорируются; Тем не менее, ячейки с нулевым значением включены. </para>
          <para>Если массив1 и массив2 пусты или имеют различное количество точек данных, <b>Пирсон</b> возвращает значение ошибки #N/a. </para>
          <para>Формула коэффициента корреляции Пирсона r имеет следующий результат: </para>
          <para>Рисунок 1: коэффициент корреляции Пирсона для продукта</para>
          <para> </para>
          <para> </para>
          <para>где x и y — пример среднего значения (массив1) и СРЗНАЧ (массив2).</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Percentile">
      <MemberSignature Language="C#" Value="public double Percentile (object Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Percentile([in]object Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Percentile(System.Object,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Percentile (Arg1 As Object, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Percentile(System::Object ^ Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16712)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Array — массив или диапазон данных, который определяет относительное место.</param>
        <param name="Arg2">K — значение процентиля в диапазоне от 0 до 1 включительно.</param>
        <summary>Возвращает k – ую процентиль для значений в диапазоне. С помощью этой функции можно установить пороговое значение принятия. Например, вы можете проверить кандидатов, которые оцениваются над 90th процентиль.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>эта функция заменена одной или несколькими новыми функциями, которые могут улучшить точность и имена которых лучше отражают их использование. Эта функция по-прежнему доступна для совместимости с более ранними версиями Excel. Тем не менее, если обратная совместимость не требуется, рекомендуется использовать новые функции, так как они точнее описывают их функциональность. Более подробную информацию о новых функциях можно узнать <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Percentile_Inc(System.Object,System.Double)" /> в <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Percentile_Exc(System.Object,System.Double)" /> разделе метод и. </para>
          <para>Если массив пуст, то функция <b>персентиль</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если k не число, то функция <b>персентиль</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если k равно &lt; 0 или k &gt; 1, то функция <b>персентиль</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если k не кратно 1/(n-1), то функция <b>персентиль</b> интерполирует, чтобы определить значение на k-й процентиль.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Percentile_Exc">
      <MemberSignature Language="C#" Value="public double Percentile_Exc (object Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Percentile_Exc([in]object Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Percentile_Exc(System.Object,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Percentile_Exc (Arg1 As Object, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Percentile_Exc(System::Object ^ Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16885)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Array — массив или диапазон данных, который определяет относительное место.</param>
        <param name="Arg2">K — значение процентиля в диапазоне от 0 до 1, в монопольном режиме.</param>
        <summary>Возвращает k-й процентиль для значений диапазона, где k — в диапазоне 0.. 1, монопольно.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если массив пуст, <b>Percentile_Exc</b> Возвращает #NUM! значение ошибки </para>
          <para>Если k не число, то <b>Percentile_Exc</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если k равно ≤ 0 или k ≥ 1, <b>Percentile_Exc</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если k не кратно 1/(n-1), <b>Percentile_Exc</b> интерполяция, чтобы определить значение k-TH-персентиль. </para>
          <para>
            <b>Percentile_Exc</b> интерполирует, когда значение указанного процентиля находится между двумя значениями в массиве. Если не удается выполнить интерполяцию для процентиля, k указывается, Excel возвратит #NUM! ошибкой.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Percentile_Inc">
      <MemberSignature Language="C#" Value="public double Percentile_Inc (object Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Percentile_Inc([in]object Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Percentile_Inc(System.Object,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Percentile_Inc (Arg1 As Object, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Percentile_Inc(System::Object ^ Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16886)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Array — массив или диапазон данных, который определяет относительное место.</param>
        <param name="Arg2">K — значение процентиля в диапазоне от 0 до 1 включительно.</param>
        <summary>Возвращает k – ую процентиль для значений в диапазоне. С помощью этой функции можно установить пороговое значение принятия. Например, вы можете проверить кандидатов, которые оцениваются над 90th процентиль.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если массив пуст, <b>Percentile_Inc</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если k не число, то <b>Percentile_Inc</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если k равно &lt; 0 или k &gt; 1, <b>Percentile_Inc</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если k не кратно 1/(n-1), <b>Percentile_Inc</b> интерполяция, чтобы определить значение k-TH-персентиль.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PercentRank">
      <MemberSignature Language="C#" Value="public double PercentRank (object Arg1, double Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 PercentRank([in]object Arg1, [in]float64 Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.PercentRank(System.Object,System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PercentRank (Arg1 As Object, Arg2 As Double, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16713)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Array — массив или диапазон данных с числовыми значениями, определяющими относительное относительное место.</param>
        <param name="Arg2">X — значение, для которого необходимо узнать ранг.</param>
        <param name="Arg3">Точность — необязательное значение, определяющее количество значащих цифр для возвращаемого процентного значения. Если этот параметр опущен, <b>функция ПРОЦЕНТРАНГ</b> использует три цифры (0.XXX).</param>
        <summary>Возвращает ранг значения в наборе данных в процентах от набора данных. Эта функция может использоваться для оценки относительного положения значения в наборе данных. Например, вы можете использовать <b>функция ПРОЦЕНТРАНГ</b> для оценки положения показателя тестирования аптитуде среди всех показателей для теста.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>эта функция заменена одной или несколькими новыми функциями, которые могут улучшить точность и имена которых лучше отражают их использование. Эта функция по-прежнему доступна для совместимости с более ранними версиями Excel. Тем не менее, если обратная совместимость не требуется, рекомендуется использовать новые функции, так как они точнее описывают их функциональность. Более подробную информацию о новых функциях можно узнать <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.PercentRank_Inc(System.Object,System.Double,System.Object)" /> в <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.PercentRank_Exc(System.Object,System.Double,System.Object)" /> статье методы и.</para>
          <para>Если массив пуст, <b>функция ПРОЦЕНТРАНГ</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если важно &lt; значение 1, <b>функция ПРОЦЕНТРАНГ</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если x не совпадают с одним из значений в массиве, <b>функция ПРОЦЕНТРАНГ</b> интерполирует, чтобы возвратить правильный процентный ранг.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PercentRank_Exc">
      <MemberSignature Language="C#" Value="public double PercentRank_Exc (object Arg1, double Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 PercentRank_Exc([in]object Arg1, [in]float64 Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.PercentRank_Exc(System.Object,System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PercentRank_Exc (Arg1 As Object, Arg2 As Double, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16887)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Array — массив или диапазон данных с числовыми значениями, определяющими относительное относительное место.</param>
        <param name="Arg2">X — значение, для которого необходимо узнать ранг.</param>
        <param name="Arg3">Точность — значение, определяющее количество значащих цифр для возвращаемого процентного значения. Если этот параметр опущен, <b>PercentRank_Exc</b> использует три цифры (0.XXX).</param>
        <summary>Возвращает ранг значения в наборе данных в виде процентного отношения (0.. 1, монопольно) набора данных.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если массив пуст, <b>PercentRank_Exc</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если важно &lt; значение 1, <b>PercentRank_Exc</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если x не совпадают с одним из значений в массиве, <b>PercentRank_Exc</b> интерполяция, чтобы возвратить правильный процентный ранг.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PercentRank_Inc">
      <MemberSignature Language="C#" Value="public double PercentRank_Inc (object Arg1, double Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 PercentRank_Inc([in]object Arg1, [in]float64 Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.PercentRank_Inc(System.Object,System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PercentRank_Inc (Arg1 As Object, Arg2 As Double, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16888)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Array — массив или диапазон данных с числовыми значениями, определяющими относительное относительное место.</param>
        <param name="Arg2">X — значение, для которого необходимо узнать ранг.</param>
        <param name="Arg3">Точность — необязательное значение, определяющее количество значащих цифр для возвращаемого процентного значения. Если этот параметр опущен, <b>PercentRank_Inc</b> использует три цифры (0.XXX).</param>
        <summary>Возвращает ранг значения в наборе данных в процентном соотношении (0.. 1 включительно) набора данных. Эта функция может использоваться для оценки относительного положения значения в наборе данных. Например, можно использовать <b>PercentRank_Inc</b> для оценки положения показателя тестирования аптитуде среди всех показателей для теста.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если массив пуст, <b>PercentRank_Inc</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если важно &lt; значение 1, <b>PercentRank_Inc</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если x не совпадают с одним из значений в массиве, <b>PercentRank_Inc</b> интерполяция, чтобы возвратить правильный процентный ранг.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Permut">
      <MemberSignature Language="C#" Value="public double Permut (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Permut([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Permut(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Permut (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Permut(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16683)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число — целое число, которое описывает количество объектов.</param>
        <param name="Arg2">Number_chosen — целое число, которое описывает число объектов в каждой перестановке.</param>
        <summary>Возвращает количество перестановок для указанного числа объектов, которые можно выбрать из числовых объектов. Перестановка это любой набор или подмножество объектов или событий, где важен внутренний порядок. Перестановки отличаются от комбинаций, для которых внутренний порядок не важен. Используйте эту функцию для расчетов вероятности подложных лотереях в стиле.</summary>
        <returns>To be added.</returns>
        <remarks><para>Оба аргумента усекаются до целых. </para>
          <para>Если число или number_chosen не является числом, <b>ПЕРЕСТ</b> возвращает значение #VALUE! значение ошибки. </para>
          <para>Если число ≤ 0 или number_chosen &lt; 0, <b>перест</b> возвращает значение #NUM! значение ошибки. </para>
          <para>Если число &lt; Number_chosen, <b>перест</b> возвращает значение #NUM! значение ошибки. </para>
          <para>Уравнение для числа перестановок имеет следующий следующий код: </para>
          <para>Рисунок 1: уравнение для количества перестановок</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Permutationa">
      <MemberSignature Language="C#" Value="public double Permutationa (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Permutationa([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Permutationa(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Permutationa (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Permutationa(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16951)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Общее число объектов.</param>
        <param name="Arg2">Количество объектов в каждой перестановке.</param>
        <summary>Возвращает количество перестановок для указанного количества объектов (с повторениями), которые могут быть выбраны из итоговых объектов.</summary>
        <returns><b>DOUBLE</b></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Phi">
      <MemberSignature Language="C#" Value="public double Phi (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Phi([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Phi(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Phi (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Phi(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16962)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число, для которого требуется плотность стандартного нормального распределения.</param>
        <summary>Возвращает значение функции плотности для стандартного нормального распределения.</summary>
        <returns><b>DOUBLE</b></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Phonetic">
      <MemberSignature Language="C#" Value="public string Phonetic (Microsoft.Office.Interop.Excel.Range Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Phonetic([in]class Microsoft.Office.Interop.Excel.Range Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Phonetic(Microsoft.Office.Interop.Excel.Range)" />
      <MemberSignature Language="VB.NET" Value="Public Function Phonetic (Arg1 As Range) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Phonetic(Microsoft::Office::Interop::Excel::Range ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16744)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
      </Parameters>
      <Docs>
        <param name="Arg1">Reference — текстовая строка или ссылка на одну ячейку или диапазон ячеек, содержащих текстовую строку фуригана.</param>
        <summary>Извлекает фонетические знаки (фуригана) из текстовой строки.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если параметр reference является диапазоном ячеек, возвращается текстовая строка фуригана в левом верхнем углу ячейки диапазона. </para>
          <para>Если ссылка является диапазоном несмежных ячеек, возвращается значение ошибки #N/A.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Pi">
      <MemberSignature Language="C#" Value="public double Pi ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Pi() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Pi" />
      <MemberSignature Language="VB.NET" Value="Public Function Pi () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Pi();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16403)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает число 3.14159265358979, математическую константу пи, точность до 15 цифр.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pmt">
      <MemberSignature Language="C#" Value="public double Pmt (double Arg1, double Arg2, double Arg3, object Arg4, object Arg5);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Pmt([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]object Arg4, [in]object Arg5) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Pmt(System.Double,System.Double,System.Double,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Pmt (Arg1 As Double, Arg2 As Double, Arg3 As Double, Optional Arg4 As Object, Optional Arg5 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16443)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Ставка — процентная ставка для ссуды.</param>
        <param name="Arg2">Кол_пер — общее число платежей для ссуды.</param>
        <param name="Arg3">ПС — текущее значение или общая сумма, на которую поступил ряд будущих выплат; также называется субъектом.</param>
        <param name="Arg4">БС — будущее значение или баланс наличности, который вы хотите достичь после последнего платежа. Если аргумент бс опущен, предполагается, что он равен 0 (нулю), то есть будущее значение ссуды равно 0.</param>
        <param name="Arg5">Тип — число 0 (ноль) или 1, обозначающее срок оплаты.</param>
        <summary>Вычисляет платеж для ссуды на основе постоянных выплат и постоянную процентную ставку.</summary>
        <returns>To be added.</returns>
        <remarks><para>Более полное описание аргументов <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Pv(System.Double,System.Double,System.Double,System.Object,System.Object)" /> функции <b>ПЛТ</b>приведено в описании функции.</para>
          <list type="table">
            <item>
              <term>0 или опущен</term>
              <description>В конце периода</description>
            </item>
            <item>
              <term>1,1</term>
              <description>В начале периода</description>
            </item>
          </list>
          <para>Платеж, возвращенный функцией <b>ПЛТ</b> , включает в себя субъект и процент, но без налогов, платежей на резервирование или сборы, которые иногда связаны с займами. </para>
          <para>Убедитесь, что вы последовательны в выборе единиц измерения, используемых для указания коэффициента и кпер. Если вы вносите ежемесячные платежи по ссуде из четырех лет на годовую процентную ставку в 12 процентов, используйте 12%/12 для параметра ставка и 4 * 12 для параметра кпер. Если вы вносите годовые платежи в одну и ту же ссуду, используйте 12 процентов для параметра ставка и 4 для параметра кпер.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Poisson">
      <MemberSignature Language="C#" Value="public double Poisson (double Arg1, double Arg2, bool Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Poisson([in]float64 Arg1, [in]float64 Arg2, [in]bool Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Poisson(System.Double,System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Poisson (Arg1 As Double, Arg2 As Double, Arg3 As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Poisson(double Arg1, double Arg2, bool Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16684)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Arg1">X — количество событий.</param>
        <param name="Arg2">Среднее — ожидаемое числовое значение.</param>
        <param name="Arg3">Интегральная — логическое значение, определяющее форму возвращаемого распределения вероятности. Если интегральная имеет значение TRUE, то функция ПУАССОН возвращает интегральную вероятность Пуассона, что количество происходящих случайных событий будет от нуля до x включительно; Если значение равно FALSE, возвращается функция плотности распределения Пуассона, то есть количество событий будет равно x.</param>
        <summary>Возвращает распределение Пуассона. Общее приложение распределения Пуассона прогнозирует количество событий за определенный период времени, например количество автомобилей, поступающих на платные Плаза, в течение 1 минуты.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>эта функция заменена одной или несколькими новыми функциями, которые могут улучшить точность и имена которых лучше отражают их использование. Эта функция по-прежнему доступна для совместимости с более ранними версиями Excel. Тем не менее, если обратная совместимость не требуется, рекомендуется использовать новые функции, так как они точнее описывают их функциональность. Более подробную информацию о функции New можно узнать в <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Poisson_Dist(System.Double,System.Double,System.Boolean)" /> методе.</para>
          <para>Если x не является целым числом, оно усекается. </para>
          <para>Если x или среднее не является числом, то <b>функция ПУАССОН</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если x &lt; 0, то <b>функция ПУАССОН</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если среднее значение ≤ 0, то <b>функция ПУАССОН</b> Возвращает #NUM! значение ошибки. </para>
          <para>
            <b>Функция ПУАССОН</b> вычисляется следующим образом. </para>
          <para>Для интегральная = <b>false</b>:</para>
          <para>Рисунок 1: расчет, если интегральная имеет значение ложь</para>
          <para> </para>
          <para> </para>
          <para>Для аргумента интегральная = <b>true</b>:</para>
          <para>Рисунок 2: расчет, если интегральная имеет значение истина</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Poisson_Dist">
      <MemberSignature Language="C#" Value="public double Poisson_Dist (double Arg1, double Arg2, bool Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Poisson_Dist([in]float64 Arg1, [in]float64 Arg2, [in]bool Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Poisson_Dist(System.Double,System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Poisson_Dist (Arg1 As Double, Arg2 As Double, Arg3 As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Poisson_Dist(double Arg1, double Arg2, bool Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16889)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Arg1">X — количество событий.</param>
        <param name="Arg2">Среднее — ожидаемое числовое значение.</param>
        <param name="Arg3">Интегральная — логическое значение, определяющее форму возвращаемого распределения вероятности. Если интегральная имеет <b>значение true</b>, <b>Poisson_Dist</b> возвращает интегральную вероятность Пуассона, что количество происходящих случайных событий будет от 0 (нуля) до x включительно; Если <b>значение равно false</b>, возвращается функция плотности распределения Пуассона, то есть количество событий будет равно x.</param>
        <summary>Возвращает распределение Пуассона. Обычное приложение распределения Пуассона прогнозирует количество событий за определенный период времени, например количество автомобилей, поступающих на платные Плаза, за одну минуту.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если x не является целым числом, оно усекается. </para>
          <para>Если x или среднее не является числом, <b>Poisson_Dist</b> возвращает значение #VALUE! значение ошибки. </para>
          <para>Если x &lt; 0, <b>Poisson_Dist</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если среднее значение ≤ 0, <b>Poisson_Dist</b> Возвращает #NUM! значение ошибки. </para>
          <para>
            <b>Poisson_Dist</b> вычисляется следующим образом. </para>
          <para>Для интегральная = <b>false</b>:</para>
          <para>Рисунок 1: расчет, если интегральная имеет значение ложь</para>
          <para> </para>
          <para> </para>
          <para>Для аргумента интегральная = <b>true</b>:</para>
          <para>Рисунок 2: расчет, если интегральная имеет значение истина</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Power">
      <MemberSignature Language="C#" Value="public double Power (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Power([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Power(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Power (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Power(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16721)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Number — базовый номер. Это может быть любое действительное число.</param>
        <param name="Arg2">Power — показатель степени, в которую вызывается базовый номер.</param>
        <summary>Возвращает результат возведения числа в степени.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ppmt">
      <MemberSignature Language="C#" Value="public double Ppmt (double Arg1, double Arg2, double Arg3, double Arg4, object Arg5, object Arg6);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Ppmt([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]float64 Arg4, [in]object Arg5, [in]object Arg6) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Ppmt(System.Double,System.Double,System.Double,System.Double,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ppmt (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Double, Optional Arg5 As Object, Optional Arg6 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16552)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Double" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Ставка — процентная ставка за период.</param>
        <param name="Arg2">За период и должен находиться в диапазоне от 1 до кпер.</param>
        <param name="Arg3">Кол_пер — общее количество периодов выплат в аннуитете.</param>
        <param name="Arg4">НЗ — текущее значение — общая сумма, на которую помещается ряд будущих выплат.</param>
        <param name="Arg5">БС — будущее значение или баланс наличности, который вы хотите достичь после последнего платежа. Если аргумент бс опущен, предполагается, что он равен 0 (нулю), то есть будущее значение ссуды равно 0.</param>
        <param name="Arg6">Тип — число 0 или 1, обозначающее, когда следует оплатить платежи.</param>
        <summary>Возвращает платеж по субъекту за указанный период для инвестиции на основе периодических, постоянных выплат и постоянной процентной ставки.</summary>
        <returns>To be added.</returns>
        <remarks><para>Более полное описание аргументов в <b>ОСПЛТ</b>см <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Pv(System.Double,System.Double,System.Double,System.Object,System.Object)" />.</para>
          <list type="table">
            <item>
              <term>0 или опущен</term>
              <description>В конце периода</description>
            </item>
            <item>
              <term>1,1</term>
              <description>В начале периода</description>
            </item>
          </list>
          <para>Убедитесь, что вы последовательны в выборе единиц измерения, используемых для указания коэффициента и кпер. Если вы выплачиваете ежемесячные выплаты по ссуде на 4% ежегодно, используйте 12%/12 для расчета ставка и 4 * 12 для кпер. Если вы вносите годовые платежи в одну и ту же ссуду, используйте значение 12% для параметра ставка и 4 для параметра кпер.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Price">
      <MemberSignature Language="C#" Value="public double Price (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Price([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Price(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Price (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Arg5 As Object, Arg6 As Object, Optional Arg7 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16825)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Дата_согл — Дата соглашения по ценным обозначением. Дата сопоставления безопасности — это дата после даты выпускной сделки, когда она передается покупателю.</param>
        <param name="Arg2">Дата_вступления_в_силу — срок погашения ценных бумаг. Срок погашения — это дата истечения срока действия системы безопасности.</param>
        <param name="Arg3">Rate — годовая частота купонов для ценных купонов.</param>
        <param name="Arg4">Доход — ежегодный доход по ценным бумагам.</param>
        <param name="Arg5">Погашение — выкупная стоимость ценных бумаг на $100.</param>
        <param name="Arg6">Периодичность — количество выплат по купонам за год. Для ежегодных выплат частота = 1; для полугодий частота = 2; для ежеквартальных выплат частота = 4.</param>
        <param name="Arg7">Базис — используемый тип расчета дня.</param>
        <summary>Возвращает значение price в $100 для ценных бумаг.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>для ввода дат используется функция Дата или результаты других формул или функций. Например, используйте DATE (2008, 5, 23) для 23-дневного дня мая 2008. Проблемы могут возникать, если даты вводятся как текст.</para>
          <list type="table">
            <item>
              <term>0 или опущен</term>
              <description>АМЕРИКАНСКИЙ (NASD) 30/360</description>
            </item>
            <item>
              <term>1,1</term>
              <description>Фактический/фактический</description>
            </item>
            <item>
              <term>2</term>
              <description>Фактический/360</description>
            </item>
            <item>
              <term>4</term>
              <description>Фактические/365</description>
            </item>
            <item>
              <term>4 </term>
              <description>Европейская 30/360</description>
            </item>
          </list>
          <para>Microsoft Excel хранит даты как последовательные серийные номера, чтобы их можно было использовать в вычислениях. По умолчанию 1 января 1900 года является порядковым номером 1, а 1 января 2008 — порядковым номером 39448, так как он составляет 39 448 дней после 1 января 1900. Microsoft Excel для Macintosh использует в качестве значения по умолчанию другую систему дат. </para>
          <para>Дата соглашения — это дата приобретения покупателем купона, например облигации. Дата погашения — это дата истечения срока действия купона. Например, предположим, что 30-летний облигация составляет 1 января 2008 г., и позднее он покупается покупателем за шесть месяцев. Дата выпуска — 1 января 2008 года, Дата расчета — 1 июля 2008, а срок погашения — 1 января 2038 г., что составляет 30 лет после даты выпуска 1 января, 2008 года. </para>
          <para>Дата_согл, дата_вступл_в_силу, частота и базис усекаются до целых. </para>
          <para>Если дата_согл или дата_вступл_в_силу не является допустимой датой, то <b>Price</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если доход &lt; 0 или ставка &lt; 0, то <b>Цена</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если выкуп ≤ 0, то <b>Цена</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если частота является любым числом, отличным от 1, 2 или 4, то <b>Price</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если базис &lt; 0 или базис &gt; 4, то <b>Price</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если дата_соглашения ≥ дата_вступления_в_силу, то <b>Цена</b> Возвращает #NUM! значение ошибки. <b>Цена</b> вычисляется следующим образом: </para>
          <para>Рисунок 1: формула для метода цены</para>
          <para> </para>
          <para> </para>
          <para>где:</para>
          <para>DSC — количество дней от даты соглашения до даты следующего купона.</para>
          <para>E = количество дней в периоде купона, на который приходится дата соглашения.</para>
          <para>N = количество оплачиваемых купонов между датой расчета и датой погашения.</para>
          <para>A = количество дней от начала периода купона до даты сопоставления.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PriceDisc">
      <MemberSignature Language="C#" Value="public double PriceDisc (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 PriceDisc([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.PriceDisc(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PriceDisc (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Optional Arg5 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16820)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Дата_согл — Дата соглашения по ценным обозначением. Дата сопоставления безопасности — это дата после даты выпускной сделки, когда она передается покупателю.</param>
        <param name="Arg2">Дата_вступления_в_силу — срок погашения ценных бумаг. Срок погашения — это дата истечения срока действия системы безопасности.</param>
        <param name="Arg3">Скидка — скидка на ценную тарифную частоту.</param>
        <param name="Arg4">Погашение — выкупная стоимость ценных бумаг на $100.</param>
        <param name="Arg5">Базис — используемый тип расчета дня.</param>
        <summary>Возвращает значение цены на $100 для ценных бумаг.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>для ввода дат используется функция Дата или результаты других формул или функций. Например, используйте DATE (2008, 5, 23) для 23-дневного дня мая 2008. Проблемы могут возникать, если даты вводятся как текст.</para>
          <list type="table">
            <item>
              <term>0 или опущен</term>
              <description>АМЕРИКАНСКИЙ (NASD) 30/360</description>
            </item>
            <item>
              <term>1,1</term>
              <description>Фактический/фактический</description>
            </item>
            <item>
              <term>2</term>
              <description>Фактический/360</description>
            </item>
            <item>
              <term>4</term>
              <description>Фактические/365</description>
            </item>
            <item>
              <term>4 </term>
              <description>Европейская 30/360</description>
            </item>
          </list>
          <para>Microsoft Excel хранит даты как последовательные серийные номера, чтобы их можно было использовать в вычислениях. По умолчанию 1 января 1900 года является порядковым номером 1, а 1 января 2008 — порядковым номером 39448, так как он составляет 39 448 дней после 1 января 1900. Microsoft Excel для Macintosh использует в качестве значения по умолчанию другую систему дат. </para>
          <para>Дата соглашения — это дата приобретения покупателем купона, например облигации. Дата погашения — это дата истечения срока действия купона. Например, предположим, что 30-летний облигация составляет 1 января 2008 г., и позднее он покупается покупателем за шесть месяцев. Дата выпуска — 1 января 2008 года, Дата расчета — 1 июля 2008, а срок погашения — 1 января 2038 г., что составляет 30 лет после даты выпуска 1 января, 2008 года. </para>
          <para>Дата_согл, дата_вступл_в_силу и базис усекаются до целых. </para>
          <para>Если дата_согл или дата_вступл_в_силу не является допустимой датой, <b>ЦЕНАСКИДКА</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если скидка ≤ 0 или выкуп ≤ 0, <b>ЦЕНАСКИДКА</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если базис &lt; 0 или базис &gt; 4, <b>ЦЕНАСКИДКА</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если дата_соглашения ≥ дата_вступления_в_силу, <b>ЦЕНАСКИДКА</b> Возвращает #NUM! значение ошибки. </para>
          <para>
            <b>ЦЕНАСКИДКА</b> вычисляется следующим образом: </para>
          <para>Рисунок 1: формула для метода ЦЕНАСКИДКА</para>
          <para> </para>
          <para> </para>
          <para>где:</para>
          <para>B — количество дней в году, в зависимости от конкретного года.</para>
          <para>DSM = количество дней от даты соглашения до даты погашения.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PriceMat">
      <MemberSignature Language="C#" Value="public double PriceMat (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 PriceMat([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.PriceMat(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PriceMat (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Arg5 As Object, Optional Arg6 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16815)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Дата_согл — Дата соглашения по ценным обозначением. Дата сопоставления безопасности — это дата после даты выпускной сделки, когда она передается покупателю.</param>
        <param name="Arg2">Дата_вступления_в_силу — срок погашения ценных бумаг. Срок погашения — это дата истечения срока действия системы безопасности.</param>
        <param name="Arg3">Issue — Дата выпуска системы безопасности, выраженная в виде порядкового номера даты.</param>
        <param name="Arg4">Rate — процентная ставка по ценным бумагам на дату выпуска.</param>
        <param name="Arg5">Доход — ежегодный доход по ценным бумагам.</param>
        <param name="Arg6">Базис — используемый тип расчета дня.</param>
        <summary>Возвращает стоимость по ценным бумагам $100, которая выплачивает процентную ставку.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>для ввода дат используется функция Дата или результаты других формул или функций. Например, используйте DATE (2008, 5, 23) для 23-дневного дня мая 2008. Проблемы могут возникать, если даты вводятся как текст.</para>
          <list type="table">
            <item>
              <term>0 или опущен</term>
              <description>АМЕРИКАНСКИЙ (NASD) 30/360</description>
            </item>
            <item>
              <term>1,1</term>
              <description>Фактический/фактический</description>
            </item>
            <item>
              <term>2</term>
              <description>Фактический/360</description>
            </item>
            <item>
              <term>4</term>
              <description>Фактические/365</description>
            </item>
            <item>
              <term>4 </term>
              <description>Европейская 30/360</description>
            </item>
          </list>
          <para>Microsoft Excel хранит даты как последовательные серийные номера, чтобы их можно было использовать в вычислениях. По умолчанию 1 января 1900 года является порядковым номером 1, а 1 января 2008 — порядковым номером 39448, так как он составляет 39 448 дней после 1 января 1900. Microsoft Excel для Macintosh использует в качестве значения по умолчанию другую систему дат. </para>
          <para>Дата соглашения — это дата приобретения покупателем купона, например облигации. Дата погашения — это дата истечения срока действия купона. Например, предположим, что 30-летний облигация составляет 1 января 2008 г., и позднее он покупается покупателем за шесть месяцев. Дата выпуска — 1 января 2008 года, Дата расчета — 1 июля 2008, а срок погашения — 1 января 2038 г., что составляет 30 лет после даты выпуска 1 января, 2008 года. </para>
          <para>Дата_согл, дата_вступл_в_силу, выдача и базис усекаются до целых. </para>
          <para>Если дата_согл, дата_вступл_в_силу или Issue не является допустимой датой, то функция <b>ЦЕНАПОГАШ</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если ставка &lt; 0 или доход &lt; 0, то функция <b>ЦЕНАПОГАШ</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если базис &lt; 0 или базис &gt; 4, то функция <b>ЦЕНАПОГАШ</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если дата_соглашения ≥ дата_вступления_в_силу, то функция <b>ЦЕНАПОГАШ</b> Возвращает #NUM! значение ошибки. Функция <b>ЦЕНАПОГАШ</b> вычисляется следующим образом: </para>
          <para>Рисунок 1: формула для метода ЦЕНАПОГАШ</para>
          <para> </para>
          <para> </para>
          <para>где:</para>
          <para>B — количество дней в году, в зависимости от конкретного года.</para>
          <para>DSM = количество дней от даты соглашения до даты погашения.</para>
          <para>DIM = количество дней с момента выпуска до даты погашения.</para>
          <para>A = количество дней с момента выпуска до даты сопоставления.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Prob">
      <MemberSignature Language="C#" Value="public double Prob (object Arg1, object Arg2, double Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Prob([in]object Arg1, [in]object Arg2, [in]float64 Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Prob(System.Object,System.Object,System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Prob (Arg1 As Object, Arg2 As Object, Arg3 As Double, Optional Arg4 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16701)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">X_range — диапазон числовых значений x, с которыми связаны вероятности.</param>
        <param name="Arg2">Prob_range — набор вероятностей, связанных со значениями в x_range.</param>
        <param name="Arg3">Lower_limit — Нижняя граница значения, для которого требуется получить вероятность.</param>
        <param name="Arg4">Upper_limit — необязательная верхняя граница значения, для которого требуется получить вероятность.</param>
        <summary>Возвращает вероятность того, что значения в диапазоне находятся между двумя пределами. Если upper_limit не указан, возвращает вероятность того, что значения в x_range равны lower_limit.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если любое значение в prob_range ≤ 0 или любое значение в prob_range &gt; 1, <b>вероятность</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если сумма значений prob_range ¹ 1, <b>вероятность</b> возвращает значение #NUM! значение ошибки. </para>
          <para>Если upper_limit опущено, <b>вероятность</b> возвращает вероятность равной lower_limit. </para>
          <para>Если x_range и prob_range содержат различное количество точек данных, <b>вероятность</b> возвращает значение ошибки #N/a.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Product">
      <MemberSignature Language="C#" Value="public double Product (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Product([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Product(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Product (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16567)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число1, число2,... – 1 — 30 чисел, которые необходимо умножить.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Умножает все числа, заданные в качестве аргументов, и возвращает продукт.</summary>
        <returns>To be added.</returns>
        <remarks><para>Подсчитываются аргументы, которые являются числами, логическими значениями или текстовыми представлениями чисел; аргументы, которые являются значениями ошибки или текстом, не преобразуемым в числа, вызывают ошибки. </para>
          <para>Если аргумент является массивом или ссылкой, подсчитываются только числа в массиве или ссылке. Пустые ячейки, логические значения, текст и значения ошибок в массиве или ссылке игнорируются.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Proper">
      <MemberSignature Language="C#" Value="public string Proper (string Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Proper([in]string Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Proper(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Proper (Arg1 As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Proper(System::String ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16498)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Arg1">Текст, заключенный в кавычки, формула, возвращающая текст, или ссылка на ячейку, содержащую текст, для которого требуется выполнить частичное преобразование.</param>
        <summary>Заменяется первой буквой в текстовой строке и любыми другими буквами текста, которые соответствуют любому символу, отличному от буквы. Все остальные буквы преобразуются в буквы нижнего регистра.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pv">
      <MemberSignature Language="C#" Value="public double Pv (double Arg1, double Arg2, double Arg3, object Arg4, object Arg5);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Pv([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]object Arg4, [in]object Arg5) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Pv(System.Double,System.Double,System.Double,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Pv (Arg1 As Double, Arg2 As Double, Arg3 As Double, Optional Arg4 As Object, Optional Arg5 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16440)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Ставка — процентная ставка за период. Например, если вы получаете ссуду автомобилей на 10% годовую процентную ставку и совершают ежемесячные платежи, то процентная ставка за месяц составляет 10%/12 или 0,83%. Введите 10%/12, или 0,83%, или 0,0083, в формулу как скорость.</param>
        <param name="Arg2">Кол_пер — общее количество периодов выплат в аннуитете. Например, если вы получаете ссуду за автомобиль из четырех лет и совершают ежемесячные платежи, ссуда имеет 4 * 12 (или 48) периодов. Введите 48 в формулу для параметра кпер.</param>
        <param name="Arg3">ПЛТ — платеж выполняется в каждый период и не может меняться в течение всего периода выплат. Обычно плт включает в себя субъект и процент, но не другие сборы или налоги. Например, ежемесячные платежи на $10 000, годовой автомобиль на 12 процентов $263,33. Введите – 263,33 в формулу в качестве параметра ПЛТ. Если аргумент ПЛТ опущен, необходимо включить аргумент БС.</param>
        <param name="Arg4">БС — будущее значение или баланс наличности, который вы хотите достичь после последнего платежа. Если аргумент бс опущен, предполагается, что он равен 0 (например, будущее значение ссуды равно 0). Например, если вы хотите сохранить $50 000 для оплаты специального проекта в течение 18 лет, то будущее значение $50 000. Затем вы можете сделать консервативное предположение на процентную ставку и определить, сколько необходимо сохранить каждый месяц. Если аргумент бс опущен, необходимо указать аргумент ПЛТ.</param>
        <param name="Arg5">Тип — число 0 или 1, обозначающее, когда следует оплатить платежи.</param>
        <summary>Возвращает текущее значение инвестиции. Текущая стоимость — это общая сумма, на которую поступил ряд будущих выплат. Например, при займе денег сумма займа представляет собой текущее значение для Лендер.</summary>
        <returns>To be added.</returns>
        <remarks><list type="table">
            <item>
              <term>0 или опущен</term>
              <description>В конце периода</description>
            </item>
            <item>
              <term>1,1</term>
              <description>В начале периода</description>
            </item>
          </list>
          <para>Убедитесь, что вы последовательны в выборе единиц измерения, используемых для указания коэффициента и кпер. Если вы выплачиваете ежемесячные выплаты по ссуде на 4% ежегодно, используйте 12%/12 для расчета ставка и 4 * 12 для кпер. Если вы вносите годовые платежи в одну и ту же ссуду, используйте значение 12% для параметра ставка и 4 для параметра кпер. </para>
          <para>Следующие функции применяются к аннуитетам: </para>
          <list type="table">
            <item>
              <term>ОБЩПЛАТ</term>
              <description>ОСПЛТ</description>
            </item>
            <item>
              <term>ОБЩДОХОД</term>
              <description>PV</description>
            </item>
            <item>
              <term>FV</term>
              <description>Оценка</description>
            </item>
            <item>
              <term>БЗРАСПИС</term>
              <description>Функция</description>
            </item>
            <item>
              <term>ПРПЛТ</term>
              <description>ЧИСТНЗ</description>
            </item>
            <item>
              <term>ФУНКЦИЕЙ</term>
              <description />
            </item>
          </list>
          <para>Аннуитет представляет собой серию постоянных денежных выплат, выполняемых на непрерывном периоде. Например, заем на автомобиль или закладку являются аннуитетом. Для получения дополнительных сведений ознакомьтесь с описанием каждой функции аннуитета. </para>
          <para>В функциях аннуитета выплачиваемые деньги, например депозит для экономии, представлены отрицательным числом; получаемые деньги, такие как проверка дивидендов, представлены положительным числом. Например, депозит $1 000 в банке будет представлен аргументом – 1000, если вы депоситор, и аргументом 1000, если вы являетесь банком. </para>
          <para>Microsoft Excel разрешает один финансовый аргумент в терминах других. Если ставка не равна 0, то: </para>
          <para>Рисунок 1: формула, когда ставка не равна 0</para>
          <para> </para>
          <para> </para>
          <para>Если ставка равна 0, то:</para>
          <para>(ПЛТ * число_периодов) + PV + БС = 0</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Quartile">
      <MemberSignature Language="C#" Value="public double Quartile (object Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Quartile([in]object Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Quartile(System.Object,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Quartile (Arg1 As Object, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Quartile(System::Object ^ Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16711)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Array — массив или диапазон ячеек с числовыми значениями, для которых требуется получить значение квартиль.</param>
        <param name="Arg2">Кварта — Указывает возвращаемое значение.</param>
        <summary>Возвращает квартиль набора данных. Куартилес часто используются в данных о продажах и опросах для разделения заполнений по группам. Например, можно использовать <b>КВАРТИЛЬ</b> , чтобы найти первые 25 процентов входящих за заполнение.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>эта функция заменена одной или несколькими новыми функциями, которые могут улучшить точность и имена которых лучше отражают их использование. Эта функция по-прежнему доступна для совместимости с более ранними версиями Excel. Тем не менее, если обратная совместимость не требуется, рекомендуется использовать новые функции, так как они точнее описывают их функциональность. Более подробную информацию о новых функциях можно узнать <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Quartile_Inc(System.Object,System.Double)" /> в <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Quartile_Exc(System.Object,System.Double)" /> статье методы и.</para>
          <list type="table">
            <item>
              <term>нуль</term>
              <description>Минимальное значение</description>
            </item>
            <item>
              <term>1,1</term>
              <description>Первая квартиль (25-й процентиль)</description>
            </item>
            <item>
              <term>2</term>
              <description>Значение медианы (50-й процентиль)</description>
            </item>
            <item>
              <term>4</term>
              <description>Третья квартиль (75 процентиль)</description>
            </item>
            <item>
              <term>4 </term>
              <description>Максимальное значение</description>
            </item>
          </list>
          <para>Если массив пуст, то <b>функция КВАРТИЛЬ</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если часть не целое, то оно усекается. </para>
          <para>Если часть &lt; 0 или кварта &gt; 4, то <b>функция КВАРТИЛЬ</b> Возвращает #NUM! значение ошибки. </para>
          <para>
            <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Min(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /><see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Median(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />, и возвращайте то же значение, что и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Max(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> <b>КВАРТИЛЬ</b> , если часть равно 0 (ноль), 2 и 4 соответственно.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Quartile_Exc">
      <MemberSignature Language="C#" Value="public double Quartile_Exc (object Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Quartile_Exc([in]object Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Quartile_Exc(System.Object,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Quartile_Exc (Arg1 As Object, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Quartile_Exc(System::Object ^ Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16890)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Array — массив или диапазон ячеек с числовыми значениями, для которых требуется получить значение квартиль.</param>
        <param name="Arg2">Кварта — возвращаемое значение.</param>
        <summary>Возвращает квартиль набора данных на основе значений процентилей от 0.. 1, монопольно.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если массив пуст, <b>Quartile_Exc</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если часть не целое, то оно усекается. </para>
          <para>Если часть ≤ 0 или часть ≥ ≥ 4, <b>Quartile_Exc</b> Возвращает #NUM! значение ошибки. </para>
          <para>
            <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Min(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /><see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Median(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />, и возвращайте то же значение, что и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Max(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> <b>Quartile_Exc</b> , если часть равно 0 (ноль), 2 и 4 соответственно.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Quartile_Inc">
      <MemberSignature Language="C#" Value="public double Quartile_Inc (object Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Quartile_Inc([in]object Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Quartile_Inc(System.Object,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Quartile_Inc (Arg1 As Object, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Quartile_Inc(System::Object ^ Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16891)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Array — массив или диапазон ячеек с числовыми значениями, для которых требуется получить значение квартиль.</param>
        <param name="Arg2">Кварта — возвращаемое значение.</param>
        <summary>Возвращает квартиль набора данных на основе значений процентилей от 0 до 1 включительно. Куартилес часто используются в данных о продажах и опросах для разделения заполнений по группам. Например, можно использовать QUARTILE_INC, чтобы найти 25 процентов поступающих в Генеральной совокупности.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если массив пуст, <b>Quartile_Inc</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если часть не целое, то оно усекается. </para>
          <para>Если часть &lt; 0 или кварта &gt; 4, <b>Quartile_Inc</b> Возвращает #NUM! значение ошибки. </para>
          <para>
            <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Min(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /><see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Median(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />, и возвращайте то же значение, что и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Max(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> <b>Quartile_Inc</b> , если часть равно 0 (ноль), 2 и 4 соответственно.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Quotient">
      <MemberSignature Language="C#" Value="public double Quotient (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Quotient([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Quotient(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Quotient (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Quotient(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16801)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Числитель — делимое.</param>
        <param name="Arg2">Знаменатель — делитель.</param>
        <summary>Возвращает целую часть деления. Используйте эту функцию, чтобы отменить остаток от деления.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если любой из аргументов не число, то <b>Частное</b> возвращает #VALUE! значение ошибки.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Radians">
      <MemberSignature Language="C#" Value="public double Radians (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Radians([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Radians(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Radians (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Radians(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16726)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Угол — угол в градусах, который требуется преобразовать.</param>
        <summary>Преобразует градусы в радианы.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RandBetween">
      <MemberSignature Language="C#" Value="public double RandBetween (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 RandBetween([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.RandBetween(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function RandBetween (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double RandBetween(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16848)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Bottom — наименьшее целое число, которое возвращает функция СЛУЧМЕЖДУ.</param>
        <param name="Arg2">Top — наибольшее целое число, которое возвращает функция СЛУЧМЕЖДУ.</param>
        <summary>Возвращает случайное целое число между указанными числами. Новое случайное целое число возвращается каждый раз при вычислении листа.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rank">
      <MemberSignature Language="C#" Value="public double Rank (double Arg1, Microsoft.Office.Interop.Excel.Range Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Rank([in]float64 Arg1, [in]class Microsoft.Office.Interop.Excel.Range Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Rank(System.Double,Microsoft.Office.Interop.Excel.Range,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Rank (Arg1 As Double, Arg2 As Range, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16600)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Number — число, рейтинг которого требуется найти.</param>
        <param name="Arg2">Ref — массив или ссылка на список чисел. Нечисловые значения в ref игнорируются.</param>
        <param name="Arg3">Order — номер, указывающий способ ранжирования номера.</param>
        <summary>Возвращает ранг числа в списке чисел. Ранг числа — это его размер относительно других значений в списке. (Если Вы отсортируете список, то рангом этого числа будет должность.)</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>эта функция заменена одной или несколькими новыми функциями, которые могут улучшить точность и имена которых лучше отражают их использование. Эта функция по-прежнему доступна для совместимости с более ранними версиями Excel. Тем не менее, если обратная совместимость не требуется, рекомендуется использовать новые функции, так как они точнее описывают их функциональность. Более подробную информацию о новых функциях можно узнать <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Rank_Eq(System.Double,Microsoft.Office.Interop.Excel.Range,System.Object)" /> в <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Rank_Avg(System.Double,Microsoft.Office.Interop.Excel.Range,System.Object)" /> статье методы и.</para>
          <para>Если значение Order равно 0 (ноль) или опущено, Microsoft Excel ранжирует числа, отсортированные по убыванию. </para>
          <para>Если значение Order равно любому ненулевому значению, Microsoft Excel ранжирует числа, отсортированные по возрастанию.</para>
          <para>
            <b>Ранг</b> дает повторяющимся числам один и тот же ранг. Однако наличие повторяющихся номеров влияет на ранги последующих номеров. Например, в списке целых чисел, отсортированных в возрастающем порядке, если число 10 отображается дважды и имеет ранг 5, то 11 будет иметь ранг 7 (число не будет иметь ранг 6).</para>
          <para>В некоторых целях, возможно, потребуется использовать определение ранга, в котором учитываются рекомендации. В предыдущем примере необходимо получить пересмотренный ранг 5,5 для числа 10. Это можно сделать, добавив следующий коэффициент коррекции к значению, возвращенному по <b>рангу</b>. Этот коэффициент подходит для случая, когда ранг вычисляется в убывающем порядке (Order = 0 или опущен) или в возрастающем порядке (Order = ненулевое значение).</para>
          <para>Фактор коррекции для привязанных рангов = [COUNT (ref) + 1 – RANK (число, ссылка, 0) — ранг (Number, ref, 1)]/2.</para>
          <para>В следующем примере ранг (a2, a1: A5, 1) равняется 3. Фактором коррекции является (5 + 1 – 2 – 3)/2 = 0,5, а измененный ранг, который принимает в учетную запись TIES, составляет 3 + 0,5 = 3,5. Если значение Number присутствует только один раз в ссылке ref, коэффициентом исправления будет значение 0, так как для него не требуется корректировать <b>ранг</b> .</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Rank_Avg">
      <MemberSignature Language="C#" Value="public double Rank_Avg (double Arg1, Microsoft.Office.Interop.Excel.Range Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Rank_Avg([in]float64 Arg1, [in]class Microsoft.Office.Interop.Excel.Range Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Rank_Avg(System.Double,Microsoft.Office.Interop.Excel.Range,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Rank_Avg (Arg1 As Double, Arg2 As Range, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16892)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Number — число, рейтинг которого требуется найти.</param>
        <param name="Arg2">Ref — массив или ссылка на список чисел. Нечисловые значения в ссылке игнорируются.</param>
        <param name="Arg3">Order — номер, указывающий способ ранжирования номера. Если значение Order равно 0 (ноль) или опущено, Microsoft Excel прирангует число так, как если бы ссылка была списком, отсортированным в убывающем порядке. Если в качестве порядка задано любое ненулевое значение, Microsoft Excel ранжирует номера в виде списка, отсортированного по возрастанию.</param>
        <summary>Возвращает ранг числа в списке чисел; это размер относительно других значений в списке. Если более одного значения имеют одинаковый ранг, возвращается среднее значение ранга.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rank_Eq">
      <MemberSignature Language="C#" Value="public double Rank_Eq (double Arg1, Microsoft.Office.Interop.Excel.Range Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Rank_Eq([in]float64 Arg1, [in]class Microsoft.Office.Interop.Excel.Range Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Rank_Eq(System.Double,Microsoft.Office.Interop.Excel.Range,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Rank_Eq (Arg1 As Double, Arg2 As Range, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16893)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Number — число, рейтинг которого требуется найти.</param>
        <param name="Arg2">Ref — массив или ссылка на список чисел. Нечисловые значения в ссылке игнорируются.</param>
        <param name="Arg3">Order — номер, указывающий способ ранжирования номера.</param>
        <summary>Возвращает ранг числа в списке чисел. Ранг числа — это его размер относительно других значений в списке. (Если Вы отсортируете список, то рангом этого числа будет должность.)</summary>
        <returns>To be added.</returns>
        <remarks><para>Если значение Order равно 0 (ноль) или опущено, Microsoft Excel прирангует число так, как если бы ссылка была списком, отсортированным в убывающем порядке. </para>
          <para>Если в качестве порядка задано любое ненулевое значение, Microsoft Excel ранжирует число, как если бы ссылка была отсортирована в возрастающем порядке.</para>
          <para>В 
            <b>Rank_Eq</b> приводятся одинаковые значения ранга. Однако наличие повторяющихся номеров влияет на ранги последующих номеров. Например, в списке целых чисел, отсортированных в возрастающем порядке, если число 10 отображается дважды и имеет ранг 5, то 11 будет иметь ранг 7 (число не будет иметь ранг 6).</para>
          <para>В некоторых целях может потребоваться определение ранга, в котором учитываются рекомендации. В предыдущем примере вам потребуется пересмотренный ранг 5,5 для числа 10. Для этого добавьте следующий коэффициент коррекции к значению, возвращенному <b>Rank_Eq</b>. Этот коэффициент подходит для случая, когда ранг вычисляется в убывающем порядке (Order = 0 или опущен) или в возрастающем порядке (Order = ненулевое значение).</para>
          <para>Коэффициент исправления для связанных рангов = [COUNT (ref) + 1 – RANK_EQ (число, ссылка, 0) — RANK_EQ (Number, ref, 1)]/2.In следующий пример, RANK_EQ (a2, a1: A5, 1) равняется 3. Фактором коррекции является (5 + 1 – 2 – 3)/2 = 0,5, а измененный ранг, который принимает в учетную запись TIES, составляет 3 + 0,5 = 3,5. Если значение Number присутствует только один раз в ссылке ref, коэффициентом исправления будет значение 0, поскольку <b>Rank_Eq</b> не нужно корректировать для отдельного объекта.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Rate">
      <MemberSignature Language="C#" Value="public double Rate (double Arg1, double Arg2, double Arg3, object Arg4, object Arg5, object Arg6);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Rate([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Rate(System.Double,System.Double,System.Double,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Rate (Arg1 As Double, Arg2 As Double, Arg3 As Double, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16444)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Кол_пер — общее количество периодов выплат в аннуитете.</param>
        <param name="Arg2">ПЛТ — платеж выполняется в каждый период и не может меняться в течение всего периода выплат. Обычно плт включает в себя субъект и процент, но не другие сборы или налоги. Если аргумент ПЛТ опущен, необходимо включить аргумент БС.</param>
        <param name="Arg3">НЗ — текущее значение — общая сумма, на которую помещается ряд будущих выплат.</param>
        <param name="Arg4">БС — будущее значение или баланс наличности, который вы хотите достичь после последнего платежа. Если аргумент бс опущен, предполагается, что он равен 0 (например, будущее значение ссуды равно 0).</param>
        <param name="Arg5">Тип — число 0 или 1, обозначающее, когда следует оплатить платежи.</param>
        <param name="Arg6">Угадать — предполагаемая величина курса.</param>
        <summary>Возвращает процентную ставку за период аннуитета. RATE вычисляется по итерации и может содержать от нуля до нескольких решений. Если результаты оценки не сходятся в течение 0,0000001 после 20 итераций, то ставка Возвращает #NUM! значение ошибки.</summary>
        <returns>To be added.</returns>
        <remarks><para>Полное описание аргументов кпер, ПЛТ, ПС, БС и тип см <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Pv(System.Double,System.Double,System.Double,System.Object,System.Object)" />.</para>
          <list type="table">
            <item>
              <term>0 или опущен</term>
              <description>В конце периода</description>
            </item>
            <item>
              <term>1,1</term>
              <description>В начале периода</description>
            </item>
          </list>
          <para>Если вы опускаете прогноз, предполагается, что он равен 10 процентам. </para>
          <para>Если <b>ставка</b> не сходится, попробуйте использовать другие значения для предположения. <b>Ставка</b> обычно сходится, если значение предположения от 0 до 1.</para>
          <para>Убедитесь, что вы последовательны в выборе единиц измерения, используемых для указания предположения и кпер. Если вы выплачиваете ежемесячные выплаты по ссуде на 4% ежегодно, используйте 12%/12 для предположения и 4 * 12 для кпер. Если вы вносите годовые платежи в одну и ту же ссуду, используйте 12% для прогноза и 4 для кпер.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Received">
      <MemberSignature Language="C#" Value="public double Received (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Received([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Received(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Received (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Optional Arg5 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16818)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Дата_согл — Дата соглашения по ценным обозначением. Дата сопоставления безопасности — это дата после даты выпускной сделки, когда она передается покупателю.</param>
        <param name="Arg2">Дата_вступления_в_силу — срок погашения ценных бумаг. Срок погашения — это дата истечения срока действия системы безопасности.</param>
        <param name="Arg3">Инвестиция — сумма, инвестированная в систему безопасности.</param>
        <param name="Arg4">Скидка — скидка на ценную тарифную частоту.</param>
        <param name="Arg5">Базис — используемый тип расчета дня.</param>
        <summary>Возвращает сумму, полученную на погашение полностью инвестированных ценных бумаг.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>для ввода дат используется функция Дата или результаты других формул или функций. Например, используйте DATE (2008, 5, 23) для 23-дневного дня мая 2008. Проблемы могут возникать, если даты вводятся как текст.</para>
          <list type="table">
            <item>
              <term>0 или опущен</term>
              <description>АМЕРИКАНСКИЙ (NASD) 30/360</description>
            </item>
            <item>
              <term>1,1</term>
              <description>Фактический/фактический</description>
            </item>
            <item>
              <term>2</term>
              <description>Фактический/360</description>
            </item>
            <item>
              <term>4</term>
              <description>Фактические/365</description>
            </item>
            <item>
              <term>4 </term>
              <description>Европейская 30/360</description>
            </item>
          </list>
          <para>Microsoft Excel хранит даты как последовательные серийные номера, чтобы их можно было использовать в вычислениях. По умолчанию 1 января 1900 года является порядковым номером 1, а 1 января 2008 — порядковым номером 39448, так как он составляет 39 448 дней после 1 января 1900. Microsoft Excel для Macintosh использует в качестве значения по умолчанию другую систему дат. </para>
          <para>Дата соглашения — это дата приобретения покупателем купона, например облигации. Дата погашения — это дата истечения срока действия купона. Например, предположим, что 30-летний облигация составляет 1 января 2008 г., и позднее он покупается покупателем за шесть месяцев. Дата выпуска — 1 января 2008 года, Дата расчета — 1 июля 2008, а срок погашения — 1 января 2038 г., что составляет 30 лет после даты выпуска 1 января, 2008 года. </para>
          <para>Дата_согл, дата_вступл_в_силу и базис усекаются до целых. </para>
          <para>Если дата_согл или дата_вступл_в_силу не является допустимой датой, то <b>Received</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если инвестиция ≤ 0 или скидка ≤ 0, то <b>полученный</b> результат Возвращает #NUM! значение ошибки. </para>
          <para>Если базис &lt; 0 или базис &gt; 4, то <b>полученный</b> результат Возвращает #NUM! значение ошибки. </para>
          <para>Если дата_соглашения ≥ дата_вступления_в_силу, то полученный результат Возвращает #NUM! значение ошибки. <b>Получено</b> рассчитывается следующим образом: </para>
          <para>Рисунок 1: формула для метода Received</para>
          <para> </para>
          <para> </para>
          <para>где:</para>
          <para>B — количество дней в году в зависимости от года.</para>
          <para>DIM = количество дней с момента выпуска до даты погашения.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public string Replace (string Arg1, double Arg2, double Arg3, string Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Replace([in]string Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]string Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Replace(System.String,System.Double,System.Double,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (Arg1 As String, Arg2 As Double, Arg3 As Double, Arg4 As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Replace(System::String ^ Arg1, double Arg2, double Arg3, System::String ^ Arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16503)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Arg1">Текст, в котором нужно заменить некоторые символы.</param>
        <param name="Arg2">Позиция символа в <paramref name="Arg1" /> , который требуется заменить на <paramref name="Arg4" />.</param>
        <param name="Arg3">Количество символов в <paramref name="Arg1" /> <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Replace(System.String,System.Double,System.Double,System.String)" /> методе, с <paramref name="Arg4" />которым должен быть заменен метод.</param>
        <param name="Arg4">Текст, который заменит символы в <paramref name="Arg1" />.</param>
        <summary>Заменяет часть текстовой строки на заданное число символов другой текстовой строкой.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceB">
      <MemberSignature Language="C#" Value="public string ReplaceB (string Arg1, double Arg2, double Arg3, string Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReplaceB([in]string Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]string Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ReplaceB(System.String,System.Double,System.Double,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReplaceB (Arg1 As String, Arg2 As Double, Arg3 As Double, Arg4 As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ReplaceB(System::String ^ Arg1, double Arg2, double Arg3, System::String ^ Arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16591)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Arg1">Old_text текст, в котором нужно заменить некоторые символы.</param>
        <param name="Arg2">Start_num — позиция знака в old_text, которую нужно заменить new_text.</param>
        <param name="Arg3">Num_chars — количество символов в old_text, которые необходимо заменить на new_text.</param>
        <param name="Arg4">New_text — текст, который заменит символы в old_text.</param>
        <summary>ЗАМЕНИТЬБ заменяет часть текстовой строки в соответствии с указанным количеством байтов с другой текстовой строкой.</summary>
        <returns>To be added.</returns>
        <remarks><para><see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Replace(System.String,System.Double,System.Double,System.String)" /> 
            <b>Важно!</b>предназначено для использования с языками, использующими однобайтовый набор знаков (SBCS), тогда как <b>ЗАМЕНИТЬБ</b> предназначен для использования с языками, использующими набор двухбайтовых символов (DBCS). Параметры языка по умолчанию для компьютера влияют на возвращаемое значение следующим образом:</para>
          <para>
            <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Replace(System.String,System.Double,System.Double,System.String)" />всегда подсчитывает каждый символ (однобайтовый или двухбайтовый), как 1, независимо от значения параметра язык по умолчанию. </para>
          <para>
            <b>ЗАМЕНИТЬБ</b> подсчитывает каждый двухбайтовый символ как 2, если вы включили редактирование языка, ПОДДЕРЖИВАЮЩего DBCS, а затем назначить его языком по умолчанию. В противном случае <b>ЗАМЕНИТЬБ</b> подсчитывает каждый символ как 1. </para>
          <para>Языки, поддерживающие DBCS, включают японский, китайский (упрощенное письмо), китайский (традиционное письмо), китайский (традиционное письмо) и корейский. </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Rept">
      <MemberSignature Language="C#" Value="public string Rept (string Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Rept([in]string Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Rept(System.String,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Rept (Arg1 As String, Arg2 As Double) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Rept(System::String ^ Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16414)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Текст — текст, который нужно повторить.</param>
        <param name="Arg2">Number_times — положительное число, указывающее количество повторений текста.</param>
        <summary>Повторяет текст заданное число раз. Используйте повтор для заполнения ячейки числом экземпляров текстовой строки.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если number_times 0 (ноль <b>), то</b> функция ПОВТОР возвращает "" (пустой текст). </para>
          <para>Если number_times не целое, то оно усекается. </para>
          <para>Результат <b>функции повтор</b> не может быть длиннее 32 767 символов <b>, или функция</b> повтор возвращает #VALUE!. </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Roman">
      <MemberSignature Language="C#" Value="public string Roman (double Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Roman([in]float64 Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Roman(System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Roman (Arg1 As Double, Optional Arg2 As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16738)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число — преобразуемое арабское число.</param>
        <param name="Arg2">Form — число, задающее желаемый тип числа в Римской. Стиль цифр латиницы в диапазоне от классической к упрощенному, становится более наглядным при увеличении значения формы.</param>
        <summary>Преобразует арабское число в римские, в текстовом формате.</summary>
        <returns>To be added.</returns>
        <remarks><list type="table">
            <item>
              <term>0 или опущен</term>
              <description>Базовая.</description>
            </item>
            <item>
              <term>1,1</term>
              <description>Более краткий.</description>
            </item>
            <item>
              <term>2</term>
              <description>Более краткий.</description>
            </item>
            <item>
              <term>4</term>
              <description>Более краткий.</description>
            </item>
            <item>
              <term>4 </term>
              <description>Прост.</description>
            </item>
            <item>
              <term>
                <b>относится</b>
              </term>
              <description>Базовая.</description>
            </item>
            <item>
              <term>
                <b>значения</b>
              </term>
              <description>Прост.</description>
            </item>
          </list>
          <para>Если число отрицательно, то #VALUE! возвращается значение ошибки. </para>
          <para>Если число больше 3999, то #VALUE! возвращается значение ошибки.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public double Round (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Round([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Round(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Round (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Round(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16411)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число — округляемое число.</param>
        <param name="Arg2">Num_digits — указывает количество цифр, для которых требуется округлить число.</param>
        <summary>Округляет число до указанного количества цифр.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если num_digits больше 0 (ноль), то число округляется до указанного количества десятичных разрядов. </para>
          <para>Если num_digits значение 0, то число округляется до ближайшего целого числа. </para>
          <para>Если num_digits меньше 0, то число округляется слева от десятичной точки.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RoundBahtDown">
      <MemberSignature Language="C#" Value="public double RoundBahtDown (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 RoundBahtDown([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.RoundBahtDown(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function RoundBahtDown (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double RoundBahtDown(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16760)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <summary>Зарезервировано для внутреннего использования.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RoundBahtUp">
      <MemberSignature Language="C#" Value="public double RoundBahtUp (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 RoundBahtUp([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.RoundBahtUp(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function RoundBahtUp (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double RoundBahtUp(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16761)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <summary>Зарезервировано для внутреннего использования.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RoundDown">
      <MemberSignature Language="C#" Value="public double RoundDown (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 RoundDown([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.RoundDown(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function RoundDown (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double RoundDown(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16597)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Number — любое действительное число, которое нужно округлить.</param>
        <param name="Arg2">Num_digits — количество цифр, для которых требуется округлить число.</param>
        <summary>Округляет число в сторону до нуля.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>ОКРУГЛВНИЗ</b> работает так же <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Round(System.Double,System.Double)" />, за исключением того, что он всегда округляет число вниз. </para>
          <para>Если num_digits больше 0 (ноль), то число округляется в меньшую сторону до указанного количества десятичных разрядов. </para>
          <para>Если num_digits значение 0, то число округляется до ближайшего целого числа. </para>
          <para>Если num_digits меньше 0, то число округляется слева от десятичной точки.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RoundUp">
      <MemberSignature Language="C#" Value="public double RoundUp (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 RoundUp([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.RoundUp(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function RoundUp (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double RoundUp(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16596)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Number — любое действительное число, которое нужно округлить.</param>
        <param name="Arg2">Num_digits — количество цифр, для которых требуется округлить число.</param>
        <summary>Округляет число в сторону от 0 (ноль).</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>ОКРУГЛВВЕРХ</b> работает так же <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Round(System.Double,System.Double)" />, за исключением того, что он всегда округляет число вверх. </para>
          <para>Если num_digits больше 0 (ноль), то число округляется до указанного количества десятичных разрядов. </para>
          <para>Если num_digits значение 0, то число округляется до ближайшего целого числа. </para>
          <para>Если num_digits меньше 0, то число округляется в большую сторону слева от десятичной точки. </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Rri">
      <MemberSignature Language="C#" Value="public double Rri (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Rri([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Rri(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Rri (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Rri(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16963)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Количество периодов для инвестиции.</param>
        <param name="Arg2">Текущее значение инвестиции.</param>
        <param name="Arg3">Будущее значение инвестиций.</param>
        <summary>Возвращает эквивалентную процентную ставку для роста инвестиций.</summary>
        <returns><b>DOUBLE</b></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RSq">
      <MemberSignature Language="C#" Value="public double RSq (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 RSq([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.RSq(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function RSq (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double RSq(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16697)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Known_y — массив или диапазон точек данных.</param>
        <param name="Arg2">Known_x — массив или диапазон точек данных.</param>
        <summary>Возвращает квадрат коэффициента корреляции Пирсона, используя точки данных в known_y и known_x. Дополнительные сведения см. в статье <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Pearson(System.Object,System.Object)" />. Значение r — квадрат может интерпретироваться как пропорции дисперсии с соотношением y к дисперсию в x.</summary>
        <returns>To be added.</returns>
        <remarks><para>Аргументы могут быть числами или именами, массивами или ссылками, содержащими числа. </para>
          <para>Учитываются логические значения и текстовые представления чисел, которые вы вводите непосредственно в список аргументов. </para>
          <para>Если аргумент array или Reference содержит текст, логические значения или пустые ячейки, эти значения игнорируются; Тем не менее, ячейки с нулевым значением включены. </para>
          <para>Аргументы, которые являются значениями ошибки или текстом, не преобразуемым в числа, вызывают ошибки. </para>
          <para>Если known_y и known_x пусты или имеют различное количество точек данных, <b>РСК</b> возвращает значение ошибки #N/a. </para>
          <para>Если known_y и known_x содержат только 1 точку данных, <b>РСК</b> возвращает #DIV/0! значение ошибки. </para>
          <para>Уравнение коэффициента корреляции Пирсона r имеет следующий результат: </para>
          <para>Рисунок 1: коэффициент корреляции Пирсона для продукта</para>
          <para> </para>
          <para> </para>
          <para>где x и y — пример среднего значения (known_x) и СРЗНАЧ (known_y).</para>
          <para>
            <b>РСК</b> возвращает R2, который является квадратом этого коэффициента корреляции.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RTD">
      <MemberSignature Language="C#" Value="public object RTD (object progID, object server, object topic1, object topic2, object topic3, object topic4, object topic5, object topic6, object topic7, object topic8, object topic9, object topic10, object topic11, object topic12, object topic13, object topic14, object topic15, object topic16, object topic17, object topic18, object topic19, object topic20, object topic21, object topic22, object topic23, object topic24, object topic25, object topic26, object topic27, object topic28);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object RTD([in]object progID, [in]object server, [in]object topic1, [in]object topic2, [in]object topic3, [in]object topic4, [in]object topic5, [in]object topic6, [in]object topic7, [in]object topic8, [in]object topic9, [in]object topic10, [in]object topic11, [in]object topic12, [in]object topic13, [in]object topic14, [in]object topic15, [in]object topic16, [in]object topic17, [in]object topic18, [in]object topic19, [in]object topic20, [in]object topic21, [in]object topic22, [in]object topic23, [in]object topic24, [in]object topic25, [in]object topic26, [in]object topic27, [in]object topic28) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.RTD(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function RTD (progID As Object, server As Object, topic1 As Object, Optional topic2 As Object, Optional topic3 As Object, Optional topic4 As Object, Optional topic5 As Object, Optional topic6 As Object, Optional topic7 As Object, Optional topic8 As Object, Optional topic9 As Object, Optional topic10 As Object, Optional topic11 As Object, Optional topic12 As Object, Optional topic13 As Object, Optional topic14 As Object, Optional topic15 As Object, Optional topic16 As Object, Optional topic17 As Object, Optional topic18 As Object, Optional topic19 As Object, Optional topic20 As Object, Optional topic21 As Object, Optional topic22 As Object, Optional topic23 As Object, Optional topic24 As Object, Optional topic25 As Object, Optional topic26 As Object, Optional topic27 As Object, Optional topic28 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16763)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="progID" Type="System.Object" />
        <Parameter Name="server" Type="System.Object" />
        <Parameter Name="topic1" Type="System.Object" />
        <Parameter Name="topic2" Type="System.Object" />
        <Parameter Name="topic3" Type="System.Object" />
        <Parameter Name="topic4" Type="System.Object" />
        <Parameter Name="topic5" Type="System.Object" />
        <Parameter Name="topic6" Type="System.Object" />
        <Parameter Name="topic7" Type="System.Object" />
        <Parameter Name="topic8" Type="System.Object" />
        <Parameter Name="topic9" Type="System.Object" />
        <Parameter Name="topic10" Type="System.Object" />
        <Parameter Name="topic11" Type="System.Object" />
        <Parameter Name="topic12" Type="System.Object" />
        <Parameter Name="topic13" Type="System.Object" />
        <Parameter Name="topic14" Type="System.Object" />
        <Parameter Name="topic15" Type="System.Object" />
        <Parameter Name="topic16" Type="System.Object" />
        <Parameter Name="topic17" Type="System.Object" />
        <Parameter Name="topic18" Type="System.Object" />
        <Parameter Name="topic19" Type="System.Object" />
        <Parameter Name="topic20" Type="System.Object" />
        <Parameter Name="topic21" Type="System.Object" />
        <Parameter Name="topic22" Type="System.Object" />
        <Parameter Name="topic23" Type="System.Object" />
        <Parameter Name="topic24" Type="System.Object" />
        <Parameter Name="topic25" Type="System.Object" />
        <Parameter Name="topic26" Type="System.Object" />
        <Parameter Name="topic27" Type="System.Object" />
        <Parameter Name="topic28" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="progID">Строка, представляющая программный идентификатор сервера реального времени.</param>
        <param name="server">имя сервера, строка <b>null</b> или константа <b>вбнуллстринг</b> .</param>
        <param name="topic1"><paramref name="topic1" />—<paramref name="topic28" /> <b>Строка</b> , представляющая тему.</param>
        <param name="topic2">To be added.</param>
        <param name="topic3">To be added.</param>
        <param name="topic4">To be added.</param>
        <param name="topic5">To be added.</param>
        <param name="topic6">To be added.</param>
        <param name="topic7">To be added.</param>
        <param name="topic8">To be added.</param>
        <param name="topic9">To be added.</param>
        <param name="topic10">To be added.</param>
        <param name="topic11">To be added.</param>
        <param name="topic12">To be added.</param>
        <param name="topic13">To be added.</param>
        <param name="topic14">To be added.</param>
        <param name="topic15">To be added.</param>
        <param name="topic16">To be added.</param>
        <param name="topic17">To be added.</param>
        <param name="topic18">To be added.</param>
        <param name="topic19">To be added.</param>
        <param name="topic20">To be added.</param>
        <param name="topic21">To be added.</param>
        <param name="topic22">To be added.</param>
        <param name="topic23">To be added.</param>
        <param name="topic24">To be added.</param>
        <param name="topic25">To be added.</param>
        <param name="topic26">To be added.</param>
        <param name="topic27">To be added.</param>
        <param name="topic28">To be added.</param>
        <summary>Этот метод подключается к источнику для получения данных в режиме реального времени.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Search">
      <MemberSignature Language="C#" Value="public double Search (string Arg1, string Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Search([in]string Arg1, [in]string Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Search(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Search (Arg1 As String, Arg2 As String, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16466)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
        <Parameter Name="Arg2" Type="System.String" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Find_text — текст, который требуется найти.</param>
        <param name="Arg2">Within_text — текст, в котором нужно найти find_text.</param>
        <param name="Arg3">Start_num — номер знака в within_text, в котором нужно начать поиск.</param>
        <summary><b>Найдите</b> и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SearchB(System.String,System.String,System.Object)" /> найдите одну текстовую строку в второй текстовой строке и возвратите количество начальной позиции первой текстовой строки из первого символа второй текстовой строки.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>функция <b>поиска</b> предназначена для языков, использующих однобайтовый набор знаков (SBCS), тогда как <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SearchB(System.String,System.String,System.Object)" /> предназначено для использования с языками, использующими набор двухбайтовых символов (DBCS). Язык, установленный по умолчанию на компьютере, влияет на возвращаемое значение следующим образом: при<b>поиске</b> всегда учитывается каждый символ, как один-или двухбайтовый или двухбайтовый, как 1, независимо от того, какой язык по умолчанию задан. <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SearchB(System.String,System.String,System.Object)" />подсчитывает каждый двухбайтовый символ как 2, если вы включили редактирование языка, поддерживающего DBCS, а затем назначить его языком по умолчанию. В противном случае каждый символ <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SearchB(System.String,System.String,System.Object)" /> подсчитывается как 1.</para>
          <para>Языки, поддерживающие DBCS, включают японский, китайский (упрощенное письмо), китайский (традиционное письмо), китайский (традиционное письмо) и корейский. </para>
          <para>Используйте <b>Поиск</b> и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SearchB(System.String,System.String,System.Object)" /> определите положение символа или текстовой строки в другой текстовой строке, чтобы можно было использовать функции Mid и ПСТРБ или <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Replace(System.String,System.Double,System.Double,System.String)" /> и и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ReplaceB(System.String,System.Double,System.Double,System.String)" /> для изменения текста. </para>
          <para>Поиск без учета регистра. 
            <b>Search</b> <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SearchB(System.String,System.String,System.Object)" /> Если вы хотите выполнить поиск с учетом регистра, вы можете использовать <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Find(System.String,System.String,System.Object)" /> и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.FindB(System.String,System.String,System.Object)" />. </para>
          <para>В find_text можно использовать подстановочные знаки, вопросительный знак (?) и звездочку (*). Вопросительный знак соответствует одному символу; Звездочка соответствует любой последовательности символов. Если вы хотите найти фактический вопросительный знак или звездочку, введите тильду (~) перед символом. </para>
          <para>Если find_text не найдена, #VALUE! возвращается значение ошибки. </para>
          <para>Если параметр start_num опущен, предполагается, что он равен 1. </para>
          <para>Если start_num не превышает 0 (ноль) или превышает длину within_text, #VALUE! возвращается значение ошибки. </para>
          <para>Используйте start_num, чтобы пропустить указанное количество символов. Предположим, что вы работаете с текстовой строкой "AYF0093", используя <b>Поиск</b> в качестве примера. Йоунгменсаппарел ". Чтобы найти номер первого знака "Y" в части текстовой строки, установите start_num равное 8, чтобы не выполнять поиск в части текста с серийным номером. <b>Поиск</b> начинается с символа 8, находит find_text в следующем символе и возвращает цифру 9. <b>Поиск</b> всегда возвращает число символов из начала within_text, считая пропускаемые символы, если start_num больше 1.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SearchB">
      <MemberSignature Language="C#" Value="public double SearchB (string Arg1, string Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 SearchB([in]string Arg1, [in]string Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SearchB(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function SearchB (Arg1 As String, Arg2 As String, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16590)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
        <Parameter Name="Arg2" Type="System.String" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Find_text — текст, который требуется найти.</param>
        <param name="Arg2">Within_text — текст, в котором нужно найти find_text.</param>
        <param name="Arg3">Start_num — номер знака в within_text, в котором нужно начать поиск.</param>
        <summary>SEARCH и ПОИСКБ найдите одну текстовую строку в второй текстовой строке и возвратите количество начальной позиции первой текстовой строки из первого символа второй текстовой строки.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>функция <b>поиска</b> предназначена для языков, использующих однобайтовый набор знаков (SBCS), тогда как <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SearchB(System.String,System.String,System.Object)" /> предназначено для использования с языками, использующими набор двухбайтовых символов (DBCS). Язык, установленный по умолчанию на компьютере, влияет на возвращаемое значение следующим образом: при<b>поиске</b> всегда учитывается каждый символ, как один-или двухбайтовый или двухбайтовый, как 1, независимо от того, какой язык по умолчанию задан. <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SearchB(System.String,System.String,System.Object)" />подсчитывает каждый двухбайтовый символ как 2, если вы включили редактирование языка, поддерживающего DBCS, а затем назначить его языком по умолчанию. В противном случае каждый символ <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SearchB(System.String,System.String,System.Object)" /> подсчитывается как 1.</para>
          <para>Языки, поддерживающие DBCS, включают японский, китайский (упрощенное письмо), китайский (традиционное письмо), китайский (традиционное письмо) и корейский. </para>
          <para>Используйте <b>Поиск</b> и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SearchB(System.String,System.String,System.Object)" /> определите положение символа или текстовой строки в другой текстовой строке, чтобы можно было использовать функции Mid и ПСТРБ или <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Replace(System.String,System.Double,System.Double,System.String)" /> и и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ReplaceB(System.String,System.Double,System.Double,System.String)" /> для изменения текста. </para>
          <para>Поиск без учета регистра. 
            <b>Search</b> <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SearchB(System.String,System.String,System.Object)" /> Если вы хотите выполнить поиск с учетом регистра, вы можете использовать <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Find(System.String,System.String,System.Object)" /> и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.FindB(System.String,System.String,System.Object)" />. </para>
          <para>В find_text можно использовать подстановочные знаки, вопросительный знак (?) и звездочку (*). Вопросительный знак соответствует одному символу; Звездочка соответствует любой последовательности символов. Если вы хотите найти фактический вопросительный знак или звездочку, введите тильду (~) перед символом. </para>
          <para>Если find_text не найдена, #VALUE! возвращается значение ошибки. </para>
          <para>Если параметр start_num опущен, предполагается, что он равен 1. </para>
          <para>Если start_num не превышает 0 (ноль) или превышает длину within_text, #VALUE! возвращается значение ошибки. </para>
          <para>Используйте start_num, чтобы пропустить указанное количество символов. Предположим, что вы работаете с текстовой строкой "AYF0093", используя <b>Поиск</b> в качестве примера. Йоунгменсаппарел ". Чтобы найти номер первого знака "Y" в части текстовой строки, установите start_num равное 8, чтобы не выполнять поиск в части текста с серийным номером. <b>Поиск</b> начинается с символа 8, находит find_text в следующем символе и возвращает цифру 9. <b>Поиск</b> всегда возвращает число символов из начала within_text, считая пропускаемые символы, если start_num больше 1.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Sec">
      <MemberSignature Language="C#" Value="public double Sec (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Sec([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Sec(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Sec (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Sec(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16938)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Угол в радианах, для которого требуется получить секанс.</param>
        <summary>Возвращает секанс угла.</summary>
        <returns><b>DOUBLE</b></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sech">
      <MemberSignature Language="C#" Value="public double Sech (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Sech([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Sech(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Sech (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Sech(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16939)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Угол в радианах, для которого требуется получить гиперболический секанс.</param>
        <summary>Возвращает гиперболический секанс угла.</summary>
        <returns><b>DOUBLE</b></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeriesSum">
      <MemberSignature Language="C#" Value="public double SeriesSum (object Arg1, object Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 SeriesSum([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SeriesSum(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function SeriesSum (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double SeriesSum(System::Object ^ Arg1, System::Object ^ Arg2, System::Object ^ Arg3, System::Object ^ Arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16798)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">X — входное значение степенного ряда.</param>
        <param name="Arg2">N — начальное питание, для которого нужно поднять x.</param>
        <param name="Arg3">M — шаг, с помощью которого увеличивается значение n для каждого термина в ряду.</param>
        <param name="Arg4">Коэффициент коэффициента — это набор коэффициентов, на который умножается каждая последующая сила x. Количество значений в коэффициентах в коэффициентах определяет количество терминов в ряде степеней. Например, если в коэффициентах есть три значения, в Power Series будет три условия.</param>
        <summary>Возвращает сумму степенного ряда на основе формулы: РЯДЫ (x, n, m, a) = a1xn + A2x (n + m) + A3X (n + 2) +... + аикс (n + (i-1) m)</summary>
        <returns>To be added.</returns>
        <remarks><para>Если какой-либо аргумент не является числом, <b>ряд. сумм</b> возвращает #VALUE! значение ошибки.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Sinh">
      <MemberSignature Language="C#" Value="public double Sinh (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Sinh([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Sinh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Sinh (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Sinh(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16613)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число — это любое вещественное число.</param>
        <summary>Возвращает гиперболический синус числа.</summary>
        <returns>To be added.</returns>
        <remarks><para>Формула для гиперболического синуса:</para>
          <para>Рисунок 1: Формула гиперболического синуса</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Skew">
      <MemberSignature Language="C#" Value="public double Skew (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Skew([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Skew(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Skew (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16707)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число1, число2... от – 1 до 30 аргументов, для которых требуется вычислить асимметрию. Вы также можете использовать один массив или ссылку на массив вместо аргументов, разделенных запятыми.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Возвращает асимметрию распределения. Асимметрия характеризует степень асимметри распределения относительно его среднего. Положительная асимметрия означает распределение с асимметричным хвостовиком, расширяющимся в сторону более положительных значений. Отрицательная асимметрия означает распределение с асимметричным хвостовиком, расширяющимся в сторону более отрицательных значений.</summary>
        <returns>To be added.</returns>
        <remarks><para>Аргументы могут быть числами или именами, массивами или ссылками, содержащими числа. </para>
          <para>Учитываются логические значения и текстовые представления чисел, которые вы вводите непосредственно в список аргументов. </para>
          <para>Если аргумент array или Reference содержит текст, логические значения или пустые ячейки, эти значения игнорируются; Тем не менее, ячейки с нулевым значением включены. </para>
          <para>Аргументы, которые являются значениями ошибки или текстом, не преобразуемым в числа, вызывают ошибки. </para>
          <para>Если количество точек данных меньше трех, а для примера стандартное отклонение равно нулю, то функция <b>скос</b> возвращает #DIV/0! значение ошибки. </para>
          <para>Уравнение для асимметрии определяется следующим образом: </para>
          <para>Рисунок 1: формула для наклоненности</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Skew_p">
      <MemberSignature Language="C#" Value="public double Skew_p (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Skew_p([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Skew_p(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Skew_p (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16960)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">от 1 до 254 номеров или имен, массивов или ссылок, содержащих числа, для которых требуется получить асимметрию Генеральной совокупности.</param>
        <param name="Arg2">от 1 до 254 номеров или имен, массивов или ссылок, содержащих числа, для которых требуется получить асимметрию Генеральной совокупности.</param>
        <param name="Arg3">от 1 до 254 номеров или имен, массивов или ссылок, содержащих числа, для которых требуется получить асимметрию Генеральной совокупности.</param>
        <param name="Arg4">от 1 до 254 номеров или имен, массивов или ссылок, содержащих числа, для которых требуется получить асимметрию Генеральной совокупности.</param>
        <param name="Arg5">от 1 до 254 номеров или имен, массивов или ссылок, содержащих числа, для которых требуется получить асимметрию Генеральной совокупности.</param>
        <param name="Arg6">от 1 до 254 номеров или имен, массивов или ссылок, содержащих числа, для которых требуется получить асимметрию Генеральной совокупности.</param>
        <param name="Arg7">от 1 до 254 номеров или имен, массивов или ссылок, содержащих числа, для которых требуется получить асимметрию Генеральной совокупности.</param>
        <param name="Arg8">от 1 до 254 номеров или имен, массивов или ссылок, содержащих числа, для которых требуется получить асимметрию Генеральной совокупности.</param>
        <param name="Arg9">от 1 до 254 номеров или имен, массивов или ссылок, содержащих числа, для которых требуется получить асимметрию Генеральной совокупности.</param>
        <param name="Arg10">от 1 до 254 номеров или имен, массивов или ссылок, содержащих числа, для которых требуется получить асимметрию Генеральной совокупности.</param>
        <param name="Arg11">от 1 до 254 номеров или имен, массивов или ссылок, содержащих числа, для которых требуется получить асимметрию Генеральной совокупности.</param>
        <param name="Arg12">от 1 до 254 номеров или имен, массивов или ссылок, содержащих числа, для которых требуется получить асимметрию Генеральной совокупности.</param>
        <param name="Arg13">от 1 до 254 номеров или имен, массивов или ссылок, содержащих числа, для которых требуется получить асимметрию Генеральной совокупности.</param>
        <param name="Arg14">от 1 до 254 номеров или имен, массивов или ссылок, содержащих числа, для которых требуется получить асимметрию Генеральной совокупности.</param>
        <param name="Arg15">от 1 до 254 номеров или имен, массивов или ссылок, содержащих числа, для которых требуется получить асимметрию Генеральной совокупности.</param>
        <param name="Arg16">от 1 до 254 номеров или имен, массивов или ссылок, содержащих числа, для которых требуется получить асимметрию Генеральной совокупности.</param>
        <param name="Arg17">от 1 до 254 номеров или имен, массивов или ссылок, содержащих числа, для которых требуется получить асимметрию Генеральной совокупности.</param>
        <param name="Arg18">от 1 до 254 номеров или имен, массивов или ссылок, содержащих числа, для которых требуется получить асимметрию Генеральной совокупности.</param>
        <param name="Arg19">от 1 до 254 номеров или имен, массивов или ссылок, содержащих числа, для которых требуется получить асимметрию Генеральной совокупности.</param>
        <param name="Arg20">от 1 до 254 номеров или имен, массивов или ссылок, содержащих числа, для которых требуется получить асимметрию Генеральной совокупности.</param>
        <param name="Arg21">от 1 до 254 номеров или имен, массивов или ссылок, содержащих числа, для которых требуется получить асимметрию Генеральной совокупности.</param>
        <param name="Arg22">от 1 до 254 номеров или имен, массивов или ссылок, содержащих числа, для которых требуется получить асимметрию Генеральной совокупности.</param>
        <param name="Arg23">от 1 до 254 номеров или имен, массивов или ссылок, содержащих числа, для которых требуется получить асимметрию Генеральной совокупности.</param>
        <param name="Arg24">от 1 до 254 номеров или имен, массивов или ссылок, содержащих числа, для которых требуется получить асимметрию Генеральной совокупности.</param>
        <param name="Arg25">от 1 до 254 номеров или имен, массивов или ссылок, содержащих числа, для которых требуется получить асимметрию Генеральной совокупности.</param>
        <param name="Arg26">от 1 до 254 номеров или имен, массивов или ссылок, содержащих числа, для которых требуется получить асимметрию Генеральной совокупности.</param>
        <param name="Arg27">от 1 до 254 номеров или имен, массивов или ссылок, содержащих числа, для которых требуется получить асимметрию Генеральной совокупности.</param>
        <param name="Arg28">от 1 до 254 номеров или имен, массивов или ссылок, содержащих числа, для которых требуется получить асимметрию Генеральной совокупности.</param>
        <param name="Arg29">от 1 до 254 номеров или имен, массивов или ссылок, содержащих числа, для которых требуется получить асимметрию Генеральной совокупности.</param>
        <param name="Arg30">от 1 до 254 номеров или имен, массивов или ссылок, содержащих числа, для которых требуется получить асимметрию Генеральной совокупности.</param>
        <summary>Возвращает асимметрию распределения на основе Генеральной совокупности: характеризуется степенью асимметри распределения относительно его среднего.</summary>
        <returns><b>DOUBLE</b></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sln">
      <MemberSignature Language="C#" Value="public double Sln (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Sln([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Sln(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Sln (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Sln(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16526)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Нач_стоимость — начальная стоимость актива.</param>
        <param name="Arg2">Остаточная_стоимость — значение в конце амортизации (иногда называется остаточной стоимостью актива).</param>
        <param name="Arg3">Life — количество периодов амортизации актива (иногда называется сроком эксплуатации актива).</param>
        <summary>Возвращает величину амортизации актива за один период, выраженную линейным методом.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Slope">
      <MemberSignature Language="C#" Value="public double Slope (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Slope([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Slope(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Slope (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Slope(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16699)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Known_y — массив или диапазон ячеек с числовыми зависимыми точками данных.</param>
        <param name="Arg2">Known_x — набор независимых точек данных.</param>
        <summary>Возвращает наклон линии линейной регрессии с точки данных в known_y и known_x. Наклон — это расстояние по вертикали, разделенное на горизонтальное расстояние между любыми двумя точками линии, которое представляет собой скорость изменения вдоль линии регрессии.</summary>
        <returns>To be added.</returns>
        <remarks><para>Аргументы должны быть числами или именами, массивами или ссылками, содержащими числа. </para>
          <para>Если аргумент array или Reference содержит текст, логические значения или пустые ячейки, эти значения игнорируются; Тем не менее, ячейки с нулевым значением включены. </para>
          <para>Если known_y и known_x пусты или имеют различное количество точек данных, то <b>наклон</b> возвращает значение ошибки #N/a. </para>
          <para>Уравнение наклона линии регрессия имеет следующий угол: </para>
          <para>Рисунок 1: формула наклона линии регрессии</para>
          <para> </para>
          <para> </para>
          <para>Базовый алгоритм, используемый в <b>наклоне</b> и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Intercept(System.Object,System.Object)" /> функциях, отличается от базового алгоритма, <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LinEst(System.Object,System.Object,System.Object,System.Object)" /> используемого в функции. Различия между этими алгоритмами могут приводить к различным результатам, если данные неопределены и коллинеарность. Например, если точки данных для аргумента known_y — 0, а точки данных для аргумента known_x — 1: </para>
          <list type="bullet">
            <item>
              <description>
                <b>Наклон</b> и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Intercept(System.Object,System.Object)" /> возврат #DIV/0! ошибкой. <b>Наклон</b> и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Intercept(System.Object,System.Object)" /> алгоритм предназначены для поиска одного и только одного ответа, и в этом случае может быть несколько ответов. </description>
            </item>
            <item>
              <description>
                <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LinEst(System.Object,System.Object,System.Object,System.Object)" />Возвращает значение 0. <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LinEst(System.Object,System.Object,System.Object,System.Object)" /> Алгоритм предназначен для получения разумных результатов для данных коллинеарности, и в этом случае можно найти по крайней мере один ответ.</description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Small">
      <MemberSignature Language="C#" Value="public double Small (object Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Small([in]object Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Small(System.Object,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Small (Arg1 As Object, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Small(System::Object ^ Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16710)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Массив — массив или диапазон числовых данных, для которых необходимо определить k — наименьшее значение.</param>
        <param name="Arg2">K — позиция (начиная с наименьшей) в массиве или диапазоне данных для возврата.</param>
        <summary>Возвращает k — наименьшее значение в наборе данных. Используйте эту функцию, чтобы возвращать значения с определенным относительным значением в наборе данных.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если массив пуст, то <b>Small</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если k ≤ 0 или k превышает количество точек данных, то <b>Small</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если n — число точек данных в массиве, малый (массив, 1) равно наименьшему значению, а малый (Array, n) — наибольшему значению.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SqrtPi">
      <MemberSignature Language="C#" Value="public double SqrtPi (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 SqrtPi([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SqrtPi(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function SqrtPi (Arg1 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double SqrtPi(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16800)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число — число, на которое умножается число Пи.</param>
        <summary>Возвращает квадратный корень числа (Number * PI).</summary>
        <returns>To be added.</returns>
        <remarks><para>Если число &lt; 0, <b>КОРЕНЬПИ</b> Возвращает #NUM! значение ошибки.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Standardize">
      <MemberSignature Language="C#" Value="public double Standardize (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Standardize([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Standardize(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Standardize (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Standardize(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16681)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">X — значение, которое требуется нормализовать.</param>
        <param name="Arg2">Среднее — среднее арифметическое распределение.</param>
        <param name="Arg3">Standard_dev — стандартное отклонение распределения.</param>
        <summary>Возвращает нормализованное значение из распределения, которое характеризуется средним и standard_dev.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если standard_dev ≤ 0, то параметр <b>стандартизация</b> возвращает значение #NUM! значение ошибки. </para>
          <para>Уравнение для нормализованного значения: </para>
          <para>Рисунок 1: уравнение для нормализованного значения</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="StDev">
      <MemberSignature Language="C#" Value="public double StDev (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 StDev([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.StDev(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function StDev (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16396)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число1, число2,... – 1 — 30 числовых аргументов, соответствующих выборке из Генеральной совокупности. Вы также можете использовать один массив или ссылку на массив вместо аргументов, разделенных запятыми.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Оценивает стандартное отклонение на основе примера. Стандартное отклонение — это мера того, как широко распространенные значения распространяются от среднего значения (среднее).</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>эта функция заменена одной или несколькими новыми функциями, которые могут улучшить точность и имена которых лучше отражают их использование. Эта функция по-прежнему доступна для совместимости с более ранними версиями Excel. Тем не менее, если обратная совместимость не требуется, рекомендуется использовать новые функции, так как они точнее описывают их функциональность. Более подробную информацию о функции New можно узнать в <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.StDev_S(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> методе.</para>
          <para>
            <b>СТАНДОТКЛОН</b> предполагает, что аргументы являются примерами Генеральной совокупности. Если данные представляют всю генеральную совокупность, вычислите стандартное отклонение с помощью функции <b>STDEV</b>. </para>
          <para>Стандартное отклонение вычисляется с использованием "несмещенного" или "n-1" метода. </para>
          <para>Аргументы могут быть числами или именами, массивами или ссылками, содержащими числа. </para>
          <para>Учитываются логические значения и текстовые представления чисел, которые вы вводите непосредственно в список аргументов. </para>
          <para>Если аргумент является массивом или ссылкой, подсчитываются только числа в этом массиве или ссылке. Пустые ячейки, логические значения, текст и значения ошибок в массиве или ссылке игнорируются. </para>
          <para>Аргументы, которые являются значениями ошибки или текстом, не преобразуемым в числа, вызывают ошибки. </para>
          <para>
            <b>СТАНДОТКЛОН</b> использует следующую формулу: </para>
          <para>Рисунок 1: уравнение для метода StDev</para>
          <para> </para>
          <para> </para>
          <para>где x это пример среднего значения (Число1, число2,...), а n — это размер выборки.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="StDev_P">
      <MemberSignature Language="C#" Value="public double StDev_P (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 StDev_P([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.StDev_P(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function StDev_P (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16895)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число1, число2,... – 1 — 30 числовых аргументов, соответствующих Генеральной совокупности. Вы также можете использовать один массив или ссылку на массив вместо аргументов, разделенных запятыми (,).</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Вычисляет стандартное отклонение по Генеральной совокупности, заданной аргументами. Стандартное отклонение — это мера того, как широко распространенные значения распространяются от среднего значения (среднее).</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>StDev_P</b> предполагает, что аргументы являются целым заполнением. Если данные представляют пример заполнения, вычислите стандартное отклонение с помощью <b>StDev_P</b>. </para>
          <para>Для крупных размеров выборки <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.StDev_S(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> и <b>StDev_P</b> возвращают приблизительно одинаковое значение. </para>
          <para>Стандартное отклонение вычисляется с использованием "смещенного" или "n" метода. </para>
          <para>Аргументы могут быть числами или именами, массивами или ссылками, содержащими числа. </para>
          <para>При этом учитываются логические значения и текстовые представления чисел, введенных непосредственно в список аргументов. </para>
          <para>Если аргумент является массивом или ссылкой, подсчитываются только числа в этом массиве или ссылке. Пустые ячейки, логические значения, текст и значения ошибок в массиве или ссылке игнорируются. </para>
          <para>Аргументы, которые являются значениями ошибки или текстом, не преобразуемым в числа, вызывают ошибки. </para>
          <para>
            <b>StDev_P</b> используется следующая формула: </para>
          <para>Рисунок 1: уравнение для метода StDev_P</para>
          <para> </para>
          <para> </para>
          <para>где x это пример среднего значения (Число1, число2,...), а n — это размер выборки. </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="StDev_S">
      <MemberSignature Language="C#" Value="public double StDev_S (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 StDev_S([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.StDev_S(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function StDev_S (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16894)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число1, число2,... – 1 — 30 числовых аргументов, соответствующих выборке из Генеральной совокупности. Вы также можете использовать один массив или ссылку на массив вместо аргументов, разделенных запятыми.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Оценивает стандартное отклонение на основе примера. Стандартное отклонение — это мера того, как широко распространенные значения распространяются от среднего значения (среднее).</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>StDev_S</b> предполагает, что аргументы являются примерами Генеральной совокупности. Если данные представляют всю генеральную совокупность, то стандартное отклонение вычисляется с <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.StDev_P(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />помощью. </para>
          <para>Стандартное отклонение вычисляется с использованием "несмещенного" или "n-1" метода. </para>
          <para>Аргументы могут быть числами или именами, массивами или ссылками, содержащими числа. </para>
          <para>Учитываются логические значения и текстовые представления чисел, которые вы вводите непосредственно в список аргументов. </para>
          <para>Если аргумент является массивом или ссылкой, подсчитываются только числа в этом массиве или ссылке. Пустые ячейки, логические значения, текст и значения ошибок в массиве или ссылке игнорируются. </para>
          <para>Аргументы, которые являются значениями ошибки или текстом, не преобразуемым в числа, вызывают ошибки. </para>
          <para>
            <b>StDev_S</b> используется следующая формула: </para>
          <para>Рисунок 1: уравнение для метода StDev_S</para>
          <para> </para>
          <para> </para>
          <para>где x это пример среднего значения (Число1, число2,...), а n — это размер выборки.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="StDevP">
      <MemberSignature Language="C#" Value="public double StDevP (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 StDevP([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.StDevP(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function StDevP (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16577)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число1, число2,... – 1 — 30 числовых аргументов, соответствующих выборке из Генеральной совокупности. Вы также можете использовать один массив или ссылку на массив вместо аргументов, разделенных запятыми.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Вычисляет стандартное отклонение по Генеральной совокупности, заданной аргументами. Стандартное отклонение — это мера того, как широко распространенные значения распространяются от среднего значения (среднее).</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>эта функция заменена одной или несколькими новыми функциями, которые могут улучшить точность и имена которых лучше отражают их использование. Эта функция по-прежнему доступна для совместимости с более ранними версиями Excel. Тем не менее, если обратная совместимость не требуется, рекомендуется использовать новые функции, так как они точнее описывают их функциональность. Более подробную информацию о функции New можно узнать в <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.StDev_P(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> методе.</para>
          <para>
            <b>СТАНДОТКЛОНП</b> предполагает, что аргументы представляют всю генеральную совокупность. Если данные представляют пример заполнения, вычислите стандартное отклонение с помощью метода <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.StDev(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />. </para>
          <para>Для больших образцов размеров <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.StDev(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> и <b>СТАНДОТКЛОНП</b> возвращает приблизительно одинаковое значение. </para>
          <para>Стандартное отклонение вычисляется с использованием "смещенного" или "n" метода. Аргументы могут быть числами или именами, массивами или ссылками, содержащими числа. </para>
          <para>При этом учитываются логические значения и текстовые представления чисел, введенных непосредственно в список аргументов. </para>
          <para>Если аргумент является массивом или ссылкой, подсчитываются только числа в этом массиве или ссылке. Пустые ячейки, логические значения, текст и значения ошибок в массиве или ссылке игнорируются. </para>
          <para>Аргументы, которые являются значениями ошибки или текстом, не преобразуемым в числа, вызывают ошибки. <b>СТАНДОТКЛОНП</b> использует следующую формулу: </para>
          <para>Рисунок 1: формула для метода СТАНДОТКЛОНП</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="StEyx">
      <MemberSignature Language="C#" Value="public double StEyx (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 StEyx([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.StEyx(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function StEyx (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double StEyx(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16698)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Known_y — массив или диапазон зависимых точек данных.</param>
        <param name="Arg2">Known_x — массив или диапазон независимых точек данных.</param>
        <summary>Возвращает стандартную ошибку прогнозируемого значения y для каждого x в регрессии. Стандартная ошибка это мера количества ошибок предсказания y для отдельного x.</summary>
        <returns>To be added.</returns>
        <remarks><para>Аргументы могут быть числами или именами, массивами или ссылками, содержащими числа. </para>
          <para>Учитываются логические значения и текстовые представления чисел, которые вы вводите непосредственно в список аргументов. </para>
          <para>Если аргумент array или Reference содержит текст, логические значения или пустые ячейки, эти значения игнорируются; Тем не менее, ячейки с нулевым значением включены. </para>
          <para>Аргументы, которые являются значениями ошибки или текстом, не преобразуемым в числа, вызывают ошибки. </para>
          <para>Если known_y и known_x имеют различное количество точек данных, <b>СТЭЙКС</b> возвращает значение ошибки #N/a. </para>
          <para>Если known_y, а known_x пустые или менее трех точек данных, <b>СТЭЙКС</b> возвращает #DIV/0! значение ошибки. </para>
          <para>Уравнение для стандартной ошибки предсказанного y имеет следующий следующий код: </para>
          <para>Рис. 1: формула для стандартной ошибки предсказанного y</para>
          <para> </para>
          <para> </para>
          <para>где x и y — пример среднего значения (known_x) и СРЗНАЧ (known_y), а n — это размер выборки.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Substitute">
      <MemberSignature Language="C#" Value="public string Substitute (string Arg1, string Arg2, string Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Substitute([in]string Arg1, [in]string Arg2, [in]string Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Substitute(System.String,System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Substitute (Arg1 As String, Arg2 As String, Arg3 As String, Optional Arg4 As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16504)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
        <Parameter Name="Arg2" Type="System.String" />
        <Parameter Name="Arg3" Type="System.String" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Текст — текст или ссылка на ячейку, содержащую текст, для которого нужно заменять символы.</param>
        <param name="Arg2">Old_text — текст, который необходимо заменить.</param>
        <param name="Arg3">New_text — текст, который требуется заменить old_text.</param>
        <param name="Arg4">Instance_num — указывает, какое вхождение old_text необходимо заменить на new_text. Если указать instance_num, заменяется только этот экземпляр old_text. В противном случае каждое вхождение old_text в тексте изменяется на new_text.</param>
        <summary>Заменяет new_text для old_text в текстовой строке. Используйте подстановку при необходимости заменить определенный текст в текстовой строке; Используйте Replace, чтобы заменить любой текст, который встречается в определенном месте в текстовой строке.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subtotal">
      <MemberSignature Language="C#" Value="public double Subtotal (double Arg1, Microsoft.Office.Interop.Excel.Range Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Subtotal([in]float64 Arg1, [in]class Microsoft.Office.Interop.Excel.Range Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Subtotal(System.Double,Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Subtotal (Arg1 As Double, Arg2 As Range, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16728)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число, указывающее статистическую функцию, используемую методом.</param>
        <param name="Arg2">Первый <see cref="T:Microsoft.Office.Interop.Excel.Range" /> объект, для которого вычисляется промежуточный итог.</param>
        <param name="Arg3"><paramref name="Arg3" />—<paramref name="Arg30" /> Последующие <see cref="T:Microsoft.Office.Interop.Excel.Range" /> объекты, для которых вычисляется промежуточный итог.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Создает промежуточные итоги.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public double Sum (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Sum([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Sum(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Sum (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16388)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число1, число2,... от – 1 до 30 аргументов, для которых требуется получить итоговое значение или сумма.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Суммирует все числа в диапазоне ячеек.</summary>
        <returns>To be added.</returns>
        <remarks><para>Подсчитываются числа, логические значения и текстовые представления чисел, которые вы вводите непосредственно в список аргументов. </para>
          <para>Если аргумент является массивом или ссылкой, подсчитываются только числа в этом массиве или ссылке. Пустые ячейки, логические значения или текст в массиве или ссылке игнорируются. </para>
          <para>Аргументы, которые являются значениями ошибки или текстом, не преобразуемым в числа, вызывают ошибки.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SumIf">
      <MemberSignature Language="C#" Value="public double SumIf (Microsoft.Office.Interop.Excel.Range Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 SumIf([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SumIf(Microsoft.Office.Interop.Excel.Range,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function SumIf (Arg1 As Range, Arg2 As Object, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16729)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Range — диапазон ячеек, которые должны оцениваться по критериям.</param>
        <param name="Arg2">Условия_отбора — критерий в форме числа, выражения или текста, который определяет, какие ячейки будут добавляться. Например, критерий можно выразить в виде 32, "32", "&gt;32" или "яблоки".</param>
        <param name="Arg3">Sum_range — фактические ячейки, которые требуется добавить, если соответствующие ячейки в условиях соответствия диапазонов. Если параметр sum_range опущен, ячейки в диапазоне также оцениваются по критериям и добавляются в соответствии с условиями.</param>
        <summary>Добавляет ячейки, указанные в заданном условии.</summary>
        <returns>To be added.</returns>
        <remarks><para>Sum_range не обязательно должны иметь тот же размер и форму, что и Range. Фактические ячейки, которые добавляются, определяются с помощью верхней, левой ячейки в sum_range в качестве начальной, а затем включают ячейки, которые соответствуют размеру и форме к диапазону. Пример:</para>
          <list type="table">
            <item>
              <term>A1: A5</term>
              <description>B1: B5</description>
              <description>B1: B5</description>
            </item>
            <item>
              <term>A1: A5</term>
              <description>B1: B3</description>
              <description>B1: B5</description>
            </item>
            <item>
              <term>A1: B4</term>
              <description>C1: D4</description>
              <description>C1: D4</description>
            </item>
            <item>
              <term>A1: B4</term>
              <description>C1: C2</description>
              <description>C1: D4</description>
            </item>
          </list>
          <para>В поле условия можно использовать подстановочные знаки, вопросительный знак (?) и звездочку (*). Вопросительный знак соответствует одному символу; Звездочка соответствует любой последовательности символов. Если вы хотите найти фактический вопросительный знак или звездочку, введите тильду (~) перед символом.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SumIfs">
      <MemberSignature Language="C#" Value="public double SumIfs (Microsoft.Office.Interop.Excel.Range Arg1, Microsoft.Office.Interop.Excel.Range Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 SumIfs([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]class Microsoft.Office.Interop.Excel.Range Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SumIfs(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function SumIfs (Arg1 As Range, Arg2 As Range, Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16866)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Sum_range диапазон для суммирования.</param>
        <param name="Arg2">Criteria_range1, criteria_range2,... — один или несколько диапазонов, в которых оцениваются связанные условия.</param>
        <param name="Arg3">Criteria1, criteria2,... — одно или несколько условий в форме числа, выражения, ссылки на ячейки или текста, которые определяют, какие ячейки будут добавляться. Например, критерий может быть выражен в виде 32, "32",&gt;"32", "яблоки" или B4.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <summary>Добавляет ячейки в диапазоне, которые удовлетворяют нескольким условиям.</summary>
        <returns>To be added.</returns>
        <remarks><para>Каждая ячейка в sum_range суммируется только в том случае, если для этой ячейки заданы все соответствующие условия. </para>
          <para>В ячейках sum_range, содержащих <b>Истина</b> , вычисляется как 1; в ячейках sum_range, содержащих <b>false</b> , вычисляется 0 (ноль). </para>
          <para>В поле условия можно использовать подстановочные знаки, вопросительный знак (?) и звездочку (*). Вопросительный знак соответствует одному символу; Звездочка соответствует любой последовательности символов. Если вы хотите найти фактический вопросительный знак или звездочку, введите тильду (~) перед символом. </para>
          <para>Каждый criteria_range не должен иметь такой же размер и форму, что и sum_range. Фактические ячейки, которые добавляются, определяются с помощью верхней, левой ячейки в criteria_range в качестве начальной, а затем включают ячейки, которые соответствуют размеру и форме и sum_range. Пример:</para>
          <list type="table">
            <item>
              <term>A1: A5</term>
              <description>B1: B5</description>
              <description>B1: B5</description>
            </item>
            <item>
              <term>A1: A5</term>
              <description>B1: B3</description>
              <description>B1: B5</description>
            </item>
            <item>
              <term>A1: B4</term>
              <description>C1: D4</description>
              <description>C1: D4</description>
            </item>
            <item>
              <term>A1: B4</term>
              <description>C1: C2</description>
              <description>C1: D4</description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SumProduct">
      <MemberSignature Language="C#" Value="public double SumProduct (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 SumProduct([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SumProduct(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function SumProduct (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16612)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Массив1, массив2, array3,... от – 2 до 30 массивов, компоненты которых необходимо умножить, а затем добавить.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Умножает соответствующие компоненты в заданных массивах и возвращает сумму этих продуктов.</summary>
        <returns>To be added.</returns>
        <remarks><para>Аргументы массива должны иметь одинаковые размеры. В противном случае <b>SumProduct</b> возвращает #VALUE! значение ошибки. </para>
          <para>
            <b>SumProduct</b> обрабатывает записи массива, которые не являются числовыми, как если бы они были нулевыми.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SumSq">
      <MemberSignature Language="C#" Value="public double SumSq (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 SumSq([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SumSq(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function SumSq (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16705)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число1, число2,... от – 1 до 30 аргументов, для которых требуется получить сумму квадратов. Вы также можете использовать один массив или ссылку на массив вместо аргументов, разделенных запятыми.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Возвращает сумму квадратов аргументов.</summary>
        <returns>To be added.</returns>
        <remarks><para>Аргументы могут быть числами или именами, массивами или ссылками, содержащими числа. </para>
          <para>Подсчитываются числа, логические значения и текстовые представления чисел, которые вы вводите непосредственно в список аргументов. </para>
          <para>Если аргумент является массивом или ссылкой, подсчитываются только числа в этом массиве или ссылке. Пустые ячейки, логические значения, текст и значения ошибок в массиве или ссылке игнорируются. </para>
          <para>Аргументы, которые являются значениями ошибки или текстом, не преобразуемым в числа, вызывают ошибки. </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SumX2MY2">
      <MemberSignature Language="C#" Value="public double SumX2MY2 (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 SumX2MY2([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SumX2MY2(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function SumX2MY2 (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double SumX2MY2(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16688)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Array_x — первый массив или диапазон значений.</param>
        <param name="Arg2">Array_y — второй массив или диапазон значений.</param>
        <summary>Возвращает сумму разностей квадратов соответствующих значений в двух массивах.</summary>
        <returns>To be added.</returns>
        <remarks><para>Аргументы должны быть числами или именами, массивами или ссылками, содержащими числа. </para>
          <para>Если аргумент array или Reference содержит текст, логические значения или пустые ячейки, эти значения игнорируются; Тем не менее, ячейки с нулевым значением включены. </para>
          <para>Если array_x и array_y имеют разное количество значений, <b>SumX2MY2returns</b> значение ошибки #N/a. </para>
          <para>Уравнение для суммы разности квадратов: </para>
          <para>Рисунок 1: Формула суммы разности квадратов</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SumX2PY2">
      <MemberSignature Language="C#" Value="public double SumX2PY2 (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 SumX2PY2([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SumX2PY2(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function SumX2PY2 (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double SumX2PY2(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16689)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Array_x — первый массив или диапазон значений.</param>
        <param name="Arg2">Array_y — второй массив или диапазон значений.</param>
        <summary>Возвращает сумму квадратов соответствующих значений в двух массивах. Сумма сумм квадратов является общим термином во многих статистических вычислениях.</summary>
        <returns>To be added.</returns>
        <remarks><para>Аргументы должны быть числами или именами, массивами или ссылками, содержащими числа. </para>
          <para>Если аргумент array или Reference содержит текст, логические значения или пустые ячейки, эти значения игнорируются; Тем не менее, ячейки с нулевым значением включены. </para>
          <para>Если array_x и array_y имеют разное количество значений, <b>SumX2PY2</b> возвращает значение ошибки #N/a. </para>
          <para>Уравнение суммы в квадратах имеет следующий размер: </para>
          <para>Рисунок 1: Формула суммы квадратов</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SumXMY2">
      <MemberSignature Language="C#" Value="public double SumXMY2 (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 SumXMY2([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.SumXMY2(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function SumXMY2 (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double SumXMY2(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16687)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Array_x — первый массив или диапазон значений.</param>
        <param name="Arg2">Array_y — второй массив или диапазон значений.</param>
        <summary>Возвращает сумму квадратов разностей соответствующих значений в двух массивах.</summary>
        <returns>To be added.</returns>
        <remarks><para>Аргументы должны быть числами или именами, массивами или ссылками, содержащими числа. </para>
          <para>Если аргумент array или Reference содержит текст, логические значения или пустые ячейки, эти значения игнорируются; Тем не менее, ячейки с нулевым значением включены. </para>
          <para>Если array_x и array_y имеют разное количество значений, <b>SumXMY2</b> возвращает значение ошибки #N/a. </para>
          <para>Уравнение для суммы квадратов различий: </para>
          <para>Рисунок 1: Формула суммы квадратов различий</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Syd">
      <MemberSignature Language="C#" Value="public double Syd (double Arg1, double Arg2, double Arg3, double Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Syd([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]float64 Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Syd(System.Double,System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Syd (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Syd(double Arg1, double Arg2, double Arg3, double Arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16527)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Нач_стоимость — начальная стоимость актива.</param>
        <param name="Arg2">Остаточная_стоимость — значение в конце амортизации (иногда называется остаточной стоимостью актива).</param>
        <param name="Arg3">Life — количество периодов амортизации актива (иногда называется сроком эксплуатации актива).</param>
        <param name="Arg4">В течение периода и должны использовать те же единицы, что и в жизни.</param>
        <summary>Возвращает сумму амортизации актива в течение заданного периода.</summary>
        <returns>To be added.</returns>
        <remarks><para>Значение 
            <b>SYD</b> вычисляется следующим образом:</para>
          <para>Рисунок 1: формула для метода SYD</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="T_Dist">
      <MemberSignature Language="C#" Value="public double T_Dist (double Arg1, double Arg2, bool Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 T_Dist([in]float64 Arg1, [in]float64 Arg2, [in]bool Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.T_Dist(System.Double,System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function T_Dist (Arg1 As Double, Arg2 As Double, Arg3 As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double T_Dist(double Arg1, double Arg2, bool Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16896)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Arg1">X — числовое значение, для которого вычисляется распределение.</param>
        <param name="Arg2">Deg_freedom — целое число, которое указывает количество степеней свободы.</param>
        <param name="Arg3">Интегральная — логическое значение, определяющее форму функции. Если интегральная имеет <b>значение true</b>, <b>T_Dist</b> возвращает интегральную функцию распределения; Если задано <b>значение false</b>, возвращается функция плотности вероятности.</param>
        <summary>Возвращает t-распределение Стьюдента, где числовое значение (x) является вычисляемым значением t, для которого вычисляется процентная единица.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если какой-либо аргумент не является числом, <b>T_Dist</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если deg_freedom &lt; 1, <b>T_Dist</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если x &lt; 0, то <b>T_Dist</b> Возвращает #NUM! значение ошибки.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="T_Dist_2T">
      <MemberSignature Language="C#" Value="public double T_Dist_2T (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 T_Dist_2T([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.T_Dist_2T(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function T_Dist_2T (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double T_Dist_2T(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16897)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">X — числовое значение, для которого вычисляется распределение.</param>
        <param name="Arg2">Deg_freedom — целое число, которое указывает количество степеней свободы.</param>
        <summary>Возвращает двустороннее t — распределение Стьюдента.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если какой-либо из аргументов не является числовым, <b>T_Dist_2T</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если deg_freedom &lt; 1, <b>T_Dist_2T</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если x &lt; 0, то <b>T_Dist_2T</b> Возвращает #NUM! значение ошибки.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="T_Dist_RT">
      <MemberSignature Language="C#" Value="public double T_Dist_RT (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 T_Dist_RT([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.T_Dist_RT(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function T_Dist_RT (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double T_Dist_RT(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16898)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">X — числовое значение, для которого вычисляется распределение.</param>
        <param name="Arg2">Degrees_freedom — целое число, которое указывает количество степеней свободы.</param>
        <summary>Возвращает правое двустороннее распределение Стьюдента, где числовое значение (x) является вычисляемым значением t, для которого вычисляется процентная единица. T-распределение используется в тестировании гипотез с небольшими примерами наборов данных. Используйте эту функцию вместо таблицы критических значений для t — распределения.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если какой-либо из аргументов не является числовым, <b>T_Dist_RT</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если degrees_freedom &lt; 1, <b>T_Dist_RT</b> Возвращает #NUM! значение ошибки. </para>
          <para>Аргументы degrees_freedom и хвосты усекаются до целых. </para>
          <para>Если хвосты имеют любое значение, отличное от 1 или 2, <b>T_Dist_RT</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если x &lt; 0, то <b>T_Dist_RT</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если хвосты = 1, <b>T_Dist_RT</b> вычисляется как T_DIST_RT = P (x&gt;X), где X — это произвольная переменная, которая соответствует T-распределению. Если хвосты = 2, <b>T_Dist_RT</b> вычисляется как T_DIST_RT = P (| X | &gt; x) = P (x &gt; x или x &lt; -x). </para>
          <para>Так как &lt; x 0 не разрешено, для использования <b>T_Dist_RT</b> при &lt; x 0 обратите внимание, что T_DIST_RT (-x, DF) = 1 – T_DIST_RT (x, DF) = &gt; P (x-x) и T_DIST_2T (-x, DF) = T_DIST_2T (x DF) = P (| X | &gt; x).</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="T_Inv">
      <MemberSignature Language="C#" Value="public double T_Inv (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 T_Inv([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.T_Inv(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function T_Inv (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double T_Inv(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16899)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Вероятность — вероятность, связанная с t распределением Стьюдента.</param>
        <param name="Arg2">Deg_freedom — число степеней свободы, характеризующее распределение.</param>
        <summary>Возвращает левое обратное Нераспределение Стьюдента.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если любой из аргументов не является числовым, <b>T_Inv</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если вероятность &lt; 0 или вероятность &gt; 1, <b>T_Inv</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если deg_freedom не целое, то оно усекается. </para>
          <para>Если deg_freedom &lt; 1, <b>T_Inv</b> Возвращает #NUM! значение ошибки.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="T_Inv_2T">
      <MemberSignature Language="C#" Value="public double T_Inv_2T (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 T_Inv_2T([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.T_Inv_2T(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function T_Inv_2T (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double T_Inv_2T(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16900)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Вероятность — вероятность, связанная с двусторонним t распределением Стьюдента.</param>
        <param name="Arg2">Degrees_freedom — число степеней свободы, характеризующее распределение.</param>
        <summary>Возвращает t — значение t — распределение Стьюдента в виде функции вероятности и степеней свободы.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если любой из аргументов не является числовым, <b>T_Inv_2T</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если вероятность &lt; 0 или вероятность &gt; 1, <b>T_Inv_2T</b> Возвращает #NUM! значение ошибки. Если degrees_freedom не целое, то оно усекается. </para>
          <para>Если degrees_freedom &lt; 1, <b>T_Inv_2T</b> Возвращает #NUM! значение ошибки. </para>
          <para>
            <b>T_Inv_2T</b> возвращает это значение T, например, P (| X | &gt; t) = вероятность, где X — это случайная переменная, которая следует за t-распределением и P (| X | &gt; t) = P (x &lt; -t или x &gt; t). </para>
          <para>Одностороннее t — значение может быть возвращено путем замены вероятности на 2*вероятность. Для вероятности 0,05 и степеней свободы (10) двустороннее значение рассчитывается с T_INV_2T (0,05, 10), что возвращает 2,28139. Одностороннее значение для той же вероятности и степеней свободы можно рассчитать с помощью T_INV_2T (2*0,05, 10), что возвращает 1,812462. </para>
          <para>
            <b>Примечание</b>. в некоторых таблицах вероятность описана как (1-p).</para>
          <para>При наличии значения вероятности <b>T_Inv_2T</b> ищет значение x таким, что T_DIST_RT (x, degrees_freedom, 2) = вероятность. Таким образом, точность <b>T_Inv_2T</b> зависит от точности <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.T_Dist_RT(System.Double,System.Double)" />. <b>T_Inv_2T</b> использует метод итерации поиска. Если поиск не сходится после 100 итераций, функция возвращает значение ошибки #N/A.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="T_Test">
      <MemberSignature Language="C#" Value="public double T_Test (object Arg1, object Arg2, double Arg3, double Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 T_Test([in]object Arg1, [in]object Arg2, [in]float64 Arg3, [in]float64 Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.T_Test(System.Object,System.Object,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function T_Test (Arg1 As Object, Arg2 As Object, Arg3 As Double, Arg4 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double T_Test(System::Object ^ Arg1, System::Object ^ Arg2, double Arg3, double Arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16925)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Массив1 — первый набор данных.</param>
        <param name="Arg2">Массив2 — второй набор данных.</param>
        <param name="Arg3">Хвосты — указывает количество хвостов распределения. Если хвосты = 1, <b>T_Test</b> использует одностороннее распределение. Если хвосты = 2, <b>T_Test</b> использует двустороннее распределение.</param>
        <param name="Arg4">Type — тип выполняемого t-теста.</param>
        <summary>Возвращает вероятность, связанную с t-тестом Student. Используйте T_TEST, чтобы определить, могут ли два примера поступать из одного и того же двух базовых Генеральной совокупности с одинаковым средним значением.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если массив1 и массив2 имеют разное количество точек данных, а тип = 1 (сопоставлено), <b>T_Test</b> возвращает значение ошибки #N/a. </para>
          <para>Аргументы хвосты и тип усекаются до целых. </para>
          <para>Если хвосты или тип не являются числовыми, <b>T_Test</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если хвосты имеют любое значение, отличное от 1 или 2, <b>T_Test</b> Возвращает #NUM! значение ошибки. </para>
          <para>
            <b>T_Test</b> использует данные в массив1 и массив2, чтобы вычислить неотрицательную T – статистику. Если хвосты = 1, <b>T_Test</b> возвращает вероятность более высокого значения T – статистики в предположении, что массив1 и массив2 являются примерами из Генеральной совокупности с одним и тем же средним значением. Значение, возвращаемое <b>T_Test</b> , если хвосты = 2 — это двойное значение, которое возвращается, когда хвосты = 1, а соответствует вероятности более высокого значения T-статистики в соответствии с прогнозом "одно заполнение".</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Tanh">
      <MemberSignature Language="C#" Value="public double Tanh (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Tanh([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Tanh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Tanh (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Tanh(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16615)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Number — любое действительное число.</param>
        <summary>Возвращает гиперболический тангенс числа.</summary>
        <returns>To be added.</returns>
        <remarks><para>Формула для гиперболического тангенса:</para>
          <para>Рисунок 1: Формула гиперболического тангенса</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="TBillEq">
      <MemberSignature Language="C#" Value="public double TBillEq (object Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 TBillEq([in]object Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.TBillEq(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function TBillEq (Arg1 As Object, Arg2 As Object, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16822)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Дата_согл — Дата соглашения для казначейского чека. Дата соглашения о безопасности — это дата после даты выпуска, когда казначейского векселя оплачивается покупателем.</param>
        <param name="Arg2">Дата_вступл_в_силу — срок погашения для казначейского векселя. Срок погашения — это дата истечения срока действия векселя.</param>
        <param name="Arg3">Импортантдатес следует вводить с помощью функции Дата или в качестве результатов других формул или функций. Например, используйте DATE (2008, 5, 23) для 23-дневного дня мая 2008. Проблемы могут возникать, если даты вводятся как текст. Скидка — скидка на казначейского счета.</param>
        <summary>Возвращает эквивалентный облигации доход для казначейского векселя.</summary>
        <returns>To be added.</returns>
        <remarks><para>Microsoft Excel хранит даты как последовательные серийные номера, чтобы их можно было использовать в вычислениях. По умолчанию 1 января 1900 года является порядковым номером 1, а 1 января 2008 — порядковым номером 39448, так как он составляет 39 448 дней после 1 января 1900. Microsoft Excel для Macintosh использует в качестве значения по умолчанию другую систему дат. </para>
          <para>Дата_согл и дата_вступл_в_силу усекаются до целых. </para>
          <para>Если дата_согл или дата_вступл_в_силу не является допустимой датой, <b>РАВНОКЧЕК</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если скидка ≤ 0, <b>РАВНОКЧЕК</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если дата_соглашения &gt; дата_вступления_в_силу или дата_вступл_в_силу более одного года после сопоставления, <b>РАВНОКЧЕК</b> Возвращает #NUM! значение ошибки. </para>
          <para>
            <b>РАВНОКЧЕК</b> вычисляется как РАВНОКЧЕК = (365 x Rate)/(360-(Rate x DSM)), где DSM — это количество дней между дата_согл и дата_вступл_в_силу, вычисленное в соответствии с 360 дня в год.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="TBillPrice">
      <MemberSignature Language="C#" Value="public double TBillPrice (object Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 TBillPrice([in]object Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.TBillPrice(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function TBillPrice (Arg1 As Object, Arg2 As Object, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16823)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Дата_согл — Дата соглашения для казначейского чека. Дата соглашения о безопасности — это дата после даты выпуска, когда казначейского векселя оплачивается покупателем.</param>
        <param name="Arg2">Дата_вступл_в_силу — срок погашения для казначейского векселя. Срок погашения — это дата истечения срока действия векселя.</param>
        <param name="Arg3">Скидка — скидка на казначейского счета.</param>
        <summary>Возвращает значение price для каждой казначейского чека в $100.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>для ввода дат используется функция Дата или результаты других формул или функций. Например, используйте DATE (2008, 5, 23) для 23-дневного дня мая 2008. Проблемы могут возникать, если даты вводятся как текст.</para>
          <para>Microsoft Excel хранит даты как последовательные серийные номера, чтобы их можно было использовать в вычислениях. По умолчанию 1 января 1900 года является порядковым номером 1, а 1 января 2008 — порядковым номером 39448, так как он составляет 39 448 дней после 1 января 1900. Microsoft Excel для Macintosh использует в качестве значения по умолчанию другую систему дат. </para>
          <para>Дата_согл и дата_вступл_в_силу усекаются до целых. </para>
          <para>Если дата_согл или дата_вступл_в_силу не является допустимой датой, <b>ЦЕНАКЧЕК</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если скидка ≤ 0, <b>ЦЕНАКЧЕК</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если дата_соглашения &gt; дата_вступления_в_силу или дата_вступл_в_силу более одного года после сопоставления, <b>ЦЕНАКЧЕК</b> Возвращает #NUM! значение ошибки. </para>
          <para>
            <b>ЦЕНАКЧЕК</b> вычисляется следующим образом: </para>
          <para>Рисунок 1: уравнение для метода ЦЕНАКЧЕК</para>
          <para> </para>
          <para> </para>
          <para>где:</para>
          <para>DSM = количество дней от даты оплаты до даты погашения, за исключением даты погашения, которая больше одного календарного года после даты соглашения.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="TBillYield">
      <MemberSignature Language="C#" Value="public double TBillYield (object Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 TBillYield([in]object Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.TBillYield(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function TBillYield (Arg1 As Object, Arg2 As Object, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16824)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Дата_согл — Дата соглашения для казначейского чека. Дата соглашения о безопасности — это дата после даты выпуска, когда казначейского векселя оплачивается покупателем.</param>
        <param name="Arg2">Дата_вступл_в_силу — срок погашения для казначейского векселя. Срок погашения — это дата истечения срока действия векселя.</param>
        <param name="Arg3">Цена казначейского чека на $100.</param>
        <summary>Возвращает доходность казначейского векселя.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>для ввода дат используется функция Дата или результаты других формул или функций. Например, используйте DATE (2008, 5, 23) для 23-дневного дня мая 2008. Проблемы могут возникать, если даты вводятся как текст.</para>
          <para>Microsoft Excel хранит даты как последовательные серийные номера, чтобы их можно было использовать в вычислениях. По умолчанию 1 января 1900 года является порядковым номером 1, а 1 января 2008 — порядковым номером 39448, так как он составляет 39 448 дней после 1 января 1900. Microsoft Excel для Macintosh использует в качестве значения по умолчанию другую систему дат. </para>
          <para>Дата_согл и дата_вступл_в_силу усекаются до целых. </para>
          <para>Если дата_согл или дата_вступл_в_силу не является допустимой датой, <b>ДОХОДКЧЕК</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если цена ≤ 0, <b>ДОХОДКЧЕК</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если дата_соглашения ≥ дата_вступления_в_силу или дата_вступл_в_силу больше одного года после дата_согл, <b>ДОХОДКЧЕК</b> Возвращает #NUM! значение ошибки. </para>
          <para>
            <b>ДОХОДКЧЕК</b> вычисляется следующим образом: </para>
          <para>Рисунок 1: уравнение для метода ДОХОДКЧЕК</para>
          <para> </para>
          <para> </para>
          <para>где:</para>
          <para>DSM = количество дней от даты оплаты до даты погашения, за исключением даты погашения, которая больше одного календарного года после даты соглашения.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="TDist">
      <MemberSignature Language="C#" Value="public double TDist (double Arg1, double Arg2, double Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 TDist([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.TDist(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function TDist (Arg1 As Double, Arg2 As Double, Arg3 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double TDist(double Arg1, double Arg2, double Arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16685)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">X — числовое значение, для которого вычисляется распределение.</param>
        <param name="Arg2">Degrees_freedom — целое число, обозначающее число степеней свободы.</param>
        <param name="Arg3">Хвосты — указывает количество возвращаемых хвостов распределения. Если хвосты = 1, то функция СТЬЮДРАСП возвращает одностороннее распределение. Если хвосты = 2, то функция СТЬЮДРАСП Возвращает двустороннее распределение.</param>
        <summary>Возвращает процентные точки (вероятность) для Стьюдента t-распределения, где числовое значение (x) является вычисляемым значением t, для которого вычисляется процентная единица. T-распределение используется в тестировании гипотез с небольшими примерами наборов данных. Используйте эту функцию вместо таблицы критических значений для t — распределения.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>эта функция заменена одной или несколькими новыми функциями, которые могут улучшить точность и имена которых лучше отражают их использование. Эта функция по-прежнему доступна для совместимости с более ранними версиями Excel. Тем не менее, если обратная совместимость не требуется, рекомендуется использовать новые функции, так как они точнее описывают их функциональность. Дополнительные сведения о новых функциях можно узнать в <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.T_Dist_RT(System.Double,System.Double)" />статье методы <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.T_Dist(System.Double,System.Double,System.Boolean)" />, и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.T_Dist_2T(System.Double,System.Double)" /> .</para>
          <para>Если какой-либо из аргументов не является числом, то <b>функция СТЬЮДРАСП</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если degrees_freedom &lt; 1, то <b>функция СТЬЮДРАСП</b> Возвращает #NUM! значение ошибки. </para>
          <para>Аргументы degrees_freedom и хвосты усекаются до целых. </para>
          <para>Если хвосты имеют любое значение, отличное от 1 или 2, то <b>функция СТЬЮДРАСП</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если x &lt; 0, то <b>функция СТЬЮДРАСП</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если хвосты = 1, то <b>СТЬЮДРАСП</b> вычисляется как СТЬЮДРАСП = P (&gt;x X), где X — это произвольная переменная, которая соответствует t-распределению. Если хвосты = 2, то <b>СТЬЮДРАСП</b> вычисляется как СТЬЮДРАСП = P (| X | &gt; x) = P (x &gt; x или x &lt; -x). </para>
          <para>Так как &lt; x 0 не разрешено, для использования <b>СТЬЮДРАСП</b> при &lt; x 0 обратите внимание на то, что СТЬЮДРАСП (-x, DF, 1) = 1 – СТЬЮДРАСП (x, DF, 1 &gt; ) = P (x-x) и СТЬЮДРАСП (-x, DF, 2) = СТЬЮДРАСП (x DF, 2) = P (| X | &gt; x).</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text (object Arg1, string Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Text([in]object Arg1, [in]string Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Text(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Text (Arg1 As Object, Arg2 As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Text(System::Object ^ Arg1, System::String ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16432)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Arg1">Числовое значение, формула, вычисление которой дает числовое значение, или ссылка на ячейку, содержащую числовое значение.</param>
        <param name="Arg2">Формат чисел в текстовой форме в поле Категория на вкладке число в диалоговом окне Формат ячеек.</param>
        <summary>Преобразует значение в текст в определенном числовом формате.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThaiDayOfWeek">
      <MemberSignature Language="C#" Value="public string ThaiDayOfWeek (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ThaiDayOfWeek([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ThaiDayOfWeek(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function ThaiDayOfWeek (Arg1 As Double) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ThaiDayOfWeek(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16753)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <summary>Зарезервировано для внутреннего использования.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThaiDigit">
      <MemberSignature Language="C#" Value="public string ThaiDigit (string Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ThaiDigit([in]string Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ThaiDigit(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ThaiDigit (Arg1 As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ThaiDigit(System::String ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16754)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <summary>Зарезервировано для внутреннего использования.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThaiMonthOfYear">
      <MemberSignature Language="C#" Value="public string ThaiMonthOfYear (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ThaiMonthOfYear([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ThaiMonthOfYear(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function ThaiMonthOfYear (Arg1 As Double) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ThaiMonthOfYear(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16755)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <summary>Зарезервировано для внутреннего использования.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThaiNumSound">
      <MemberSignature Language="C#" Value="public string ThaiNumSound (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ThaiNumSound([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ThaiNumSound(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function ThaiNumSound (Arg1 As Double) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ThaiNumSound(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16756)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <summary>Зарезервировано для внутреннего использования.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThaiNumString">
      <MemberSignature Language="C#" Value="public string ThaiNumString (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ThaiNumString([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ThaiNumString(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function ThaiNumString (Arg1 As Double) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ThaiNumString(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16757)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <summary>Зарезервировано для внутреннего использования.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThaiStringLength">
      <MemberSignature Language="C#" Value="public double ThaiStringLength (string Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ThaiStringLength([in]string Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ThaiStringLength(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ThaiStringLength (Arg1 As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double ThaiStringLength(System::String ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16758)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <summary>Зарезервировано для внутреннего использования.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThaiYear">
      <MemberSignature Language="C#" Value="public double ThaiYear (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ThaiYear([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ThaiYear(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function ThaiYear (Arg1 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double ThaiYear(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16762)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <summary>Зарезервировано для внутреннего использования.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TInv">
      <MemberSignature Language="C#" Value="public double TInv (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 TInv([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.TInv(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function TInv (Arg1 As Double, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double TInv(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16716)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Вероятность — вероятность, связанная с двусторонней t — распределением Стьюдента.</param>
        <param name="Arg2">Degrees_freedom — число степеней свободы, характеризующее распределение.</param>
        <summary>Возвращает t — значение t — распределения Стьюдента в виде функции вероятности и степеней свободы.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>эта функция заменена одной или несколькими новыми функциями, которые могут улучшить точность и имена которых лучше отражают их использование. Эта функция по-прежнему доступна для совместимости с более ранними версиями Excel. Тем не менее, если обратная совместимость не требуется, рекомендуется использовать новые функции, так как они точнее описывают их функциональность. Более подробную информацию о новых функциях можно узнать <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.TInv(System.Double,System.Double)" /> в <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.T_Inv_2T(System.Double,System.Double)" /> статье методы и.</para>
          <para>Если любой из аргументов не является числом, то функция <b>СТЬЮДРАСПОБР</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если вероятность &lt; 0 или вероятность &gt; 1, то функция <b>СТЬЮДРАСПОБР</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если degrees_freedom не целое, то оно усекается. </para>
          <para>Если degrees_freedom &lt; 1, то функция <b>СТЬЮДРАСПОБР</b> Возвращает #NUM! значение ошибки. </para>
          <para>
            <b>СТЬЮДРАСПОБР</b> возвращает это значение t, например, P (| X | &gt; t) = вероятность, где X — это случайная переменная, которая следует за t-распределением и P (| X | &gt; t) = P (x &lt; -t или x &gt; t). </para>
          <para>Одностороннее t — значение может быть возвращено путем замены вероятности на 2*вероятность. Для вероятности 0,05 и степеней свободы (10) двустороннее значение рассчитывается с помощью СТЬЮДРАСПОБР (0,05, 10), что возвращает 2,28139. Одностороннее значение для той же вероятности и степеней свободы можно рассчитать с помощью СТЬЮДРАСПОБР (2*0,05, 10), что возвращает 1,812462. </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Transpose">
      <MemberSignature Language="C#" Value="public object Transpose (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Transpose([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Transpose(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transpose (Arg1 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Transpose(System::Object ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16467)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Массив — массив или диапазон ячеек на листе, который требуется транспонировать. Транспонировать массив создается с помощью первой строки массива в качестве первого столбца нового массива, второй строки массива в качестве второго столбца нового массива и т. д.</param>
        <summary>Возвращает вертикальный диапазон ячеек в виде горизонтального или наоборот. Метод транспонировать должен вводиться в виде формулы массива в диапазоне с таким же количеством строк и столбцов, что и в массиве столбцов и строк. Используйте команду транспонировать для сдвига вертикальной и горизонтальной ориентации массива на листе.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Trend">
      <MemberSignature Language="C#" Value="public object Trend (object Arg1, object Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Trend([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Trend(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Trend (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16434)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Known_y — набор значений y, которые уже известны в соотношении y = mx + b.</param>
        <param name="Arg2">Known_x — необязательный набор значений x, которые, возможно, уже известны в соотношении y = mx + b.</param>
        <param name="Arg3">Новые значения x New_x, для которых требуется тенденция возвращать соответствующие значения y.</param>
        <param name="Arg4">Const — логическое значение, указывающее, следует ли принудительно установить значение константы b равным 0.</param>
        <summary>Возвращает значения по линейной тенденции. Соответствует прямой линии (с использованием метода с наименьшими квадратами) для массивов known_y и known_x. Возвращает значения y, а также строку для указанного массива new_x.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если known_y массива находится в одной колонке, то каждый столбец known_x интерпретируется как отдельная переменная. </para>
          <para>Если массив known_y находится в одной строке, то каждая строка known_x интерпретируется как отдельная переменная. </para>
          <para>Known_x массива может включать один или несколько наборов переменных. Если используется только одна переменная, known_y и known_x могут быть диапазонами любой фигуры, если у них одинаковый размер. Если используется несколько переменных, known_y должен быть векторным (то есть диапазоном с высотой одной строки или шириной в один столбец). </para>
          <para>Если параметр known_x опущен, предполагается, что он равен массиву {1, 2, 3,...} такой же размер, что и known_y. </para>
          <para>Для каждой независимой переменной New_x должен быть включен столбец (или строка), как и для known_x. Таким образом, если known_y находится в одном столбце, known_x и new_x должны иметь одинаковое число столбцов. Если known_y находится в одной строке, known_x и new_x должны иметь одинаковое число строк. </para>
          <para>Если опустить new_x, предполагается, что он совпадает с known_x. </para>
          <para>Если опустить как known_x, так и new_x, предполагается, что это массив {1, 2, 3,...} такой же размер, что и known_y. </para>
          <para>Если конст имеет <b>значение true</b> или опущено, то b вычисляется обычным образом. </para>
          <para>Если конст имеет <b>значение false</b>, b задается равным 0 (нулю), а значения m корректируются таким образом, чтобы y = mx. </para>
          <para>Сведения о том, как Microsoft Excel подбирает линии к данным, <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.LinEst(System.Object,System.Object,System.Object,System.Object)" />см. </para>
          <para>Вы можете использовать <b>тенденцию</b> для соединения полинома, выполнив регрессионную шкалу с одной переменной, возведенной на различные степени. Например, пусть столбец A содержит значения y, а столбец B содержит значения x. Вы можете ввести x ^ 2 в столбец C, x ^ 3 в столбце D и т. д., а затем регрессионить столбцы от B до D относительно столбца A. </para>
          <para>Формулы, возвращающие массивы, должны вводиться как формулы массива. </para>
          <para>При вводе массива константы для аргумента, например known_x, запятые используются для разделения значений в одной строке, а точка с запятой — для разделения строк.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Trim">
      <MemberSignature Language="C#" Value="public string Trim (string Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Trim([in]string Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Trim(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Trim (Arg1 As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Trim(System::String ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16502)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Arg1">Текст — текст, из которого удаляются пробелы.</param>
        <summary>Удаляет все пробелы из текста, за исключением одиночных пробелов между словами. Используйте TRIM для текста, полученного из другого приложения с неравномерными интервалами.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>функция <b>Trim</b> была разработана для удаления 7-разрядного знака пробела ASCII (значение 32) из текста. В наборе символов Юникода имеется дополнительный символ пробела, который называется символом неразрывного пробела и имеет десятичное значение 160. Этот символ часто используется в веб-страницах в качестве HTML-объекта, <b> &amp;nbsp;</b>. Функция <b>Trim</b> не удаляет этот символ неразрывного пробела.</para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimMean">
      <MemberSignature Language="C#" Value="public double TrimMean (object Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 TrimMean([in]object Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.TrimMean(System.Object,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function TrimMean (Arg1 As Object, Arg2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double TrimMean(System::Object ^ Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16715)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Массив — массив или диапазон значений, которые необходимо обрезать и усреднить.</param>
        <param name="Arg2">Процент — дробное количество точек данных, исключаемых из вычислений. Например, если percent = 0,2, 4 точки усекаются из набора данных из 20 баллов (20 x 0,2): 2 сверху и 2 из нижней части набора.</param>
        <summary>Возвращает среднее внутреннее значение набора данных. УРЕЗСРЕДНЕЕ вычисляет среднее значение за исключением процентов точек данных от верхних и нижних хвостов набора данных. Эту функцию можно использовать, если вы хотите исключить из анализа данные о посторонах.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если в &lt; процентах 0 &gt; или %1, <b>УРЕЗСРЕДНЕЕ</b> Возвращает #NUM! значение ошибки. </para>
          <para>
            <b>УРЕЗСРЕДНЕЕ</b> округляет количество исключенных точек данных до ближайшего числа, кратного 2. Если доля = 0,1, 10 процентов от 30 точек данных равны 3 точкам. Для симметрии <b>УРЕЗСРЕДНЕЕ</b> исключает одиночное значение из верхней и нижней части набора данных.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="TTest">
      <MemberSignature Language="C#" Value="public double TTest (object Arg1, object Arg2, double Arg3, double Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 TTest([in]object Arg1, [in]object Arg2, [in]float64 Arg3, [in]float64 Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.TTest(System.Object,System.Object,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function TTest (Arg1 As Object, Arg2 As Object, Arg3 As Double, Arg4 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double TTest(System::Object ^ Arg1, System::Object ^ Arg2, double Arg3, double Arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16700)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Массив1 — первый набор данных.</param>
        <param name="Arg2">Массив2 — второй набор данных.</param>
        <param name="Arg3">Хвосты — указывает количество хвостов распределения. Если хвосты = 1, то функция ТТЕСТ использует одностороннее распределение. Если хвосты = 2, то функция ТТЕСТ использует двустороннее распределение.</param>
        <param name="Arg4">Type — тип выполняемого t-теста.</param>
        <summary>Возвращает вероятность, связанную с t-тестом учащегося. Функция ТТЕСТ используется для определения того, что два примера, скорее всего, поступают из одного и того же двух базовых Генеральной совокупности, которые имеют одинаковое среднее значение.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>эта функция заменена одной или несколькими новыми функциями, которые могут улучшить точность и имена которых лучше отражают их использование. Эта функция по-прежнему доступна для совместимости с более ранними версиями Excel. Тем не менее, если обратная совместимость не требуется, рекомендуется использовать новые функции, так как они точнее описывают их функциональность. Более подробную информацию о функции New можно узнать в <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.T_Test(System.Object,System.Object,System.Double,System.Double)" /> методе.</para>
          <list type="table">
            <item>
              <term>1,1</term>
              <description>Сопоставленных</description>
            </item>
            <item>
              <term>2</term>
              <description>Двухвыборочный с одинаковыми дисперсиями (хомосцедастик)</description>
            </item>
            <item>
              <term>4</term>
              <description>Двухвыборочный вариация неодинаковых значений (хетеросцедастик)</description>
            </item>
          </list>
          <para>Если массив1 и массив2 имеют разное количество точек данных, а тип = 1 (сопоставлено), то <b>функция ТТЕСТ</b> возвращает значение ошибки #N/a. </para>
          <para>Аргументы хвосты и тип усекаются до целых. </para>
          <para>Если хвосты или тип не являются числами, то <b>функция ТТЕСТ</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если хвосты имеют любое значение, отличное от 1 или 2, то <b>функция ТТЕСТ</b> Возвращает #NUM! значение ошибки. </para>
          <para>
            <b>Функция ТТЕСТ</b> использует данные в массив1 и массив2, чтобы вычислить неотрицательную t – статистику. Если хвосты = 1, то <b>функция ТТЕСТ</b> возвращает вероятность более высокого значения t – статистики в предположении, что массив1 и массив2 являются примерами из заполнений с одним и тем же средним значением. Значение, возвращаемое функцией <b>ТТЕСТ</b> , если хвосты = 2 — это Double, который возвращается, когда хвосты = 1, а соответствует вероятности более высокого значения t-статистики в соответствии с прогнозом "одно заполнение".</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Unichar">
      <MemberSignature Language="C#" Value="public string Unichar (double Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Unichar([in]float64 Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Unichar(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Unichar (Arg1 As Double) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Unichar(double Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16964)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Номер Юникода, представляющий символ.</param>
        <summary>Возвращает символ Юникода, на который ссылается заданное числовое значение.</summary>
        <returns>Задает логическое условие соответствия для текстовой строки.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unicode">
      <MemberSignature Language="C#" Value="public double Unicode (string Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Unicode([in]string Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Unicode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Unicode (Arg1 As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Unicode(System::String ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16965)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Arg1">Символ, для которого требуется присвоить значение Юникод.</param>
        <summary>Возвращает число (кодовую точку), соответствующее первому символу текста.</summary>
        <returns><b>DOUBLE</b></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="USDollar">
      <MemberSignature Language="C#" Value="public string USDollar (double Arg1, double Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string USDollar([in]float64 Arg1, [in]float64 Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.USDollar(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function USDollar (Arg1 As Double, Arg2 As Double) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ USDollar(double Arg1, double Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16588)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Arg1">Ссылка на ячейку, содержащую число, или формулу, вычисление которой дает число.</param>
        <param name="Arg2">Количество цифр справа от десятичной точки. Если параметр arg2 имеет отрицательное значение, то число округляется слева от десятичной точки. Если вы опускаете число_знаков, предполагается, что он равен 2.</param>
        <summary>Преобразует число в текстовый формат и применяет обозначение денежной единицы. Имя метода (и символ, который он применяется) зависит от языковых параметров.</summary>
        <returns>To be added.</returns>
        <remarks><para>Метод <b>усдоллар</b> преобразует число в текст с использованием денежного формата с десятичными знаками, округленными до указанного места. Используемым форматом является $ #, # #0 .00 _);($ #, # #0.00).</para>
          <para>Основное различие между форматированием ячейки, содержащей число с командой Format Cells и форматированием числа непосредственно с помощью <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Dollar(System.Double,System.Object)" /> метода, заключается в том <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Dollar(System.Double,System.Object)" /> , что преобразует его результат в текст. Число, отформатированное с помощью команды Format Cells, по-прежнему является числом. Вы можете продолжать использовать числа, отформатированные <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Dollar(System.Double,System.Object)" /> в формулах, так как Excel преобразует числа, введенные как текстовые, в числовые значения при расчете.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Var">
      <MemberSignature Language="C#" Value="public double Var (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Var([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Var(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Var (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16430)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число1, число2,... – 1 — 30 числовых аргументов, соответствующих выборке из Генеральной совокупности.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Оценивает дисперсию на основе примера.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Var</b> предполагает, что аргументы являются примерами Генеральной совокупности. Если данные представляют всю генеральную совокупность, то дисперсия вычисляется с <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.VarP(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />помощью. </para>
          <para>Аргументы могут быть числами или именами, массивами или ссылками, содержащими числа. </para>
          <para>При этом учитываются логические значения и текстовые представления чисел, введенных непосредственно в список аргументов. </para>
          <para>Если аргумент является массивом или ссылкой, подсчитываются только числа в этом массиве или ссылке. Пустые ячейки, логические значения, текст и значения ошибок в массиве или ссылке игнорируются. </para>
          <para>Аргументы, которые являются значениями ошибки или текстом, не преобразуемым в числа, вызывают ошибки. </para>
          <para>
            <b>Var</b> использует следующую формулу: </para>
          <para>Рисунок 1: уравнение для метода var</para>
          <para> </para>
          <para> </para>
          <para>где x это пример среднего значения (Число1, число2,...), а n — это размер выборки.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Var_P">
      <MemberSignature Language="C#" Value="public double Var_P (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Var_P([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Var_P(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Var_P (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16902)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число1, число2,... – 1 — 30 числовых аргументов, соответствующих Генеральной совокупности.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Вычисляет дисперсию для Генеральной совокупности.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Var_P</b> предполагает, что аргументы являются целым заполнением. Если данные представляют собой пример заполнения, то дисперсия вычисляется с помощью <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Var_S(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />. </para>
          <para>Аргументы могут быть числами или именами, массивами или ссылками, содержащими числа. </para>
          <para>При этом учитываются логические значения и текстовые представления чисел, введенных непосредственно в список аргументов. </para>
          <para>Если аргумент является массивом или ссылкой, подсчитываются только числа в этом массиве или ссылке. Пустые ячейки, логические значения, текст и значения ошибок в массиве или ссылке игнорируются. </para>
          <para>Аргументы, которые являются значениями ошибки или текстом, не преобразуемым в числа, вызывают ошибки. </para>
          <para>Уравнение для <b>Var_P</b> : </para>
          <para>Рисунок 1: уравнение для метода Var_P</para>
          <para> </para>
          <para> </para>
          <para>где x это пример среднего значения (Число1, число2,...), а n — это размер выборки.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Var_S">
      <MemberSignature Language="C#" Value="public double Var_S (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Var_S([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Var_S(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Var_S (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16901)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число1, число2,... – 1 — 30 числовых аргументов, соответствующих выборке из Генеральной совокупности.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Оценивает дисперсию на основе примера.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Var_S</b> предполагает, что аргументы являются примерами Генеральной совокупности. Если данные представляют всю генеральную совокупность, то дисперсия вычисляется с <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Var_P(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />помощью. </para>
          <para>Аргументы могут быть числами или именами, массивами или ссылками, содержащими числа. </para>
          <para>Учитываются логические значения и текстовые представления чисел, которые вы вводите непосредственно в список аргументов. </para>
          <para>Если аргумент является массивом или ссылкой, подсчитываются только числа в этом массиве или ссылке. Пустые ячейки, логические значения, текст и значения ошибок в массиве или ссылке игнорируются. </para>
          <para>Аргументы, которые являются значениями ошибки или текстом, не преобразуемым в числа, вызывают ошибки. </para>
          <para>
            <b>Var_S</b> используется следующая формула: </para>
          <para>Рисунок 1: уравнение для метода Var_S</para>
          <para> </para>
          <para> </para>
          <para>где x это пример среднего значения (Число1, число2,...), а n — это размер выборки.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="VarP">
      <MemberSignature Language="C#" Value="public double VarP (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 VarP([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.VarP(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function VarP (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16578)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Число1, число2,... – 1 — 30 числовых аргументов, соответствующих Генеральной совокупности.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Вычисляет дисперсию для Генеральной совокупности.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>эта функция заменена одной или несколькими новыми функциями, которые могут улучшить точность и имена которых лучше отражают их использование. Эта функция по-прежнему доступна для совместимости с более ранними версиями Excel. Тем не менее, если обратная совместимость не требуется, рекомендуется использовать новые функции, так как они точнее описывают их функциональность. Более подробную информацию о функции New можно узнать в <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Var_P(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> методе.</para>
          <para>
            <b>ДИСПР</b> предполагает, что аргументы представляют всю генеральную совокупность. Если данные представляют собой пример заполнения, то дисперсия вычисляется с помощью <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Var(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />. </para>
          <para>Аргументы могут быть числами или именами, массивами или ссылками, содержащими числа. </para>
          <para>При этом учитываются логические значения и текстовые представления чисел, введенных непосредственно в список аргументов. </para>
          <para>Если аргумент является массивом или ссылкой, подсчитываются только числа в этом массиве или ссылке. Пустые ячейки, логические значения, текст и значения ошибок в массиве или ссылке игнорируются. </para>
          <para>Аргументы, которые являются значениями ошибки или текстом, не преобразуемым в числа, вызывают ошибки. </para>
          <para>Уравнение для <b>ДИСПР</b> имеет следующий следующий параметр: </para>
          <para>Рисунок 1: уравнение для метода ДИСПР</para>
          <para> </para>
          <para> </para>
          <para>где x это пример среднего значения (Число1, число2,...), а n — это размер выборки.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Vdb">
      <MemberSignature Language="C#" Value="public double Vdb (double Arg1, double Arg2, double Arg3, double Arg4, double Arg5, object Arg6, object Arg7);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Vdb([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]float64 Arg4, [in]float64 Arg5, [in]object Arg6, [in]object Arg7) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Vdb(System.Double,System.Double,System.Double,System.Double,System.Double,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Vdb (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Double, Arg5 As Double, Optional Arg6 As Object, Optional Arg7 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16606)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Double" />
        <Parameter Name="Arg5" Type="System.Double" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Нач_стоимость — начальная стоимость актива.</param>
        <param name="Arg2">Остаточная_стоимость — значение в конце амортизации (иногда называется остаточной стоимостью актива). Это значение может быть равно 0.</param>
        <param name="Arg3">Life — количество периодов амортизации актива (иногда называется сроком эксплуатации актива).</param>
        <param name="Arg4">Start_period начальный период, для которого требуется вычислить амортизацию. Start_period должны использовать те же единицы, что и Life.</param>
        <param name="Arg5">End_period — конечный период, для которого требуется вычислить амортизацию. End_period должны использовать те же единицы, что и Life.</param>
        <param name="Arg6">Factor — частота, с которой баланс отклоняется. Если параметр Factor опущен, предполагается, что он равен 2 (метод двойного уменьшения остатка). Изменение коэффициента, если вы не хотите использовать метод двойного уменьшения остатка. Описание метода двойного уменьшения остатка в разделе <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Ddb(System.Double,System.Double,System.Double,System.Double,System.Object)" />.</param>
        <param name="Arg7">No_switch — логическое значение, указывающее, следует ли переключать на линейную амортизацию, если амортизация превышает расчет снижающегося остатка.</param>
        <summary>Возвращает сумму амортизации актива для любого указываемого периода, включая частичные периоды, с использованием метода двойного уменьшения остатка или другого указанного метода. ПУО означает, что вы обладаете переменным снижающегося остатка.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если no_switch имеет <b>значение true</b>, Microsoft Excel не переключается на линейную амортизацию, даже если амортизация больше, чем вычисление снижающегося остатка. </para>
          <para>Если no_switch имеет <b>значение false</b> или опущено, Excel переключается на линейную амортизацию, если амортизация превышает расчет снижающегося остатка.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="VLookup">
      <MemberSignature Language="C#" Value="public object VLookup (object Arg1, object Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object VLookup([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.VLookup(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function VLookup (Arg1 As Object, Arg2 As Object, Arg3 As Object, Optional Arg4 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16486)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Lookup_value — значение для поиска в первом столбце массива таблицы. Lookup_value может быть значением или ссылкой. Если lookup_value меньше наименьшего значения в первом столбце table_array, то функция ВПР возвращает значение ошибки #N/A.</param>
        <param name="Arg2">Table_array — два или более столбцов данных. Используйте ссылку на диапазон или имя диапазона. Значения в первом столбце table_array — это значения, в которых lookup_value. Эти значения могут быть текстовыми, числовыми или логическими значениями. Текст в верхнем и нижнем регистре эквивалентен.</param>
        <param name="Arg3">Col_index_num — номер столбца в table_array, из которого должно возвращаться совпадающее значение. Col_index_num, равное 1, возвращает значение из первого столбца в table_array; col_index_num 2 Возвращает значение во втором столбце в table_array и т. д.</param>
        <param name="Arg4">Range_lookup — логическое значение, указывающее, должен ли <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.VLookup(System.Object,System.Object,System.Object,System.Object)" /> метод находить точное совпадение или приблизительное совпадение:</param>
        <summary>Ищет значение в первом столбце массива таблицы и возвращает значение в той же строке из другого столбца в массиве таблиц.</summary>
        <returns>To be added.</returns>
        <remarks><para>V в <b>ВПР</b> означает вертикальный. Используйте метод <b>ВПР</b> вместо метода, <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.HLookup(System.Object,System.Object,System.Object,System.Object)" /> если значения сравнения расположены в столбце слева от данных, которые требуется найти.</para>
          <para>Если Col_index_num меньше 1, метод <b>ВПР</b> создает ошибку. </para>
          <para>Если Col_index_num превышает количество столбцов в table_array, метод <b>ВПР</b> создает ошибку.</para>
          <para>Если Range_lookup имеет <b>значение true</b> или опущено, возвращается точное или приблизительное совпадение. Если точное совпадение не найдено, возвращается следующее наибольшее значение, меньшее lookup_value. </para>
          <para>Значения в первом столбце table_array должны быть размещены в порядке сортировки по возрастанию; в противном случае метод <b>ВПР</b> может не дать правильное значение.</para>
          <para>Если Range_lookup имеет <b>значение false</b>, метод <b>ВПР</b> будет искать только точное совпадение. В этом случае значения в первом столбце table_array не нуждаются в сортировке. При наличии двух или более значений в первом столбце table_array, которые совпадают с lookup_value, используется первое найденное значение. Если точное совпадение не найдено, возникает ошибка.</para>
          <para>При поиске текстовых значений в первом столбце table_array убедитесь, что в первом столбце table_array отсутствуют начальные пробелы, конечные пробелы, несогласованное использование прямых ("или") и фигурных или непечатаемых знаков. В этих случаях метод <b>ВПР</b> может привести к неправильному или неожиданному значению. Сведения об очистке и обрезке значений приведены в <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Clean(System.String)" /> разделе методы и <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Trim(System.String)" /> . При поиске значений чисел или дат убедитесь, что данные в первом столбце table_array не хранятся как текстовые значения. В этом случае метод <b>ВПР</b> может получить неправильное или неожиданное значение. </para>
          <para>Если range_lookup имеет <b>значение false</b> и lookup_value является текстом, можно использовать подстановочные знаки, вопросительные знаки (?) и звездочки (*) в lookup_value. Вопросительный знак соответствует одному символу; Звездочка соответствует любой последовательности символов. Если вы хотите найти фактический вопросительный знак или звездочку, введите тильду (~) перед символом.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="WebService">
      <MemberSignature Language="C#" Value="public object WebService (string Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object WebService([in]string Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.WebService(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WebService (Arg1 As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ WebService(System::String ^ Arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16980)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Arg1">URL-адрес веб-службы, которой должен быть получен запрос HTTP GET.</param>
        <summary>Базовая функция, которая асинхронно вызывает веб-службу, используя HTTP-запрос GET, и возвращает ответ.</summary>
        <returns><b>ТИПОМ</b></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Weekday">
      <MemberSignature Language="C#" Value="public double Weekday (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Weekday([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Weekday(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Weekday (Arg1 As Object, Optional Arg2 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16454)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Serial_number порядкового номера, представляющего дату, день недели которого вы хотите найти. Даты следует вводить с помощью функции Дата или в качестве результатов других формул или функций. Например, используйте DATE (2008, 5, 23) для 23-дневного дня мая 2008. Проблемы могут возникать, если даты вводятся как текст.</param>
        <param name="Arg2">Return_type — число, определяющее тип возвращаемого значения.</param>
        <summary>Возвращает день недели, соответствующий дате. День задается как целое число в диапазоне от 1 (воскресенье) до 7 (Суббота) по умолчанию.</summary>
        <returns>To be added.</returns>
        <remarks><list type="table">
            <item>
              <term>1 или опущен</term>
              <description>Числа от 1 (воскресенье) до 7 (Суббота). Аналогично предыдущим версиям Microsoft Excel.</description>
            </item>
            <item>
              <term>2</term>
              <description>Число от 1 (понедельник) до 7 (воскресенье).</description>
            </item>
            <item>
              <term>4</term>
              <description>Число от 0 (понедельник) до 6 (воскресенье).</description>
            </item>
            <item>
              <term>11 </term>
              <description>Число от 1 (понедельник) до 7 (воскресенье).</description>
            </item>
            <item>
              <term>12 </term>
              <description>Числа от 1 (Вторник) до 7 (понедельник)</description>
            </item>
            <item>
              <term>13</term>
              <description>Число от 1 (среда) до 7 (Вторник)</description>
            </item>
            <item>
              <term>14 </term>
              <description>Числа от 1 (четверг) до 7 (среда)</description>
            </item>
            <item>
              <term>15 </term>
              <description>Числа от 1 (Пятница) до 7 (четверг)</description>
            </item>
            <item>
              <term>16 </term>
              <description>Числа от 1 (Суббота) до 7 (Пятница)</description>
            </item>
            <item>
              <term>17 </term>
              <description>Числа от 1 (воскресенье) до 7 (Суббота)</description>
            </item>
          </list>
          <para>Microsoft Excel хранит даты как последовательные серийные номера, чтобы их можно было использовать в вычислениях. По умолчанию 1 января 1900 года является порядковым номером 1, а 1 января 2008 — порядковым номером 39448, так как он составляет 39 448 дней после 1 января 1900. Microsoft Excel для Macintosh использует в качестве значения по умолчанию другую систему дат.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="WeekNum">
      <MemberSignature Language="C#" Value="public double WeekNum (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 WeekNum([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.WeekNum(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function WeekNum (Arg1 As Object, Optional Arg2 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16849)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Serial_num — Дата в течение недели. Даты следует вводить с помощью функции Дата или в качестве результатов других формул или функций. Например, используйте DATE (2008, 5, 23) для 23-дневного дня мая 2008. Проблемы могут возникать, если даты вводятся как текст.</param>
        <param name="Arg2">Return_type — число, которое определяет, к какому дню начинается неделя. По умолчанию используется значение 1.</param>
        <summary>Возвращает число, которое указывает, где неделя приходится в числовом году.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>функция <b>НОМНЕДЕЛИ</b> считает неделю, содержащую 1 января, на первую неделю года. Тем не менее, существует Европейский стандарт, который определяет первую неделю в качестве единицы с большинством дней (четыре или более), которые попадают в новый год. Это означает, что в течение года, в течение которого в течение недели приходится не более трех дней, функция <b>НОМНЕДЕЛИ</b> возвращает номера недель, которые являются неправильными в соответствии с Европейским стандартом.</para>
          <list type="table">
            <item>
              <term>1,1</term>
              <description>Неделя начинается в воскресенье. Дни недели нумеруются с 1 по 7.</description>
            </item>
            <item>
              <term>2</term>
              <description>Неделя начинается в понедельник. Дни недели нумеруются с 1 по 7.</description>
            </item>
          </list>
          <para>Microsoft Excel хранит даты как последовательные серийные номера, чтобы их можно было использовать в вычислениях. По умолчанию 1 января 1900 года является порядковым номером 1, а 1 января 2008 — порядковым номером 39448, так как он составляет 39 448 дней после 1 января 1900. Microsoft Excel для Macintosh использует в качестве значения по умолчанию другую систему дат.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Weibull">
      <MemberSignature Language="C#" Value="public double Weibull (double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Weibull([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]bool Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Weibull(System.Double,System.Double,System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Weibull (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Weibull(double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16686)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Arg1">X — значение, для которого вычисляется функция.</param>
        <param name="Arg2">Альфа — параметр распределения.</param>
        <param name="Arg3">Бета — параметр распределения.</param>
        <param name="Arg4">Интегральная — определяет форму функции.</param>
        <summary>Возвращает распределение Вейбулла. Используйте это распределение в анализе надежности, например вычисление среднего времени для устройства до сбоя.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>эта функция заменена одной или несколькими новыми функциями, которые могут улучшить точность и имена которых лучше отражают их использование. Эта функция по-прежнему доступна для совместимости с более ранними версиями Excel. Тем не менее, если обратная совместимость не требуется, рекомендуется использовать новые функции, так как они точнее описывают их функциональность. Более подробную информацию о функции New можно узнать в <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Weibull_Dist(System.Double,System.Double,System.Double,System.Boolean)" /> методе.</para>
          <para>Если x, альфа или бета не является числом, то <b>Функция ВЕЙБУЛЛ</b> возвращает #VALUE! значение ошибки. Если x &lt; 0, то <b>функция ВЕЙБУЛЛ</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если альфа ≤ 0 или бета ≤ 0, то <b>Функция ВЕЙБУЛЛ</b> Возвращает #NUM! значение ошибки. </para>
          <para>Уравнение для интегральной функции распределения Вейбулла имеет следующий вид: </para>
          <para>Рисунок 1: уравнение для интегрального распределения Вейбулла</para>
          <para> </para>
          <para> </para>
          <para>Уравнение для функции плотности распределения Вейбулла имеет следующий следующий параметр:</para>
          <para>Рисунок 2: уравнение для плотности вероятности Вейбулла</para>
          <para> </para>
          <para> </para>
          <para>Если альфа = 1, то <b>Функция ВЕЙБУЛЛ</b> возвращает экспоненциальное распределение:</para>
          <para>Рисунок 3: формула</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Weibull_Dist">
      <MemberSignature Language="C#" Value="public double Weibull_Dist (double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Weibull_Dist([in]float64 Arg1, [in]float64 Arg2, [in]float64 Arg3, [in]bool Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Weibull_Dist(System.Double,System.Double,System.Double,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Weibull_Dist (Arg1 As Double, Arg2 As Double, Arg3 As Double, Arg4 As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Weibull_Dist(double Arg1, double Arg2, double Arg3, bool Arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16903)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Double" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Double" />
        <Parameter Name="Arg4" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Arg1">X — значение, для которого вычисляется функция.</param>
        <param name="Arg2">Альфа — параметр распределения.</param>
        <param name="Arg3">Бета — параметр распределения.</param>
        <param name="Arg4">Интегральная — определяет форму функции.</param>
        <summary>Возвращает распределение Вейбулла. Используйте это распределение в анализе надежности, например вычисление среднего времени до сбоя для устройства.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если x, альфа или бета не являются числовыми, <b>Weibull_Dist</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если x &lt; 0, <b>Weibull_Dist</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если альфа ≤ 0 или бета ≤ 0, <b>Weibull_Dist</b> Возвращает #NUM! значение ошибки. </para>
          <para>Уравнение для интегральной функции распределения Вейбулла имеет следующий вид: </para>
          <para>Рисунок 1: уравнение для интегрального распределения Вейбулла</para>
          <para> </para>
          <para> </para>
          <para>Уравнение для функции плотности распределения Вейбулла имеет следующий следующий параметр:</para>
          <para>Рисунок 2: уравнение для плотности вероятности Вейбулла</para>
          <para> </para>
          <para> </para>
          <para>Если альфа = 1, <b>Weibull_Dist</b> возвращает экспоненциальное распределение со следующим:</para>
          <para>Рисунок 3: формула</para>
          <para> </para>
          <para> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkDay">
      <MemberSignature Language="C#" Value="public double WorkDay (object Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 WorkDay([in]object Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.WorkDay(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function WorkDay (Arg1 As Object, Arg2 As Object, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16855)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Start_date — Дата, представляющая дату начала.</param>
        <param name="Arg2">Days (дни) — количество невыходных и непраздничных дней до или после start_date. Положительное значение дней приводит к будущей дате; отрицательное значение дает прошедшую дату.</param>
        <param name="Arg3">Праздничные дни — необязательный список из одной или нескольких дат, которые необходимо исключить из рабочего календаря, такие как штатные и федеральные праздники и плавающие праздники. Список может быть либо диапазоном ячеек, содержащим даты, либо константой массива серийных номеров, представляющих даты.</param>
        <summary>Возвращает число, представляющее дату, отстоящую на указанное количество рабочих дней до или после даты (Дата начала). Рабочие дни исключают выходные дни и даты, определенные как праздники. Используйте рабочую неделю, чтобы исключить выходные дни и праздники при расчете сроков оплаты счетов, ожидаемого времени доставки или количества дней, выполненных для работы.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>для ввода дат используется функция Дата или результаты других формул или функций. Например, используйте DATE (2008, 5, 23) для 23-дневного дня мая 2008. Проблемы могут возникать, если даты вводятся как текст.</para>
          <para>Microsoft Excel хранит даты как последовательные серийные номера, чтобы их можно было использовать в вычислениях. По умолчанию 1 января 1900 года является порядковым номером 1, а 1 января 2008 — порядковым номером 39448, так как он составляет 39 448 дней после 1 января 1900. Microsoft Excel для Macintosh использует в качестве значения по умолчанию другую систему дат. </para>
          <para>Если какой-либо из аргументов не является допустимой датой, <b>РАБДЕНЬ</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если start_date плюс, Дата, вызывает недопустимую дату, <b>РАБДЕНЬ</b> возвращает значение #NUM! значение ошибки. </para>
          <para>Если Days не целое число, оно усекается.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkDay_Intl">
      <MemberSignature Language="C#" Value="public double WorkDay_Intl (object Arg1, object Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 WorkDay_Intl([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.WorkDay_Intl(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function WorkDay_Intl (Arg1 As Object, Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16905)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Start_date Дата начала, усеченная до целого.</param>
        <param name="Arg2">Дни — количество рабочих дней до или после start_date. Положительное значение Возвращает будущую дату; отрицательное значение дает прошедшую дату; значение 0 (ноль) дает start_date. Day-offset усекается до целого числа.</param>
        <param name="Arg3">Выходные — указывает дни недели, которые являются выходными днями и не считаются рабочими днями. Выходные — это номер выходной или строкой, указывающий время появления выходных дней.</param>
        <param name="Arg4">Праздники — необязательный набор из одной или нескольких дат, которые необходимо исключить из календаря рабочего дня. Праздники это диапазон ячеек, содержащих даты, или константа массива серийных значений, представляющих эти даты. Порядок следования дат или последовательного значения в праздниках может быть произвольным.</param>
        <summary>Возвращает порядковый номер даты до или после указанного количества рабочих дней с настраиваемыми параметрами выходных данных. Выходные параметры показывают, сколько дней выходные дни. Выходные дни и дни, указанные в качестве праздников, не рассматриваются как рабочие дни.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если start_date находится за пределами диапазона для текущего базового значения даты, <b>WorkDay_Intl</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если какая-либо дата в праздниках выходит за пределы диапазона для текущего базового значения даты, <b>WorkDay_Intl</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если start_date и смещение дня дает недопустимую дату, <b>WorkDay_Intl</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если выходная строка имеет недопустимую длину или содержит недопустимые символы, <b>WorkDay_Intl</b> возвращает #VALUE! значение ошибки.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Xirr">
      <MemberSignature Language="C#" Value="public double Xirr (object Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Xirr([in]object Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Xirr(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Xirr (Arg1 As Object, Arg2 As Object, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16813)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Значения — серия денежных потоков, соответствующих графику платежей в датах. Первая оплата является необязательной и соответствует затратам или платежам, возникающим в начале инвестиций. Если первое значение равно затрате или платежу, оно должно быть отрицательным. Все успешные платежи вычислены на основе 365 дня года. Ряд значений должен содержать по крайней мере одно положительное и одно отрицательное значение.</param>
        <param name="Arg2">Dates — график дат платежей, соответствующий платежам движения денежных средств. Первая Дата оплаты указывает начало графика платежей. Все остальные даты должны быть позже этой даты, но они могут возникать в любом порядке. Даты следует вводить с помощью функции Дата или в качестве результатов других формул или функций. Например, используйте DATE (2008, 5, 23) для 23-дневного дня мая 2008. Проблемы могут возникать, если даты вводятся как текст.</param>
        <param name="Arg3">Guess — число, которое вы выдаете, близко к результату <b>ЧИСТВНДОХ</b>.</param>
        <summary>Возвращает внутреннюю норму прибыли для расписания денежных потоков, которые не обязательно являются периодическими. Чтобы вычислить внутреннюю ставку доходности для ряда периодических денежных потоков, используйте функцию ВСД.</summary>
        <returns>To be added.</returns>
        <remarks><para>Microsoft Excel хранит даты как последовательные серийные номера, чтобы их можно было использовать в вычислениях. По умолчанию 1 января 1900 года является порядковым номером 1, а 1 января 2008 — порядковым номером 39448, так как он составляет 39 448 дней после 1 января 1900. Microsoft Excel для Macintosh использует в качестве значения по умолчанию другую систему дат. </para>
          <para>Числа в датах усекаются до целых. </para>
          <para>В 
            <b>ЧИСТВНДОХ</b> ожидается по крайней мере один положительный денежный взнос и один отрицательный денежный процесс; в противном случае <b>ЧИСТВНДОХ</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если любое число в датах не является допустимой датой, то функция <b>ЧИСТВНДОХ</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если любое число в датах предшествует начальной дате, то функция <b>ЧИСТВНДОХ</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если значения и даты содержат разное количество значений, то функция <b>ЧИСТВНДОХ</b> Возвращает #NUM! значение ошибки. </para>
          <para>В большинстве случаев нет необходимости предоставлять прогноз для вычисления <b>ЧИСТВНДОХ</b> . Если этот параметр опущен, предполагается, что предполагается значение 0,1 (10 процентов). </para>
          <para>
            <b>ЧИСТВНДОХ</b> тесно связан с <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Xnpv(System.Object,System.Object)" />функцией чистой приведенной стоимости. Процентное значение, вычисляемое <b>ЧИСТВНДОХ</b> , это процентная ставка, соответствующая ЧИСТНЗ = 0. </para>
          <para>В Excel для вычисления <b>ЧИСТВНДОХ</b>используется итеративный метод. Используя частоту изменения (начиная с предположения), <b>ЧИСТВНДОХ</b> циклически проходит через вычисление до тех пор, пока результат не станет точным в пределах 0,000001 процентов. Если функция <b>ЧИСТВНДОХ</b> не может найти результат, который работает после 100 попыток, #NUM! возвращается значение ошибки. Частота изменяется до: </para>
          <para>Рисунок 1: уравнение</para>
          <para> </para>
          <para> </para>
          <para>где:</para>
          <para>di = дата i i/Last, Дата оплаты.</para>
          <para>D1 = 0 – ом Дата платежа.</para>
          <para>PI = Дата i или последнего платежа.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Xnpv">
      <MemberSignature Language="C#" Value="public double Xnpv (object Arg1, object Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Xnpv([in]object Arg1, [in]object Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Xnpv(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Xnpv (Arg1 As Object, Arg2 As Object) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Xnpv(System::Object ^ Arg1, System::Object ^ Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16814)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Ряд денежных потоков, соответствующий графику платежей в датах. Первая оплата является необязательной и соответствует затратам или платежам, возникающим в начале инвестиций.</param>
        <param name="Arg2">График дат оплаты, соответствующий платежам движения денежных средств. Первая Дата оплаты указывает начало графика платежей. Все остальные даты должны быть позже этой даты, но они могут возникать в любом порядке.</param>
        <summary>Возвращает чистую приведенную стоимость для расписания денежных потоков, которые не обязательно являются периодическими.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>метод <b>ЧИСТНЗ</b> не предоставляет параметр, соответствующий аргументу Rate, который требуется соответствующей функции ЧИСТНЗ (= функция ЧИСТНЗ (Rate, Values, dates)). Чтобы обойти это ограничение в коде VBA вместо использования метода <b>кспнв</b> , вызовите функцию ЧИСТНЗ с помощью <see cref="M:Microsoft.Office.Interop.Excel._Application.Evaluate(System.Object)" /> метода.</para>
          <para>Чтобы вычислить чистую текущую сумму для ряда периодических выплат, используйте <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Npv(System.Double,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> метод.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Xor">
      <MemberSignature Language="C#" Value="public bool Xor (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Xor([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Xor(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Xor (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16953)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">от 1 до 254 условий, которые необходимо проверить, могут быть либо <b>true</b> , либо <b>false</b> , а также логическими значениями, массивами или ссылками.</param>
        <param name="Arg2">от 1 до 254 условий, которые необходимо проверить, могут быть либо <b>true</b> , либо <b>false</b> , а также логическими значениями, массивами или ссылками.</param>
        <param name="Arg3">от 1 до 254 условий, которые необходимо проверить, могут быть либо <b>true</b> , либо <b>false</b> , а также логическими значениями, массивами или ссылками.</param>
        <param name="Arg4">от 1 до 254 условий, которые необходимо проверить, могут быть либо <b>true</b> , либо <b>false</b> , а также логическими значениями, массивами или ссылками.</param>
        <param name="Arg5">от 1 до 254 условий, которые необходимо проверить, могут быть либо <b>true</b> , либо <b>false</b> , а также логическими значениями, массивами или ссылками.</param>
        <param name="Arg6">от 1 до 254 условий, которые необходимо проверить, могут быть либо <b>true</b> , либо <b>false</b> , а также логическими значениями, массивами или ссылками.</param>
        <param name="Arg7">от 1 до 254 условий, которые необходимо проверить, могут быть либо <b>true</b> , либо <b>false</b> , а также логическими значениями, массивами или ссылками.</param>
        <param name="Arg8">от 1 до 254 условий, которые необходимо проверить, могут быть либо <b>true</b> , либо <b>false</b> , а также логическими значениями, массивами или ссылками.</param>
        <param name="Arg9">от 1 до 254 условий, которые необходимо проверить, могут быть либо <b>true</b> , либо <b>false</b> , а также логическими значениями, массивами или ссылками.</param>
        <param name="Arg10">от 1 до 254 условий, которые необходимо проверить, могут быть либо <b>true</b> , либо <b>false</b> , а также логическими значениями, массивами или ссылками.</param>
        <param name="Arg11">от 1 до 254 условий, которые необходимо проверить, могут быть либо <b>true</b> , либо <b>false</b> , а также логическими значениями, массивами или ссылками.</param>
        <param name="Arg12">от 1 до 254 условий, которые необходимо проверить, могут быть либо <b>true</b> , либо <b>false</b> , а также логическими значениями, массивами или ссылками.</param>
        <param name="Arg13">от 1 до 254 условий, которые необходимо проверить, могут быть либо <b>true</b> , либо <b>false</b> , а также логическими значениями, массивами или ссылками.</param>
        <param name="Arg14">от 1 до 254 условий, которые необходимо проверить, могут быть либо <b>true</b> , либо <b>false</b> , а также логическими значениями, массивами или ссылками.</param>
        <param name="Arg15">от 1 до 254 условий, которые необходимо проверить, могут быть либо <b>true</b> , либо <b>false</b> , а также логическими значениями, массивами или ссылками.</param>
        <param name="Arg16">от 1 до 254 условий, которые необходимо проверить, могут быть либо <b>true</b> , либо <b>false</b> , а также логическими значениями, массивами или ссылками.</param>
        <param name="Arg17">от 1 до 254 условий, которые необходимо проверить, могут быть либо <b>true</b> , либо <b>false</b> , а также логическими значениями, массивами или ссылками.</param>
        <param name="Arg18">от 1 до 254 условий, которые необходимо проверить, могут быть либо <b>true</b> , либо <b>false</b> , а также логическими значениями, массивами или ссылками.</param>
        <param name="Arg19">от 1 до 254 условий, которые необходимо проверить, могут быть либо <b>true</b> , либо <b>false</b> , а также логическими значениями, массивами или ссылками.</param>
        <param name="Arg20">от 1 до 254 условий, которые необходимо проверить, могут быть либо <b>true</b> , либо <b>false</b> , а также логическими значениями, массивами или ссылками.</param>
        <param name="Arg21">от 1 до 254 условий, которые необходимо проверить, могут быть либо <b>true</b> , либо <b>false</b> , а также логическими значениями, массивами или ссылками.</param>
        <param name="Arg22">от 1 до 254 условий, которые необходимо проверить, могут быть либо <b>true</b> , либо <b>false</b> , а также логическими значениями, массивами или ссылками.</param>
        <param name="Arg23">от 1 до 254 условий, которые необходимо проверить, могут быть либо <b>true</b> , либо <b>false</b> , а также логическими значениями, массивами или ссылками.</param>
        <param name="Arg24">от 1 до 254 условий, которые необходимо проверить, могут быть либо <b>true</b> , либо <b>false</b> , а также логическими значениями, массивами или ссылками.</param>
        <param name="Arg25">от 1 до 254 условий, которые необходимо проверить, могут быть либо <b>true</b> , либо <b>false</b> , а также логическими значениями, массивами или ссылками.</param>
        <param name="Arg26">от 1 до 254 условий, которые необходимо проверить, могут быть либо <b>true</b> , либо <b>false</b> , а также логическими значениями, массивами или ссылками.</param>
        <param name="Arg27">от 1 до 254 условий, которые необходимо проверить, могут быть либо <b>true</b> , либо <b>false</b> , а также логическими значениями, массивами или ссылками.</param>
        <param name="Arg28">от 1 до 254 условий, которые необходимо проверить, могут быть либо <b>true</b> , либо <b>false</b> , а также логическими значениями, массивами или ссылками.</param>
        <param name="Arg29">от 1 до 254 условий, которые необходимо проверить, могут быть либо <b>true</b> , либо <b>false</b> , а также логическими значениями, массивами или ссылками.</param>
        <param name="Arg30">от 1 до 254 условий, которые необходимо проверить, могут быть либо <b>true</b> , либо <b>false</b> , а также логическими значениями, массивами или ссылками.</param>
        <summary>Возвращает логическое исключающее или для всех аргументов.</summary>
        <returns><b>BOOL</b></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="YearFrac">
      <MemberSignature Language="C#" Value="public double YearFrac (object Arg1, object Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 YearFrac([in]object Arg1, [in]object Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.YearFrac(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function YearFrac (Arg1 As Object, Arg2 As Object, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16835)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Start_date — Дата, представляющая дату начала.</param>
        <param name="Arg2">End_date — Дата, представляющая дату окончания.</param>
        <param name="Arg3">Базис — используемый тип расчета дня.</param>
        <summary>Вычисляет долю года, представленную числом полных дней между двумя датами (start_date и end_date). Используйте функцию листа ДОЛЯГОДА, чтобы определить долю преимуществ и обязательств в рамках всего года для назначения определенному термину.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>для ввода дат используется функция Дата или результаты других формул или функций. Например, используйте DATE (2008, 5, 23) для 23-дневного дня мая 2008. Проблемы могут возникать, если даты вводятся как текст.</para>
          <list type="table">
            <item>
              <term>0 или опущен</term>
              <description>АМЕРИКАНСКИЙ (NASD) 30/360</description>
            </item>
            <item>
              <term>1,1</term>
              <description>Фактический/фактический</description>
            </item>
            <item>
              <term>2</term>
              <description>Фактический/360</description>
            </item>
            <item>
              <term>4</term>
              <description>Фактические/365</description>
            </item>
            <item>
              <term>4 </term>
              <description>Европейская 30/360</description>
            </item>
          </list>
          <para>Microsoft Excel хранит даты как последовательные серийные номера, чтобы их можно было использовать в вычислениях. По умолчанию 1 января 1900 года является порядковым номером 1, а 1 января 2008 — порядковым номером 39448, так как он составляет 39 448 дней после 1 января 1900. Microsoft Excel для Macintosh использует в качестве значения по умолчанию другую систему дат. </para>
          <para>Все аргументы усекаются до целых. </para>
          <para>Если start_date или end_date не являются допустимыми датами, <b>ДОЛЯГОДА</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если базис &lt; 0 или базис &gt; 4, <b>ДОЛЯГОДА</b> Возвращает #NUM! значение ошибки.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="YieldDisc">
      <MemberSignature Language="C#" Value="public double YieldDisc (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 YieldDisc([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.YieldDisc(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function YieldDisc (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Optional Arg5 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16821)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Дата_согл — Дата соглашения по ценным обозначением. Дата сопоставления безопасности — это дата после даты выпускной сделки, когда она передается покупателю.</param>
        <param name="Arg2">Дата_вступления_в_силу — срок погашения ценных бумаг. Срок погашения — это дата истечения срока действия системы безопасности.</param>
        <param name="Arg3">PR — Цена ценных бумаг на $100.</param>
        <param name="Arg4">Погашение — выкупная стоимость ценных бумаг на $100.</param>
        <param name="Arg5">Базис — используемый тип расчета дня.</param>
        <summary>Возвращает годовую доходность по ценным бумагам со скидкой.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>для ввода дат используется функция Дата или результаты других формул или функций. Например, используйте DATE (2008, 5, 23) для 23-дневного дня мая 2008. Проблемы могут возникать, если даты вводятся как текст.</para>
          <list type="table">
            <item>
              <term>0 или опущен</term>
              <description>АМЕРИКАНСКИЙ (NASD) 30/360</description>
            </item>
            <item>
              <term>1,1</term>
              <description>Фактический/фактический</description>
            </item>
            <item>
              <term>2</term>
              <description>Фактический/360</description>
            </item>
            <item>
              <term>4</term>
              <description>Фактические/365</description>
            </item>
            <item>
              <term>4 </term>
              <description>Европейская 30/360</description>
            </item>
          </list>
          <para>Microsoft Excel хранит даты как последовательные серийные номера, чтобы их можно было использовать в вычислениях. По умолчанию 1 января 1900 года является порядковым номером 1, а 1 января 2008 — порядковым номером 39448, так как он составляет 39 448 дней после 1 января 1900. Microsoft Excel для Macintosh использует в качестве значения по умолчанию другую систему дат. </para>
          <para>Дата соглашения — это дата приобретения покупателем купона, например облигации. Дата погашения — это дата истечения срока действия купона. Например, предположим, что 30-летний облигация составляет 1 января 2008 г., и позднее он покупается покупателем за шесть месяцев. Дата выпуска — 1 января 2008 года, Дата расчета — 1 июля 2008, а срок погашения — 1 января 2038 г., что составляет 30 лет после даты выпуска 1 января, 2008 года. </para>
          <para>Дата_согл, дата_вступл_в_силу и базис усекаются до целых. </para>
          <para>Если дата_согл или дата_вступл_в_силу не является допустимой датой, <b>ДОХОДСКИДКА</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если цена ≤ 0 или выкуп ≤ 0, <b>ДОХОДСКИДКА</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если базис &lt; 0 или базис &gt; 4, <b>ДОХОДСКИДКА</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если дата_соглашения ≥ дата_вступления_в_силу, <b>ДОХОДСКИДКА</b> Возвращает #NUM! значение ошибки.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="YieldMat">
      <MemberSignature Language="C#" Value="public double YieldMat (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 YieldMat([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.YieldMat(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function YieldMat (Arg1 As Object, Arg2 As Object, Arg3 As Object, Arg4 As Object, Arg5 As Object, Optional Arg6 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16816)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Дата_согл — Дата соглашения по ценным обозначением. Дата сопоставления безопасности — это дата после даты выпускной сделки, когда она передается покупателю.</param>
        <param name="Arg2">Дата_вступления_в_силу — срок погашения ценных бумаг. Срок погашения — это дата истечения срока действия системы безопасности.</param>
        <param name="Arg3">Issue — Дата выпуска системы безопасности, выраженная в виде порядкового номера даты.</param>
        <param name="Arg4">Rate — процентная ставка по ценным бумагам на дату выпуска.</param>
        <param name="Arg5">PR — Цена ценных бумаг на $100.</param>
        <param name="Arg6">Базис — используемый тип расчета дня.</param>
        <summary>Возвращает годовой доход по ценным бумагам, который выплачивает процентную выплату.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>для ввода дат используется функция Дата или результаты других формул или функций. Например, используйте DATE (2008, 5, 23) для 23-дневного дня мая 2008. Проблемы могут возникать, если даты вводятся как текст.</para>
          <list type="table">
            <item>
              <term>0 или опущен</term>
              <description>АМЕРИКАНСКИЙ (NASD) 30/360</description>
            </item>
            <item>
              <term>1,1</term>
              <description>Фактический/фактический</description>
            </item>
            <item>
              <term>2</term>
              <description>Фактический/360</description>
            </item>
            <item>
              <term>4</term>
              <description>Фактические/365</description>
            </item>
            <item>
              <term>4 </term>
              <description>Европейская 30/360</description>
            </item>
          </list>
          <para>Microsoft Excel хранит даты как последовательные серийные номера, чтобы их можно было использовать в вычислениях. По умолчанию 1 января 1900 года является порядковым номером 1, а 1 января 2008 — порядковым номером 39448, так как он составляет 39 448 дней после 1 января 1900. Microsoft Excel для Macintosh использует в качестве значения по умолчанию другую систему дат. </para>
          <para>Дата соглашения — это дата приобретения покупателем купона, например облигации. Дата погашения — это дата истечения срока действия купона. Например, предположим, что 30-летний облигация составляет 1 января 2008 г., и позднее он покупается покупателем за шесть месяцев. Дата выпуска — 1 января 2008 года, Дата расчета — 1 июля 2008, а срок погашения — 1 января 2038 г., что составляет 30 лет после даты выпуска 1 января, 2008 года. </para>
          <para>Дата_согл, дата_вступл_в_силу, выдача и базис усекаются до целых. </para>
          <para>Если дата_согл, дата_вступл_в_силу или Issue не является допустимой датой, <b>ДОХОДПОГАШ</b> возвращает #VALUE! значение ошибки. </para>
          <para>Если ставка &lt; составляет 0 или цена ≤ 0, <b>ДОХОДПОГАШ</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если базис &lt; 0 или базис &gt; 4, <b>ДОХОДПОГАШ</b> Возвращает #NUM! значение ошибки. </para>
          <para>Если дата_соглашения ≥ дата_вступления_в_силу, <b>ДОХОДПОГАШ</b> Возвращает #NUM! значение ошибки.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Z_Test">
      <MemberSignature Language="C#" Value="public double Z_Test (object Arg1, double Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 Z_Test([in]object Arg1, [in]float64 Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Z_Test(System.Object,System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Z_Test (Arg1 As Object, Arg2 As Double, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16926)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Массив — это массив или диапазон данных для проверки гипотетического среднего Генеральной совокупности.</param>
        <param name="Arg2">Проверяемое значение.</param>
        <param name="Arg3">Сигма — известное стандартное отклонение генеральной совокупности. Если этот параметр опущен, используется стандартное отклонение выборки.</param>
        <summary>Возвращает одностороннее значение вероятности z-теста. Для данного гипотетического среднего Генеральной совокупности Z_TEST возвращает вероятность того, что выборочное среднее значение будет больше среднего числа наблюдений в наборе данных (массив), то есть наблюдаемый пример среднего значения.</summary>
        <returns>To be added.</returns>
        <remarks><para>Если массив пуст, <b>Z_Test</b> возвращает значение ошибки #N/a. </para>
          <para>
            <b>Z_Test</b> вычисляется следующим образом, если параметр Сигма не опущен: </para>
          <para>Рисунок 1: формула для Z_Test, если Сигма не опущен</para>
          <para> </para>
          <para> </para>
          <para>Если параметр Сигма опущен, то:</para>
          <para>Рис. 2: формула для Z_Test, когда Сигма опущено</para>
          <para> </para>
          <para> </para>
          <para>где x это пример среднего значения среднего значения (array); s — это пример стандартного отклонения STDEV_S (array); n — количество наблюдений в числе образцов (массив).</para>
          <para>
            <b>Z_Test</b> представляет вероятность того, что пример среднего значения будет выше среднего значения среднего (массива), когда Базовое среднее заполнение равно μ0. Из симметрии нормального распределения, если СРЗНАЧ (array) &lt; μ0, <b>Z_Test</b> вернет значение больше 0,5.</para>
          <para>С помощью приведенной ниже формулы Excel можно вычислить двустороннее вероятность того, что выборочное среднее будет относиться к μ0 (в любом направлении), чем СРЗНАЧ (array), когда базовое значение Генеральной совокупности равно μ0:</para>
          <para>= 2 * MIN (Z_TEST (Array, μ0, сигма), 1-Z_TEST (Array, μ0, сигма)).</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ZTest">
      <MemberSignature Language="C#" Value="public double ZTest (object Arg1, double Arg2, object Arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ZTest([in]object Arg1, [in]float64 Arg2, [in]object Arg3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorksheetFunction.ZTest(System.Object,System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ZTest (Arg1 As Object, Arg2 As Double, Optional Arg3 As Object) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16708)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Double" />
        <Parameter Name="Arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">Массив — это массив или диапазон данных для проверки гипотетического среднего Генеральной совокупности.</param>
        <param name="Arg2">Проверяемое значение.</param>
        <param name="Arg3">Сигма — известное стандартное отклонение генеральной совокупности. Если этот параметр опущен, используется стандартное отклонение выборки.</param>
        <summary>Возвращает одностороннее значение вероятности z-теста. Для данного гипотетического среднего Генеральной совокупности расчета ZTEST возвращает вероятность того, что пример среднего значения будет больше среднего числа наблюдений в наборе данных (массиве), то есть наблюдаемый пример среднего значения.</summary>
        <returns>To be added.</returns>
        <remarks><para>
            <b>Важно!</b>эта функция заменена одной или несколькими новыми функциями, которые могут улучшить точность и имена которых лучше отражают их использование. Эта функция по-прежнему доступна для совместимости с более ранними версиями Excel. Тем не менее, если обратная совместимость не требуется, рекомендуется использовать новые функции, так как они точнее описывают их функциональность. Более подробную информацию о функции New можно узнать в <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Z_Test(System.Object,System.Double,System.Object)" /> методе.</para>
          <para>Если массив пуст, <b>расчета ztest</b> возвращает значение ошибки/a #N. </para>
          <para>
            <b>Расчета ztest</b> вычисляется следующим образом, если параметр Сигма не опущен: </para>
          <para>Рисунок 1: формула для расчета ztest, когда Сигма не опущена</para>
          <para> </para>
          <para> </para>
          <para>Если параметр Сигма опущен, то:</para>
          <para>Рисунок 2: формула для расчета ztest, когда Сигма опущено</para>
          <para> </para>
          <para> </para>
          <para>где x это пример среднего значения среднего значения (array); s — пример стандартного отклонения СТАНДОТКЛОН (array); n — количество наблюдений в числе образцов (массив).</para>
          <para>
            <b>Расчета ztest</b> представляет вероятность того, что пример среднего значения будет больше, чем среднее значение среднего значения (array), когда Базовое среднее значение равно μ0. Из симметрии нормального распределения, если СРЗНАЧ (array) &lt; Μ0, расчета ztest возвратит значение больше 0,5.</para>
          <para>Приведенную ниже формулу Excel можно использовать для вычисления двусторонней вероятности выборки из μ0 (в обоих направлениях), чем СРЗНАЧ (массив), когда базовое значение Генеральной совокупности составляет μ0: = 2 * MIN (расчета ZTEST (Array, μ0, сигма), 1-расчета ZTEST (Array, μ0, сигма)).</para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>