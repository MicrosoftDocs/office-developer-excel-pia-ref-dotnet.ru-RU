<Type Name="Names" FullName="Microsoft.Office.Interop.Excel.Names">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a76d5115c800138621098c928ea18e19669180e4" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="09/03/2018" />
    <Meta Name="ms.locfileid" Value="20584730" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface Names : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Names implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Names" />
  <TypeSignature Language="VB.NET" Value="Public Interface Names&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class Names : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208B8-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="7a490-101">Коллекция всех <see cref="T:Microsoft.Office.Interop.Excel.Name" /> объекты в приложении или рабочей книги.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7a490-101">A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.Name" /> objects in the application or workbook.</span>
      </span>
      <span data-ttu-id="7a490-102">Каждый объект <b>имя</b> представляет имя, определенное для диапазона ячеек.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7a490-102">Each <b>Name</b> object represents a defined name for a range of cells.</span>
      </span>
      <span data-ttu-id="7a490-103">Имена может быть либо встроенные имена — например, базы данных, Print_Area и Авто_открыть — или пользовательских имен.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7a490-103">Names can be either built-in names — such as Database, Print_Area, and Auto_Open — or custom names.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="7a490-104">
        <para>Использование <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Names" /> свойство для возвращения коллекции <b>имен</b> .</para>
        <para>Использования <see cref="M:Microsoft.Office.Interop.Excel.Names.Add(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> метод Создание имени и добавляет его в коллекцию. Метод <b>Add</b><paramref name="RefersTo" /> аргумент должен быть указан в нотации стиля A1, включая знак доллара ($), где это необходимо. Например, если при выборе ячейки A10 на листе Лист1 и определить имя, используя <paramref name="RefersTo" /> аргумент «= sheet1! A1: B1 листа», новое имя фактически означает A10:B10 ячеек (поскольку указан относительная ссылка). Чтобы указать абсолютная ссылка, используйте «= sheet1! $A$ 1: $B$ 1».</para>
        <para>Использовать <b>имена</b>(<paramref name="index" />), где <paramref name="index" /> — это имя номер индекса или определенное имя, чтобы возвратить объект <b>имя</b> .</para>
        <para></para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="7a490-104">
          <para>Use the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Names" /> property to return the <b>Names</b> collection.</para>
          <para>Use the <see cref="M:Microsoft.Office.Interop.Excel.Names.Add(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method to create a name and add it to the collection. The <b>Add</b> method's <paramref name="RefersTo" /> argument must be specified in A1-style notation, including dollar signs ($) where appropriate. For example, if cell A10 is selected on Sheet1 and you define a name by using the <paramref name="RefersTo" /> argument "=sheet1!A1:B1", the new name actually refers to cells A10:B10 (because you specified a relative reference). To specify an absolute reference, use "=sheet1!$A$1:$B$1".</para>
          <para>Use <b>Names</b>(<paramref name="index" />), where <paramref name="index" /> is the name index number or defined name, to return a single <b>Name</b> object.</para>
          <para></para>
        </span>
      </span>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Name _Default (object Index, object IndexLocal, object RefersTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Name _Default([in]object Index, [in]object IndexLocal, [in]object RefersTo) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Names._Default(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _Default (Optional Index As Object, Optional IndexLocal As Object, Optional RefersTo As Object) As Name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Name</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
        <Parameter Name="IndexLocal" Type="System.Object" />
        <Parameter Name="RefersTo" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <param name="IndexLocal">To be added.</param>
        <param name="RefersTo">To be added.</param>
        <summary>
          <span data-ttu-id="7a490-105">Зарезервировано для внутреннего использования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-105">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Name Add (object Name, object RefersTo, object Visible, object MacroType, object ShortcutKey, object Category, object NameLocal, object RefersToLocal, object CategoryLocal, object RefersToR1C1, object RefersToR1C1Local);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Name Add([in]object Name, [in]object RefersTo, [in]object Visible, [in]object MacroType, [in]object ShortcutKey, [in]object Category, [in]object NameLocal, [in]object RefersToLocal, [in]object CategoryLocal, [in]object RefersToR1C1, [in]object RefersToR1C1Local) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Names.Add(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(181)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Name</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
        <Parameter Name="RefersTo" Type="System.Object" />
        <Parameter Name="Visible" Type="System.Object" />
        <Parameter Name="MacroType" Type="System.Object" />
        <Parameter Name="ShortcutKey" Type="System.Object" />
        <Parameter Name="Category" Type="System.Object" />
        <Parameter Name="NameLocal" Type="System.Object" />
        <Parameter Name="RefersToLocal" Type="System.Object" />
        <Parameter Name="CategoryLocal" Type="System.Object" />
        <Parameter Name="RefersToR1C1" Type="System.Object" />
        <Parameter Name="RefersToR1C1Local" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="7a490-106">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-106">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="7a490-107">Обязателен, если <paramref name="NameLocal" /> не указан.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-107">Required if <paramref name="NameLocal" /> isn't specified.</span>
          </span>
          <span data-ttu-id="7a490-108">Текст для использования в качестве имени.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-108">The text to use as the name.</span>
          </span>
          <span data-ttu-id="7a490-109">Имена не могут содержать пробелов и не могут иметь вид ссылки на ячейки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-109">Names cannot include spaces and cannot look like cell references.</span>
          </span>
        </param>
        <param name="RefersTo">
          <span data-ttu-id="7a490-110">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-110">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="7a490-111">Требуется, если один из другой <paramref name="RefersTo" /> указанных аргументов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-111">Required unless one of the other <paramref name="RefersTo" /> arguments is specified.</span>
          </span>
          <span data-ttu-id="7a490-112">Описывает имя относится к (с использованием нотации стиля A1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-112">Describes what the name refers to (using A1-style notation).</span>
          </span>
          <span data-ttu-id="7a490-113">
            <b>Примечание</b> Ничего не возвращается, если ссылка не существует.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-113">
              <b>Note</b> Nothing is returned if the reference does not exist.</span>
          </span>
        </param>
        <param name="Visible">
          <span data-ttu-id="7a490-114">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-114">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="7a490-115">
            <b>Значение true,</b> чтобы определить имя обычно.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-115">
              <b>True</b> to define the name normally.</span>
          </span>
          <span data-ttu-id="7a490-116">
            <b>Значение false,</b> чтобы определить имя как скрытые имя (то есть, не отображается в диалоговом окне Определение имени, Вставка имени или Goto).</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-116">
              <b>False</b> to define the name as a hidden name (that is, it doesn't appear in either the Define Name, Paste Name, or Goto dialog box).</span>
          </span>
          <span data-ttu-id="7a490-117">Значение по умолчанию — <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-117">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="MacroType">
          <span data-ttu-id="7a490-118">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-118">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="7a490-119">Тип макрос, как показано в следующей таблице. Функции, определенной ValueMeaning1User (процедуру<b>Function</b> ) 2Macro (также известные как процедуры <b>Sub</b> ) 3 или omittedNone (то есть имя не ссылается на пользовательскую функцию или макрос)</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-119">The macro type, as shown in the following table.ValueMeaning1User-defined function (<b>Function</b> procedure)2Macro (also known as <b>Sub</b> procedure)3 or omittedNone (that is, the name doesn't refer to a user-defined function or macro)</span>
          </span>
        </param>
        <param name="ShortcutKey">
          <span data-ttu-id="7a490-120">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-120">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="7a490-121">Сочетание клавиш макрос.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-121">The macro shortcut key.</span>
          </span>
          <span data-ttu-id="7a490-122">Должна быть одной буквы, например «z» или «Z».</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-122">Must be a single letter, such as "z" or "Z".</span>
          </span>
          <span data-ttu-id="7a490-123">Применяется только для макросов команды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-123">Applies only for command macros.</span>
          </span>
        </param>
        <param name="Category">
          <span data-ttu-id="7a490-124">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-124">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="7a490-125">Категория макроса или функции, если <paramref name="MacroType" /> — 1 или 2.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-125">The category of the macro or function if <paramref name="MacroType" /> is 1 or 2.</span>
          </span>
          <span data-ttu-id="7a490-126">Категория используется в Мастер функций.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-126">The category is used in the Function Wizard.</span>
          </span>
          <span data-ttu-id="7a490-127">Существующие категории можно ссылаться по номеру (начиная с 1) или по имени (в языке макрос).</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-127">Existing categories can be referred to either by number (starting at 1) or by name (in the language of the macro).</span>
          </span>
          <span data-ttu-id="7a490-128">Microsoft Excel создает новую категорию, если указанной категории еще не существует.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-128">Microsoft Excel creates a new category if the specified category doesn't already exist.</span>
          </span>
        </param>
        <param name="NameLocal">
          <span data-ttu-id="7a490-129">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-129">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="7a490-130">Обязателен, если <paramref name="Name" /> не указан.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-130">Required if <paramref name="Name" /> isn't specified.</span>
          </span>
          <span data-ttu-id="7a490-131">Текст для использования в качестве имени (в разделе Язык пользователя).</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-131">The text to use as the name (in the language of the user).</span>
          </span>
          <span data-ttu-id="7a490-132">Имена не могут содержать пробелов и не могут иметь вид ссылки на ячейки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-132">Names cannot include spaces and cannot look like cell references.</span>
          </span>
        </param>
        <param name="RefersToLocal">
          <span data-ttu-id="7a490-133">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-133">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="7a490-134">Требуется, если один из другой <paramref name="RefersTo" /> указанных аргументов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-134">Required unless one of the other <paramref name="RefersTo" /> arguments is specified.</span>
          </span>
          <span data-ttu-id="7a490-135">Описывает, что имя ссылается (на языке пользователя, с помощью нотации стиля A1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-135">Describes what the name refers to (in the language of the user, using A1-style notation).</span>
          </span>
        </param>
        <param name="CategoryLocal">
          <span data-ttu-id="7a490-136">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-136">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="7a490-137">Обязателен, если <paramref name="Category" /> не указан.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-137">Required if <paramref name="Category" /> isn't specified.</span>
          </span>
          <span data-ttu-id="7a490-138">Текст, идентифицирующий категория пользовательской функции на языке пользователя.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-138">Text identifying the category of a custom function in the language of the user.</span>
          </span>
        </param>
        <param name="RefersToR1C1">
          <span data-ttu-id="7a490-139">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-139">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="7a490-140">Требуется, если один из другой <paramref name="RefersTo" /> указанных аргументов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-140">Required unless one of the other <paramref name="RefersTo" /> arguments is specified.</span>
          </span>
          <span data-ttu-id="7a490-141">Описывает имя относится к (с использованием нотации стиля R1C1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-141">Describes what the name refers to (using R1C1-style notation).</span>
          </span>
        </param>
        <param name="RefersToR1C1Local">
          <span data-ttu-id="7a490-142">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-142">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="7a490-143">Требуется, если один из другой <paramref name="RefersTo" /> указанных аргументов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-143">Required unless one of the other <paramref name="RefersTo" /> arguments is specified.</span>
          </span>
          <span data-ttu-id="7a490-144">Описывает, что имя ссылается (на языке пользователя, с помощью нотации стиля R1C1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-144">Describes what the name refers to (in the language of the user, using R1C1-style notation).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a490-145">Задает новое имя.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-145">Defines a new name.</span>
          </span>
          <span data-ttu-id="7a490-146">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Name" /> объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-146">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Name" /> object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Names.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7a490-147">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Application" /> объект, представляющий приложение Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-147">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Names.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7a490-148">Возвращает число объектов в коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-148">Returns the number of objects in the collection.</span>
          </span>
          <span data-ttu-id="7a490-149">Только для чтения <b>целое число</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-149">Read-only <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Names.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7a490-150">Возвращает 32-битное целое число, указывающее на приложение, в котором объект был создан.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-150">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
          <span data-ttu-id="7a490-151">Если объект был создан в Microsoft Excel, данное свойство возвращает строку XCEL, что эквивалентно шестнадцатеричный номер 5843454C.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-151">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span>
          </span>
          <span data-ttu-id="7a490-152">Только для чтения <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-152">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="7a490-153">Свойство <para><b>создателя</b> предназначено для использования в Microsoft Excel для Macintosh, где каждое приложение имеет код создателя четырех символов. Например, Microsoft Excel содержит код создателя XCEL.</para><para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-153">
              <para>The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code. For example, Microsoft Excel has the creator code XCEL.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Names.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Name Item (object Index, object IndexLocal, object RefersTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Name Item([in]object Index, [in]object IndexLocal, [in]object RefersTo) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Names.Item(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Item (Optional Index As Object, Optional IndexLocal As Object, Optional RefersTo As Object) As Name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Name</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
        <Parameter Name="IndexLocal" Type="System.Object" />
        <Parameter Name="RefersTo" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="7a490-154">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-154">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="7a490-155">Имя или номер определенное имя должно быть возвращено.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-155">The name or number of the defined name to be returned.</span>
          </span>
        </param>
        <param name="IndexLocal">
          <span data-ttu-id="7a490-156">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-156">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="7a490-157">Имя определенное имя в разделе Язык пользователя.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-157">The name of the defined name in the language of the user.</span>
          </span>
          <span data-ttu-id="7a490-158">Имена не будут переведены при использовании этого аргумента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-158">No names will be translated if you use this argument.</span>
          </span>
        </param>
        <param name="RefersTo">
          <span data-ttu-id="7a490-159">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-159">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="7a490-160">Какое имя относится к.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-160">What the name refers to.</span>
          </span>
          <span data-ttu-id="7a490-161">Этот аргумент используется для определения имени, она ссылается на.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-161">You use this argument to identify a name by what it refers to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a490-162">Возвращает элемент single <see cref="T:Microsoft.Office.Interop.Excel.Name" /> объекта из <see cref="T:Microsoft.Office.Interop.Excel.Names" /> семейства сайтов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-162">Returns a single <see cref="T:Microsoft.Office.Interop.Excel.Name" /> object from a <see cref="T:Microsoft.Office.Interop.Excel.Names" /> collection.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="7a490-163">
            <para>Необходимо указать один и только один из следующих трех аргументов.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-163">
              <para>You must specify one, and only one, of these three arguments.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Names.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7a490-164">Возвращает родительский объект для указанного объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-164">Returns the parent object for the specified object.</span>
          </span>
          <span data-ttu-id="7a490-165">Только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a490-165">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>