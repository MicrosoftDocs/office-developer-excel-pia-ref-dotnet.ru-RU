<Type Name="CellFormat" FullName="Microsoft.Office.Interop.Excel.CellFormat">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bb607767f33cbf4ea76bfc37821ee59c522eeb21" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="09/24/2018" />
    <Meta Name="ms.locfileid" Value="20581174" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface CellFormat" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract CellFormat" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.CellFormat" />
  <TypeSignature Language="VB.NET" Value="Public Interface CellFormat" />
  <TypeSignature Language="C++ CLI" Value="public interface class CellFormat" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00024450-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="118e0-101">Представляет условия поиска для форматирования ячейки.</span>
      <span class="sxs-lookup">
        <span data-stu-id="118e0-101">Represents the search criteria for the cell format.</span>
      </span>
    </summary>
    <remarks>
      <para>
        <span data-ttu-id="118e0-102">Использование <see cref="P:Microsoft.Office.Interop.Excel._Application.FindFormat" /> или <see cref="P:Microsoft.Office.Interop.Excel._Application.ReplaceFormat" /> свойства <see cref="P:Microsoft.Office.Interop.Excel._Application.Application" /> объекта возвращает объект <b>CellFormat</b> .</span>
        <span class="sxs-lookup">
          <span data-stu-id="118e0-102">Use the <see cref="P:Microsoft.Office.Interop.Excel._Application.FindFormat" /> or <see cref="P:Microsoft.Office.Interop.Excel._Application.ReplaceFormat" /> properties of the <see cref="P:Microsoft.Office.Interop.Excel._Application.Application" /> object to return a <b>CellFormat</b> object.</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="118e0-103">Можно использовать <see cref="P:Microsoft.Office.Interop.Excel.CellFormat.Borders" />, <see cref="P:Microsoft.Office.Interop.Excel.CellFormat.Font" />, или <see cref="P:Microsoft.Office.Interop.Excel.CellFormat.Interior" /> свойства объекта <b>CellFormat</b> , чтобы определить критерии поиска для формат ячеек.</span>
        <span class="sxs-lookup">
          <span data-stu-id="118e0-103">You can use the <see cref="P:Microsoft.Office.Interop.Excel.CellFormat.Borders" />, <see cref="P:Microsoft.Office.Interop.Excel.CellFormat.Font" />, or <see cref="P:Microsoft.Office.Interop.Excel.CellFormat.Interior" /> properties of the <b>CellFormat</b> object to define the search criteria for the cell format.</span>
        </span>
      </para>
      <para></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddIndent">
      <MemberSignature Language="C#" Value="public object AddIndent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object AddIndent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.AddIndent" />
      <MemberSignature Language="VB.NET" Value="Public Property AddIndent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ AddIndent { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1063)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1063)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1063)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="118e0-104">
            <b>Значение true,</b> Если текст автоматически с отступом при выравнивания текста в ячейку задано значение равномерного распределения по горизонтали или по вертикали.</span>
          <span class="sxs-lookup">
            <span data-stu-id="118e0-104">
              <b>True</b> if text is automatically indented when the text alignment in a cell is set to equal distribution either horizontally or vertically.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="118e0-105">Чтобы установить равномерное выравнивание текста, можно задать <see cref="P:Microsoft.Office.Interop.Excel.CellFormat.VerticalAlignment" /> свойства <b>xlVAlignDistributed</b> при значение <see cref="P:Microsoft.Office.Interop.Excel.CellFormat.Orientation" /><b>xlVertical</b>— это свойство, а также можно задать <see cref="P:Microsoft.Office.Interop.Excel.CellFormat.HorizontalAlignment" /> свойства <b>xlHAlignDistributed</b> при Свойство <b>Orientation</b> равен <b>xlHorizontal</b>.</span>
            <span class="sxs-lookup">
              <span data-stu-id="118e0-105">To set text alignment to equal distribution, you can set the <see cref="P:Microsoft.Office.Interop.Excel.CellFormat.VerticalAlignment" /> property to <b>xlVAlignDistributed</b> when the value of the <see cref="P:Microsoft.Office.Interop.Excel.CellFormat.Orientation" /> property is <b>xlVertical</b>, and you can set the <see cref="P:Microsoft.Office.Interop.Excel.CellFormat.HorizontalAlignment" /> property to <b>xlHAlignDistributed</b> when the value of the <b>Orientation</b> property is <b>xlHorizontal</b>.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="118e0-106">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Application" /> объект, представляющий приложение Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="118e0-106">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Borders">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Borders Borders { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Borders Borders" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.Borders" />
      <MemberSignature Language="VB.NET" Value="Public Property Borders As Borders" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Borders ^ Borders { Microsoft::Office::Interop::Excel::Borders ^ get(); void set(Microsoft::Office::Interop::Excel::Borders ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(435)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(435)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(435)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Borders</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="118e0-107">Пользователь задает или возвращает параметры поиска на основании формат границы ячейки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="118e0-107">Allows the user to set or return the search criteria based on the cell's border format.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.CellFormat.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(111)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="118e0-108">Очищает критериям, заданным в <see cref="P:Microsoft.Office.Interop.Excel._Application.FindFormat" /> и <see cref="P:Microsoft.Office.Interop.Excel._Application.ReplaceFormat" /> свойства.</span>
          <span class="sxs-lookup">
            <span data-stu-id="118e0-108">Clears the criteria set in the <see cref="P:Microsoft.Office.Interop.Excel._Application.FindFormat" /> and <see cref="P:Microsoft.Office.Interop.Excel._Application.ReplaceFormat" /> properties.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="118e0-109">Возвращает 32-битное целое число, указывающее на приложение, в котором объект был создан.</span>
          <span class="sxs-lookup">
            <span data-stu-id="118e0-109">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="118e0-110">Если объект был создан в Microsoft Excel, данное свойство возвращает строку XCEL, что эквивалентно шестнадцатеричный номер 5843454C.</span>
            <span class="sxs-lookup">
              <span data-stu-id="118e0-110">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="118e0-111">Свойство <b>создателя</b> предназначено для использования в Microsoft Excel для Macintosh, где каждое приложение имеет код создателя четырех символов.</span>
            <span class="sxs-lookup">
              <span data-stu-id="118e0-111">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span>
            </span>
            <span data-ttu-id="118e0-112">Например Microsoft Excel содержит код создателя XCEL.</span>
            <span class="sxs-lookup">
              <span data-stu-id="118e0-112">For example, Microsoft Excel has the creator code XCEL.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Font Font { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Font Font" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.Font" />
      <MemberSignature Language="VB.NET" Value="Public Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Font ^ Font { Microsoft::Office::Interop::Excel::Font ^ get(); void set(Microsoft::Office::Interop::Excel::Font ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(146)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(146)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(146)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="118e0-113">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Font" /> объекта, что позволяет пользователю или установить параметры поиска на основании формат шрифта ячейки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="118e0-113">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Font" /> object, allowing the user to set or return the search criteria based on the cell's font format.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaHidden">
      <MemberSignature Language="C#" Value="public object FormulaHidden { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FormulaHidden" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.FormulaHidden" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaHidden As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FormulaHidden { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(262)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(262)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(262)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="118e0-114">
            <b>Значение true,</b> Если формула будет скрыта при использовании защищенного рабочего листа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="118e0-114">
              <b>True</b> if the formula will be hidden when the worksheet is protected.</span>
          </span>
          <span data-ttu-id="118e0-115">Возвращает <b>значение Null</b> , если указанный диапазон содержит ячейки с <b>FormulaHidden</b> равно <b>True</b> , а некоторые ячейки с помощью <b>FormulaHidden</b> равно <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="118e0-115">Returns <b>Null</b> if the specified range contains some cells with <b>FormulaHidden</b> equal to <b>True</b> and some cells with <b>FormulaHidden</b> equal to <b>False</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="118e0-116">Не следует путать это свойство с <see cref="P:Microsoft.Office.Interop.Excel.Range.Hidden" /> свойство.</span>
            <span class="sxs-lookup">
              <span data-stu-id="118e0-116">Don’t confuse this property with the <see cref="P:Microsoft.Office.Interop.Excel.Range.Hidden" /> property.</span>
            </span>
            <span data-ttu-id="118e0-117">Формула не скрывается, если книга защищена, а не рабочего листа; она будет скрыта только в том случае, если защищенного рабочего листа.</span>
            <span class="sxs-lookup">
              <span data-stu-id="118e0-117">The formula will not be hidden if the workbook is protected and the worksheet is not; it will be hidden only if the worksheet is protected.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalAlignment">
      <MemberSignature Language="C#" Value="public object HorizontalAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object HorizontalAlignment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.HorizontalAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalAlignment As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ HorizontalAlignment { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(136)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(136)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(136)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="118e0-118">Возвращает или задает горизонтальное выравнивание для указанного объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="118e0-118">Returns or sets the horizontal alignment for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="118e0-119">Можно использовать следующие константы:</span>
            <span class="sxs-lookup">
              <span data-stu-id="118e0-119">The following constants can be used:</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="118e0-120">
              <b>xlCenter</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="118e0-120">
                <b>xlCenter</b>
              </span>
            </span>
          </para>
          <para>
            <span data-ttu-id="118e0-121">
              <b>xlDistributed</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="118e0-121">
                <b>xlDistributed</b>
              </span>
            </span>
          </para>
          <para>
            <span data-ttu-id="118e0-122">
              <b>xlJustify</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="118e0-122">
                <b>xlJustify</b>
              </span>
            </span>
          </para>
          <para>
            <span data-ttu-id="118e0-123">
              <b>xlLeft</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="118e0-123">
                <b>xlLeft</b>
              </span>
            </span>
          </para>
          <para>
            <span data-ttu-id="118e0-124">
              <b>xlRight</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="118e0-124">
                <b>xlRight</b>
              </span>
            </span>
          </para>
          <para>
            <span data-ttu-id="118e0-125">Некоторые из этих констант могут быть недоступны, в зависимости от языка Английский (США, например), который установлен или установлен.</span>
            <span class="sxs-lookup">
              <span data-stu-id="118e0-125">Some of these constants may not be available to you, depending on the language support (U.S. English, for example) that you've selected or installed.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndentLevel">
      <MemberSignature Language="C#" Value="public object IndentLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object IndentLevel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.IndentLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentLevel As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ IndentLevel { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(201)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(201)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(201)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="118e0-126">Возвращает или задает уровень отступа для ячейки или диапазона.</span>
          <span class="sxs-lookup">
            <span data-stu-id="118e0-126">Returns or sets the indent level for the cell or range.</span>
          </span>
          <span data-ttu-id="118e0-127">Может быть целым числом в диапазоне от 0 до 15.</span>
          <span class="sxs-lookup">
            <span data-stu-id="118e0-127">Can be an integer from 0 to 15.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="118e0-128">С помощью этого свойства для уровня отступа значение меньше 0 (ноль) или больше 15, возникает ошибка.</span>
            <span class="sxs-lookup">
              <span data-stu-id="118e0-128">Using this property to set the indent level to a number less than 0 (zero) or greater than 15 causes an error.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Interior">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Interior Interior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Interior Interior" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.Interior" />
      <MemberSignature Language="VB.NET" Value="Public Property Interior As Interior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Interior ^ Interior { Microsoft::Office::Interop::Excel::Interior ^ get(); void set(Microsoft::Office::Interop::Excel::Interior ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Interior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="118e0-129">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> объекта разрешение пользователю или установить параметры поиска на основании внутренний формат ячеек.</span>
          <span class="sxs-lookup">
            <span data-stu-id="118e0-129">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object allowing the user to set or return the search criteria based on the cell's interior format.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Locked">
      <MemberSignature Language="C#" Value="public object Locked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Locked" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.Locked" />
      <MemberSignature Language="VB.NET" Value="Public Property Locked As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Locked { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="118e0-130">
            <b>Значение true,</b> Если объект был заблокирован; <b>Значение false,</b> Если объект могут быть изменены после защиты листа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="118e0-130">
              <b>True</b> if the object is locked; <b>False</b> if the object can be modified when the sheet is protected.</span>
          </span>
          <span data-ttu-id="118e0-131">Возвращает <b>значение Null</b> , если указанный диапазон содержит заблокированные и Незаблокированные ячейки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="118e0-131">Returns <b>Null</b> if the specified range contains both locked and unlocked cells.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeCells">
      <MemberSignature Language="C#" Value="public object MergeCells { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object MergeCells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.MergeCells" />
      <MemberSignature Language="VB.NET" Value="Public Property MergeCells As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ MergeCells { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(208)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(208)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(208)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="118e0-132">
            <b>Значение true,</b> Если диапазон или стиля содержит объединенные ячейки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="118e0-132">
              <b>True</b> if the range or style contains merged cells.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="118e0-133">Если выбрать диапазон, который содержит объединенные ячейки, выделенный фрагмент в итоге может отличаться от предполагаемого выбора.</span>
            <span class="sxs-lookup">
              <span data-stu-id="118e0-133">When you select a range that contains merged cells, the resulting selection may be different from the intended selection.</span>
            </span>
            <span data-ttu-id="118e0-134">Использование <see cref="P:Microsoft.Office.Interop.Excel.Range.Address(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object)" /> свойство Проверьте адрес выбранного диапазона.</span>
            <span class="sxs-lookup">
              <span data-stu-id="118e0-134">Use the <see cref="P:Microsoft.Office.Interop.Excel.Range.Address(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object)" /> property to check the address of the selected range.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberFormat">
      <MemberSignature Language="C#" Value="public object NumberFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object NumberFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.NumberFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberFormat As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ NumberFormat { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="118e0-135">Возвращает или задает код формата для объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="118e0-135">Returns or sets the format code for the object.</span>
          </span>
          <span data-ttu-id="118e0-136">Возвращает <b>значение Null</b> , если нет том же формате всем ячейкам в указанном диапазоне.</span>
          <span class="sxs-lookup">
            <span data-stu-id="118e0-136">Returns <b>Null</b> if all cells in the specified range don't have the same number format.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="118e0-137">Код формата является ту же строку как вариант кодов формата в диалоговом окне Формат ячеек.</span>
            <span class="sxs-lookup">
              <span data-stu-id="118e0-137">The format code is the same string as the Format Codes option in the Format Cells dialog box.</span>
            </span>
            <span data-ttu-id="118e0-138">Функция Visual Basic <b>Формат</b> использует строки кода другой формат, чем <b>Формат числа</b> и <see cref="P:Microsoft.Office.Interop.Excel.Range.NumberFormatLocal" /> свойства.</span>
            <span class="sxs-lookup">
              <span data-stu-id="118e0-138">The Visual Basic <b>Format</b> function uses different format code strings than do the <b>NumberFormat</b> and <see cref="P:Microsoft.Office.Interop.Excel.Range.NumberFormatLocal" /> properties.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberFormatLocal">
      <MemberSignature Language="C#" Value="public object NumberFormatLocal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object NumberFormatLocal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.NumberFormatLocal" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberFormatLocal As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ NumberFormatLocal { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1097)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1097)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1097)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="118e0-139">Возвращает или задает код формата для объекта в виде строки на языке пользователя.</span>
          <span class="sxs-lookup">
            <span data-stu-id="118e0-139">Returns or sets the format code for the object as a string in the language of the user.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="118e0-140">Функция Visual Basic <b>Формат</b> использует другой формат кода строки, чем <see cref="P:Microsoft.Office.Interop.Excel.Range.NumberFormat" /> и <b>NumberFormatLocal</b> свойства.</span>
            <span class="sxs-lookup">
              <span data-stu-id="118e0-140">The Visual Basic <b>Format</b> function uses different format code strings than do the <see cref="P:Microsoft.Office.Interop.Excel.Range.NumberFormat" /> and <b>NumberFormatLocal</b> properties.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public object Orientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Orientation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.Orientation" />
      <MemberSignature Language="VB.NET" Value="Public Property Orientation As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Orientation { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(134)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(134)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(134)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="118e0-141">Ориентация текста.</span>
          <span class="sxs-lookup">
            <span data-stu-id="118e0-141">The text orientation.</span>
          </span>
          <span data-ttu-id="118e0-142">Может быть целое число от – 90 до 90 градусов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="118e0-142">Can be an integer value from –90 to 90 degrees.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="118e0-143">Свойство <b>Orientation</b> может иметь одно из следующих констант:</span>
            <span class="sxs-lookup">
              <span data-stu-id="118e0-143">The <b>Orientation</b> property can be one of the following constants:</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="118e0-144">
              <b>xlDownward</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="118e0-144">
                <b>xlDownward</b>
              </span>
            </span>
          </para>
          <para>
            <span data-ttu-id="118e0-145">
              <b>xlHorizontal</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="118e0-145">
                <b>xlHorizontal</b>
              </span>
            </span>
          </para>
          <para>
            <span data-ttu-id="118e0-146">
              <b>xlUpward</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="118e0-146">
                <b>xlUpward</b>
              </span>
            </span>
          </para>
          <para>
            <span data-ttu-id="118e0-147">
              <b>xlVertical</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="118e0-147">
                <b>xlVertical</b>
              </span>
            </span>
          </para>
          <para>
            <span data-ttu-id="118e0-148">Для источников данных OLAP этого свойства для одного поля в иерархии задает направление для других полей в той же иерархии.</span>
            <span class="sxs-lookup">
              <span data-stu-id="118e0-148">For OLAP data sources, setting this property for one field in a hierarchy sets the orientation for the other fields in the same hierarchy.</span>
            </span>
            <span data-ttu-id="118e0-149">На оказании полей аналитики можно только в строк, столбцов и области поля страницы отчета сводной таблицы.</span>
            <span class="sxs-lookup">
              <span data-stu-id="118e0-149">Dimension fields can only be oriented in the row, column, and page field areas of the PivotTable report.</span>
            </span>
            <span data-ttu-id="118e0-150">На оказании мер полей можно только в области данных.</span>
            <span class="sxs-lookup">
              <span data-stu-id="118e0-150">Measure fields can only be oriented in the data area.</span>
            </span>
            <span data-ttu-id="118e0-151">Установка иерархии или данных поля для <b>xlHidden</b> удаляет иерархии или поле из отчета сводной таблицы.</span>
            <span class="sxs-lookup">
              <span data-stu-id="118e0-151">Setting a hierarchy or data field to <b>xlHidden</b> removes the hierarchy or field from the PivotTable report.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="118e0-152">Возвращает родительский объект для указанного объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="118e0-152">Returns the parent object for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShrinkToFit">
      <MemberSignature Language="C#" Value="public object ShrinkToFit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ShrinkToFit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.ShrinkToFit" />
      <MemberSignature Language="VB.NET" Value="Public Property ShrinkToFit As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ShrinkToFit { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(209)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(209)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(209)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="118e0-153">
            <b>Значение true,</b> Если текст автоматически сжимается для соответствия ширине необходимые столбцы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="118e0-153">
              <b>True</b> if text automatically shrinks to fit in the available column width.</span>
          </span>
          <span data-ttu-id="118e0-154">Возвращает <b>значение Null</b> , если это свойство не задано значение такое же значение для всех ячеек в указанном диапазоне.</span>
          <span class="sxs-lookup">
            <span data-stu-id="118e0-154">Returns <b>Null</b> if this property isn’t set to the same value for all cells in the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalAlignment">
      <MemberSignature Language="C#" Value="public object VerticalAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object VerticalAlignment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.VerticalAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property VerticalAlignment As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ VerticalAlignment { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(137)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(137)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(137)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="118e0-155">Возвращает или задает вертикальное выравнивание указанный объект.</span>
          <span class="sxs-lookup">
            <span data-stu-id="118e0-155">Returns or sets the vertical alignment of the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="118e0-156">Свойство <b>ВертикальноеВыравнивание</b> может иметь одно из следующих констант:</span>
            <span class="sxs-lookup">
              <span data-stu-id="118e0-156">The <b>VerticalAlignment</b> property can be one of the following constants:</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="118e0-157">
              <b>xlBottom</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="118e0-157">
                <b>xlBottom</b>
              </span>
            </span>
          </para>
          <para>
            <span data-ttu-id="118e0-158">
              <b>xlCenter</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="118e0-158">
                <b>xlCenter</b>
              </span>
            </span>
          </para>
          <para>
            <span data-ttu-id="118e0-159">
              <b>xlDistributed</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="118e0-159">
                <b>xlDistributed</b>
              </span>
            </span>
          </para>
          <para>
            <span data-ttu-id="118e0-160">
              <b>xlJustify</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="118e0-160">
                <b>xlJustify</b>
              </span>
            </span>
          </para>
          <para>
            <span data-ttu-id="118e0-161">
              <b>xlTop</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="118e0-161">
                <b>xlTop</b>
              </span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WrapText">
      <MemberSignature Language="C#" Value="public object WrapText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object WrapText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.WrapText" />
      <MemberSignature Language="VB.NET" Value="Public Property WrapText As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ WrapText { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(276)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(276)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(276)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="118e0-162">
            <b>Значение true,</b> Если Microsoft Excel переносит текст в объект.</span>
          <span class="sxs-lookup">
            <span data-stu-id="118e0-162">
              <b>True</b> if Microsoft Excel wraps the text in the object.</span>
          </span>
          <span data-ttu-id="118e0-163">Возвращает <b>значение Null</b> , если указанный диапазон содержит несколько ячеек, перенос текста и других ячеек, которые не.</span>
          <span class="sxs-lookup">
            <span data-stu-id="118e0-163">Returns <b>Null</b> if the specified range contains some cells that wrap text and other cells that don’t.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="118e0-164">Microsoft Excel будет изменение высоты строки диапазона, если необходимо вместить текст в диапазоне.</span>
            <span class="sxs-lookup">
              <span data-stu-id="118e0-164">Microsoft Excel will change the row height of the range, if necessary, to accommodate the text in the range.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>