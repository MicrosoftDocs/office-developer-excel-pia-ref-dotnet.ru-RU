<Type Name="Style" FullName="Microsoft.Office.Interop.Excel.Style">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c4f738901e25e0863ca50d9f0bc3e164a839d737" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="50009809" /></Metadata><TypeSignature Language="C#" Value="public interface Style" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Style" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Style" />
  <TypeSignature Language="VB.NET" Value="Public Interface Style" />
  <TypeSignature Language="C++ CLI" Value="public interface class Style" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00020852-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8d5d9-101">Представляет описание стиля для диапазона.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-101">Represents a style description for a range.</span></span></summary>
    <remarks><para><span data-ttu-id="8d5d9-102">Объект <b>Style</b> содержит все атрибуты стиля (шрифт, числовой формат, выравнивание и так далее) в качестве свойств.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-102">The <b>Style</b> object contains all style attributes (font, number format, alignment, and so on) as properties.</span></span> <span data-ttu-id="8d5d9-103">Существует несколько встроенных стилей, в том числе Normal, Currency и Percent.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-103">There are several built-in styles, including Normal, Currency, and Percent.</span></span> <span data-ttu-id="8d5d9-104">Использование объекта <b>Style</b> — это быстрый и эффективный способ одновременного изменения нескольких свойств форматирования ячеек в нескольких ячейках.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-104">Using the <b>Style</b> object is a fast and efficient way to change several cell-formatting properties on multiple cells at the same time.</span></span></para>
      <para><span data-ttu-id="8d5d9-105">Для объекта <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> объект <b>Style</b> является членом <see cref="T:Microsoft.Office.Interop.Excel.Styles" /> коллекции.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-105">For the <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object, the <b>Style</b> object is a member of the <see cref="T:Microsoft.Office.Interop.Excel.Styles" /> collection.</span></span> <span data-ttu-id="8d5d9-106">Коллекция <b>Styles</b> содержит все определенные стили для книги.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-106">The <b>Styles</b> collection contains all the defined styles for the workbook.</span></span></para>
      <para><span data-ttu-id="8d5d9-107">Используйте <see cref="P:Microsoft.Office.Interop.Excel.Range.Style" /> свойство, чтобы вернуть <b>объект Style,</b> используемый с <see cref="T:Microsoft.Office.Interop.Excel.Range" /> объектом.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-107">Use the <see cref="P:Microsoft.Office.Interop.Excel.Range.Style" /> property to return the <b>Style</b> object used with a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span></span></para>
      <para><span data-ttu-id="8d5d9-108">Вы можете изменить внешний вид ячейки, изменив свойства стиля, примененного к этой ячейке.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-108">You can change the appearance of a cell by changing properties of the style applied to that cell.</span></span> <span data-ttu-id="8d5d9-109">Однако следует помнить, что изменение свойства стиля повлияет на все ячейки, уже отформатированные с этим стилем.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-109">Keep in mind, however, that changing a style property will affect all cells already formatted with that style.</span></span></para>
      <para><span data-ttu-id="8d5d9-110">Используйте <b>стили</b>( ), где находится номер индекса стиля или имя, чтобы вернуть один объект Style из коллекции <paramref name="index" /> <paramref name="index" /> стилей <b>книги.</b> <b></b></span><span class="sxs-lookup"><span data-stu-id="8d5d9-110">Use <b>Styles</b>(<paramref name="index" />), where <paramref name="index" /> is the style index number or name, to return a single <b>Style</b> object from the workbook <b>Styles</b> collection.</span></span></para>
      <para><span data-ttu-id="8d5d9-111">Стили сортироваться в алфавитном порядке по имени стиля.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-111">Styles are sorted alphabetically by style name.</span></span> <span data-ttu-id="8d5d9-112">Номер индекса стиля обозначает положение указанного стиля в отсортном списке имен стилей.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-112">The style index number denotes the position of the specified style in the sorted list of style names.</span></span> <span data-ttu-id="8d5d9-113">Styles(1) — это первый стиль в алфавитном списке, а Styles(Styles.Count) — последний в списке.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-113">Styles(1) is the first style in the alphabetic list, and Styles(Styles.Count) is the last one in the list.</span></span></para>
      <para><span data-ttu-id="8d5d9-114">Дополнительные сведения о создании и изменении стиля см. в <see cref="T:Microsoft.Office.Interop.Excel.Styles" /> объекте.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-114">For more information about creating and modifying a style, see the <see cref="T:Microsoft.Office.Interop.Excel.Styles" /> object.</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public string this { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string _Default" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style._Default" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d5d9-115">Зарезервировано для внутреннего использования.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-115">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddIndent">
      <MemberSignature Language="C#" Value="public bool AddIndent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AddIndent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.AddIndent" />
      <MemberSignature Language="VB.NET" Value="Public Property AddIndent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AddIndent { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1063)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1063)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1063)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d5d9-116"><b>Имеет</b> true, если текст автоматически отступит, если выравнивание текста в ячейке равно горизонтальному или вертикальному распределению.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-116"><b>True</b> if text is automatically indented when the text alignment in a cell is set to equal distribution either horizontally or vertically.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="8d5d9-117">Чтобы установить выравнивание текста равным распределению, можно установить для свойства значение <see cref="P:Microsoft.Office.Interop.Excel.Style.VerticalAlignment" /> <b>xlVAlignDistributed,</b> если значение свойства — xlVertical, и можно установить для свойства значение <see cref="P:Microsoft.Office.Interop.Excel.Style.Orientation" /> <b></b> <see cref="P:Microsoft.Office.Interop.Excel.Style.HorizontalAlignment" /> <b>xlHAlignDistributed,</b> когда значение свойства <b>Orientation</b> <b>равно xlHorizontal.</b></span><span class="sxs-lookup"><span data-stu-id="8d5d9-117">To set text alignment to equal distribution, you can set the <see cref="P:Microsoft.Office.Interop.Excel.Style.VerticalAlignment" /> property to <b>xlVAlignDistributed</b> when the value of the <see cref="P:Microsoft.Office.Interop.Excel.Style.Orientation" /> property is <b>xlVertical</b>, and you can set the <see cref="P:Microsoft.Office.Interop.Excel.Style.HorizontalAlignment" /> property to <b>xlHAlignDistributed</b> when the value of the <b>Orientation</b> property is <b>xlHorizontal</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d5d9-118">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Application" /> объект, который представляет приложение Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-118">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Borders">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Borders Borders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Borders Borders" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.Borders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Borders As Borders" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Borders ^ Borders { Microsoft::Office::Interop::Excel::Borders ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(435)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(435)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Borders</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d5d9-119">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Borders" /> коллекцию, представляюную границы стиля.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-119">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Borders" /> collection that represents the borders of a style.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuiltIn">
      <MemberSignature Language="C#" Value="public bool BuiltIn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BuiltIn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.BuiltIn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BuiltIn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BuiltIn { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(553)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(553)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d5d9-120"><b>True,</b> если стиль является встроенным.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-120"><b>True</b> if the style is a built-in style.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d5d9-121">Возвращает 32-битное целое число, указывающее на приложение, в котором объект был создан.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-121">Returns a 32-bit integer that indicates the application in which this object was created.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="8d5d9-122">Если объект был создан в Microsoft Excel, это свойство возвращает строку XCEL, эквивалентную 5843454C.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-122">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span></para>
          <para><span data-ttu-id="8d5d9-123">Свойство <b>Creator</b> предназначено для использования в Microsoft Excel для Macintosh, где каждое приложение имеет четырех символьный код создателя.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-123">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="8d5d9-124">Например, в Microsoft Excel есть код создателя XCEL.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-124">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public object Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Style.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d5d9-125">Удаляет объект.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-125">Deletes the object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Font Font { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Font Font" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.Font" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Font ^ Font { Microsoft::Office::Interop::Excel::Font ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(146)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(146)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d5d9-126">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Font" /> объект, который представляет шрифт указанного объекта.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-126">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Font" /> object that represents the font of the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaHidden">
      <MemberSignature Language="C#" Value="public bool FormulaHidden { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FormulaHidden" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.FormulaHidden" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaHidden As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FormulaHidden { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(262)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(262)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(262)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d5d9-127"><b>Имеет</b> true, если формула будет скрыта при защите таблицы.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-127"><b>True</b> if the formula will be hidden when the worksheet is protected.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="8d5d9-128">Не путайте это свойство со <see cref="P:Microsoft.Office.Interop.Excel.Range.Hidden" /> свойством.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-128">Don’t confuse this property with the <see cref="P:Microsoft.Office.Interop.Excel.Range.Hidden" /> property.</span></span> <span data-ttu-id="8d5d9-129">Формула не будет скрыта, если книга защищена, а таблица — нет, но только в том случае, если она защищена.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-129">The formula will not be hidden if the workbook is protected and the worksheet is not, but only if the worksheet is protected.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalAlignment">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlHAlign HorizontalAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlHAlign HorizontalAlignment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.HorizontalAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalAlignment As XlHAlign" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlHAlign HorizontalAlignment { Microsoft::Office::Interop::Excel::XlHAlign get(); void set(Microsoft::Office::Interop::Excel::XlHAlign value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(136)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(136)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(136)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlHAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d5d9-130">Возвращает или задает горизонтальное выравнивание для указанного объекта.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-130">Returns or sets the horizontal alignment for the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="8d5d9-131">
            <see cref="T:Microsoft.Office.Interop.Excel.XlHAlign" />может быть одной из следующих <b>констант XlHAlign:</b></span><span class="sxs-lookup"><span data-stu-id="8d5d9-131">
            <see cref="T:Microsoft.Office.Interop.Excel.XlHAlign" /> can be one of the following <b>XlHAlign</b> constants:</span></span></para>
          <para><span data-ttu-id="8d5d9-132">
            <b>xlHAlignCenter</b>
          </span><span class="sxs-lookup"><span data-stu-id="8d5d9-132">
            <b>xlHAlignCenter</b>
          </span></span></para>
          <para><span data-ttu-id="8d5d9-133">
            <b>xlHAlignCenterAcrossSelection</b>
          </span><span class="sxs-lookup"><span data-stu-id="8d5d9-133">
            <b>xlHAlignCenterAcrossSelection</b>
          </span></span></para>
          <para><span data-ttu-id="8d5d9-134">
            <b>xlHAlignDistributed</b>
          </span><span class="sxs-lookup"><span data-stu-id="8d5d9-134">
            <b>xlHAlignDistributed</b>
          </span></span></para>
          <para><span data-ttu-id="8d5d9-135">
            <b>xlHAlignFill</b>
          </span><span class="sxs-lookup"><span data-stu-id="8d5d9-135">
            <b>xlHAlignFill</b>
          </span></span></para>
          <para><span data-ttu-id="8d5d9-136">
            <b>xlHAlignGeneral</b>
          </span><span class="sxs-lookup"><span data-stu-id="8d5d9-136">
            <b>xlHAlignGeneral</b>
          </span></span></para>
          <para><span data-ttu-id="8d5d9-137">
            <b>xlHAlignJustify</b>
          </span><span class="sxs-lookup"><span data-stu-id="8d5d9-137">
            <b>xlHAlignJustify</b>
          </span></span></para>
          <para><span data-ttu-id="8d5d9-138">
            <b>xlHAlignLeft</b>
          </span><span class="sxs-lookup"><span data-stu-id="8d5d9-138">
            <b>xlHAlignLeft</b>
          </span></span></para>
          <para><span data-ttu-id="8d5d9-139">
            <b>xlHAlignRight</b>
          </span><span class="sxs-lookup"><span data-stu-id="8d5d9-139">
            <b>xlHAlignRight</b>
          </span></span></para>
          <para><span data-ttu-id="8d5d9-140">Некоторые из этих констант могут быть недоступны вам, в зависимости от выбранной или установленной языковой поддержки (например, для английского (США).</span><span class="sxs-lookup"><span data-stu-id="8d5d9-140">Some of these constants may not be available to you, depending on the language support (U.S. English, for example) that you've selected or installed.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeAlignment">
      <MemberSignature Language="C#" Value="public bool IncludeAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeAlignment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.IncludeAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeAlignment As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeAlignment { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(413)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(413)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(413)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d5d9-141"><b>True,</b> если стиль включает <see cref="P:Microsoft.Office.Interop.Excel.Style.AddIndent" /> <see cref="P:Microsoft.Office.Interop.Excel.Style.HorizontalAlignment" /> свойства , <see cref="P:Microsoft.Office.Interop.Excel.Style.VerticalAlignment" /> <see cref="P:Microsoft.Office.Interop.Excel.Style.WrapText" /> <see cref="P:Microsoft.Office.Interop.Excel.Style.Orientation" /> и.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-141"><b>True</b> if the style includes the <see cref="P:Microsoft.Office.Interop.Excel.Style.AddIndent" />, <see cref="P:Microsoft.Office.Interop.Excel.Style.HorizontalAlignment" />, <see cref="P:Microsoft.Office.Interop.Excel.Style.VerticalAlignment" />, <see cref="P:Microsoft.Office.Interop.Excel.Style.WrapText" />, and <see cref="P:Microsoft.Office.Interop.Excel.Style.Orientation" /> properties.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeBorder">
      <MemberSignature Language="C#" Value="public bool IncludeBorder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeBorder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.IncludeBorder" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeBorder As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeBorder { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(414)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(414)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(414)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d5d9-142"><b>True,</b> если стиль содержит <see cref="P:Microsoft.Office.Interop.Excel.Border.Color" /> свойства , , и <see cref="P:Microsoft.Office.Interop.Excel.Border.ColorIndex" /> <see cref="P:Microsoft.Office.Interop.Excel.Border.LineStyle" /> <see cref="P:Microsoft.Office.Interop.Excel.Border.Weight" /> границы.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-142"><b>True</b> if the style includes the <see cref="P:Microsoft.Office.Interop.Excel.Border.Color" />, <see cref="P:Microsoft.Office.Interop.Excel.Border.ColorIndex" />, <see cref="P:Microsoft.Office.Interop.Excel.Border.LineStyle" />, and <see cref="P:Microsoft.Office.Interop.Excel.Border.Weight" /> border properties.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeFont">
      <MemberSignature Language="C#" Value="public bool IncludeFont { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeFont" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.IncludeFont" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeFont As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeFont { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(415)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(415)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(415)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d5d9-143"><b>True,</b> если стиль включает свойства <see cref="P:Microsoft.Office.Interop.Excel.Font.Background" /> <see cref="P:Microsoft.Office.Interop.Excel.Font.Bold" /> , <see cref="P:Microsoft.Office.Interop.Excel.Font.Color" /> <see cref="P:Microsoft.Office.Interop.Excel.Font.ColorIndex" /> и <see cref="P:Microsoft.Office.Interop.Excel.Font.FontStyle" /> <see cref="P:Microsoft.Office.Interop.Excel.Font.Italic" /> <see cref="P:Microsoft.Office.Interop.Excel.Font.Name" /> <see cref="P:Microsoft.Office.Interop.Excel.Font.OutlineFont" /> <see cref="P:Microsoft.Office.Interop.Excel.Font.Shadow" /> <see cref="P:Microsoft.Office.Interop.Excel.Font.Size" /> <see cref="P:Microsoft.Office.Interop.Excel.Font.Strikethrough" /> <see cref="P:Microsoft.Office.Interop.Excel.Font.Subscript" /> <see cref="P:Microsoft.Office.Interop.Excel.Font.Superscript" /> <see cref="P:Microsoft.Office.Interop.Excel.Font.Underline" /> шрифта.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-143"><b>True</b> if the style includes the <see cref="P:Microsoft.Office.Interop.Excel.Font.Background" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.Bold" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.Color" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.ColorIndex" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.FontStyle" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.Italic" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.Name" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.OutlineFont" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.Shadow" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.Size" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.Strikethrough" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.Subscript" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.Superscript" />, and <see cref="P:Microsoft.Office.Interop.Excel.Font.Underline" /> font properties.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeNumber">
      <MemberSignature Language="C#" Value="public bool IncludeNumber { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeNumber" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.IncludeNumber" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeNumber As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeNumber { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(416)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(416)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(416)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d5d9-144">True, если стиль содержит <see cref="P:Microsoft.Office.Interop.Excel.Style.NumberFormat" /> свойство.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-144">True if the style includes the <see cref="P:Microsoft.Office.Interop.Excel.Style.NumberFormat" /> property.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludePatterns">
      <MemberSignature Language="C#" Value="public bool IncludePatterns { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludePatterns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.IncludePatterns" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludePatterns As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludePatterns { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(417)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(417)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(417)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d5d9-145"><b>True,</b> если стиль включает свойства <see cref="P:Microsoft.Office.Interop.Excel.Interior.Color" /> <see cref="P:Microsoft.Office.Interop.Excel.Interior.ColorIndex" /> , и <see cref="P:Microsoft.Office.Interop.Excel.Interior.InvertIfNegative" /> <see cref="P:Microsoft.Office.Interop.Excel.Interior.Pattern" /> <see cref="P:Microsoft.Office.Interop.Excel.Interior.PatternColor" /> <see cref="P:Microsoft.Office.Interop.Excel.Interior.PatternColorIndex" /> внутренних.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-145"><b>True</b> if the style includes the <see cref="P:Microsoft.Office.Interop.Excel.Interior.Color" />, <see cref="P:Microsoft.Office.Interop.Excel.Interior.ColorIndex" />, <see cref="P:Microsoft.Office.Interop.Excel.Interior.InvertIfNegative" />, <see cref="P:Microsoft.Office.Interop.Excel.Interior.Pattern" />, <see cref="P:Microsoft.Office.Interop.Excel.Interior.PatternColor" />, and <see cref="P:Microsoft.Office.Interop.Excel.Interior.PatternColorIndex" /> interior properties.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeProtection">
      <MemberSignature Language="C#" Value="public bool IncludeProtection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeProtection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.IncludeProtection" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeProtection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeProtection { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(418)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(418)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(418)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d5d9-146"><b>True,</b> если стиль включает свойства <see cref="P:Microsoft.Office.Interop.Excel.Style.FormulaHidden" /> <see cref="P:Microsoft.Office.Interop.Excel.Style.Locked" /> и свойства.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-146"><b>True</b> if the style includes the <see cref="P:Microsoft.Office.Interop.Excel.Style.FormulaHidden" /> and <see cref="P:Microsoft.Office.Interop.Excel.Style.Locked" /> properties.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndentLevel">
      <MemberSignature Language="C#" Value="public int IndentLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IndentLevel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.IndentLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int IndentLevel { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(201)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(201)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(201)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d5d9-147">Возвращает или задает уровень отступа для стиля.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-147">Returns or sets the indent level for the style.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="8d5d9-148">Использование этого свойства для применения уровня отступа к числу меньше 0 (ноль) или больше 15 приводит к ошибке.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-148">Using this property to set the indent level to a number less than 0 (zero) or greater than 15 causes an error.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Interior">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Interior Interior { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Interior Interior" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.Interior" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Interior As Interior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Interior ^ Interior { Microsoft::Office::Interop::Excel::Interior ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Interior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d5d9-149">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> объект, который представляет внутреннюю часть указанного объекта.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-149">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object that represents the interior of the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Locked">
      <MemberSignature Language="C#" Value="public bool Locked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Locked" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.Locked" />
      <MemberSignature Language="VB.NET" Value="Public Property Locked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Locked { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d5d9-150"><b>Имеет</b> true, если объект заблокирован; <b>False,</b> если объект можно изменить при защите листа.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-150"><b>True</b> if the object is locked; <b>False</b> if the object can be modified when the sheet is protected.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeCells">
      <MemberSignature Language="C#" Value="public object MergeCells { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object MergeCells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.MergeCells" />
      <MemberSignature Language="VB.NET" Value="Public Property MergeCells As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ MergeCells { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(208)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(208)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(208)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d5d9-151"><b>Имеет</b> true, если стиль содержит объединенные ячейки.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-151"><b>True</b> if the style contains merged cells.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="8d5d9-152">При выборе диапазона, который содержит объединенные ячейки, итоговая выборка может быть отличается от выбранного.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-152">When you select a range that contains merged cells, the resulting selection may be different from the intended selection.</span></span> <span data-ttu-id="8d5d9-153">Используйте свойство <see cref="P:Microsoft.Office.Interop.Excel.Range.Address(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object)" /> для проверки адреса выбранного диапазона.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-153">Use the <see cref="P:Microsoft.Office.Interop.Excel.Range.Address(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object)" /> property to check the address of the selected range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d5d9-154">Возвращает имя объекта.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-154">Returns the name of the object.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="8d5d9-155">В следующей таблице показаны примеры значений свойства <b>Name</b> и связанных свойств, задав источник данных с уникальным именем "[Europe]. [Франция]. [Paris]" и источник данных без OLAP с именем элемента "Paris".</span><span class="sxs-lookup"><span data-stu-id="8d5d9-155">The following table shows example values of the <b>Name</b> property and related properties given an  data source with the unique name "[Europe].[France].[Paris]" and a non-OLAP data source with the item name "Paris".</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="8d5d9-156">
                <b>Заголовок</b>
              </span><span class="sxs-lookup"><span data-stu-id="8d5d9-156">
                <b>Caption</b>
              </span></span></term>
              <description><span data-ttu-id="8d5d9-157">Париж</span><span class="sxs-lookup"><span data-stu-id="8d5d9-157">Paris</span></span></description>
              <description><span data-ttu-id="8d5d9-158">Париж</span><span class="sxs-lookup"><span data-stu-id="8d5d9-158">Paris</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="8d5d9-159">
                <b>Имя</b>
              </span><span class="sxs-lookup"><span data-stu-id="8d5d9-159">
                <b>Name</b>
              </span></span></term>
              <description><span data-ttu-id="8d5d9-160">[Европа]. [Франция]. [Paris] (только для чтения)</span><span class="sxs-lookup"><span data-stu-id="8d5d9-160">[Europe].[France].[Paris] (read-only)</span></span></description>
              <description><span data-ttu-id="8d5d9-161">Париж</span><span class="sxs-lookup"><span data-stu-id="8d5d9-161">Paris</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="8d5d9-162">
                <b>SourceName</b>
              </span><span class="sxs-lookup"><span data-stu-id="8d5d9-162">
                <b>SourceName</b>
              </span></span></term>
              <description><span data-ttu-id="8d5d9-163">[Европа]. [Франция]. [Paris] (только для чтения)</span><span class="sxs-lookup"><span data-stu-id="8d5d9-163">[Europe].[France].[Paris] (read-only)</span></span></description>
              <description><span data-ttu-id="8d5d9-164">(То же, SQL значение свойства, только для чтения)</span><span class="sxs-lookup"><span data-stu-id="8d5d9-164">(Same as SQL property value, read-only)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="8d5d9-165">
                <b>Значение</b>
              </span><span class="sxs-lookup"><span data-stu-id="8d5d9-165">
                <b>Value</b>
              </span></span></term>
              <description><span data-ttu-id="8d5d9-166">[Европа]. [Франция]. [Paris] (только для чтения)</span><span class="sxs-lookup"><span data-stu-id="8d5d9-166">[Europe].[France].[Paris] (read-only)</span></span></description>
              <description><span data-ttu-id="8d5d9-167">Париж</span><span class="sxs-lookup"><span data-stu-id="8d5d9-167">Paris</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="8d5d9-168">При указании индекса в коллекции можно использовать синтаксис, <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> показанный в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-168">When specifying an index into the <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> collection, you can use the syntax shown in the following table.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="8d5d9-169">выражение. PivotItems("[Europe].[ Франция]. [Paris]")</span><span class="sxs-lookup"><span data-stu-id="8d5d9-169">expression.PivotItems("[Europe].[France].[Paris]")</span></span></term>
              <description><span data-ttu-id="8d5d9-170">выражение. PivotItems("Paris")</span><span class="sxs-lookup"><span data-stu-id="8d5d9-170">expression.PivotItems("Paris")</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="8d5d9-171">При использовании свойства для ссылки на определенный член коллекции можно использовать имя текстового индекса, как показано <see cref="M:Microsoft.Office.Interop.Excel.PivotItems.Item(System.Object)" /> в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-171">When using the <see cref="M:Microsoft.Office.Interop.Excel.PivotItems.Item(System.Object)" /> property to reference a specific member of a collection, you can use the text index name as shown in the following table.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="8d5d9-172">[Европа]. [Франция]. [Paris]</span><span class="sxs-lookup"><span data-stu-id="8d5d9-172">[Europe].[France].[Paris]</span></span></term>
              <description><span data-ttu-id="8d5d9-173">Париж</span><span class="sxs-lookup"><span data-stu-id="8d5d9-173">Paris</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="NameLocal">
      <MemberSignature Language="C#" Value="public string NameLocal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NameLocal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.NameLocal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NameLocal As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NameLocal { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(937)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(937)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d5d9-174">Возвращает имя объекта на языке пользователя.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-174">Returns the name of the object in the language of the user.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="8d5d9-175">Если стиль является встроенным, это свойство возвращает имя стиля на языке текущего языка.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-175">If the style is a built-in style, this property returns the name of the style in the language of the current locale.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberFormat">
      <MemberSignature Language="C#" Value="public string NumberFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NumberFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.NumberFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberFormat As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NumberFormat { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d5d9-176">Возвращает или задает код формата для объекта.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-176">Returns or sets the format code for the object.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="8d5d9-177">Код формата – это строка в параметрах Коды форматов в диалоговом окне Формат ячеек.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-177">The format code is the same string as the Format Codes option in the Format Cells dialog box.</span></span> <span data-ttu-id="8d5d9-178">Функция <b>Format</b> использует различные строки кода формата, чем <b>NumberFormat</b> <see cref="P:Microsoft.Office.Interop.Excel.Style.NumberFormatLocal" /> и свойства.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-178">The <b>Format</b> function uses different format code strings than do the <b>NumberFormat</b> and <see cref="P:Microsoft.Office.Interop.Excel.Style.NumberFormatLocal" /> properties.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberFormatLocal">
      <MemberSignature Language="C#" Value="public string NumberFormatLocal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NumberFormatLocal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.NumberFormatLocal" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberFormatLocal As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NumberFormatLocal { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1097)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1097)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1097)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d5d9-179">Возвращает или задает код формата для объекта в виде строки на языке пользователя.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-179">Returns or sets the format code for the object as a string in the language of the user.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="8d5d9-180">Функция <b>Format</b> использует другие строки кода формата, чем свойства <see cref="P:Microsoft.Office.Interop.Excel.Style.NumberFormat" /> <b>NumberFormatLocal.</b></span><span class="sxs-lookup"><span data-stu-id="8d5d9-180">The <b>Format</b> function uses different format code strings than do the <see cref="P:Microsoft.Office.Interop.Excel.Style.NumberFormat" /> and <b>NumberFormatLocal</b> properties.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlOrientation Orientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlOrientation Orientation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.Orientation" />
      <MemberSignature Language="VB.NET" Value="Public Property Orientation As XlOrientation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlOrientation Orientation { Microsoft::Office::Interop::Excel::XlOrientation get(); void set(Microsoft::Office::Interop::Excel::XlOrientation value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(134)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(134)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(134)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlOrientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d5d9-181">Ориентация текста.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-181">The text orientation.</span></span> <span data-ttu-id="8d5d9-182">Может быть значением от –90 до 90 градусов или одной из <see cref="T:Microsoft.Office.Interop.Excel.XlOrientation" /> констант.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-182">Can be an integer value from –90 to 90 degrees or one of the <see cref="T:Microsoft.Office.Interop.Excel.XlOrientation" /> constants.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="8d5d9-183">
            <b>XlOrientation</b> может быть одной из следующих констант:</span><span class="sxs-lookup"><span data-stu-id="8d5d9-183">
            <b>XlOrientation</b> can be one of the following constants:</span></span></para>
          <para><span data-ttu-id="8d5d9-184">
            <b>xlDownward</b>
          </span><span class="sxs-lookup"><span data-stu-id="8d5d9-184">
            <b>xlDownward</b>
          </span></span></para>
          <para><span data-ttu-id="8d5d9-185">
            <b>xlUpward</b>
          </span><span class="sxs-lookup"><span data-stu-id="8d5d9-185">
            <b>xlUpward</b>
          </span></span></para>
          <para><span data-ttu-id="8d5d9-186">
            <b>xlHorizontal</b>
          </span><span class="sxs-lookup"><span data-stu-id="8d5d9-186">
            <b>xlHorizontal</b>
          </span></span></para>
          <para><span data-ttu-id="8d5d9-187">
            <b>xlVertical</b>
          </span><span class="sxs-lookup"><span data-stu-id="8d5d9-187">
            <b>xlVertical</b>
          </span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d5d9-188">Возвращает родительский объект для указанного объекта.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-188">Returns the parent object for the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadingOrder">
      <MemberSignature Language="C#" Value="public int ReadingOrder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadingOrder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.ReadingOrder" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadingOrder As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReadingOrder { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(975)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(975)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(975)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d5d9-189">Возвращает или задает порядок чтения для указанного объекта.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-189">Returns or sets the reading order for the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="8d5d9-190">Свойство <b>ReadingOrder</b> может быть одной из следующих констант: <b>xlRTL</b> (справа налево), <b>xlLTR</b> (слева направо) или <b>xlContext</b>.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-190">The <b>ReadingOrder</b> property can be one of the following constants: <b>xlRTL</b> (right-to-left), <b>xlLTR</b> (left-to-right), or <b>xlContext</b>.</span></span></para>
          <para><span data-ttu-id="8d5d9-191">Некоторые из этих констант могут быть недоступны вам, в зависимости от выбранной или установленной языковой поддержки (например, для английского (США).</span><span class="sxs-lookup"><span data-stu-id="8d5d9-191">Some of these constants may not be available to you, depending on the language support (U.S. English, for example) that you've selected or installed.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ShrinkToFit">
      <MemberSignature Language="C#" Value="public bool ShrinkToFit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShrinkToFit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.ShrinkToFit" />
      <MemberSignature Language="VB.NET" Value="Public Property ShrinkToFit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShrinkToFit { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(209)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(209)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(209)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d5d9-192"><b>Имеет</b> true, если текст автоматически сжимается в доступной ширине столбца.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-192"><b>True</b> if text automatically shrinks to fit in the available column width.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d5d9-193">Имя указанного стиля.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-193">The name of the specified style.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalAlignment">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlVAlign VerticalAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlVAlign VerticalAlignment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.VerticalAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property VerticalAlignment As XlVAlign" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlVAlign VerticalAlignment { Microsoft::Office::Interop::Excel::XlVAlign get(); void set(Microsoft::Office::Interop::Excel::XlVAlign value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(137)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(137)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(137)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlVAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d5d9-194">Возвращает или задает вертикальное выравнивание указанного объекта.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-194">Returns or sets the vertical alignment of the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="8d5d9-195">
            <see cref="T:Microsoft.Office.Interop.Excel.XlVAlign" />может быть одной из следующих <b>констант XlVAlign:</b></span><span class="sxs-lookup"><span data-stu-id="8d5d9-195">
            <see cref="T:Microsoft.Office.Interop.Excel.XlVAlign" /> can be one of the following <b>XlVAlign</b> constants:</span></span></para>
          <para><span data-ttu-id="8d5d9-196">
            <b>xlVAlignCenter</b>
          </span><span class="sxs-lookup"><span data-stu-id="8d5d9-196">
            <b>xlVAlignCenter</b>
          </span></span></para>
          <para><span data-ttu-id="8d5d9-197">
            <b>xlVAlignJustify</b>
          </span><span class="sxs-lookup"><span data-stu-id="8d5d9-197">
            <b>xlVAlignJustify</b>
          </span></span></para>
          <para><span data-ttu-id="8d5d9-198">
            <b>xlVAlignBottom</b>
          </span><span class="sxs-lookup"><span data-stu-id="8d5d9-198">
            <b>xlVAlignBottom</b>
          </span></span></para>
          <para><span data-ttu-id="8d5d9-199">
            <b>xlVAlignDistributed</b>
          </span><span class="sxs-lookup"><span data-stu-id="8d5d9-199">
            <b>xlVAlignDistributed</b>
          </span></span></para>
          <para><span data-ttu-id="8d5d9-200">
            <b>xlVAlignTop</b>
          </span><span class="sxs-lookup"><span data-stu-id="8d5d9-200">
            <b>xlVAlignTop</b>
          </span></span></para>
          <para><span data-ttu-id="8d5d9-201">Некоторые из этих констант могут быть недоступны вам, в зависимости от выбранной или установленной языковой поддержки (например, для английского (США).</span><span class="sxs-lookup"><span data-stu-id="8d5d9-201">Some of these constants may not be available to you, depending on the language support (U.S. English, for example) that you've selected or installed.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="WrapText">
      <MemberSignature Language="C#" Value="public bool WrapText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WrapText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.WrapText" />
      <MemberSignature Language="VB.NET" Value="Public Property WrapText As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WrapText { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(276)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(276)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(276)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d5d9-202"><b>True,</b> если Microsoft Excel обтекает текст в объекте.</span><span class="sxs-lookup"><span data-stu-id="8d5d9-202"><b>True</b> if Microsoft Excel wraps the text in the object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>