<Type Name="Protection" FullName="Microsoft.Office.Interop.Excel.Protection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f9996163076ffe6bcb7674a54fe7b673141d992b" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="50010796" /></Metadata><TypeSignature Language="C#" Value="public interface Protection" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Protection" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Protection" />
  <TypeSignature Language="VB.NET" Value="Public Interface Protection" />
  <TypeSignature Language="C++ CLI" Value="public interface class Protection" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00024467-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2fa75-101">Представляет различные типы параметров защиты, доступных для таблицы.</span><span class="sxs-lookup"><span data-stu-id="2fa75-101">Represents the various types of protection options available for a worksheet.</span></span></summary>
    <remarks><para><span data-ttu-id="2fa75-102">Используйте свойство <see cref="P:Microsoft.Office.Interop.Excel._Worksheet.Protection" /> объекта для возврата объекта <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> <b>Protection.</b></span><span class="sxs-lookup"><span data-stu-id="2fa75-102">Use the <see cref="P:Microsoft.Office.Interop.Excel._Worksheet.Protection" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object to return a <b>Protection</b> object.</span></span></para>
      <para><span data-ttu-id="2fa75-103">После возврата <b>объекта Protection</b> можно использовать следующие свойства для настройки или возврата параметров защиты:</span><span class="sxs-lookup"><span data-stu-id="2fa75-103">Once a <b>Protection</b> object is returned, you can use the following properties to set or return protection options:</span></span></para>
      <list type="bullet">
        <item>
          <description>
            <see cref="P:Microsoft.Office.Interop.Excel.Protection.AllowDeletingColumns" />
          </description>
        </item>
        <item>
          <description>
            <see cref="P:Microsoft.Office.Interop.Excel.Protection.AllowDeletingRows" />
          </description>
        </item>
        <item>
          <description>
            <see cref="P:Microsoft.Office.Interop.Excel.Protection.AllowFiltering" />
          </description>
        </item>
        <item>
          <description>
            <see cref="P:Microsoft.Office.Interop.Excel.Protection.AllowFormattingCells" />
          </description>
        </item>
        <item>
          <description>
            <see cref="P:Microsoft.Office.Interop.Excel.Protection.AllowFormattingColumns" />
          </description>
        </item>
        <item>
          <description>
            <see cref="P:Microsoft.Office.Interop.Excel.Protection.AllowFormattingRows" />
          </description>
        </item>
        <item>
          <description>
            <see cref="P:Microsoft.Office.Interop.Excel.Protection.AllowInsertingColumns" />
          </description>
        </item>
        <item>
          <description>
            <see cref="P:Microsoft.Office.Interop.Excel.Protection.AllowInsertingHyperlinks" />
          </description>
        </item>
        <item>
          <description>
            <see cref="P:Microsoft.Office.Interop.Excel.Protection.AllowInsertingRows" />
          </description>
        </item>
        <item>
          <description>
            <see cref="P:Microsoft.Office.Interop.Excel.Protection.AllowSorting" />
          </description>
        </item>
        <item>
          <description>
            <see cref="P:Microsoft.Office.Interop.Excel.Protection.AllowUsingPivotTables" />
          </description>
        </item>
      </list>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="AllowDeletingColumns">
      <MemberSignature Language="C#" Value="public bool AllowDeletingColumns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDeletingColumns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Protection.AllowDeletingColumns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowDeletingColumns As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowDeletingColumns { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2038)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2038)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2fa75-104">Возвращает <b>true,</b> если удаление столбцов разрешено на защищенной таблице.</span><span class="sxs-lookup"><span data-stu-id="2fa75-104">Returns <b>True</b> if the deletion of columns is allowed on a protected worksheet.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="2fa75-105">Свойство <b>AllowDeletingColumns</b> можно настроить с помощью <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> аргументов метода.</span><span class="sxs-lookup"><span data-stu-id="2fa75-105">The <b>AllowDeletingColumns</b> property can be set by using the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> method arguments.</span></span></para>
          <para><span data-ttu-id="2fa75-106">Столбцы, содержащие удаляемые ячейки, должны быть разблокированы при защите листа.</span><span class="sxs-lookup"><span data-stu-id="2fa75-106">The columns containing the cells to be deleted must be unlocked when the sheet is protected.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDeletingRows">
      <MemberSignature Language="C#" Value="public bool AllowDeletingRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDeletingRows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Protection.AllowDeletingRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowDeletingRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowDeletingRows { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2039)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2039)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2fa75-107">Возвращает <b>true,</b> если удаление строк разрешено для защищенного таблицы.</span><span class="sxs-lookup"><span data-stu-id="2fa75-107">Returns <b>True</b> if the deletion of rows is allowed on a protected worksheet.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="2fa75-108">Свойство <b>AllowDeletingRows</b> можно настроить с помощью <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> аргументов метода.</span><span class="sxs-lookup"><span data-stu-id="2fa75-108">The <b>AllowDeletingRows</b> property can be set by using the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> method arguments.</span></span></para>
          <para><span data-ttu-id="2fa75-109">Строки, содержащие удаляемую ячейку, должны быть разблокированы при защите листа.</span><span class="sxs-lookup"><span data-stu-id="2fa75-109">The rows containing the cells to be deleted must be unlocked when the sheet is protected.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowEditRanges">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.AllowEditRanges AllowEditRanges { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.AllowEditRanges AllowEditRanges" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Protection.AllowEditRanges" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowEditRanges As AllowEditRanges" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::AllowEditRanges ^ AllowEditRanges { Microsoft::Office::Interop::Excel::AllowEditRanges ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2236)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2236)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.AllowEditRanges</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2fa75-110">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.AllowEditRanges" /> объект.</span><span class="sxs-lookup"><span data-stu-id="2fa75-110">Returns an <see cref="T:Microsoft.Office.Interop.Excel.AllowEditRanges" /> object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowFiltering">
      <MemberSignature Language="C#" Value="public bool AllowFiltering { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowFiltering" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Protection.AllowFiltering" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowFiltering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowFiltering { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2041)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2041)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2fa75-111">Возвращает <b>true,</b> если пользователю разрешено использовать автофайл, созданный до защиты листа.</span><span class="sxs-lookup"><span data-stu-id="2fa75-111">Returns <b>True</b> if the user is allowed to make use of an AutoFilter that was created before the sheet was protected.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="2fa75-112">Свойство <b>AllowFiltering</b> можно установить с помощью <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> аргументов метода.</span><span class="sxs-lookup"><span data-stu-id="2fa75-112">The <b>AllowFiltering</b> property can be set by using the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> method arguments.</span></span></para>
          <para><span data-ttu-id="2fa75-113">Свойство <b>AllowFiltering</b> позволяет пользователю изменять условия фильтрации для существующего автофильтра.</span><span class="sxs-lookup"><span data-stu-id="2fa75-113">The <b>AllowFiltering</b> property allows the user to change filter criteria on an existing AutoFilter.</span></span> <span data-ttu-id="2fa75-114">Пользователь не может создать или удалить автофайл на защищенной таблице.</span><span class="sxs-lookup"><span data-stu-id="2fa75-114">The user cannot create or remove an AutoFilter on a protected worksheet.</span></span></para>
          <para><span data-ttu-id="2fa75-115">Ячейки, которые необходимо отфильтровать, должны быть разблокированы при защите листа.</span><span class="sxs-lookup"><span data-stu-id="2fa75-115">The cells to be filtered must be unlocked when the sheet is protected.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowFormattingCells">
      <MemberSignature Language="C#" Value="public bool AllowFormattingCells { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowFormattingCells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Protection.AllowFormattingCells" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowFormattingCells As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowFormattingCells { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2032)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2032)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2fa75-116">Возвращает <b>true,</b> если форматирование ячеек разрешено для защищенного таблицы.</span><span class="sxs-lookup"><span data-stu-id="2fa75-116">Returns <b>True</b> if the formatting of cells is allowed on a protected worksheet.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="2fa75-117">Свойство <b>AllowFormattingCells</b> можно настроить с помощью <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> аргументов метода.</span><span class="sxs-lookup"><span data-stu-id="2fa75-117">The <b>AllowFormattingCells</b> property can be set by using the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> method arguments.</span></span></para>
          <para><span data-ttu-id="2fa75-118">Использование этого свойства отключает вкладку защиты, позволяя пользователю изменять все форматы, но не разблокировать или отменить диапазоны.</span><span class="sxs-lookup"><span data-stu-id="2fa75-118">Use of this property disables the protection tab, allowing the user to change all formats but not to unlock or unhide ranges.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowFormattingColumns">
      <MemberSignature Language="C#" Value="public bool AllowFormattingColumns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowFormattingColumns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Protection.AllowFormattingColumns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowFormattingColumns As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowFormattingColumns { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2033)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2033)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2fa75-119">Возвращает <b>true,</b> если форматирование столбцов разрешено для защищенного таблицы.</span><span class="sxs-lookup"><span data-stu-id="2fa75-119">Returns <b>True</b> if the formatting of columns is allowed on a protected worksheet.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="2fa75-120">Свойство <b>AllowFormattingColumns</b> можно настроить с помощью <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> аргументов метода.</span><span class="sxs-lookup"><span data-stu-id="2fa75-120">The <b>AllowFormattingColumns</b> property can be set by using the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> method arguments.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowFormattingRows">
      <MemberSignature Language="C#" Value="public bool AllowFormattingRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowFormattingRows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Protection.AllowFormattingRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowFormattingRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowFormattingRows { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2034)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2034)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2fa75-121">Возвращает <b>true,</b> если форматирование строк разрешено для защищенного таблицы.</span><span class="sxs-lookup"><span data-stu-id="2fa75-121">Returns <b>True</b> if the formatting of rows is allowed on a protected worksheet.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="2fa75-122">Свойство <b>AllowFormattingRows</b> можно настроить с помощью <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> аргументов метода.</span><span class="sxs-lookup"><span data-stu-id="2fa75-122">The <b>AllowFormattingRows</b> property can be set by using the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> method arguments.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowInsertingColumns">
      <MemberSignature Language="C#" Value="public bool AllowInsertingColumns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowInsertingColumns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Protection.AllowInsertingColumns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowInsertingColumns As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowInsertingColumns { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2035)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2035)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2fa75-123">Возвращает <b>true,</b> если вставить столбцы разрешено на защищенной таблице.</span><span class="sxs-lookup"><span data-stu-id="2fa75-123">Returns <b>True</b> if the insertion of columns is allowed on a protected worksheet.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="2fa75-124">Вставленный столбец наследует форматирование (по умолчанию) от столбца слева, что означает, что в нем могут быть заблокированы ячейки.</span><span class="sxs-lookup"><span data-stu-id="2fa75-124">An inserted column inherits its formatting (by default) from the column to its left, which means that it may have locked cells.</span></span> <span data-ttu-id="2fa75-125">Другими словами, пользователи не могут удалять вставляемые столбцы.</span><span class="sxs-lookup"><span data-stu-id="2fa75-125">In other words, users may not be able to delete columns that they have inserted.</span></span></para>
          <para><span data-ttu-id="2fa75-126">Свойство <b>AllowInsertingColumns</b> можно настроить с помощью <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> аргументов метода.</span><span class="sxs-lookup"><span data-stu-id="2fa75-126">The <b>AllowInsertingColumns</b> property can be set by using the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> method arguments.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowInsertingHyperlinks">
      <MemberSignature Language="C#" Value="public bool AllowInsertingHyperlinks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowInsertingHyperlinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Protection.AllowInsertingHyperlinks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowInsertingHyperlinks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowInsertingHyperlinks { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2037)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2037)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2fa75-127">Возвращает <b>true,</b> если вставить гиперссылки разрешено на защищенной таблице.</span><span class="sxs-lookup"><span data-stu-id="2fa75-127">Returns <b>True</b> if the insertion of hyperlinks is allowed on a protected worksheet.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="2fa75-128">Гиперссылки можно вставлять только в разблокированные или незащищенные ячейки защищенного таблицы.</span><span class="sxs-lookup"><span data-stu-id="2fa75-128">Hyperlinks can only be inserted in unlocked or unprotected cells on a protected worksheet.</span></span></para>
          <para><span data-ttu-id="2fa75-129">Свойство <b>AllowInsertingHyperlinks</b> можно настроить с помощью <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> аргументов метода.</span><span class="sxs-lookup"><span data-stu-id="2fa75-129">The <b>AllowInsertingHyperlinks</b> property can be set by using the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> method arguments.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowInsertingRows">
      <MemberSignature Language="C#" Value="public bool AllowInsertingRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowInsertingRows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Protection.AllowInsertingRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowInsertingRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowInsertingRows { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2036)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2036)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2fa75-130">Возвращает <b>true,</b> если вставить строки разрешено на защищенном сайте.</span><span class="sxs-lookup"><span data-stu-id="2fa75-130">Returns <b>True</b> if the insertion of rows is allowed on a protected worksheet.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="2fa75-131">Свойство <b>AllowInsertingRows</b> можно настроить с помощью <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> аргументов метода.</span><span class="sxs-lookup"><span data-stu-id="2fa75-131">The <b>AllowInsertingRows</b> property can be set by using the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> method arguments.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowSorting">
      <MemberSignature Language="C#" Value="public bool AllowSorting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowSorting" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Protection.AllowSorting" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowSorting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowSorting { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2040)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2040)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2fa75-132">Возвращает <b>true,</b> если параметр сортировки разрешен на защищенной таблице.</span><span class="sxs-lookup"><span data-stu-id="2fa75-132">Returns <b>True</b> if the sorting option is allowed on a protected worksheet.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="2fa75-133">На защищенном сайте сортировку можно выполнять только с разблокированными или незащищенными ячейками.</span><span class="sxs-lookup"><span data-stu-id="2fa75-133">In a protected worksheet, sorting can only be performed on unlocked or unprotected cells.</span></span></para>
          <para><span data-ttu-id="2fa75-134">Свойство <b>AllowSorting</b> можно настроить с помощью <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> аргументов метода.</span><span class="sxs-lookup"><span data-stu-id="2fa75-134">The <b>AllowSorting</b> property can be set by using the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> method arguments.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowUsingPivotTables">
      <MemberSignature Language="C#" Value="public bool AllowUsingPivotTables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowUsingPivotTables" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Protection.AllowUsingPivotTables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowUsingPivotTables As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowUsingPivotTables { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2042)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2042)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2fa75-135">Возвращает <b>true,</b> если пользователю разрешено работать с таблицами pivot на защищенной таблице.</span><span class="sxs-lookup"><span data-stu-id="2fa75-135">Returns <b>True</b> if the user is allowed to manipulate pivot tables on a protected worksheet.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="2fa75-136">Свойство <b>AllowUsingPivotTables</b> применяется к исходным данным, не относяжимым к OLAP.</span><span class="sxs-lookup"><span data-stu-id="2fa75-136">The <b>AllowUsingPivotTables</b> property applies to non-OLAP source data.</span></span></para>
          <para><span data-ttu-id="2fa75-137">Свойство <b>AllowUsingPivotTables</b> можно настроить с помощью <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> аргументов метода.</span><span class="sxs-lookup"><span data-stu-id="2fa75-137">The <b>AllowUsingPivotTables</b> property can be set by using the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> method arguments.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>