<Type Name="Protection" FullName="Microsoft.Office.Interop.Excel.Protection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="eb4842f02045899e4df285db2b98dfe149fa3820" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="09/03/2018" />
    <Meta Name="ms.locfileid" Value="20585192" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface Protection" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Protection" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Protection" />
  <TypeSignature Language="VB.NET" Value="Public Interface Protection" />
  <TypeSignature Language="C++ CLI" Value="public interface class Protection" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00024467-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="58503-101">Представляет различные типы защиты параметры, доступные для листа.</span>
      <span class="sxs-lookup">
        <span data-stu-id="58503-101">Represents the various types of protection options available for a worksheet.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="58503-102">
        <para>Использование <see cref="P:Microsoft.Office.Interop.Excel._Worksheet.Protection" /> свойства <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> объекта возвращает объект <b>защиты</b> .</para>
        <para>После возвращения объекта <b>защиты</b> , можно использовать следующие свойства или возвращает параметры защиты:</para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:Microsoft.Office.Interop.Excel.Protection.AllowDeletingColumns" />
            </description>
          </item>
          <item>
            <description>
              <see cref="P:Microsoft.Office.Interop.Excel.Protection.AllowDeletingRows" />
            </description>
          </item>
          <item>
            <description>
              <see cref="P:Microsoft.Office.Interop.Excel.Protection.AllowFiltering" />
            </description>
          </item>
          <item>
            <description>
              <see cref="P:Microsoft.Office.Interop.Excel.Protection.AllowFormattingCells" />
            </description>
          </item>
          <item>
            <description>
              <see cref="P:Microsoft.Office.Interop.Excel.Protection.AllowFormattingColumns" />
            </description>
          </item>
          <item>
            <description>
              <see cref="P:Microsoft.Office.Interop.Excel.Protection.AllowFormattingRows" />
            </description>
          </item>
          <item>
            <description>
              <see cref="P:Microsoft.Office.Interop.Excel.Protection.AllowInsertingColumns" />
            </description>
          </item>
          <item>
            <description>
              <see cref="P:Microsoft.Office.Interop.Excel.Protection.AllowInsertingHyperlinks" />
            </description>
          </item>
          <item>
            <description>
              <see cref="P:Microsoft.Office.Interop.Excel.Protection.AllowInsertingRows" />
            </description>
          </item>
          <item>
            <description>
              <see cref="P:Microsoft.Office.Interop.Excel.Protection.AllowSorting" />
            </description>
          </item>
        </list>
        <para></para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="58503-102">
          <para>Use the <see cref="P:Microsoft.Office.Interop.Excel._Worksheet.Protection" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object to return a <b>Protection</b> object.</para>
          <para>Once a <b>Protection</b> object is returned, you can use the following properties to set or return protection options:</para>
          <list type="bullet">
            <item>
              <description>
                <see cref="P:Microsoft.Office.Interop.Excel.Protection.AllowDeletingColumns" />
              </description>
            </item>
            <item>
              <description>
                <see cref="P:Microsoft.Office.Interop.Excel.Protection.AllowDeletingRows" />
              </description>
            </item>
            <item>
              <description>
                <see cref="P:Microsoft.Office.Interop.Excel.Protection.AllowFiltering" />
              </description>
            </item>
            <item>
              <description>
                <see cref="P:Microsoft.Office.Interop.Excel.Protection.AllowFormattingCells" />
              </description>
            </item>
            <item>
              <description>
                <see cref="P:Microsoft.Office.Interop.Excel.Protection.AllowFormattingColumns" />
              </description>
            </item>
            <item>
              <description>
                <see cref="P:Microsoft.Office.Interop.Excel.Protection.AllowFormattingRows" />
              </description>
            </item>
            <item>
              <description>
                <see cref="P:Microsoft.Office.Interop.Excel.Protection.AllowInsertingColumns" />
              </description>
            </item>
            <item>
              <description>
                <see cref="P:Microsoft.Office.Interop.Excel.Protection.AllowInsertingHyperlinks" />
              </description>
            </item>
            <item>
              <description>
                <see cref="P:Microsoft.Office.Interop.Excel.Protection.AllowInsertingRows" />
              </description>
            </item>
            <item>
              <description>
                <see cref="P:Microsoft.Office.Interop.Excel.Protection.AllowSorting" />
              </description>
            </item>
            <item>
              <description>
                <see cref="P:Microsoft.Office.Interop.Excel.Protection.AllowUsingPivotTables" />
              </description>
            </item>
          </list>
          <para></para>
        </span>
      </span>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AllowDeletingColumns">
      <MemberSignature Language="C#" Value="public bool AllowDeletingColumns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDeletingColumns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Protection.AllowDeletingColumns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowDeletingColumns As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowDeletingColumns { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2038)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2038)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="58503-103">Возвращает <b>значение True</b> , если удаления столбцов разрешен защищенного рабочего листа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58503-103">Returns <b>True</b> if the deletion of columns is allowed on a protected worksheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="58503-104">
            <para>Свойство <b>AllowDeletingColumns</b> можно задать с помощью <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> аргументы метода.</para>
            <para>Столбцы, содержащие ячейки к удалению необходимо разблокировать, когда лист защищен.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="58503-104">
              <para>The <b>AllowDeletingColumns</b> property can be set by using the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> method arguments.</para>
              <para>The columns containing the cells to be deleted must be unlocked when the sheet is protected.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDeletingRows">
      <MemberSignature Language="C#" Value="public bool AllowDeletingRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDeletingRows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Protection.AllowDeletingRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowDeletingRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowDeletingRows { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2039)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2039)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="58503-105">Возвращает <b>значение True</b> , если удаление строк разрешен защищенного рабочего листа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58503-105">Returns <b>True</b> if the deletion of rows is allowed on a protected worksheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="58503-106">
            <para>Свойство <b>AllowDeletingRows</b> можно задать с помощью <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> аргументы метода.</para>
            <para>Строки, содержащие ячейки к удалению необходимо разблокировать, когда лист защищен.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="58503-106">
              <para>The <b>AllowDeletingRows</b> property can be set by using the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> method arguments.</para>
              <para>The rows containing the cells to be deleted must be unlocked when the sheet is protected.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowEditRanges">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.AllowEditRanges AllowEditRanges { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.AllowEditRanges AllowEditRanges" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Protection.AllowEditRanges" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowEditRanges As AllowEditRanges" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::AllowEditRanges ^ AllowEditRanges { Microsoft::Office::Interop::Excel::AllowEditRanges ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2236)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2236)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.AllowEditRanges</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="58503-107">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.AllowEditRanges" /> объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58503-107">Returns an <see cref="T:Microsoft.Office.Interop.Excel.AllowEditRanges" /> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowFiltering">
      <MemberSignature Language="C#" Value="public bool AllowFiltering { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowFiltering" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Protection.AllowFiltering" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowFiltering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowFiltering { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2041)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2041)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="58503-108">Возвращает <b>значение True</b> , если пользователю разрешено использование автофильтра, созданный перед защищенного листа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58503-108">Returns <b>True</b> if the user is allowed to make use of an AutoFilter that was created before the sheet was protected.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="58503-109">
            <para>Свойство <b>AllowFiltering</b> можно задать с помощью <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> аргументы метода.</para> Свойство 
          <para><b>AllowFiltering</b> пользователь может изменить критерии фильтрации на существующий автофильтра. Пользователь не может создать или удалить автофильтра на защищенном листе.</para><para>Ячейки для фильтрации необходимо разблокировать, когда лист защищен.</para><para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="58503-109">
              <para>The <b>AllowFiltering</b> property can be set by using the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> method arguments.</para>
              <para>The <b>AllowFiltering</b> property allows the user to change filter criteria on an existing AutoFilter. The user cannot create or remove an AutoFilter on a protected worksheet.</para>
              <para>The cells to be filtered must be unlocked when the sheet is protected.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowFormattingCells">
      <MemberSignature Language="C#" Value="public bool AllowFormattingCells { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowFormattingCells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Protection.AllowFormattingCells" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowFormattingCells As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowFormattingCells { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2032)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2032)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="58503-110">Возвращает <b>значение True</b> , если форматирование ячеек разрешен защищенного рабочего листа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58503-110">Returns <b>True</b> if the formatting of cells is allowed on a protected worksheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="58503-111">
            <para>Свойство <b>AllowFormattingCells</b> можно задать с помощью <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> аргументы метода.</para>
            <para>Использование этого свойства отключается на вкладку Защита разрешение пользователю для изменения всех форматов, но не разблокировки или отобразить диапазонов.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="58503-111">
              <para>The <b>AllowFormattingCells</b> property can be set by using the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> method arguments.</para>
              <para>Use of this property disables the protection tab, allowing the user to change all formats but not to unlock or unhide ranges.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowFormattingColumns">
      <MemberSignature Language="C#" Value="public bool AllowFormattingColumns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowFormattingColumns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Protection.AllowFormattingColumns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowFormattingColumns As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowFormattingColumns { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2033)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2033)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="58503-112">Возвращает <b>значение True</b> , если форматирование столбцов разрешен защищенного рабочего листа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58503-112">Returns <b>True</b> if the formatting of columns is allowed on a protected worksheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="58503-113">
            <para>Свойство <b>AllowFormattingColumns</b> можно задать с помощью <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> аргументы метода.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="58503-113">
              <para>The <b>AllowFormattingColumns</b> property can be set by using the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> method arguments.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowFormattingRows">
      <MemberSignature Language="C#" Value="public bool AllowFormattingRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowFormattingRows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Protection.AllowFormattingRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowFormattingRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowFormattingRows { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2034)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2034)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="58503-114">Возвращает <b>значение True</b> , если форматирования строк может защищенного рабочего листа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58503-114">Returns <b>True</b> if the formatting of rows is allowed on a protected worksheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="58503-115">
            <para>Свойство <b>AllowFormattingRows</b> можно задать с помощью <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> аргументы метода.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="58503-115">
              <para>The <b>AllowFormattingRows</b> property can be set by using the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> method arguments.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowInsertingColumns">
      <MemberSignature Language="C#" Value="public bool AllowInsertingColumns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowInsertingColumns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Protection.AllowInsertingColumns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowInsertingColumns As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowInsertingColumns { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2035)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2035)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="58503-116">Возвращает <b>значение True</b> , если вставки столбцов разрешен защищенного рабочего листа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58503-116">Returns <b>True</b> if the insertion of columns is allowed on a protected worksheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="58503-117">
            <para>Вставленный столбец наследует форматирование (по умолчанию) в столбце слева от нее, что означает, что она может заблокированные ячейки. Другими словами, пользователи не смогут удалять столбцы, которые они вставлены.</para>
            <para>Свойство <b>AllowInsertingColumns</b> можно задать с помощью <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> аргументы метода.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="58503-117">
              <para>An inserted column inherits its formatting (by default) from the column to its left, which means that it may have locked cells. In other words, users may not be able to delete columns that they have inserted.</para>
              <para>The <b>AllowInsertingColumns</b> property can be set by using the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> method arguments.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowInsertingHyperlinks">
      <MemberSignature Language="C#" Value="public bool AllowInsertingHyperlinks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowInsertingHyperlinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Protection.AllowInsertingHyperlinks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowInsertingHyperlinks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowInsertingHyperlinks { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2037)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2037)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="58503-118">Возвращает <b>значение True</b> , если разрешен вставки гиперссылки на защищенном листе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58503-118">Returns <b>True</b> if the insertion of hyperlinks is allowed on a protected worksheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="58503-119">
            <para>Гиперссылки можно вставить в разблокированными или незащищенный ячеек на защищенном листе.</para>
            <para>Свойство <b>AllowInsertingHyperlinks</b> можно задать с помощью <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> аргументы метода.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="58503-119">
              <para>Hyperlinks can only be inserted in unlocked or unprotected cells on a protected worksheet.</para>
              <para>The <b>AllowInsertingHyperlinks</b> property can be set by using the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> method arguments.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowInsertingRows">
      <MemberSignature Language="C#" Value="public bool AllowInsertingRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowInsertingRows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Protection.AllowInsertingRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowInsertingRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowInsertingRows { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2036)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2036)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="58503-120">Возвращает <b>значение True</b> , если вставка строк разрешен защищенного рабочего листа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58503-120">Returns <b>True</b> if the insertion of rows is allowed on a protected worksheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="58503-121">
            <para>Свойство <b>AllowInsertingRows</b> можно задать с помощью <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> аргументы метода.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="58503-121">
              <para>The <b>AllowInsertingRows</b> property can be set by using the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> method arguments.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowSorting">
      <MemberSignature Language="C#" Value="public bool AllowSorting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowSorting" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Protection.AllowSorting" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowSorting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowSorting { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2040)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2040)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="58503-122">Возвращает <b>значение True</b> , если параметр сортировки разрешен защищенного рабочего листа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58503-122">Returns <b>True</b> if the sorting option is allowed on a protected worksheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="58503-123">
            <para>На защищенном листе сортировка выполняется только для ячеек разблокированными или незащищенный.</para>
            <para>Свойство <b>AllowSorting</b> можно задать с помощью <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> аргументы метода.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="58503-123">
              <para>In a protected worksheet, sorting can only be performed on unlocked or unprotected cells.</para>
              <para>The <b>AllowSorting</b> property can be set by using the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> method arguments.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowUsingPivotTables">
      <MemberSignature Language="C#" Value="public bool AllowUsingPivotTables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowUsingPivotTables" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Protection.AllowUsingPivotTables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowUsingPivotTables As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowUsingPivotTables { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2042)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2042)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="58503-124">Возвращает <b>значение True</b> , если пользователь для работы с сводных таблиц на защищенном листе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58503-124">Returns <b>True</b> if the user is allowed to manipulate pivot tables on a protected worksheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="58503-125">
            <para>Свойство <b>AllowUsingPivotTables</b> применяется к источнику данных не OLAP.</para>
            <para>Свойство <b>AllowUsingPivotTables</b> можно задать с помощью <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> аргументы метода.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="58503-125">
              <para>The <b>AllowUsingPivotTables</b> property applies to non-OLAP source data.</para>
              <para>The <b>AllowUsingPivotTables</b> property can be set by using the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> method arguments.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>