<Type Name="CalculatedMembers" FullName="Microsoft.Office.Interop.Excel.CalculatedMembers">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2ef237f29eff8550f0d57ac22a72517d08855192" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="50006050" /></Metadata><TypeSignature Language="C#" Value="public interface CalculatedMembers : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract CalculatedMembers implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.CalculatedMembers" />
  <TypeSignature Language="VB.NET" Value="Public Interface CalculatedMembers&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class CalculatedMembers : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00024454-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b4968-101">Коллекция всех объектов в <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMember" /> указанной pivotTable.</span><span class="sxs-lookup"><span data-stu-id="b4968-101">A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMember" /> objects on the specified PivotTable.</span></span></summary>
    <remarks><para><span data-ttu-id="b4968-102">Каждый <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMember" /> объект представляет собой вычисляемую или вычисляемую меру.</span><span class="sxs-lookup"><span data-stu-id="b4968-102">Each <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMember" /> object represents a calculated member or calculated measure.</span></span></para>
      <para><span data-ttu-id="b4968-103">Используйте <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.CalculatedMembers" /> свойство объекта <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> для возврата <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMembers" /> коллекции.</span><span class="sxs-lookup"><span data-stu-id="b4968-103">Use the <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.CalculatedMembers" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> object to return a <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMembers" /> collection.</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CalculatedMember this[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.CalculatedMember _Default(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMembers._Default(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default(Index As Object) As CalculatedMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::CalculatedMember ^ default[System::Object ^] { Microsoft::Office::Interop::Excel::CalculatedMember ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CalculatedMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="b4968-104">Зарезервировано для внутреннего использования.</span><span class="sxs-lookup"><span data-stu-id="b4968-104">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CalculatedMember Add (string Name, string Formula, object SolveOrder, object Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.CalculatedMember Add([in]string Name, [in]string Formula, [in]object SolveOrder, [in]object Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.CalculatedMembers.Add(System.String,System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (Name As String, Formula As String, Optional SolveOrder As Object, Optional Type As Object) As CalculatedMember" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2085)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CalculatedMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="Formula" Type="System.String" />
        <Parameter Name="SolveOrder" Type="System.Object" />
        <Parameter Name="Type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name"><span data-ttu-id="b4968-105">Обязательный атрибут типа <b>String</b>.</span><span class="sxs-lookup"><span data-stu-id="b4968-105">Required <b>String</b>.</span></span> <span data-ttu-id="b4968-106">Имя вычисляемого члена.</span><span class="sxs-lookup"><span data-stu-id="b4968-106">The name of the calculated member.</span></span></param>
        <param name="Formula"><span data-ttu-id="b4968-107">Обязательный атрибут типа <b>String</b>.</span><span class="sxs-lookup"><span data-stu-id="b4968-107">Required <b>String</b>.</span></span> <span data-ttu-id="b4968-108">Формула вычисляемого члена.</span><span class="sxs-lookup"><span data-stu-id="b4968-108">The formula of the calculated member.</span></span></param>
        <param name="SolveOrder"><span data-ttu-id="b4968-109"><b>Необязательный объект</b>.</span><span class="sxs-lookup"><span data-stu-id="b4968-109">Optional <b>Object</b>.</span></span> <span data-ttu-id="b4968-110">Порядок решения для вычисляемой члена.</span><span class="sxs-lookup"><span data-stu-id="b4968-110">The solve order for the calculated member.</span></span></param>
        <param name="Type"><span data-ttu-id="b4968-111"><b>Необязательный объект</b>.</span><span class="sxs-lookup"><span data-stu-id="b4968-111">Optional <b>Object</b>.</span></span> <span data-ttu-id="b4968-112">Тип вычисляемого члена.</span><span class="sxs-lookup"><span data-stu-id="b4968-112">The type of calculated member.</span></span></param>
        <summary><span data-ttu-id="b4968-113">Добавляет вычисляемое поле или вычисляемый элемент в списоную.</span><span class="sxs-lookup"><span data-stu-id="b4968-113">Adds a calculated field or calculated item to a PivotTable.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="b4968-114">Аргумент <paramref name="Formula" /> должен иметь допустимый синтаксис MDX (многомерное выражение).</span><span class="sxs-lookup"><span data-stu-id="b4968-114">The <paramref name="Formula" /> argument must have a valid MDX (multidimensional expression) syntax statement.</span></span> <span data-ttu-id="b4968-115">Аргумент должен быть приемлем для поставщика OLAP, а аргумент <paramref name="Name" /> <paramref name="Type" /> должен быть определен.</span><span class="sxs-lookup"><span data-stu-id="b4968-115">The <paramref name="Name" /> argument has to be acceptable to the Online Analytical Processing (OLAP) provider and the <paramref name="Type" /> argument has to be defined.</span></span></para>
          <para><span data-ttu-id="b4968-116">Если для аргумента этого метода заданной является , необходимо вызвать метод, чтобы новый набор полей был виден в <paramref name="Type" /> <paramref name="xlCalculatedSet" /> <see cref="M:Microsoft.Office.Interop.Excel.CubeFields.AddSet(System.String,System.String)" /> pivotTable.</span><span class="sxs-lookup"><span data-stu-id="b4968-116">If you set the <paramref name="Type" /> argument of this method to <paramref name="xlCalculatedSet" />, then you must call the <see cref="M:Microsoft.Office.Interop.Excel.CubeFields.AddSet(System.String,System.String)" /> method to make the new field set visible in the PivotTable.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Add2">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CalculatedMember Add2 (string Name, object Formula, object SolveOrder, object Type, object Dynamic, object DisplayFolder, object HierarchizeDistinct);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.CalculatedMember Add2([in]string Name, [in]object Formula, [in]object SolveOrder, [in]object Type, [in]object Dynamic, [in]object DisplayFolder, [in]object HierarchizeDistinct) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.CalculatedMembers.Add2(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add2 (Name As String, Formula As Object, Optional SolveOrder As Object, Optional Type As Object, Optional Dynamic As Object, Optional DisplayFolder As Object, Optional HierarchizeDistinct As Object) As CalculatedMember" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(181)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CalculatedMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="Formula" Type="System.Object" />
        <Parameter Name="SolveOrder" Type="System.Object" />
        <Parameter Name="Type" Type="System.Object" />
        <Parameter Name="Dynamic" Type="System.Object" />
        <Parameter Name="DisplayFolder" Type="System.Object" />
        <Parameter Name="HierarchizeDistinct" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">To be added.</param>
        <param name="Formula">To be added.</param>
        <param name="SolveOrder">To be added.</param>
        <param name="Type">To be added.</param>
        <param name="Dynamic">To be added.</param>
        <param name="DisplayFolder">To be added.</param>
        <param name="HierarchizeDistinct">To be added.</param>
        <summary><span data-ttu-id="b4968-117">Зарезервировано для внутреннего использования.</span><span class="sxs-lookup"><span data-stu-id="b4968-117">Reserved for internal use.</span></span></summary>
        <returns><span data-ttu-id="b4968-118">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMember" /> .</span><span class="sxs-lookup"><span data-stu-id="b4968-118">Returns <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMember" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCalculatedMember">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CalculatedMember AddCalculatedMember (string Name, object Formula, object SolveOrder, object Type, object DisplayFolder, object MeasureGroup, object ParentHierarchy, object ParentMember, object NumberFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.CalculatedMember AddCalculatedMember([in]string Name, [in]object Formula, [in]object SolveOrder, [in]object Type, [in]object DisplayFolder, [in]object MeasureGroup, [in]object ParentHierarchy, [in]object ParentMember, [in]object NumberFormat) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.CalculatedMembers.AddCalculatedMember(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddCalculatedMember (Name As String, Formula As Object, Optional SolveOrder As Object, Optional Type As Object, Optional DisplayFolder As Object, Optional MeasureGroup As Object, Optional ParentHierarchy As Object, Optional ParentMember As Object, Optional NumberFormat As Object) As CalculatedMember" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3091)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CalculatedMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="Formula" Type="System.Object" />
        <Parameter Name="SolveOrder" Type="System.Object" />
        <Parameter Name="Type" Type="System.Object" />
        <Parameter Name="DisplayFolder" Type="System.Object" />
        <Parameter Name="MeasureGroup" Type="System.Object" />
        <Parameter Name="ParentHierarchy" Type="System.Object" />
        <Parameter Name="ParentMember" Type="System.Object" />
        <Parameter Name="NumberFormat" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name"><span data-ttu-id="b4968-119">Имя вычисляемого члена.</span><span class="sxs-lookup"><span data-stu-id="b4968-119">The name of the calculated member.</span></span></param>
        <param name="Formula"><span data-ttu-id="b4968-120">Формула вычисляемого члена.</span><span class="sxs-lookup"><span data-stu-id="b4968-120">The formula of the calculated member.</span></span></param>
        <param name="SolveOrder"><span data-ttu-id="b4968-121">Порядок решения для вычисляемой члена.</span><span class="sxs-lookup"><span data-stu-id="b4968-121">The solve order for the calculated member.</span></span></param>
        <param name="Type"><span data-ttu-id="b4968-122">Тип вычисляемого члена.</span><span class="sxs-lookup"><span data-stu-id="b4968-122">The type of calculated member.</span></span></param>
        <param name="DisplayFolder"><span data-ttu-id="b4968-123">Папка, которая существует для отображения вычисляемой меры.</span><span class="sxs-lookup"><span data-stu-id="b4968-123">A folder that exists to display calculated measures.</span></span></param>
        <param name="MeasureGroup"><span data-ttu-id="b4968-124">Группа, к которой относится вычисляемая группа.</span><span class="sxs-lookup"><span data-stu-id="b4968-124">The group to which the calculated belongs.</span></span></param>
        <param name="ParentHierarchy"><span data-ttu-id="b4968-125">Родительский путь <b>ParentMember.</b></span><span class="sxs-lookup"><span data-stu-id="b4968-125">The parent path of the <b>ParentMember</b>.</span></span></param>
        <param name="ParentMember"><span data-ttu-id="b4968-126">Родительский член вычисляемого члена.</span><span class="sxs-lookup"><span data-stu-id="b4968-126">The parent of the calculated member.</span></span></param>
        <param name="NumberFormat"><span data-ttu-id="b4968-127">Формат чисел, используемых для вычисляемого числа членов.</span><span class="sxs-lookup"><span data-stu-id="b4968-127">The format of numbers used for calculated members.</span></span></param>
        <summary><span data-ttu-id="b4968-128">Добавляет вычисляемое поле или вычисляемый элемент в списоную.</span><span class="sxs-lookup"><span data-stu-id="b4968-128">Adds a calculated field or calculated item to a PivotTable.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="b4968-129">Аргумент <b>Formula</b> должен иметь допустимый синтаксис MDX (многомерное выражение).</span><span class="sxs-lookup"><span data-stu-id="b4968-129">The <b>Formula</b> argument must have a valid MDX (multidimensional expression) syntax statement.</span></span> <span data-ttu-id="b4968-130">Аргумент <b>Name</b> должен быть приемлем для поставщика OLAP.</span><span class="sxs-lookup"><span data-stu-id="b4968-130">The <b>Name</b> argument has to be acceptable to the Online Analytical Processing (OLAP) provider.</span></span></para>
          <list type="bullet">
            <item>
              <description><span data-ttu-id="b4968-131">
                <b>DisplayFolder</b>: папки отображения допустимы только для вычисляемой меры.</span><span class="sxs-lookup"><span data-stu-id="b4968-131">
                <b>DisplayFolder</b>: Display folders are only valid for calculated measures.</span></span> <span data-ttu-id="b4968-132">Они не являются допустимыми для вычисляемой группы.</span><span class="sxs-lookup"><span data-stu-id="b4968-132">They are not valid for calculated members.</span></span> <span data-ttu-id="b4968-133">Строка может иметь точки с заточки; в нем.</span><span class="sxs-lookup"><span data-stu-id="b4968-133">The string can have semicolons ; in it.</span></span> <span data-ttu-id="b4968-134">Четные кладки обозначают несколько папок отображения.</span><span class="sxs-lookup"><span data-stu-id="b4968-134">Semicolons designate multiple display folders.</span></span> <span data-ttu-id="b4968-135">Например, если вы используете строку my folder1;myfolder2, вычисляемая мера будет отображаться в двух папках отображения с именем myfolder1, а другая с именем myfolder2.</span><span class="sxs-lookup"><span data-stu-id="b4968-135">For example, if you use the string my folder1;myfolder2 then the calculated measure will show in two display folders one named myfolder1 the other named ‘myfolder2’.</span></span> <span data-ttu-id="b4968-136">Строка может иметь backslashes \.</span><span class="sxs-lookup"><span data-stu-id="b4968-136">The string can have backslashes \.</span></span> <span data-ttu-id="b4968-137">Это обозначает иерархический путь для папки отображения.</span><span class="sxs-lookup"><span data-stu-id="b4968-137">This designates a hierarchical path for the display folder.</span></span> <span data-ttu-id="b4968-138">Например, если вы используете строку welcome\to\seattle, будет отображаться папка приветствия, которая содержит папку отображения, которая содержит папку отображения seattle.</span><span class="sxs-lookup"><span data-stu-id="b4968-138">For example, if you use the string welcome\to\seattle there will be a display folder called welcome that contains a display folder called to which contains a display folder called seattle.</span></span> <span data-ttu-id="b4968-139">Папки отображения — это виртуальные папки.</span><span class="sxs-lookup"><span data-stu-id="b4968-139">Display folders are virtual folders.</span></span><span data-ttu-id="b4968-140">Они не существуют в том же смысле, что и системные папки.</span><span class="sxs-lookup"><span data-stu-id="b4968-140">  They do not really exist in the same sense that we think of system folders.</span></span> <span data-ttu-id="b4968-141">Они существуют только для отображения вычисляемой меры.</span><span class="sxs-lookup"><span data-stu-id="b4968-141">They only exist for purposes of displaying the calculated measures.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="b4968-142">
                <b>NumberFormat</b>: числовые форматы можно устанавливать только с помощью макроса.</span><span class="sxs-lookup"><span data-stu-id="b4968-142">
                <b>NumberFormat</b>: The number formats can only be set by macros.</span></span> <span data-ttu-id="b4968-143">Пользовательский интерфейс для их настройки не существует.</span><span class="sxs-lookup"><span data-stu-id="b4968-143">There is no user interface for setting them.</span></span> <span data-ttu-id="b4968-144">Это единственное свойство, которое нельзя установить с помощью пользовательского интерфейса.</span><span class="sxs-lookup"><span data-stu-id="b4968-144">This is the only property that cannot be set via the user interface.</span></span> <span data-ttu-id="b4968-145">Типом всегда является <b>xlNumberFormatTypeDefault,</b> когда вычисляемого члена создается через пользовательский интерфейс.</span><span class="sxs-lookup"><span data-stu-id="b4968-145">The type is always <b>xlNumberFormatTypeDefault</b> when a calculated member is created via the user interface.</span></span> <span data-ttu-id="b4968-146">Форматы номеров допустимы только для вычисляемого члена.</span><span class="sxs-lookup"><span data-stu-id="b4968-146">The number formats are only valid for calculated members.</span></span> <span data-ttu-id="b4968-147">Они не являются допустимыми для вычисляемой меры.</span><span class="sxs-lookup"><span data-stu-id="b4968-147">They are not valid for calculated measures.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="b4968-148">
                <b>ParentHierarchy</b>: родительская иерархия может быть любой допустимой иерархией MDX.</span><span class="sxs-lookup"><span data-stu-id="b4968-148">
                <b>ParentHierarchy</b>: The parent hierarchy can be any valid MDX hierarchy.</span></span> <span data-ttu-id="b4968-149">Родительские иерархии допустимы только для вычисляемого члена.</span><span class="sxs-lookup"><span data-stu-id="b4968-149">Parent hierarchies are only valid for calculated members.</span></span> <span data-ttu-id="b4968-150">Они не являются допустимыми для вычисляемой меры.</span><span class="sxs-lookup"><span data-stu-id="b4968-150">They are not valid for calculated measures.</span></span> <span data-ttu-id="b4968-151">Если выбран родительский член, который находится в другой родительской иерархии, родительская иерархия будет автоматически изменена в соответствие с родительской иерархией родительского члена.</span><span class="sxs-lookup"><span data-stu-id="b4968-151">If a parent member is chosen that is in a different parent hierarchy, the parent hierarchy will be automatically changed to match the parent hierarchy of the parent member.</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMembers.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4968-152">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Application" /> объект, который представляет приложение Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="b4968-152">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMembers.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4968-153">Возвращает количество объектов в коллекции.</span><span class="sxs-lookup"><span data-stu-id="b4968-153">Returns the number of objects in the collection.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMembers.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4968-154">Возвращает 32-битное целое число, указывающее на приложение, в котором объект был создан.</span><span class="sxs-lookup"><span data-stu-id="b4968-154">Returns a 32-bit integer that indicates the application in which this object was created.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="b4968-155">Если объект был создан в Microsoft Excel, это свойство возвращает строку XCEL, эквивалентную 5843454C.</span><span class="sxs-lookup"><span data-stu-id="b4968-155">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span></para>
          <para><span data-ttu-id="b4968-156">Свойство <b>Creator</b> предназначено для использования в Microsoft Excel для Macintosh, где каждое приложение имеет четырех символьный код создателя.</span><span class="sxs-lookup"><span data-stu-id="b4968-156">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="b4968-157">Например, в Microsoft Excel есть код создателя XCEL.</span><span class="sxs-lookup"><span data-stu-id="b4968-157">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.CalculatedMembers.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CalculatedMember Item[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.CalculatedMember Item(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMembers.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item(Index As Object) As CalculatedMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::CalculatedMember ^ Item[System::Object ^] { Microsoft::Office::Interop::Excel::CalculatedMember ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CalculatedMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="b4968-158">Необходимый <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="b4968-158">Required <b>Object</b>.</span></span> <span data-ttu-id="b4968-159">Имя или номер индекса объекта.</span><span class="sxs-lookup"><span data-stu-id="b4968-159">The name or index number of the object.</span></span></param>
        <summary><span data-ttu-id="b4968-160">Возвращает один объект из коллекции.</span><span class="sxs-lookup"><span data-stu-id="b4968-160">Returns a single object from a collection.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CalculatedMembers.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4968-161">Возвращает родительский объект для указанного объекта.</span><span class="sxs-lookup"><span data-stu-id="b4968-161">Returns the parent object for the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>