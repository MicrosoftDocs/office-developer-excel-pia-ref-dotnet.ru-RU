<Type Name="Windows" FullName="Microsoft.Office.Interop.Excel.Windows">
  <Metadata><Meta Name="ms.openlocfilehash" Value="216071def9d8f4a2c63cf628170e2d5fcd646a71" /><Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/24/2018" /><Meta Name="ms.locfileid" Value="20574923" /></Metadata><TypeSignature Language="C#" Value="public interface Windows : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Windows implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Windows" />
  <TypeSignature Language="VB.NET" Value="Public Interface Windows&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class Windows : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00020892-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="38244-101">Коллекция всех <see cref="T:Microsoft.Office.Interop.Excel.Window" /> объектов в Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="38244-101">A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.Window" /> objects in Microsoft Excel.</span></span></summary>
    <remarks><para><span data-ttu-id="38244-102">Семейство <b>Windows</b> , возвращенное <see cref="P:Microsoft.Office.Interop.Excel._Application.Windows" /> свойством <see cref="T:Microsoft.Office.Interop.Excel.Application" /> объекта, содержит все окна в приложении, в то время как семейство <b>Windows</b> , возвращенное <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Windows" /> свойством <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> объекта, содержит только окна в указанной книге.</span><span class="sxs-lookup"><span data-stu-id="38244-102">The <b>Windows</b> collection returned by the <see cref="P:Microsoft.Office.Interop.Excel._Application.Windows" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object contains all the windows in the application, whereas the <b>Windows</b> collection returned by the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Windows" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object contains only the windows in the specified workbook.</span></span></para>
      <para><span data-ttu-id="38244-103">Используйте метод <b>NewWindow</b> объекта <b>Window</b> или <b>Workbook</b> , чтобы создать новое окно и добавить его в коллекцию.</span><span class="sxs-lookup"><span data-stu-id="38244-103">Use the <b>NewWindow</b> method of a <b>Window</b> or <b>Workbook</b> object to create a new window and add it to the collection.</span></span></para>
      <para><span data-ttu-id="38244-104">Используйте <b>Windows</b>(<paramref name="index" />), где <paramref name="index" /> — это имя окна или номер индекса, чтобы вернуть один объект <b>Window</b> .</span><span class="sxs-lookup"><span data-stu-id="38244-104">Use <b>Windows</b>(<paramref name="index" />), where <paramref name="index" /> is the window name or index number, to return a single <b>Window</b> object.</span></span></para>
      <para><span data-ttu-id="38244-105">Обратите внимание, что активное окно всегда является Windows (1).</span><span class="sxs-lookup"><span data-stu-id="38244-105">Note that the active window is always Windows(1).</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Window this[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Window _Default(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Windows._Default(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default(Index As Object) As Window" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Window ^ default[System::Object ^] { Microsoft::Office::Interop::Excel::Window ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Window</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="38244-106">Зарезервировано для внутреннего использования.</span><span class="sxs-lookup"><span data-stu-id="38244-106">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Windows.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38244-107">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Application" /> объект, представляющий приложение Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="38244-107">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Arrange">
      <MemberSignature Language="C#" Value="public object Arrange (Microsoft.Office.Interop.Excel.XlArrangeStyle ArrangeStyle = Microsoft.Office.Interop.Excel.XlArrangeStyle.xlArrangeStyleTiled, object ActiveWorkbook, object SyncHorizontal, object SyncVertical);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Arrange([in]valuetype Microsoft.Office.Interop.Excel.XlArrangeStyle ArrangeStyle, [in]object ActiveWorkbook, [in]object SyncHorizontal, [in]object SyncVertical) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Windows.Arrange(Microsoft.Office.Interop.Excel.XlArrangeStyle,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Arrange (Optional ArrangeStyle As XlArrangeStyle = Microsoft.Office.Interop.Excel.XlArrangeStyle.xlArrangeStyleTiled, Optional ActiveWorkbook As Object, Optional SyncHorizontal As Object, Optional SyncVertical As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(638)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ArrangeStyle" Type="Microsoft.Office.Interop.Excel.XlArrangeStyle" />
        <Parameter Name="ActiveWorkbook" Type="System.Object" />
        <Parameter Name="SyncHorizontal" Type="System.Object" />
        <Parameter Name="SyncVertical" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ArrangeStyle"><span data-ttu-id="38244-108">Необязательный <see cref="T:Microsoft.Office.Interop.Excel.XlArrangeStyle" />параметр.</span><span class="sxs-lookup"><span data-stu-id="38244-108">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlArrangeStyle" />.</span></span></param>
        <param name="ActiveWorkbook"><span data-ttu-id="38244-109">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="38244-109">Optional <b>Object</b>.</span></span> <span data-ttu-id="38244-110"><b>Значение true</b> , чтобы упорядочить только видимые окна активной книги.</span><span class="sxs-lookup"><span data-stu-id="38244-110"><b>True</b> to arrange only the visible windows of the active workbook.</span></span> <span data-ttu-id="38244-111"><b>Значение false</b> для упорядочивания всех окон.</span><span class="sxs-lookup"><span data-stu-id="38244-111"><b>False</b> to arrange all windows.</span></span> <span data-ttu-id="38244-112">Значение по умолчанию — <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="38244-112">The default value is <b>False</b>.</span></span></param>
        <param name="SyncHorizontal"><span data-ttu-id="38244-113">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="38244-113">Optional <b>Object</b>.</span></span> <span data-ttu-id="38244-114">Игнорируется <paramref name="ActiveWorkbook" /> , если он имеет <b>значение false</b> или опущен.</span><span class="sxs-lookup"><span data-stu-id="38244-114">Ignored if <paramref name="ActiveWorkbook" /> is <b>False</b> or omitted.</span></span> <span data-ttu-id="38244-115"><b>Значение true</b> , чтобы синхронизировать окна активной книги при горизонтальной прокрутке.</span><span class="sxs-lookup"><span data-stu-id="38244-115"><b>True</b> to synchronize the windows of the active workbook when scrolling horizontally.</span></span> <span data-ttu-id="38244-116"><b>Значение false</b> , чтобы синхронизировать Windows.</span><span class="sxs-lookup"><span data-stu-id="38244-116"><b>False</b> not to synchronize the windows.</span></span> <span data-ttu-id="38244-117">Значение по умолчанию — <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="38244-117">The default value is <b>False</b>.</span></span></param>
        <param name="SyncVertical"><span data-ttu-id="38244-118">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="38244-118">Optional <b>Object</b>.</span></span> <span data-ttu-id="38244-119">Игнорируется <paramref name="ActiveWorkbook" /> , если он имеет <b>значение false</b> или опущен.</span><span class="sxs-lookup"><span data-stu-id="38244-119">Ignored if <paramref name="ActiveWorkbook" /> is <b>False</b> or omitted.</span></span> <span data-ttu-id="38244-120"><b>Значение true</b> , чтобы синхронизировать окна активной книги при вертикальной прокрутке.</span><span class="sxs-lookup"><span data-stu-id="38244-120"><b>True</b> to synchronize the windows of the active workbook when scrolling vertically.</span></span> <span data-ttu-id="38244-121"><b>Значение false</b> , чтобы синхронизировать Windows.</span><span class="sxs-lookup"><span data-stu-id="38244-121"><b>False</b> not to synchronize the windows.</span></span> <span data-ttu-id="38244-122">Значение по умолчанию — <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="38244-122">The default value is <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="38244-123">Располагает окна на экране.</span><span class="sxs-lookup"><span data-stu-id="38244-123">Arranges the windows on the screen.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BreakSideBySide">
      <MemberSignature Language="C#" Value="public bool BreakSideBySide ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool BreakSideBySide() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Windows.BreakSideBySide" />
      <MemberSignature Language="VB.NET" Value="Public Function BreakSideBySide () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool BreakSideBySide();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2248)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="38244-124">Завершается параллельный режим, если два окна находятся в параллельном режиме.</span><span class="sxs-lookup"><span data-stu-id="38244-124">Ends side-by-side mode if two windows are in side-by-side mode.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareSideBySideWith">
      <MemberSignature Language="C#" Value="public bool CompareSideBySideWith (object WindowName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CompareSideBySideWith([in]object WindowName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Windows.CompareSideBySideWith(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareSideBySideWith (WindowName As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CompareSideBySideWith(System::Object ^ WindowName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2246)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="WindowName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="WindowName"><span data-ttu-id="38244-125">Имя открываемого окна.</span><span class="sxs-lookup"><span data-stu-id="38244-125">The name of a window to open.</span></span></param>
        <summary><span data-ttu-id="38244-126">Открывает два окна в параллельном режиме.</span><span class="sxs-lookup"><span data-stu-id="38244-126">Opens two windows in side-by-side mode.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="38244-127">Невозможно использовать метод <b>компаресидебисидевис</b> с <see cref="T:Microsoft.Office.Interop.Excel._Application" /> объектом или <see cref="P:Microsoft.Office.Interop.Excel._Application.ActiveWorkbook" /> свойством.</span><span class="sxs-lookup"><span data-stu-id="38244-127">You cannot use the <b>CompareSideBySideWith</b> method with the <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object or the <see cref="P:Microsoft.Office.Interop.Excel._Application.ActiveWorkbook" /> property.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Windows.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38244-128">Возвращает число объектов в коллекции.</span><span class="sxs-lookup"><span data-stu-id="38244-128">Returns the number of objects in the collection.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Windows.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38244-129">Возвращает 32-битное целое число, указывающее на приложение, в котором объект был создан.</span><span class="sxs-lookup"><span data-stu-id="38244-129">Returns a 32-bit integer that indicates the application in which this object was created.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="38244-130">Если объект был создан в Microsoft Excel, это свойство возвращает строку КСЦЕЛ, которая эквивалентна шестнадцатеричному числу 5843454C.</span><span class="sxs-lookup"><span data-stu-id="38244-130">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span></para>
          <para><span data-ttu-id="38244-131">Свойство <b>Creator</b> предназначено для использования в Microsoft Excel для Macintosh, где каждое приложение содержит код создателя из четырех символов.</span><span class="sxs-lookup"><span data-stu-id="38244-131">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="38244-132">Например, в Microsoft Excel есть код создателя КСЦЕЛ.</span><span class="sxs-lookup"><span data-stu-id="38244-132">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Windows.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Window Item[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Window Item(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Windows.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item(Index As Object) As Window" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Window ^ Item[System::Object ^] { Microsoft::Office::Interop::Excel::Window ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Window</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="38244-133">Обязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="38244-133">Required <b>Object</b>.</span></span> <span data-ttu-id="38244-134">Имя или номер индекса объекта.</span><span class="sxs-lookup"><span data-stu-id="38244-134">The name or index number of the object.</span></span></param>
        <summary><span data-ttu-id="38244-135">Возвращает один объект из коллекции.</span><span class="sxs-lookup"><span data-stu-id="38244-135">Returns a single object from a collection.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Windows.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38244-136">Возвращает родительский объект для указанного объекта.</span><span class="sxs-lookup"><span data-stu-id="38244-136">Returns the parent object for the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetPositionsSideBySide">
      <MemberSignature Language="C#" Value="public void ResetPositionsSideBySide ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetPositionsSideBySide() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Windows.ResetPositionsSideBySide" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetPositionsSideBySide ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetPositionsSideBySide();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2250)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="38244-137">Сбрасывает положение двух окон листа, которые сравниваются рядом друг с другом.</span><span class="sxs-lookup"><span data-stu-id="38244-137">Resets the position of two worksheet windows that are being compared side by side.</span></span></summary>
        <remarks><para><span data-ttu-id="38244-138">Используйте метод <b>ресетпоситионссидебисиде</b> для сброса позиции двух листов, которые сравниваются рядом друг с другом.</span><span class="sxs-lookup"><span data-stu-id="38244-138">Use the <b>ResetPositionsSideBySide</b> method to reset the position of two worksheets that are being compared side by side.</span></span> <span data-ttu-id="38244-139">Например, если пользователь сводит или развертывает одно из двух сравниваемых окон листа, метод <b>ресетпоситионссидебисиде</b> сбрасывает отображение, чтобы два окна отображались рядом друг с другом.</span><span class="sxs-lookup"><span data-stu-id="38244-139">For example, if a user minimizes or maximizes one of the two worksheet windows being compared, the <b>ResetPositionsSideBySide</b> method resets the display so that the two windows are displayed side by side again.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncScrollingSideBySide">
      <MemberSignature Language="C#" Value="public bool SyncScrollingSideBySide { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SyncScrollingSideBySide" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Windows.SyncScrollingSideBySide" />
      <MemberSignature Language="VB.NET" Value="Public Property SyncScrollingSideBySide As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SyncScrollingSideBySide { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2249)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2249)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2249)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38244-140"><b>Значение true</b> разрешает прокручивать содержимое окон одновременно, когда документы сравниваются параллельно.</span><span class="sxs-lookup"><span data-stu-id="38244-140"><b>True</b> enables scrolling the contents of windows at the same time when documents are being compared side by side.</span></span> <span data-ttu-id="38244-141"><b>False</b> отключает одновременную прокрутку окон.</span><span class="sxs-lookup"><span data-stu-id="38244-141"><b>False</b> disables scrolling the windows at the same time.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>