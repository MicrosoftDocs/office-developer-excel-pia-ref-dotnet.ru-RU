<Type Name="Shapes" FullName="Microsoft.Office.Interop.Excel.Shapes">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7d8f4259d10e89624f92628ba847b174395cf289" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="50010313" /></Metadata><TypeSignature Language="C#" Value="public interface Shapes : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Shapes implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Shapes" />
  <TypeSignature Language="VB.NET" Value="Public Interface Shapes&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class Shapes : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0002443A-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Коллекция всех объектов <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> на указанном листе.</summary>
    <remarks><para>Каждый объект представляет объект на уровне рисования, например <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> автозахва, freeform, объект OLE или рисунок.</para>
      <para>
        <b>Примечание.</b>Если вы хотите работать с подмножество фигур в документе ( например, что-то делать только с автозахваами в документе или только с выбранными фигурами), необходимо создать коллекцию, которая содержит фигуры, с которые нужно <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> работать.</para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape _Default (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape _Default([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shapes._Default(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _Default (Index As Object) As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Shape ^ _Default(System::Object ^ Index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>Зарезервировано для внутреннего использования.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCallout">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape AddCallout (Microsoft.Office.Core.MsoCalloutType Type, float Left, float Top, float Width, float Height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape AddCallout([in]valuetype Microsoft.Office.Core.MsoCalloutType Type, [in]float32 Left, [in]float32 Top, [in]float32 Width, [in]float32 Height) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shapes.AddCallout(Microsoft.Office.Core.MsoCalloutType,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddCallout (Type As MsoCalloutType, Left As Single, Top As Single, Width As Single, Height As Single) As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Shape ^ AddCallout(Microsoft::Office::Core::MsoCalloutType Type, float Left, float Top, float Width, float Height);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1713)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Core.MsoCalloutType" />
        <Parameter Name="Left" Type="System.Single" />
        <Parameter Name="Top" Type="System.Single" />
        <Parameter Name="Width" Type="System.Single" />
        <Parameter Name="Height" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Type">Обязательное <see cref="T:Microsoft.Office.Core.MsoCalloutType" /> . Тип линии вызовите. Может быть одной из этих констант <b>MsoCalloutType:</b> <b>msoCalloutOne.</b> Одно сегментная линия вызова, которая может быть горизонтальной или вертикальной. <b>msoCalloutTwo</b>. Одно сегментная линия вызова, которая свободно поворачивается. <b>msoCalloutMixed</b>. <b>msoCalloutThree</b>. Линия из двух сегментов. <b>msoCalloutFour</b>. Линия из трех сегментов.</param>
        <param name="Left">Обязательное <b>одиночное</b>. Положение (в пунктах) левого верхнего угла границ окна вызовите относительно левого верхнего угла документа.</param>
        <param name="Top">Обязательное <b>одиночное</b>. Положение (в пунктах) левого верхнего угла границ окна вызовите относительно левого верхнего угла документа.</param>
        <param name="Width">Обязательное <b>одиночное</b>. Ширина ограниченного поля вызываемой точки.</param>
        <param name="Height">Обязательное <b>одиночное</b>. Высота ограниченного окна вызываемой точки.</param>
        <summary>Создает бесграничную линию. Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> объект, который представляет новую вызываемую функцию.</summary>
        <returns>To be added.</returns>
        <remarks><para>С помощью этого метода можно вставить большее количество <see cref="M:Microsoft.Office.Interop.Excel.Shapes.AddShape(Microsoft.Office.Core.MsoAutoShapeType,System.Single,System.Single,System.Single,System.Single)" /> вызовов.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCanvas">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape AddCanvas (float Left, float Top, float Width, float Height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape AddCanvas([in]float32 Left, [in]float32 Top, [in]float32 Width, [in]float32 Height) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shapes.AddCanvas(System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddCanvas (Left As Single, Top As Single, Width As Single, Height As Single) As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Shape ^ AddCanvas(float Left, float Top, float Width, float Height);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2177)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Single" />
        <Parameter Name="Top" Type="System.Single" />
        <Parameter Name="Width" Type="System.Single" />
        <Parameter Name="Height" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Left">To be added.</param>
        <param name="Top">To be added.</param>
        <param name="Width">To be added.</param>
        <param name="Height">To be added.</param>
        <summary>Зарезервировано для внутреннего использования.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddChart">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape AddChart (object XlChartType, object Left, object Top, object Width, object Height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape AddChart([in]object XlChartType, [in]object Left, [in]object Top, [in]object Width, [in]object Height) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shapes.AddChart(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddChart (Optional XlChartType As Object, Optional Left As Object, Optional Top As Object, Optional Width As Object, Optional Height As Object) As Shape" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2665)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="XlChartType" Type="System.Object" />
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Top" Type="System.Object" />
        <Parameter Name="Width" Type="System.Object" />
        <Parameter Name="Height" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="XlChartType">To be added.</param>
        <param name="Left">To be added.</param>
        <param name="Top">To be added.</param>
        <param name="Width">To be added.</param>
        <param name="Height">To be added.</param>
        <summary>Этот объект, элемент или перечисление устарели и не предназначены для использования в коде.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddChart2">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape AddChart2 (object Style, object XlChartType, object Left, object Top, object Width, object Height, object NewLayout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape AddChart2([in]object Style, [in]object XlChartType, [in]object Left, [in]object Top, [in]object Width, [in]object Height, [in]object NewLayout) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shapes.AddChart2(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddChart2 (Optional Style As Object, Optional XlChartType As Object, Optional Left As Object, Optional Top As Object, Optional Width As Object, Optional Height As Object, Optional NewLayout As Object) As Shape" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Style" Type="System.Object" />
        <Parameter Name="XlChartType" Type="System.Object" />
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Top" Type="System.Object" />
        <Parameter Name="Width" Type="System.Object" />
        <Parameter Name="Height" Type="System.Object" />
        <Parameter Name="NewLayout" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Style">Стиль диаграммы. Использование -1 для получения стиля по умолчанию для типа диаграммы, указанной в <b>XlChartType</b></param>
        <param name="XlChartType">Тип диаграммы.</param>
        <param name="Left">Положение левого края диаграммы (в пунктах) относительно привязки.</param>
        <param name="Top">Положение верхнего края диаграммы (в пунктах) относительно привязки.</param>
        <param name="Width">Ширина диаграммы (в пунктах).</param>
        <param name="Height">Высота диаграммы (в пунктах).</param>
        <param name="NewLayout">Если заголовок имеет true, диаграмма вставляется с помощью новых правил динамического форматирования (заголовок включен, а legend включен, только если <paramref name="NewLayout" /> имеется несколько рядов).</param>
        <summary>Добавляет диаграмму в документ. Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> объект, который представляет диаграмму, и добавляет его в указанную коллекцию.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddConnector">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape AddConnector (Microsoft.Office.Core.MsoConnectorType Type, float BeginX, float BeginY, float EndX, float EndY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape AddConnector([in]valuetype Microsoft.Office.Core.MsoConnectorType Type, [in]float32 BeginX, [in]float32 BeginY, [in]float32 EndX, [in]float32 EndY) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shapes.AddConnector(Microsoft.Office.Core.MsoConnectorType,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddConnector (Type As MsoConnectorType, BeginX As Single, BeginY As Single, EndX As Single, EndY As Single) As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Shape ^ AddConnector(Microsoft::Office::Core::MsoConnectorType Type, float BeginX, float BeginY, float EndX, float EndY);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1714)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Core.MsoConnectorType" />
        <Parameter Name="BeginX" Type="System.Single" />
        <Parameter Name="BeginY" Type="System.Single" />
        <Parameter Name="EndX" Type="System.Single" />
        <Parameter Name="EndY" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Type">Обязательное <see cref="T:Microsoft.Office.Core.MsoConnectorType" /> . Тип соединителю, который необходимо добавить. Может быть одной из этих констант <b>MsoConnectorType:</b> <b>msoConnectorElbow</b><b>msoConnectorTypeMixed</b><b>msoConnectorCurve</b><b>msoConnectorStraight</b></param>
        <param name="BeginX">Обязательное <b>одиночное</b>. Горизонтальное положение (в точках) начальной точки соединители относительно левого верхнего угла документа.</param>
        <param name="BeginY">Обязательное <b>одиночное</b>. Вертикальное положение (в точках) начальной точки соединителя относительно левого верхнего угла документа.</param>
        <param name="EndX">Обязательное <b>одиночное</b>. Горизонтальное положение (в пунктах) конечной точки соединители относительно левого верхнего угла документа.</param>
        <param name="EndY">Обязательное <b>одиночное</b>. Veritcal position (in points) of the connector's end point relative to the upper-left corner of the document.</param>
        <summary>Создает соединители. Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> объект, который представляет новый соединител.</summary>
        <returns>To be added.</returns>
        <remarks><para>При добавлении соединители не подключены ни к чему. Используйте методы и методы для подключения начала и конца соединителя к другим <see cref="M:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginConnect(Microsoft.Office.Interop.Excel.Shape,System.Int32)" /> <see cref="M:Microsoft.Office.Interop.Excel.ConnectorFormat.EndConnect(Microsoft.Office.Interop.Excel.Shape,System.Int32)" /> фигурам в документе.</para>
          <para>При подключении соединителя к фигуре размер и положение соединителя при необходимости автоматически настраиваются. Таким образом, если вы собираетесь прикрепить соединители к другим фигурам, положение и размеры, которые вы указываете при добавлении соединителя, не имеют значения.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape AddCurve (object SafeArrayOfPoints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape AddCurve([in]object SafeArrayOfPoints) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shapes.AddCurve(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddCurve (SafeArrayOfPoints As Object) As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Shape ^ AddCurve(System::Object ^ SafeArrayOfPoints);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1719)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SafeArrayOfPoints" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SafeArrayOfPoints">Необходимый <b>объект</b>. Массив пар координат, который указывает вершины и контрольные точки кривой. Первая указанная точка — это начальная вершина, а две следующие точки — контрольные точки для первого сегмента Безье. Затем для каждого дополнительного сегмента кривой необходимо указать вершину и две контрольные точки. Последняя указанная точка — это конечная вершина кривой. Обратите внимание, что всегда необходимо указать 3n + 1 точку, где n — это число сегментов в кривой.</param>
        <summary>Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> объект, который представляет кривую Безье на этом литере.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDiagram">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape AddDiagram (Microsoft.Office.Core.MsoDiagramType Type, float Left, float Top, float Width, float Height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape AddDiagram([in]valuetype Microsoft.Office.Core.MsoDiagramType Type, [in]float32 Left, [in]float32 Top, [in]float32 Width, [in]float32 Height) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shapes.AddDiagram(Microsoft.Office.Core.MsoDiagramType,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddDiagram (Type As MsoDiagramType, Left As Single, Top As Single, Width As Single, Height As Single) As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Shape ^ AddDiagram(Microsoft::Office::Core::MsoDiagramType Type, float Left, float Top, float Width, float Height);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2176)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Core.MsoDiagramType" />
        <Parameter Name="Left" Type="System.Single" />
        <Parameter Name="Top" Type="System.Single" />
        <Parameter Name="Width" Type="System.Single" />
        <Parameter Name="Height" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Type">Обязательное <see cref="T:Microsoft.Office.Core.MsoDiagramType" /> . Тип схемы. Может быть одной из этих констант <b>MsoDiagramType:</b> схема процесса<b>msoDiagramCycle</b> A с типом схемы непрерывного цикла. <b>msoDiagramMixed</b> Смешанный тип схемы. <b>msoDiagramOrgChart</b> Тип схемы иерархических отношений. <b>msoDiagramPyramid</b> Тип схемы отношений на основе основы. <b>msoDiagramRadial</b> Тип схемы, показывающий связи основного элемента. <b>msoDiagramTarget</b> Тип схемы, на котором показаны шаги к достижению цели. <b>msoDiagramVenn</b> Тип схемы, показывающий области перекрытия между элементами.</param>
        <param name="Left">Обязательное <b>одиночное</b>. Положение (в пунктах) левого верхнего угла схемы относительно левого верхнего угла таблицы.</param>
        <param name="Top">Обязательное <b>одиночное</b>. Положение (в пунктах) верхней левой верхней части схемы относительно левого верхнего угла таблицы.</param>
        <param name="Width">Обязательное <b>одиночное</b>. Ширина схемы в пунктах.</param>
        <param name="Height">Обязательное <b>одиночное</b>. Высота схемы в пунктах.</param>
        <summary>Создает схему. Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> объект, который представляет новую схему.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFormControl">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape AddFormControl (Microsoft.Office.Interop.Excel.XlFormControl Type, int Left, int Top, int Width, int Height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape AddFormControl([in]valuetype Microsoft.Office.Interop.Excel.XlFormControl Type, [in]int32 Left, [in]int32 Top, [in]int32 Width, [in]int32 Height) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shapes.AddFormControl(Microsoft.Office.Interop.Excel.XlFormControl,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddFormControl (Type As XlFormControl, Left As Integer, Top As Integer, Width As Integer, Height As Integer) As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Shape ^ AddFormControl(Microsoft::Office::Interop::Excel::XlFormControl Type, int Left, int Top, int Width, int Height);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1738)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlFormControl" />
        <Parameter Name="Left" Type="System.Int32" />
        <Parameter Name="Top" Type="System.Int32" />
        <Parameter Name="Width" Type="System.Int32" />
        <Parameter Name="Height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Type">Обязательное <see cref="T:Microsoft.Office.Interop.Excel.XlFormControl" /> . Тип управления Microsoft Excel. На этом сайте невозможно создать поле редактирования. Может быть одной из этих констант <b>XlFormControl:</b> <b>xlButtonControl</b><b>xlCheckBox</b><b>xlDropDown xlEditBox</b><b></b><b>xlGroupBox</b><b>xlLabel</b><b>xlListBox xlOptionButton</b><b></b><b>xlScrollBar</b><b>xlSpinner</b></param>
        <param name="Left">Обязательный атрибут типа <b>Integer</b>. Начальные координаты нового объекта (в пунктах) относительно левого верхнего угла ячейки A1 на графике или левого верхнего угла диаграммы.</param>
        <param name="Top">Обязательный атрибут типа <b>Integer</b>. Начальные координаты нового объекта (в пунктах) относительно левого верхнего угла ячейки A1 на графике или левого верхнего угла диаграммы.</param>
        <param name="Width">Обязательный атрибут типа <b>Integer</b>. Начальный размер нового объекта в пунктах.</param>
        <param name="Height">Обязательный атрибут типа <b>Integer</b>. Начальный размер нового объекта в пунктах.</param>
        <summary>Создает microsoft Excel control. Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> объект, который представляет новый объект управления.</summary>
        <returns>To be added.</returns>
        <remarks><para>Используйте метод <see cref="M:Microsoft.Office.Interop.Excel.Shapes.AddOLEObject(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> или метод <see cref="M:Microsoft.Office.Interop.Excel.OLEObjects.Add(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> коллекции OLEObjects для создания ActiveX управления.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLabel">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape AddLabel (Microsoft.Office.Core.MsoTextOrientation Orientation, float Left, float Top, float Width, float Height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape AddLabel([in]valuetype Microsoft.Office.Core.MsoTextOrientation Orientation, [in]float32 Left, [in]float32 Top, [in]float32 Width, [in]float32 Height) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shapes.AddLabel(Microsoft.Office.Core.MsoTextOrientation,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddLabel (Orientation As MsoTextOrientation, Left As Single, Top As Single, Width As Single, Height As Single) As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Shape ^ AddLabel(Microsoft::Office::Core::MsoTextOrientation Orientation, float Left, float Top, float Width, float Height);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1721)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Orientation" Type="Microsoft.Office.Core.MsoTextOrientation" />
        <Parameter Name="Left" Type="System.Single" />
        <Parameter Name="Top" Type="System.Single" />
        <Parameter Name="Width" Type="System.Single" />
        <Parameter Name="Height" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Orientation">Обязательное <see cref="T:Microsoft.Office.Core.MsoTextOrientation" /> . Ориентация текста в метку. Может быть одной из этих констант <b>MsoTextOrientation:</b> <b>msoTextOrientationDownward</b><b>msoTextOrientationHorizontal</b><b>msoTextOrientationHorizontalRotatedFarEast</b><b>msoTextOrientationMixed</b><b>msoTextOrientationUpward</b><b>msoTextOrientationVertical</b><b>msoTextOrientationVerticalFarEast </b>Some of these constants may not be available to you, в зависимости от выбранной или установленной языковой поддержки (например, для английского языка США).</param>
        <param name="Left">Обязательное <b>одиночное</b>. Положение (в пунктах) левого верхнего угла метки относительно левого верхнего угла документа.</param>
        <param name="Top">Обязательное <b>одиночное</b>. Положение (в пунктах) левого верхнего угла метки относительно верхнего угла документа.</param>
        <param name="Width">Обязательное <b>одиночное</b>. Ширина метки в пунктах.</param>
        <param name="Height">Обязательное <b>одиночное</b>. Высота метки в пунктах.</param>
        <summary>Создает метку. Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> объект, который представляет новую метку.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLine">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape AddLine (float BeginX, float BeginY, float EndX, float EndY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape AddLine([in]float32 BeginX, [in]float32 BeginY, [in]float32 EndX, [in]float32 EndY) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shapes.AddLine(System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddLine (BeginX As Single, BeginY As Single, EndX As Single, EndY As Single) As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Shape ^ AddLine(float BeginX, float BeginY, float EndX, float EndY);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1722)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="BeginX" Type="System.Single" />
        <Parameter Name="BeginY" Type="System.Single" />
        <Parameter Name="EndX" Type="System.Single" />
        <Parameter Name="EndY" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="BeginX">Обязательное <b>одиночное</b>. Положение (в точках) начальной точки строки относительно левого верхнего угла документа.</param>
        <param name="BeginY">Обязательное <b>одиночное</b>. Положение (в точках) начальной точки строки относительно левого верхнего угла документа.</param>
        <param name="EndX">Обязательное <b>одиночное</b>. Положение конечной точки линии (в пунктах) относительно левого верхнего угла документа.</param>
        <param name="EndY">Обязательное <b>одиночное</b>. Положение конечной точки линии (в пунктах) относительно левого верхнего угла документа.</param>
        <summary>Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> объект, который представляет новую строку на литье.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOLEObject">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape AddOLEObject (object ClassType, object Filename, object Link, object DisplayAsIcon, object IconFileName, object IconIndex, object IconLabel, object Left, object Top, object Width, object Height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape AddOLEObject([in]object ClassType, [in]object Filename, [in]object Link, [in]object DisplayAsIcon, [in]object IconFileName, [in]object IconIndex, [in]object IconLabel, [in]object Left, [in]object Top, [in]object Width, [in]object Height) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shapes.AddOLEObject(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddOLEObject (Optional ClassType As Object, Optional Filename As Object, Optional Link As Object, Optional DisplayAsIcon As Object, Optional IconFileName As Object, Optional IconIndex As Object, Optional IconLabel As Object, Optional Left As Object, Optional Top As Object, Optional Width As Object, Optional Height As Object) As Shape" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1739)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ClassType" Type="System.Object" />
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="Link" Type="System.Object" />
        <Parameter Name="DisplayAsIcon" Type="System.Object" />
        <Parameter Name="IconFileName" Type="System.Object" />
        <Parameter Name="IconIndex" Type="System.Object" />
        <Parameter Name="IconLabel" Type="System.Object" />
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Top" Type="System.Object" />
        <Parameter Name="Width" Type="System.Object" />
        <Parameter Name="Height" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ClassType"><b>Необязательный объект</b>. (необходимо указать <paramref name="ClassType" /> <paramref name="FileName" /> либо). Строка, содержаная программный идентификатор созда создаемго объекта. Если <paramref name="ClassType" /> он указан и <paramref name="FileName" /> <paramref name="Link" /> игнорируется.</param>
        <param name="Filename"><b>Необязательный объект</b>. Файл, из которого создается объект. Если путь не указан, используется текущая рабочая папка. Необходимо указать либо аргумент, <paramref name="ClassType" /> либо <paramref name="FileName" /> аргумент для объекта, но не оба этих аргумента.</param>
        <param name="Link"><b>Необязательный объект</b>. <b>True,</b> чтобы связать объект OLE с файлом, из которого он был создан. <b>False,</b> чтобы сделать объект OLE независимой копией файла. Если вы указали значение <paramref name="ClassType" /> для, этот аргумент должен иметь значение <b>False.</b> Значение по умолчанию — <b>False</b>.</param>
        <param name="DisplayAsIcon"><b>Необязательный объект</b>. <b>True,</b> чтобы отобразить объект OLE в качестве значка. Значение по умолчанию — <b>False</b>.</param>
        <param name="IconFileName"><b>Необязательный объект</b>. Файл, содержащий значок для отображения.</param>
        <param name="IconIndex"><b>Необязательный объект</b>. Индекс значка в <paramref name="IconFileName" /> пределах . Порядок значков в указанном файле соответствует порядку, в котором значки отображаются в диалоговом окне "Значок изменения" (доступ к ним можно получить в диалоговом окне "Объект", если установлен соответствующий пометка "Отобразить как значок"). Первый значок в файле имеет индекс 0 (ноль). Если значок с заданным номером индекса не существует, используется значок с индексом 1 (второй значок <paramref name="IconFileName" /> в файле). Значение по умолчанию: 0 (ноль).</param>
        <param name="IconLabel"><b>Необязательный объект</b>. Метка (подпись), отображаемая под значком.</param>
        <param name="Left"><b>Необязательный объект</b>. Положение (в пунктах) левого верхнего угла нового объекта относительно левого верхнего угла документа. Значение по умолчанию: 0 (ноль).</param>
        <param name="Top"><b>Необязательный объект</b>. Положение (в пунктах) левого верхнего угла нового объекта относительно левого верхнего угла документа. Значение по умолчанию: 0 (ноль).</param>
        <param name="Width"><b>Необязательный объект</b>. Начальные размеры объекта OLE в пунктах.</param>
        <param name="Height"><b>Необязательный объект</b>. Начальные размеры объекта OLE в пунктах.</param>
        <summary>Создает объект OLE. Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> объект, который представляет новый объект OLE.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPicture">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape AddPicture (string Filename, Microsoft.Office.Core.MsoTriState LinkToFile, Microsoft.Office.Core.MsoTriState SaveWithDocument, float Left, float Top, float Width, float Height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape AddPicture([in]string Filename, [in]valuetype Microsoft.Office.Core.MsoTriState LinkToFile, [in]valuetype Microsoft.Office.Core.MsoTriState SaveWithDocument, [in]float32 Left, [in]float32 Top, [in]float32 Width, [in]float32 Height) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shapes.AddPicture(System.String,Microsoft.Office.Core.MsoTriState,Microsoft.Office.Core.MsoTriState,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddPicture (Filename As String, LinkToFile As MsoTriState, SaveWithDocument As MsoTriState, Left As Single, Top As Single, Width As Single, Height As Single) As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Shape ^ AddPicture(System::String ^ Filename, Microsoft::Office::Core::MsoTriState LinkToFile, Microsoft::Office::Core::MsoTriState SaveWithDocument, float Left, float Top, float Width, float Height);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1723)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="LinkToFile" Type="Microsoft.Office.Core.MsoTriState" />
        <Parameter Name="SaveWithDocument" Type="Microsoft.Office.Core.MsoTriState" />
        <Parameter Name="Left" Type="System.Single" />
        <Parameter Name="Top" Type="System.Single" />
        <Parameter Name="Width" Type="System.Single" />
        <Parameter Name="Height" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Filename">Обязательный атрибут типа <b>String</b>. Файл, из которого создается объект OLE.</param>
        <param name="LinkToFile">Обязательное <see cref="T:Microsoft.Office.Core.MsoTriState" /> . Файл для ссылки. Может быть одной из этих констант <b>MsoTriState:</b> <b>msoCTrue</b><b>msoFalse,</b> чтобы сделать изображение независимой копией файла. <b>msoTriStateMixed</b><b>msoTriStateToggle</b><b>msoTrue</b> To link the picture to the file from which it was created.</param>
        <param name="SaveWithDocument">Необходимый <b>msoTriState</b>. Сохранение изображения с документом.</param>
        <param name="Left">Обязательное <b>одиночное</b>. Положение (в пунктах) левого верхнего угла изображения относительно левого верхнего угла документа.</param>
        <param name="Top">Обязательное <b>одиночное</b>. Положение (в пунктах) левого верхнего угла изображения относительно верхней части документа.</param>
        <param name="Width">Обязательное <b>одиночное</b>. Ширина изображения в пунктах.</param>
        <param name="Height">Обязательное <b>одиночное</b>. Высота изображения в пунктах.</param>
        <summary>Создает рисунок из существующего файла. Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> объект, который представляет новый рисунок.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPicture2">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape AddPicture2 (string Filename, Microsoft.Office.Core.MsoTriState LinkToFile, Microsoft.Office.Core.MsoTriState SaveWithDocument, float Left, float Top, float Width, float Height, Microsoft.Office.Core.MsoPictureCompress Compress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape AddPicture2([in]string Filename, [in]valuetype Microsoft.Office.Core.MsoTriState LinkToFile, [in]valuetype Microsoft.Office.Core.MsoTriState SaveWithDocument, [in]float32 Left, [in]float32 Top, [in]float32 Width, [in]float32 Height, [in]valuetype Microsoft.Office.Core.MsoPictureCompress Compress) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shapes.AddPicture2(System.String,Microsoft.Office.Core.MsoTriState,Microsoft.Office.Core.MsoTriState,System.Single,System.Single,System.Single,System.Single,Microsoft.Office.Core.MsoPictureCompress)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddPicture2 (Filename As String, LinkToFile As MsoTriState, SaveWithDocument As MsoTriState, Left As Single, Top As Single, Width As Single, Height As Single, Compress As MsoPictureCompress) As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Shape ^ AddPicture2(System::String ^ Filename, Microsoft::Office::Core::MsoTriState LinkToFile, Microsoft::Office::Core::MsoTriState SaveWithDocument, float Left, float Top, float Width, float Height, Microsoft::Office::Core::MsoPictureCompress Compress);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3159)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="LinkToFile" Type="Microsoft.Office.Core.MsoTriState" />
        <Parameter Name="SaveWithDocument" Type="Microsoft.Office.Core.MsoTriState" />
        <Parameter Name="Left" Type="System.Single" />
        <Parameter Name="Top" Type="System.Single" />
        <Parameter Name="Width" Type="System.Single" />
        <Parameter Name="Height" Type="System.Single" />
        <Parameter Name="Compress" Type="Microsoft.Office.Core.MsoPictureCompress" />
      </Parameters>
      <Docs>
        <param name="Filename">Файл, из которого создается объект OLE.</param>
        <param name="LinkToFile">Определяет, будет ли изображение связано с файлом, из которого оно было создано.</param>
        <param name="SaveWithDocument">Определяет, будет ли связанное изображение сохранено вместе с документом, в который он вставляется. Этот аргумент должен иметь значение msoTrue, если LinkToFile имеет значение msoFalse.</param>
        <param name="Left">Положение левого края изображения, измеряемого в пунктах относительно левого края таблицы.</param>
        <param name="Top">Положение верхнего края изображения в пунктах относительно верхнего края таблицы.</param>
        <param name="Width">Ширина изображения, измеряемая в пунктах.</param>
        <param name="Height">Высота изображения, измеряемая в точках.</param>
        <param name="Compress">Определяет, следует ли сжимать изображение при вставке.</param>
        <summary>Создает изображение из существующего файла. Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> объект, который представляет новый рисунок.</summary>
        <returns>Shape</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPolyline">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape AddPolyline (object SafeArrayOfPoints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape AddPolyline([in]object SafeArrayOfPoints) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shapes.AddPolyline(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddPolyline (SafeArrayOfPoints As Object) As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Shape ^ AddPolyline(System::Object ^ SafeArrayOfPoints);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1726)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SafeArrayOfPoints" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SafeArrayOfPoints">Необходимый <b>объект</b>. Массив пар координат, который указывает вершины многостроковых рисунков.</param>
        <summary>Создает открытый многолинейный или закрытый многоугольный рисунок. Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> объект, который представляет новую многоугольную или многоугольную линию.</summary>
        <returns>To be added.</returns>
        <remarks><para>Чтобы создать закрытый многоугольный угон, назначьте одинаковые координаты первой и последней вершинам в многолинейном рисунке.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddShape">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape AddShape (Microsoft.Office.Core.MsoAutoShapeType Type, float Left, float Top, float Width, float Height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape AddShape([in]valuetype Microsoft.Office.Core.MsoAutoShapeType Type, [in]float32 Left, [in]float32 Top, [in]float32 Width, [in]float32 Height) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shapes.AddShape(Microsoft.Office.Core.MsoAutoShapeType,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddShape (Type As MsoAutoShapeType, Left As Single, Top As Single, Width As Single, Height As Single) As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Shape ^ AddShape(Microsoft::Office::Core::MsoAutoShapeType Type, float Left, float Top, float Width, float Height);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1727)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Core.MsoAutoShapeType" />
        <Parameter Name="Left" Type="System.Single" />
        <Parameter Name="Top" Type="System.Single" />
        <Parameter Name="Width" Type="System.Single" />
        <Parameter Name="Height" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Type">Обязательное <see cref="T:Microsoft.Office.Core.MsoAutoShapeType" /> . Указывает тип создаемой автозахваки.</param>
        <param name="Left">Обязательное <b>одиночное</b>. Положение (в пунктах) левого верхнего угла границ окна автозахваки относительно левого верхнего угла документа.</param>
        <param name="Top">Обязательное <b>одиночное</b>. Положение (в пунктах) левого верхнего угла границ окна автозахваки относительно левого верхнего угла документа.</param>
        <param name="Width">Обязательное <b>одиночное</b>. Ширина и высота ограниченного поля автозахваки в пунктах.</param>
        <param name="Height">Обязательное <b>одиночное</b>. Ширина и высота ограниченного поля автозахваки в пунктах.</param>
        <summary>Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> объект, который представляет новую автозахваку на worksheet.</summary>
        <returns>To be added.</returns>
        <remarks><para>Чтобы изменить тип добавленной автозаписи, установите <see cref="P:Microsoft.Office.Interop.Excel.Shape.AutoShapeType" /> свойство.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSmartArt">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape AddSmartArt (Microsoft.Office.Core.SmartArtLayout Layout, object Left, object Top, object Width, object Height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape AddSmartArt([in]class Microsoft.Office.Core.SmartArtLayout Layout, [in]object Left, [in]object Top, [in]object Width, [in]object Height) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shapes.AddSmartArt(Microsoft.Office.Core.SmartArtLayout,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddSmartArt (Layout As SmartArtLayout, Optional Left As Object, Optional Top As Object, Optional Width As Object, Optional Height As Object) As Shape" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2920)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Layout" Type="Microsoft.Office.Core.SmartArtLayout" />
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Top" Type="System.Object" />
        <Parameter Name="Width" Type="System.Object" />
        <Parameter Name="Height" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Layout">Объект, который представляет используемую разметку.</param>
        <param name="Left">Расстояние в пунктах от левого края объекта до левого края столбца A (на графике) или левого края области диаграммы (на диаграмме).</param>
        <param name="Top">Расстояние (в пунктах) от верхнего края объекта до верхнего края таблицы.</param>
        <param name="Width">Ширина объекта (в пунктах).</param>
        <param name="Height">Ширина объекта (в пунктах).</param>
        <summary>Создает новый графический элемент SmartArt с указанным макетом.</summary>
        <returns>Объект <see cref="T:Microsoft.Office.Interop.Excel.Shape" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTextbox">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape AddTextbox (Microsoft.Office.Core.MsoTextOrientation Orientation, float Left, float Top, float Width, float Height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape AddTextbox([in]valuetype Microsoft.Office.Core.MsoTextOrientation Orientation, [in]float32 Left, [in]float32 Top, [in]float32 Width, [in]float32 Height) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shapes.AddTextbox(Microsoft.Office.Core.MsoTextOrientation,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddTextbox (Orientation As MsoTextOrientation, Left As Single, Top As Single, Width As Single, Height As Single) As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Shape ^ AddTextbox(Microsoft::Office::Core::MsoTextOrientation Orientation, float Left, float Top, float Width, float Height);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1734)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Orientation" Type="Microsoft.Office.Core.MsoTextOrientation" />
        <Parameter Name="Left" Type="System.Single" />
        <Parameter Name="Top" Type="System.Single" />
        <Parameter Name="Width" Type="System.Single" />
        <Parameter Name="Height" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Orientation">Обязательное <see cref="T:Microsoft.Office.Core.MsoTextOrientation" /> . Ориентация текстового ящика.</param>
        <param name="Left">Обязательное <b>одиночное</b>. Положение (в пунктах) левого верхнего угла текстового окна относительно левого верхнего угла документа.</param>
        <param name="Top">Обязательное <b>одиночное</b>. Положение (в пунктах) левого верхнего угла текстового окна относительно верхней части документа.</param>
        <param name="Width">Обязательное <b>одиночное</b>. Ширина текстового поля в пунктах.</param>
        <param name="Height">Обязательное <b>одиночное</b>. Высота текстового окна в пунктах.</param>
        <summary>Создает текстовое поле. Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> объект, который представляет новое текстовое поле.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTextEffect">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape AddTextEffect (Microsoft.Office.Core.MsoPresetTextEffect PresetTextEffect, string Text, string FontName, float FontSize, Microsoft.Office.Core.MsoTriState FontBold, Microsoft.Office.Core.MsoTriState FontItalic, float Left, float Top);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape AddTextEffect([in]valuetype Microsoft.Office.Core.MsoPresetTextEffect PresetTextEffect, [in]string Text, [in]string FontName, [in]float32 FontSize, [in]valuetype Microsoft.Office.Core.MsoTriState FontBold, [in]valuetype Microsoft.Office.Core.MsoTriState FontItalic, [in]float32 Left, [in]float32 Top) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shapes.AddTextEffect(Microsoft.Office.Core.MsoPresetTextEffect,System.String,System.String,System.Single,Microsoft.Office.Core.MsoTriState,Microsoft.Office.Core.MsoTriState,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddTextEffect (PresetTextEffect As MsoPresetTextEffect, Text As String, FontName As String, FontSize As Single, FontBold As MsoTriState, FontItalic As MsoTriState, Left As Single, Top As Single) As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Shape ^ AddTextEffect(Microsoft::Office::Core::MsoPresetTextEffect PresetTextEffect, System::String ^ Text, System::String ^ FontName, float FontSize, Microsoft::Office::Core::MsoTriState FontBold, Microsoft::Office::Core::MsoTriState FontItalic, float Left, float Top);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1728)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PresetTextEffect" Type="Microsoft.Office.Core.MsoPresetTextEffect" />
        <Parameter Name="Text" Type="System.String" />
        <Parameter Name="FontName" Type="System.String" />
        <Parameter Name="FontSize" Type="System.Single" />
        <Parameter Name="FontBold" Type="Microsoft.Office.Core.MsoTriState" />
        <Parameter Name="FontItalic" Type="Microsoft.Office.Core.MsoTriState" />
        <Parameter Name="Left" Type="System.Single" />
        <Parameter Name="Top" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="PresetTextEffect">Обязательное <see cref="T:Microsoft.Office.Core.MsoPresetTextEffect" /> . Заранее заранее замествовая текстовая эффект.</param>
        <param name="Text">Обязательный атрибут типа <b>String</b>. Текст в WordArt.</param>
        <param name="FontName">Обязательный атрибут типа <b>String</b>. Имя шрифта, используемого в WordArt.</param>
        <param name="FontSize">Обязательное <b>одиночное</b>. Размер шрифта, используемого в WordArt (в пунктах).</param>
        <param name="FontBold">Обязательное <see cref="T:Microsoft.Office.Core.MsoTriState" /> . Шрифт, используемый в WordArt для полужирного шрифта.</param>
        <param name="FontItalic">Необходимый <b>msoTriState</b>. Шрифт, используемый в WordArt для использования на italic.</param>
        <param name="Left">Обязательное <b>одиночное</b>. Положение (в пунктах) левого верхнего угла границы WordArt относительно левого верхнего угла документа.</param>
        <param name="Top">Обязательное <b>одиночное</b>. Положение (в пунктах) левого верхнего угла границы WordArt относительно верхней части документа.</param>
        <summary>Создает объект WordArt. Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> объект, который представляет новый объект WordArt.</summary>
        <returns>To be added.</returns>
        <remarks><para>При добавлении WordArt в документ высота и ширина WordArt автоматически устанавливаются в зависимости от размера и объема текста, который вы указываете.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shapes.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Application" /> объект, который представляет приложение Microsoft Excel.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildFreeform">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.FreeformBuilder BuildFreeform (Microsoft.Office.Core.MsoEditingType EditingType, float X1, float Y1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.FreeformBuilder BuildFreeform([in]valuetype Microsoft.Office.Core.MsoEditingType EditingType, [in]float32 X1, [in]float32 Y1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shapes.BuildFreeform(Microsoft.Office.Core.MsoEditingType,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function BuildFreeform (EditingType As MsoEditingType, X1 As Single, Y1 As Single) As FreeformBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::FreeformBuilder ^ BuildFreeform(Microsoft::Office::Core::MsoEditingType EditingType, float X1, float Y1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1735)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.FreeformBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EditingType" Type="Microsoft.Office.Core.MsoEditingType" />
        <Parameter Name="X1" Type="System.Single" />
        <Parameter Name="Y1" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="EditingType">Обязательное <see cref="T:Microsoft.Office.Core.MsoEditingType" /> . Свойство редактирования первого узла.</param>
        <param name="X1">Обязательное <b>одиночное</b>. Положение (в пунктах) первого узла в свободном документе относительно левого верхнего угла документа.</param>
        <param name="Y1">Обязательное <b>одиночное</b>. Положение (в пунктах) первого узла в свободном документе относительно левого верхнего угла документа.</param>
        <summary>Создает объект freeform. Возвращает <see cref="T:Microsoft.Office.Interop.Excel.FreeformBuilder" /> объект, который представляет свободной формы при его построении.</summary>
        <returns>To be added.</returns>
        <remarks><para>Используйте этот <see cref="M:Microsoft.Office.Interop.Excel.FreeformBuilder.AddNodes(Microsoft.Office.Core.MsoSegmentType,Microsoft.Office.Core.MsoEditingType,System.Single,System.Single,System.Object,System.Object,System.Object,System.Object)" /> метод для добавления сегментов в бесплатную формы. После того как вы добавили по крайней мере один сегмент в freeform, вы можете использовать этот метод для преобразования объекта FreeformBuilder в объект с геометрическим описанием, которое вы определили в <see cref="M:Microsoft.Office.Interop.Excel.FreeformBuilder.ConvertToShape" /> <b></b> <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> <b>объекте FreeformBuilder.</b></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shapes.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает количество объектов в коллекции.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shapes.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает 32-битное целое число, указывающее на приложение, в котором объект был создан.</summary>
        <value>To be added.</value>
        <remarks><para>Если объект был создан в Microsoft Excel, это свойство возвращает строку XCEL, эквивалентную 5843454C.</para>
          <para>Свойство <b>Creator</b> предназначено для использования в Microsoft Excel для Macintosh, где каждое приложение имеет четырех символьный код создателя. Например, в Microsoft Excel есть код создателя XCEL.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shapes.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape Item (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape Item([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shapes.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Item (Index As Object) As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Shape ^ Item(System::Object ^ Index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">Необходимый <b>объект</b>. Имя или номер индекса для объекта.</param>
        <summary>Возвращает один объект из коллекции.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shapes.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает родительский объект для указанного объекта.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Range">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ShapeRange Range[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ShapeRange Range(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shapes.Range(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Range(Index As Object) As ShapeRange" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ShapeRange ^ Range[System::Object ^] { Microsoft::Office::Interop::Excel::ShapeRange ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(197)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(197)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ShapeRange</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">Необходимый <b>объект</b>. Отдельные фигуры, которые необходимо включить в диапазон. Может быть integer, который указывает номер индекса фигуры, строку, указывавую имя фигуры, или массив, содержащий либо integers, либо строки.</param>
        <summary>Возвращает <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> объект, который представляет подмножество фигур в <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> коллекции.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectAll">
      <MemberSignature Language="C#" Value="public void SelectAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectAll() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shapes.SelectAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1737)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Выбирает все фигуры в указанной <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> коллекции.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>