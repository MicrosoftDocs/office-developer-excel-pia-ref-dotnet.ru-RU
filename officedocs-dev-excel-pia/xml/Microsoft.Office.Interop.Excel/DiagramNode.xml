<Type Name="DiagramNode" FullName="Microsoft.Office.Interop.Excel.DiagramNode">
  <Metadata><Meta Name="ms.openlocfilehash" Value="86e622fca7f83a44ee8326d13178a7a41108a865" /><Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/24/2018" /><Meta Name="ms.locfileid" Value="20576148" /></Metadata><TypeSignature Language="C#" Value="public interface DiagramNode : Microsoft.Office.Core._IMsoDispObj" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract DiagramNode implements class Microsoft.Office.Core._IMsoDispObj" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.DiagramNode" />
  <TypeSignature Language="VB.NET" Value="Public Interface DiagramNode&#xA;Implements _IMsoDispObj" />
  <TypeSignature Language="C++ CLI" Value="public interface class DiagramNode : Microsoft::Office::Core::_IMsoDispObj" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Office.Core._IMsoDispObj</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000C0370-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4304)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="49aa4-101">Представляет узел в схеме.</span><span class="sxs-lookup"><span data-stu-id="49aa4-101">Represents a node in a diagram.</span></span></summary>
    <remarks><para><span data-ttu-id="49aa4-102">Используйте <see cref="M:Microsoft.Office.Interop.Excel.DiagramNode.AddNode(Microsoft.Office.Core.MsoRelativeNodePosition,Microsoft.Office.Core.MsoDiagramNodeType)" /> метод, чтобы добавить узел в схему или узел схемы.</span><span class="sxs-lookup"><span data-stu-id="49aa4-102">Use the <see cref="M:Microsoft.Office.Interop.Excel.DiagramNode.AddNode(Microsoft.Office.Core.MsoRelativeNodePosition,Microsoft.Office.Core.MsoDiagramNodeType)" /> method to add a node to a diagram or to a diagram node.</span></span></para>
      <para><span data-ttu-id="49aa4-103">Используйте <see cref="M:Microsoft.Office.Interop.Excel.DiagramNode.Delete" /> метод, чтобы удалить узел из схемы или узла схемы.</span><span class="sxs-lookup"><span data-stu-id="49aa4-103">Use the <see cref="M:Microsoft.Office.Interop.Excel.DiagramNode.Delete" /> method to remove a node from a diagram or diagram node.</span></span></para>
      <para><span data-ttu-id="49aa4-104">Чтобы получить объект <b>диаграмноде</b> , используйте один из следующих вариантов:</span><span class="sxs-lookup"><span data-stu-id="49aa4-104">To return a <b>DiagramNode</b> object, use one of the following:</span></span></para>
      <list type="bullet">
        <item>
          <description><span data-ttu-id="49aa4-105">Объект <b>DiagramNode</b> <see cref="M:Microsoft.Office.Interop.Excel.DiagramNode.AddNode(Microsoft.Office.Core.MsoRelativeNodePosition,Microsoft.Office.Core.MsoDiagramNodeType)" /> <see cref="M:Microsoft.Office.Interop.Excel.DiagramNode.CloneNode(System.Boolean,Microsoft.Office.Interop.Excel.DiagramNode,Microsoft.Office.Core.MsoRelativeNodePosition)" />,, <see cref="M:Microsoft.Office.Interop.Excel.DiagramNode.NextNode" />, или <see cref="M:Microsoft.Office.Interop.Excel.DiagramNode.PrevNode" /> методы, или его <see cref="P:Microsoft.Office.Interop.Excel.DiagramNode.Root" /> свойство диаграмноде</span><span class="sxs-lookup"><span data-stu-id="49aa4-105">The <b>DiagramNode</b> object's <see cref="M:Microsoft.Office.Interop.Excel.DiagramNode.AddNode(Microsoft.Office.Core.MsoRelativeNodePosition,Microsoft.Office.Core.MsoDiagramNodeType)" />, <see cref="M:Microsoft.Office.Interop.Excel.DiagramNode.CloneNode(System.Boolean,Microsoft.Office.Interop.Excel.DiagramNode,Microsoft.Office.Core.MsoRelativeNodePosition)" />, <see cref="M:Microsoft.Office.Interop.Excel.DiagramNode.NextNode" />, or <see cref="M:Microsoft.Office.Interop.Excel.DiagramNode.PrevNode" /> methods or its <see cref="P:Microsoft.Office.Interop.Excel.DiagramNode.Root" /> property</span></span></description>
        </item>
        <item>
          <description><span data-ttu-id="49aa4-106"><see cref="M:Microsoft.Office.Interop.Excel.DiagramNodeChildren.Item(System.Object)" /> Методы <see cref="T:Microsoft.Office.Interop.Excel.DiagramNodeChildren" /> <see cref="P:Microsoft.Office.Interop.Excel.DiagramNodeChildren.FirstChild" /> или <see cref="P:Microsoft.Office.Interop.Excel.DiagramNodeChildren.LastChild" /> свойства <see cref="M:Microsoft.Office.Interop.Excel.DiagramNodeChildren.AddNode(System.Object,Microsoft.Office.Core.MsoDiagramNodeType)" /> коллекции или</span><span class="sxs-lookup"><span data-stu-id="49aa4-106">The <see cref="T:Microsoft.Office.Interop.Excel.DiagramNodeChildren" /> collection's <see cref="M:Microsoft.Office.Interop.Excel.DiagramNodeChildren.AddNode(System.Object,Microsoft.Office.Core.MsoDiagramNodeType)" /> or <see cref="M:Microsoft.Office.Interop.Excel.DiagramNodeChildren.Item(System.Object)" /> methods or <see cref="P:Microsoft.Office.Interop.Excel.DiagramNodeChildren.FirstChild" /> or <see cref="P:Microsoft.Office.Interop.Excel.DiagramNodeChildren.LastChild" /> properties</span></span></description>
        </item>
        <item>
          <description><span data-ttu-id="49aa4-107"><see cref="M:Microsoft.Office.Interop.Excel.DiagramNodes.Item(System.Object)" /> Метод <see cref="T:Microsoft.Office.Interop.Excel.DiagramNodes" /> коллекции</span><span class="sxs-lookup"><span data-stu-id="49aa4-107">The <see cref="T:Microsoft.Office.Interop.Excel.DiagramNodes" /> collection's <see cref="M:Microsoft.Office.Interop.Excel.DiagramNodes.Item(System.Object)" /> method</span></span></description>
        </item>
        <item>
          <description><span data-ttu-id="49aa4-108">Свойство <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> <b>диаграмноде</b> объекта или <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> коллекции</span><span class="sxs-lookup"><span data-stu-id="49aa4-108">The <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object's or <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> collection's <b>DiagramNode</b> property</span></span></description>
        </item>
      </list>
      <para><span data-ttu-id="49aa4-109">Узел схемы может быть завершен или может содержать другие дочерние схемы, дочерние узлы схемы или дочерние фигуры.</span><span class="sxs-lookup"><span data-stu-id="49aa4-109">A diagram node can terminate, or it can contain other child diagrams, child diagram nodes, or child shapes.</span></span> <span data-ttu-id="49aa4-110">Ознакомьтесь со следующими сведениями:</span><span class="sxs-lookup"><span data-stu-id="49aa4-110">Refer to these with the following:</span></span></para>
      <list type="bullet">
        <item>
          <description><span data-ttu-id="49aa4-111">Чтобы сослаться на дочернюю диаграмму, <see cref="P:Microsoft.Office.Interop.Excel.DiagramNode.Diagram" /> используйте свойство.</span><span class="sxs-lookup"><span data-stu-id="49aa4-111">To refer to a child diagram, use the <see cref="P:Microsoft.Office.Interop.Excel.DiagramNode.Diagram" /> property.</span></span></description>
        </item>
        <item>
          <description><span data-ttu-id="49aa4-112">Чтобы сослаться на отдельный дочерний узел схемы, используйте методы <b>аддноде</b>, <b>клоненоде</b>, <b>Некстноде</b> или <b>превноде</b> или свойство <b>root</b> .</span><span class="sxs-lookup"><span data-stu-id="49aa4-112">To refer to an individual child diagram node, use the <b>AddNode</b>, <b>CloneNode</b>, <b>NextNode</b> or <b>PrevNode</b> methods or the <b>Root</b> property.</span></span></description>
        </item>
        <item>
          <description><span data-ttu-id="49aa4-113">Чтобы сослаться на коллекцию дочерних узлов схемы, используйте <see cref="P:Microsoft.Office.Interop.Excel.DiagramNode.Children" /> свойство.</span><span class="sxs-lookup"><span data-stu-id="49aa4-113">To refer to a collection of child diagram nodes, use the <see cref="P:Microsoft.Office.Interop.Excel.DiagramNode.Children" /> property.</span></span></description>
        </item>
        <item>
          <description><span data-ttu-id="49aa4-114">Чтобы сослаться на фигуру, <see cref="P:Microsoft.Office.Interop.Excel.DiagramNode.Shape" /> используйте <see cref="P:Microsoft.Office.Interop.Excel.DiagramNode.TextShape" /> свойства или.</span><span class="sxs-lookup"><span data-stu-id="49aa4-114">To refer to a shape, use the <see cref="P:Microsoft.Office.Interop.Excel.DiagramNode.Shape" /> or <see cref="P:Microsoft.Office.Interop.Excel.DiagramNode.TextShape" /> properties.</span></span></description>
        </item>
      </list>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="AddNode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DiagramNode AddNode (Microsoft.Office.Core.MsoRelativeNodePosition pos = Microsoft.Office.Core.MsoRelativeNodePosition.msoAfterNode, Microsoft.Office.Core.MsoDiagramNodeType nodeType = Microsoft.Office.Core.MsoDiagramNodeType.msoDiagramNode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.DiagramNode AddNode([in]valuetype Microsoft.Office.Core.MsoRelativeNodePosition pos, [in]valuetype Microsoft.Office.Core.MsoDiagramNodeType nodeType) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.DiagramNode.AddNode(Microsoft.Office.Core.MsoRelativeNodePosition,Microsoft.Office.Core.MsoDiagramNodeType)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddNode (Optional pos As MsoRelativeNodePosition = Microsoft.Office.Core.MsoRelativeNodePosition.msoAfterNode, Optional nodeType As MsoDiagramNodeType = Microsoft.Office.Core.MsoDiagramNodeType.msoDiagramNode) As DiagramNode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(10)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DiagramNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pos" Type="Microsoft.Office.Core.MsoRelativeNodePosition" />
        <Parameter Name="nodeType" Type="Microsoft.Office.Core.MsoDiagramNodeType" />
      </Parameters>
      <Docs>
        <param name="pos"><span data-ttu-id="49aa4-115">Необязательный <see cref="T:Microsoft.Office.Interop.Office.MsoRelativeNodePosiiton" />параметр.</span><span class="sxs-lookup"><span data-stu-id="49aa4-115">Optional <see cref="T:Microsoft.Office.Interop.Office.MsoRelativeNodePosiiton" />.</span></span> <span data-ttu-id="49aa4-116">Место, куда будет добавлен узел относительно другого узла. <b>Мсорелативенодепоситион</b> может быть одной из этих констант:<b>мсоафтерластсиблинг</b><b>мсоафтерноде </b>по умолчанию<b>мсобефорефирстсиблинг</b><b>msoBeforeNode</b></span><span class="sxs-lookup"><span data-stu-id="49aa4-116">Where the node will be added, relative to another node.<b>MsoRelativeNodePosition</b> can be one of these constants:<b>msoAfterLastSibling</b><b>msoAfterNode </b>Default<b>msoBeforeFirstSibling</b><b>msoBeforeNode</b></span></span></param>
        <param name="nodeType"><span data-ttu-id="49aa4-117">Необязательный <see cref="T:Microsoft.Office.Interop.Office.MsoDiagramNodeType" />параметр.</span><span class="sxs-lookup"><span data-stu-id="49aa4-117">Optional <see cref="T:Microsoft.Office.Interop.Office.MsoDiagramNodeType" />.</span></span> <span data-ttu-id="49aa4-118">Тип узла.</span><span class="sxs-lookup"><span data-stu-id="49aa4-118">The type of node.</span></span> <span data-ttu-id="49aa4-119">Может быть одной из следующих констант <b>мсодиаграмнодетипе</b> :<b>мсодиаграмассистант</b><b>мсодиаграмноде</b> Default</span><span class="sxs-lookup"><span data-stu-id="49aa4-119">Can be one of these <b>MsoDiagramNodeType</b> constants:<b>msoDiagramAssistant</b><b>msoDiagramNode</b> Default</span></span></param>
        <summary><span data-ttu-id="49aa4-120">Создает узел схемы.</span><span class="sxs-lookup"><span data-stu-id="49aa4-120">Creates a diagram node.</span></span> <span data-ttu-id="49aa4-121">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> объект, представляющий новый узел.</span><span class="sxs-lookup"><span data-stu-id="49aa4-121">Returns a <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> object that represents the new node.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public object Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DiagramNode.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Application { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core._IMsoDispObj.Application</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610743808)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610743808)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="49aa4-122">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Application" /> объект, представляющий приложение Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="49aa4-122">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DiagramNodeChildren Children { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.DiagramNodeChildren Children" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DiagramNode.Children" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Children As DiagramNodeChildren" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::DiagramNodeChildren ^ Children { Microsoft::Office::Interop::Excel::DiagramNodeChildren ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(101)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(101)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DiagramNodeChildren</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="49aa4-123">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.DiagramNodeChildren" /> объект, представляющий коллекцию дочерних узлов определенного узла.</span><span class="sxs-lookup"><span data-stu-id="49aa4-123">Returns a <see cref="T:Microsoft.Office.Interop.Excel.DiagramNodeChildren" /> object, representing the collection of child nodes of a particular node.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DiagramNode CloneNode (bool copyChildren, Microsoft.Office.Interop.Excel.DiagramNode pTargetNode, Microsoft.Office.Core.MsoRelativeNodePosition pos = Microsoft.Office.Core.MsoRelativeNodePosition.msoAfterNode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.DiagramNode CloneNode([in]bool copyChildren, [in]class Microsoft.Office.Interop.Excel.DiagramNode pTargetNode, [in]valuetype Microsoft.Office.Core.MsoRelativeNodePosition pos) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.DiagramNode.CloneNode(System.Boolean,Microsoft.Office.Interop.Excel.DiagramNode,Microsoft.Office.Core.MsoRelativeNodePosition)" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneNode (copyChildren As Boolean, pTargetNode As DiagramNode, Optional pos As MsoRelativeNodePosition = Microsoft.Office.Core.MsoRelativeNodePosition.msoAfterNode) As DiagramNode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(15)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DiagramNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="copyChildren" Type="System.Boolean" />
        <Parameter Name="pTargetNode" Type="Microsoft.Office.Interop.Excel.DiagramNode" />
        <Parameter Name="pos" Type="Microsoft.Office.Core.MsoRelativeNodePosition" />
      </Parameters>
      <Docs>
        <param name="copyChildren"><span data-ttu-id="49aa4-124">Обязательный атрибут типа <b>Boolean</b>.</span><span class="sxs-lookup"><span data-stu-id="49aa4-124">Required <b>Boolean</b>.</span></span> <span data-ttu-id="49aa4-125"><b>Значение true</b> , чтобы клонировать дочерние узлы узла схемы.</span><span class="sxs-lookup"><span data-stu-id="49aa4-125"><b>True</b> to clone the diagram node's children as well.</span></span></param>
        <param name="pTargetNode"><span data-ttu-id="49aa4-126">Обязательный объект <b>диаграмноде</b> .</span><span class="sxs-lookup"><span data-stu-id="49aa4-126">Required <b>DiagramNode</b> object.</span></span> <span data-ttu-id="49aa4-127">Выражение, которое возвращает объект <b>диаграмноде</b> , представляющий узел, в котором будет размещаться новый узел.</span><span class="sxs-lookup"><span data-stu-id="49aa4-127">An expression that returns a <b>DiagramNode</b> object that represents the node where the new node will be placed.</span></span></param>
        <param name="pos"><span data-ttu-id="49aa4-128">Необязательный <see cref="T:Microsoft.Office.Interop.Office.MsoRelativeNodePosiiton" />параметр.</span><span class="sxs-lookup"><span data-stu-id="49aa4-128">Optional <see cref="T:Microsoft.Office.Interop.Office.MsoRelativeNodePosiiton" />.</span></span> <span data-ttu-id="49aa4-129">Если <paramref name="pTargetNode" /> указан, указывает, куда будет добавлен узел относительно <paramref name="pTargetNode" />. <b>Мсорелативенодепоситион</b> может быть одной из этих констант:<b>мсоафтерластсиблинг</b><b>мсоафтерноде </b>по умолчанию<b>мсобефорефирстсиблинг</b><b>msoBeforeNode</b></span><span class="sxs-lookup"><span data-stu-id="49aa4-129">If <paramref name="pTargetNode" /> is specified, indicates where the node will be added relative to <paramref name="pTargetNode" />.<b>MsoRelativeNodePosition</b> can be one of these constants:<b>msoAfterLastSibling</b><b>msoAfterNode </b>Default<b>msoBeforeFirstSibling</b><b>msoBeforeNode</b></span></span></param>
        <summary><span data-ttu-id="49aa4-130">Создает точную копию узла схемы.</span><span class="sxs-lookup"><span data-stu-id="49aa4-130">Clones a diagram node.</span></span> <span data-ttu-id="49aa4-131">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> объект, представляющий Клонированный узел.</span><span class="sxs-lookup"><span data-stu-id="49aa4-131">Returns a <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> object representing the cloned node.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public int Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DiagramNode.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Creator { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core._IMsoDispObj.Creator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610743809)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610743809)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="49aa4-132">Возвращает 32-битное целое число, указывающее на приложение, в котором объект был создан.</span><span class="sxs-lookup"><span data-stu-id="49aa4-132">Returns a 32-bit integer that indicates the application in which this object was created.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="49aa4-133">Если объект был создан в Microsoft Excel, это свойство возвращает строку КСЦЕЛ, которая эквивалентна шестнадцатеричному числу 5843454C.</span><span class="sxs-lookup"><span data-stu-id="49aa4-133">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span></para>
          <para><span data-ttu-id="49aa4-134">Свойство <b>Creator</b> предназначено для использования в Microsoft Excel для Macintosh, где каждое приложение содержит код создателя из четырех символов.</span><span class="sxs-lookup"><span data-stu-id="49aa4-134">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="49aa4-135">Например, в Microsoft Excel есть код создателя КСЦЕЛ.</span><span class="sxs-lookup"><span data-stu-id="49aa4-135">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.DiagramNode.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(11)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="49aa4-136">Удаляет объект.</span><span class="sxs-lookup"><span data-stu-id="49aa4-136">Deletes the object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Diagram">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.IMsoDiagram Diagram { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.IMsoDiagram Diagram" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DiagramNode.Diagram" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Diagram As IMsoDiagram" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::IMsoDiagram ^ Diagram { Microsoft::Office::Core::IMsoDiagram ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(104)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(104)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.IMsoDiagram</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="49aa4-137">Возвращает объект <see cref="T:Microsoft.Office.Interop.Excel.Diagram" /> , представляющий схему.</span><span class="sxs-lookup"><span data-stu-id="49aa4-137">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Diagram" /> object representing a diagram.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Layout">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoOrgChartLayoutType Layout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoOrgChartLayoutType Layout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DiagramNode.Layout" />
      <MemberSignature Language="VB.NET" Value="Public Property Layout As MsoOrgChartLayoutType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoOrgChartLayoutType Layout { Microsoft::Office::Core::MsoOrgChartLayoutType get(); void set(Microsoft::Office::Core::MsoOrgChartLayoutType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(105)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(105)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(105)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoOrgChartLayoutType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="49aa4-138">Возвращает или задает константу, определяющую форматирование дочерних узлов организационной диаграммы.</span><span class="sxs-lookup"><span data-stu-id="49aa4-138">Returns or sets a constant to indicate the formatting of the child nodes of an organization chart.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="49aa4-139">
            <b>Мсургчартлайауттипе</b> может быть одной из этих констант <b>мсургчартлайауттипе</b> .</span><span class="sxs-lookup"><span data-stu-id="49aa4-139">
            <b>MsoOrgChartLayoutType</b> can be one of these <b>MsoOrgChartLayoutType</b> constants.</span></span></para>
          <para><span data-ttu-id="49aa4-140">
            <b>мсургчартлайаутассистант</b> Помещает дочерние узлы в качестве помощников.</span><span class="sxs-lookup"><span data-stu-id="49aa4-140">
            <b>msoOrgChartLayoutAssistant</b> Places child nodes as assistants.</span></span></para>
          <para><span data-ttu-id="49aa4-141">
            <b>мсургчартлайаутбосхангинг</b> Располагает дочерние узлы вертикально от родительского узла как слева, так и справа.</span><span class="sxs-lookup"><span data-stu-id="49aa4-141">
            <b>msoOrgChartLayoutBothHanging</b> Places child nodes vertically from the parent node on both the left and the right side.</span></span></para>
          <para><span data-ttu-id="49aa4-142">
            <b>мсургчартлайаутлефсангинг</b> Располагает дочерние узлы вертикально от родительского узла в левой части.</span><span class="sxs-lookup"><span data-stu-id="49aa4-142">
            <b>msoOrgChartLayoutLeftHanging</b> Places child nodes vertically from the parent node on the left side.</span></span></para>
          <para><span data-ttu-id="49aa4-143">
            <b>мсургчартлайаутмиксед</b> Возвращаемое значение родительского узла с дочерними элементами, отформатированными с помощью более чем одного <b>мсургчартлайауттипе</b>.</span><span class="sxs-lookup"><span data-stu-id="49aa4-143">
            <b>msoOrgChartLayoutMixed</b> Return value for a parent node that has children formatted using more than one <b>MsoOrgChartLayoutType</b>.</span></span></para>
          <para><span data-ttu-id="49aa4-144">
            <b>мсургчартлайаутригхсангинг</b> Располагает дочерние узлы вертикально от родительского узла в правой части.</span><span class="sxs-lookup"><span data-stu-id="49aa4-144">
            <b>msoOrgChartLayoutRightHanging</b> Places child nodes vertically from the parent node on the right side.</span></span></para>
          <para><span data-ttu-id="49aa4-145">
            <b>мсургчартлайаутстандард</b> Располагает дочерние узлы горизонтально под родительским узлом.</span><span class="sxs-lookup"><span data-stu-id="49aa4-145">
            <b>msoOrgChartLayoutStandard</b> Places child nodes horizontally below the parent node.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNode">
      <MemberSignature Language="C#" Value="public void MoveNode (Microsoft.Office.Interop.Excel.DiagramNode pTargetNode, Microsoft.Office.Core.MsoRelativeNodePosition pos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MoveNode([in]class Microsoft.Office.Interop.Excel.DiagramNode pTargetNode, [in]valuetype Microsoft.Office.Core.MsoRelativeNodePosition pos) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.DiagramNode.MoveNode(Microsoft.Office.Interop.Excel.DiagramNode,Microsoft.Office.Core.MsoRelativeNodePosition)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveNode (pTargetNode As DiagramNode, pos As MsoRelativeNodePosition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveNode(Microsoft::Office::Interop::Excel::DiagramNode ^ pTargetNode, Microsoft::Office::Core::MsoRelativeNodePosition pos);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(12)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pTargetNode" Type="Microsoft.Office.Interop.Excel.DiagramNode" />
        <Parameter Name="pos" Type="Microsoft.Office.Core.MsoRelativeNodePosition" />
      </Parameters>
      <Docs>
        <param name="pTargetNode"><span data-ttu-id="49aa4-146">Обязательный <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> объект.</span><span class="sxs-lookup"><span data-stu-id="49aa4-146">Required <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> object.</span></span> <span data-ttu-id="49aa4-147">Узел схемы, в который перемещается указанный узел.</span><span class="sxs-lookup"><span data-stu-id="49aa4-147">The diagram node where the specified node will be moved.</span></span></param>
        <param name="pos"><span data-ttu-id="49aa4-148">Обязательный <see cref="T:Microsoft.Office.Interop.Office.MsoRelativeNodePosiiton" />.</span><span class="sxs-lookup"><span data-stu-id="49aa4-148">Required <see cref="T:Microsoft.Office.Interop.Office.MsoRelativeNodePosiiton" />.</span></span> <span data-ttu-id="49aa4-149">Позиция перемещения узла относительно <paramref name="TargetNode" />. <b>Мсорелативенодепоситион</b> может быть одной из этих констант:<b>мсоафтерластсиблинг</b><b>мсоафтерноде</b><b>мсобефорефирстсиблинг</b><b>msoBeforeNode</b></span><span class="sxs-lookup"><span data-stu-id="49aa4-149">The position to move the node, relative to <paramref name="TargetNode" />.<b>MsoRelativeNodePosition</b> can be one of these constants:<b>msoAfterLastSibling</b><b>msoAfterNode</b><b>msoBeforeFirstSibling</b><b>msoBeforeNode</b></span></span></param>
        <summary><span data-ttu-id="49aa4-150">Перемещает узел схемы и все его дочерние узлы в схеме.</span><span class="sxs-lookup"><span data-stu-id="49aa4-150">Moves a diagram node and any of its child nodes within a diagram.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextNode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DiagramNode NextNode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.DiagramNode NextNode() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.DiagramNode.NextNode" />
      <MemberSignature Language="VB.NET" Value="Public Function NextNode () As DiagramNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::DiagramNode ^ NextNode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(17)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DiagramNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="49aa4-151">Выбирает следующий узел схемы в серии узлов.</span><span class="sxs-lookup"><span data-stu-id="49aa4-151">Selects the next diagram node in a series of nodes.</span></span> <span data-ttu-id="49aa4-152">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> объект, представляющий только что выбранный узел.</span><span class="sxs-lookup"><span data-stu-id="49aa4-152">Returns a <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> object representing the newly-selected node.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DiagramNode.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(100)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(100)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="49aa4-153">Возвращает родительский объект для указанного объекта.</span><span class="sxs-lookup"><span data-stu-id="49aa4-153">Returns the parent object for the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrevNode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DiagramNode PrevNode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.DiagramNode PrevNode() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.DiagramNode.PrevNode" />
      <MemberSignature Language="VB.NET" Value="Public Function PrevNode () As DiagramNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::DiagramNode ^ PrevNode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(18)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DiagramNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="49aa4-154">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> объект, представляющий предыдущий узел схемы в коллекции узлов схемы.</span><span class="sxs-lookup"><span data-stu-id="49aa4-154">Returns a <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> object that represents the previous diagram node in a collection of diagram nodes.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceNode">
      <MemberSignature Language="C#" Value="public void ReplaceNode (Microsoft.Office.Interop.Excel.DiagramNode pTargetNode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReplaceNode([in]class Microsoft.Office.Interop.Excel.DiagramNode pTargetNode) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.DiagramNode.ReplaceNode(Microsoft.Office.Interop.Excel.DiagramNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReplaceNode (pTargetNode As DiagramNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReplaceNode(Microsoft::Office::Interop::Excel::DiagramNode ^ pTargetNode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(13)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pTargetNode" Type="Microsoft.Office.Interop.Excel.DiagramNode" />
      </Parameters>
      <Docs>
        <param name="pTargetNode"><span data-ttu-id="49aa4-155">Обязательный <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> объект.</span><span class="sxs-lookup"><span data-stu-id="49aa4-155">Required <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> object.</span></span> <span data-ttu-id="49aa4-156">Узел целевой диаграммы, который необходимо заменить.</span><span class="sxs-lookup"><span data-stu-id="49aa4-156">The target diagram node to be replaced.</span></span></param>
        <summary><span data-ttu-id="49aa4-157">Заменяет целевой узел схемы узлом исходной схемы.</span><span class="sxs-lookup"><span data-stu-id="49aa4-157">Replaces a target diagram node with the source diagram node.</span></span></summary>
        <remarks><para><span data-ttu-id="49aa4-158">Узел целевой диаграммы удален, а узел исходной схемы, включая все дочерние узлы, перемещается в место целевого узла схемы.</span><span class="sxs-lookup"><span data-stu-id="49aa4-158">The target diagram node is deleted, and the source diagram node, including any of its child nodes, are moved to where the target diagram node was.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Root">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DiagramNode Root { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.DiagramNode Root" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DiagramNode.Root" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Root As DiagramNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::DiagramNode ^ Root { Microsoft::Office::Interop::Excel::DiagramNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DiagramNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="49aa4-159">Возвращает корневой <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> объект, к которому относится корневой узел диаграммы.</span><span class="sxs-lookup"><span data-stu-id="49aa4-159">Returns the root <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> object which the root diagram node belongs.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shape">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape Shape { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Shape Shape" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DiagramNode.Shape" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Shape As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Shape ^ Shape { Microsoft::Office::Interop::Excel::Shape ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(102)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(102)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="49aa4-160">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> объект, представляющий фигуру, присоединенную к указанному узлу схемы</span><span class="sxs-lookup"><span data-stu-id="49aa4-160">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object that represents the shape attached to the specified diagram node</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SwapNode">
      <MemberSignature Language="C#" Value="public void SwapNode (Microsoft.Office.Interop.Excel.DiagramNode pTargetNode, bool swapChildren = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SwapNode([in]class Microsoft.Office.Interop.Excel.DiagramNode pTargetNode, [in]bool swapChildren) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.DiagramNode.SwapNode(Microsoft.Office.Interop.Excel.DiagramNode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SwapNode (pTargetNode As DiagramNode, Optional swapChildren As Boolean = false)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(14)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pTargetNode" Type="Microsoft.Office.Interop.Excel.DiagramNode" />
        <Parameter Name="swapChildren" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="pTargetNode"><span data-ttu-id="49aa4-161">Обязательный <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> объект.</span><span class="sxs-lookup"><span data-stu-id="49aa4-161">Required <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> object.</span></span> <span data-ttu-id="49aa4-162">Узел целевой диаграммы, который необходимо заменить.</span><span class="sxs-lookup"><span data-stu-id="49aa4-162">The target diagram node to be replaced.</span></span></param>
        <param name="swapChildren"><span data-ttu-id="49aa4-163">Необязательный атрибут типа <b>Boolean</b>.</span><span class="sxs-lookup"><span data-stu-id="49aa4-163">Optional <b>Boolean</b>.</span></span> <span data-ttu-id="49aa4-164">Дочерние узлы целевого и исходного узлов подкачки.</span><span class="sxs-lookup"><span data-stu-id="49aa4-164">The child nodes of the target and source nodes being swapped.</span></span> <span data-ttu-id="49aa4-165">Все дочерние узлы схемы перемещаются вместе с соответствующими корневыми узлами.</span><span class="sxs-lookup"><span data-stu-id="49aa4-165">Any child diagram nodes are moved along with their corresponding root nodes.</span></span> <span data-ttu-id="49aa4-166">Значение по умолчанию — <b>true</b>, которое меняет местами дочерние узлы.</span><span class="sxs-lookup"><span data-stu-id="49aa4-166">Default is <b>True</b>, which swaps the child nodes.</span></span></param>
        <summary><span data-ttu-id="49aa4-167">Заменяет узел исходной схемы на узел целевой диаграммы.</span><span class="sxs-lookup"><span data-stu-id="49aa4-167">Swaps the source diagram node with a target diagram node.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextShape">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape TextShape { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Shape TextShape" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DiagramNode.TextShape" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TextShape As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Shape ^ TextShape { Microsoft::Office::Interop::Excel::Shape ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(106)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(106)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="49aa4-168">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> объект, представляющий форму текстового поля, связанного с узлом схемы.</span><span class="sxs-lookup"><span data-stu-id="49aa4-168">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object representing the shape of the text box associated with a diagram node.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransferChildren">
      <MemberSignature Language="C#" Value="public void TransferChildren (Microsoft.Office.Interop.Excel.DiagramNode pReceivingNode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TransferChildren([in]class Microsoft.Office.Interop.Excel.DiagramNode pReceivingNode) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.DiagramNode.TransferChildren(Microsoft.Office.Interop.Excel.DiagramNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransferChildren (pReceivingNode As DiagramNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransferChildren(Microsoft::Office::Interop::Excel::DiagramNode ^ pReceivingNode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pReceivingNode" Type="Microsoft.Office.Interop.Excel.DiagramNode" />
      </Parameters>
      <Docs>
        <param name="pReceivingNode"><span data-ttu-id="49aa4-169">Обязательный <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> объект.</span><span class="sxs-lookup"><span data-stu-id="49aa4-169">Required <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> object.</span></span> <span data-ttu-id="49aa4-170">Узел схемы, получающий дочерние узлы, перемещаемые из указанного узла.</span><span class="sxs-lookup"><span data-stu-id="49aa4-170">The diagram node receiving the child nodes being transferred from the specified node.</span></span></param>
        <summary><span data-ttu-id="49aa4-171">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> объект, представляющий форму текстового поля, связанного с узлом схемы.</span><span class="sxs-lookup"><span data-stu-id="49aa4-171">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object representing the shape of the text box associated with a diagram node.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>