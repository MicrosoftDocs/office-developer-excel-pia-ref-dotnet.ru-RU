<Type Name="Errors" FullName="Microsoft.Office.Interop.Excel.Errors">
  <Metadata><Meta Name="ms.openlocfilehash" Value="73bd6a9f765a75f5056ac06000a5ad65696c4627" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="50012259" /></Metadata><TypeSignature Language="C#" Value="public interface Errors" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Errors" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Errors" />
  <TypeSignature Language="VB.NET" Value="Public Interface Errors" />
  <TypeSignature Language="C++ CLI" Value="public interface class Errors" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0002445C-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="22561-101">Представляет различные ошибки электронных таблиц для диапазона.</span><span class="sxs-lookup"><span data-stu-id="22561-101">Represents the various spreadsheet errors for a range.</span></span></summary>
    <remarks><para><span data-ttu-id="22561-102">Используйте <see cref="P:Microsoft.Office.Interop.Excel.Range.Errors" /> свойство коллекции <see cref="T:Microsoft.Office.Interop.Excel.Range" /> для возврата объекта <b>Errors.</b></span><span class="sxs-lookup"><span data-stu-id="22561-102">Use the <see cref="P:Microsoft.Office.Interop.Excel.Range.Errors" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.Range" /> collection to return an <b>Errors</b> object.</span></span></para>
      <para><span data-ttu-id="22561-103">После возврата <b>объекта Errors</b> можно использовать его свойство для проверки определенных <see cref="P:Microsoft.Office.Interop.Excel.Error.Value" /> <see cref="T:Microsoft.Office.Interop.Excel.Error" /> условий проверки ошибок.</span><span class="sxs-lookup"><span data-stu-id="22561-103">Once an <b>Errors</b> object is returned, you can use the <see cref="P:Microsoft.Office.Interop.Excel.Error.Value" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.Error" /> object to check for particular error-checking conditions.</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Error this[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Error _Default(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Errors._Default(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default(Index As Object) As Error" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Error ^ default[System::Object ^] { Microsoft::Office::Interop::Excel::Error ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Error</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="22561-104">Позволяет пользователю получать доступ к вариантам проверки ошибок.</span><span class="sxs-lookup"><span data-stu-id="22561-104">Allows the user to to access error checking options.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="22561-105">Ссылка на <see cref="T:Microsoft.Office.Interop.Excel.Errors" /> объект для просмотра списка значений индекса, связанных с вариантами проверки ошибок.</span><span class="sxs-lookup"><span data-stu-id="22561-105">Reference the <see cref="T:Microsoft.Office.Interop.Excel.Errors" /> object to view a list of index values associated with error checking options.</span></span></para>
          <para> </para></remarks>
        <example><para><span data-ttu-id="22561-106">В этом примере число, написанное как текст, помещается в ячейку A1.</span><span class="sxs-lookup"><span data-stu-id="22561-106">In this example, a number written as text is placed in cell A1.</span></span>  <span data-ttu-id="22561-107">Затем Microsoft Excel определяет, записано ли число в виде текста в ячейке A1, и сообщает пользователю соответствующим образом.</span><span class="sxs-lookup"><span data-stu-id="22561-107">Microsoft Excel then determines if the number is written as text in cell A1 and notifies the user accordingly.</span></span></para>
          <code>&lt;span class="label"&gt;Sub CheckForErrors()































































































































































































































































































































































































































































































































    Range("A1").Formula = "'12"































































































































































































































































































































































































































































































































    If Range("A1").&lt;/span&gt;
&lt;i&gt;Errors&lt;/i&gt;
&lt;span class="label"&gt;.Item(xlNumberAsText).Value = True Then        MsgBox "The number is written as text."    Else        MsgBox "The number is not written as text."    End IfEnd Sub&lt;/span&gt;</code></example>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Errors.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="22561-108">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Application" /> объект, который представляет приложение Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="22561-108">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Errors.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="22561-109">Возвращает 32-битное целое число, указывающее на приложение, в котором объект был создан.</span><span class="sxs-lookup"><span data-stu-id="22561-109">Returns a 32-bit integer that indicates the application in which this object was created.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="22561-110">Если объект был создан в Microsoft Excel, это свойство возвращает строку XCEL, эквивалентную 5843454C.</span><span class="sxs-lookup"><span data-stu-id="22561-110">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span></para>
          <para><span data-ttu-id="22561-111">Свойство <b>Creator</b> предназначено для использования в Microsoft Excel для Macintosh, где каждое приложение имеет четырех символьный код создателя.</span><span class="sxs-lookup"><span data-stu-id="22561-111">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="22561-112">Например, в Microsoft Excel есть код создателя XCEL.</span><span class="sxs-lookup"><span data-stu-id="22561-112">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Error Item[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Error Item(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Errors.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item(Index As Object) As Error" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Error ^ Item[System::Object ^] { Microsoft::Office::Interop::Excel::Error ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Error</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="22561-113">Необходимый <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="22561-113">Required <b>Object</b>.</span></span> <span data-ttu-id="22561-114">Также может быть одной из этих констант: <paramref name="Index" /> <b>xlEvaluateToError</b> Ячейка оценивается как значение ошибки.<b> xlTextDate</b> Ячейка содержит текстовую дату с 2 цифрами лет. <b>xlNumberAsText</b> Ячейка содержит число, сохраненное в виде текста. <b>xlInconsistentFormula</b> Ячейка содержит несогласованную формулу для региона. <b>xlOmittedCells</b> Ячейка содержит формулу, опущенную в ячейке для области. <b>xlUnlockedFormulaCells</b> Разблокированая ячейка содержит формулу. <b>xlEmptyCellReferences</b> Ячейка содержит формулу, ссылаясь на пустые ячейки.</span><span class="sxs-lookup"><span data-stu-id="22561-114">The <paramref name="Index" /> can also be one of these constants:<b>xlEvaluateToError</b> The cell evaluates to an error value.<b>xlTextDate</b> The cell contains a text date with 2 digit years.<b>xlNumberAsText</b> The cell contains a number stored as text.<b>xlInconsistentFormula</b> The cell contains an inconsistent formula for a region.<b>xlOmittedCells</b> The cell contains a formula omitting a cell for a region.<b>xlUnlockedFormulaCells</b> The cell which is unlocked contains a formula.<b>xlEmptyCellReferences</b> The cell contains a formula referring to empty cells.</span></span></param>
        <summary><span data-ttu-id="22561-115">Возвращает один член <see cref="T:Microsoft.Office.Interop.Excel.Error" /> объекта.</span><span class="sxs-lookup"><span data-stu-id="22561-115">Returns a single member of the <see cref="T:Microsoft.Office.Interop.Excel.Error" /> object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Errors.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="22561-116">Возвращает родительский объект для указанного объекта.</span><span class="sxs-lookup"><span data-stu-id="22561-116">Returns the parent object for the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>