<Type Name="ListObjects" FullName="Microsoft.Office.Interop.Excel.ListObjects">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="297eaae8b8252f38795243645194d97dbacd5ca5" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="09/24/2018" />
    <Meta Name="ms.locfileid" Value="20580943" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ListObjects : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ListObjects implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.ListObjects" />
  <TypeSignature Language="VB.NET" Value="Public Interface ListObjects&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class ListObjects : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00024470-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a720d-101">Коллекция всех <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> объекты на листе.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a720d-101">A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> objects on a worksheet.</span>
      </span>
      <span data-ttu-id="a720d-102">Каждый <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> объект представляет список на листе.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a720d-102">Each <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> object represents a list in the worksheet.</span>
      </span>
    </summary>
    <remarks>
      <para>
        <span data-ttu-id="a720d-103">Использование <see cref="P:Microsoft.Office.Interop.Excel._Worksheet.ListObjects" /> свойства <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> объект для возврата коллекции <b>объектов ListObject</b> .</span>
        <span class="sxs-lookup">
          <span data-stu-id="a720d-103">Use the <see cref="P:Microsoft.Office.Interop.Excel._Worksheet.ListObjects" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object to return the <b>ListObjects</b> collection.</span>
        </span>
      </para>
      <para></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ListObject this[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ListObject _Default(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ListObjects._Default(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default(Index As Object) As ListObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ListObject ^ default[System::Object ^] { Microsoft::Office::Interop::Excel::ListObject ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ListObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="a720d-104">Зарезервировано для внутреннего использования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a720d-104">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ListObject Add (Microsoft.Office.Interop.Excel.XlListObjectSourceType SourceType = Microsoft.Office.Interop.Excel.XlListObjectSourceType.xlSrcRange, object Source, object LinkSource, Microsoft.Office.Interop.Excel.XlYesNoGuess XlListObjectHasHeaders = Microsoft.Office.Interop.Excel.XlYesNoGuess.xlGuess, object Destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.ListObject Add([in]valuetype Microsoft.Office.Interop.Excel.XlListObjectSourceType SourceType, [in]object Source, [in]object LinkSource, [in]valuetype Microsoft.Office.Interop.Excel.XlYesNoGuess XlListObjectHasHeaders, [in]object Destination) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ListObjects.Add(Microsoft.Office.Interop.Excel.XlListObjectSourceType,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlYesNoGuess,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (Optional SourceType As XlListObjectSourceType = Microsoft.Office.Interop.Excel.XlListObjectSourceType.xlSrcRange, Optional Source As Object, Optional LinkSource As Object, Optional XlListObjectHasHeaders As XlYesNoGuess = Microsoft.Office.Interop.Excel.XlYesNoGuess.xlGuess, Optional Destination As Object) As ListObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2085)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ListObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SourceType" Type="Microsoft.Office.Interop.Excel.XlListObjectSourceType" />
        <Parameter Name="Source" Type="System.Object" />
        <Parameter Name="LinkSource" Type="System.Object" />
        <Parameter Name="XlListObjectHasHeaders" Type="Microsoft.Office.Interop.Excel.XlYesNoGuess" />
        <Parameter Name="Destination" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SourceType">
          <span data-ttu-id="a720d-105">Необязательные <b>XlListObjectSourceType</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a720d-105">Optional <b>XlListObjectSourceType</b>.</span>
          </span>
          <span data-ttu-id="a720d-106">Указывает тип источника для запроса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a720d-106">Indicates the kind of source for the query.</span>
          </span>
          <span data-ttu-id="a720d-107">Может иметь одно из следующих констант <b>XlListObjectSourceType</b> : <b>xlSrcExternal</b> или <b>xlSrcRange</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a720d-107">Can be one of the following <b>XlListObjectSourceType</b> constants: <b>xlSrcExternal</b> or <b>xlSrcRange</b>.</span>
          </span>
          <span data-ttu-id="a720d-108">Если этот параметр опущен, <paramref name="SourceType" /> будет по умолчанию, чтобы <b>xlSrcRange</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a720d-108">If omitted, the <paramref name="SourceType" /> will default to <b>xlSrcRange</b>.</span>
          </span>
        </param>
        <param name="Source">
          <span data-ttu-id="a720d-109">Обязательно при <paramref name="SourceType" /> — это <b>xlSrcRange</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a720d-109">Optional when <paramref name="SourceType" /> is <b>xlSrcRange</b>.</span>
          </span>
          <span data-ttu-id="a720d-110">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> объект, представляющий источник данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a720d-110">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object representing the data source.</span>
          </span>
          <span data-ttu-id="a720d-111">Если этот параметр опущен, <paramref name="Source" /> будет по умолчанию для диапазона возвращаемых код диапазон определения списка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a720d-111">If omitted, the <paramref name="Source" /> will default to the range returned by list range detection code.</span>
          </span>
          <span data-ttu-id="a720d-112">Требуются, если <paramref name="SourceType" /> — это <b>xlSrcExternal</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a720d-112">Required when <paramref name="SourceType" /> is <b>xlSrcExternal</b>.</span>
          </span>
          <span data-ttu-id="a720d-113">Массив значений <b>String</b> , определяющее подключение к источнику. Элемент Contents0URL # для 2ViewGUID 1ListName сайта SharePoint</span>
          <span class="sxs-lookup">
            <span data-stu-id="a720d-113">An array of <b>String</b> values specifying a connection to the source.Element#Contents0URL to SharePoint site 1ListName 2ViewGUID</span>
          </span>
        </param>
        <param name="LinkSource">
          <span data-ttu-id="a720d-114">Необязательный атрибут типа <b>Boolean</b>. </span>
          <span class="sxs-lookup">
            <span data-stu-id="a720d-114">Optional <b>Boolean</b>.</span>
          </span>
          <span data-ttu-id="a720d-115">Указывает, является ли быть связано с объектом <b>ListObject</b> из внешних источников данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a720d-115">Indicates whether an external data source is to be linked to the <b>ListObject</b> object.</span>
          </span>
          <span data-ttu-id="a720d-116">Если <paramref name="SourceType" /> — это <b>xlSrcExternal</b>значение по умолчанию — <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a720d-116">If <paramref name="SourceType" /> is <b>xlSrcExternal</b>, default is <b>True</b>.</span>
          </span>
          <span data-ttu-id="a720d-117">Недопустимый if <paramref name="SourceType" /> — это <b>xlSrcRange</b>и возвращает ошибку, если не указан.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a720d-117">Invalid if <paramref name="SourceType" /> is <b>xlSrcRange</b>, and will return an error if not omitted.</span>
          </span>
        </param>
        <param name="XlListObjectHasHeaders">
          <span data-ttu-id="a720d-118">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a720d-118">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a720d-119">
            <see cref="T:Microsoft.Office.Interop.Excel.XlYesNoGuess" /> Константа, которое указывает, имеет ли импортируемых данных заголовки столбцов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a720d-119">An <see cref="T:Microsoft.Office.Interop.Excel.XlYesNoGuess" /> constant that indicates whether the data being imported has column labels.</span>
          </span>
          <span data-ttu-id="a720d-120">Если источник не содержит заголовков, Excel автоматически создаст заголовков.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a720d-120">If the Source does not contain headers, Excel will automatically generate headers.</span>
          </span>
        </param>
        <param name="Destination">
          <span data-ttu-id="a720d-121">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a720d-121">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a720d-122">Объект <b>Range</b> , указав ссылку на одну ячейку в качестве цели верхний левый угол объекта нового списка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a720d-122">A <b>Range</b> object specifying a single-cell reference as the destination for the top-left corner of the new list object.</span>
          </span>
          <span data-ttu-id="a720d-123">Если объект <b>Range</b> ссылается на несколько ячеек, возникнет ошибка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a720d-123">If the <b>Range</b> object refers to more than one cell, an error is generated.</span>
          </span>
          <span data-ttu-id="a720d-124">
            <paramref name="Destination" /> Аргумент должен быть указан при <paramref name="SourceType" /> задано значение <b>xlSrcExternal</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a720d-124">The <paramref name="Destination" /> argument must be specified when <paramref name="SourceType" /> is set to <b>xlSrcExternal</b>.</span>
          </span>
          <span data-ttu-id="a720d-125">
            <paramref name="Destination" /> Аргумент игнорируется, если <paramref name="SourceType" /> задано значение <b>xlSrcRange</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a720d-125">The <paramref name="Destination" /> argument is ignored if <paramref name="SourceType" /> is set to <b>xlSrcRange</b>.</span>
          </span>
          <span data-ttu-id="a720d-126">Конечный диапазон должен быть в рабочий лист, содержащий указанный <see cref="T:Microsoft.Office.Interop.Excel.ListObjects" /> семейства сайтов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a720d-126">The destination range must be on the worksheet that contains the specified <see cref="T:Microsoft.Office.Interop.Excel.ListObjects" /> collection.</span>
          </span>
          <span data-ttu-id="a720d-127">Новые столбцы, которые будут вставлены в <paramref name="Destination" /> в соответствии со нового списка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a720d-127">New columns will be inserted at the <paramref name="Destination" /> to fit the new list.</span>
          </span>
          <span data-ttu-id="a720d-128">Таким образом существующих данных не перезаписываются.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a720d-128">Therefore, existing data will not be overwritten.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a720d-129">Создает новый объект списка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a720d-129">Creates a new list object.</span>
          </span>
          <span data-ttu-id="a720d-130">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a720d-130">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <span data-ttu-id="a720d-131">Если список с заголовками, первой строки ячейки будут быть преобразуется в <b>текст</b>, если не уже задано значение text.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a720d-131">When the list has headers, the first row of cells will be converted to <b>Text</b>, if not already set to text.</span>
            </span>
            <span data-ttu-id="a720d-132">Преобразование будут основываться на видимый текст для ячейки.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a720d-132">The conversion will be based on the visible text for the cell.</span>
            </span>
            <span data-ttu-id="a720d-133">Это означает, что если значение даты с форматом <b>даты</b> , изменяется с языком, преобразование в список может привести к разные результаты в зависимости от текущей языковой стандарт системы.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a720d-133">This means that if there is a date value with a <b>Date</b> format that changes with locale, the conversion to a list might produce different results depending on the current system locale.</span>
            </span>
            <span data-ttu-id="a720d-134">Кроме того при наличии двух смежных ячеек в строке заголовков, которые имеют один и тот же отображается текст, добавочного <b>целое число</b> будет добавлено сделать уникальным каждого заголовка столбца.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a720d-134">Moreover, if there are two cells in the header row that have the same visible text, an incremental <b>Integer</b> will be appended to make each column header unique.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEx">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ListObject AddEx (Microsoft.Office.Interop.Excel.XlListObjectSourceType SourceType = Microsoft.Office.Interop.Excel.XlListObjectSourceType.xlSrcRange, object Source, object LinkSource, Microsoft.Office.Interop.Excel.XlYesNoGuess XlListObjectHasHeaders = Microsoft.Office.Interop.Excel.XlYesNoGuess.xlGuess, object Destination, object TableStyleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.ListObject AddEx([in]valuetype Microsoft.Office.Interop.Excel.XlListObjectSourceType SourceType, [in]object Source, [in]object LinkSource, [in]valuetype Microsoft.Office.Interop.Excel.XlYesNoGuess XlListObjectHasHeaders, [in]object Destination, [in]object TableStyleName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ListObjects.AddEx(Microsoft.Office.Interop.Excel.XlListObjectSourceType,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlYesNoGuess,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddEx (Optional SourceType As XlListObjectSourceType = Microsoft.Office.Interop.Excel.XlListObjectSourceType.xlSrcRange, Optional Source As Object, Optional LinkSource As Object, Optional XlListObjectHasHeaders As XlYesNoGuess = Microsoft.Office.Interop.Excel.XlYesNoGuess.xlGuess, Optional Destination As Object, Optional TableStyleName As Object) As ListObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(181)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ListObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SourceType" Type="Microsoft.Office.Interop.Excel.XlListObjectSourceType" />
        <Parameter Name="Source" Type="System.Object" />
        <Parameter Name="LinkSource" Type="System.Object" />
        <Parameter Name="XlListObjectHasHeaders" Type="Microsoft.Office.Interop.Excel.XlYesNoGuess" />
        <Parameter Name="Destination" Type="System.Object" />
        <Parameter Name="TableStyleName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SourceType">To be added.</param>
        <param name="Source">To be added.</param>
        <param name="LinkSource">To be added.</param>
        <param name="XlListObjectHasHeaders">To be added.</param>
        <param name="Destination">To be added.</param>
        <param name="TableStyleName">To be added.</param>
        <summary>
          <span data-ttu-id="a720d-135">Зарезервировано для внутреннего использования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a720d-135">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ListObjects.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a720d-136">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Application" /> объект, представляющий приложение Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a720d-136">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
          <span data-ttu-id="a720d-137">Только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a720d-137">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ListObjects.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a720d-138">Возвращает число объектов в коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a720d-138">Returns the number of objects in the collection.</span>
          </span>
          <span data-ttu-id="a720d-139">Только для чтения <b>целое число</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a720d-139">Read-only <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ListObjects.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a720d-140">Возвращает 32-битное целое число, указывающее на приложение, в котором объект был создан.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a720d-140">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
          <span data-ttu-id="a720d-141">Если объект был создан в Microsoft Excel, данное свойство возвращает строку XCEL, что эквивалентно шестнадцатеричный номер 5843454C.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a720d-141">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span>
          </span>
          <span data-ttu-id="a720d-142">Только для чтения <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a720d-142">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="a720d-143">Свойство <b>создателя</b> предназначено для использования в Microsoft Excel для Macintosh, где каждое приложение имеет код создателя четырех символов.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a720d-143">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span>
            </span>
            <span data-ttu-id="a720d-144">Например Microsoft Excel содержит код создателя XCEL.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a720d-144">For example, Microsoft Excel has the creator code XCEL.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ListObjects.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ListObject Item[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ListObject Item(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ListObjects.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item(Index As Object) As ListObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ListObject ^ Item[System::Object ^] { Microsoft::Office::Interop::Excel::ListObject ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ListObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="a720d-145">Требуется <b>объект</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a720d-145">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a720d-146">Имя или номер индекса объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a720d-146">The name or index number of the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a720d-147">Возвращает один объект из коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a720d-147">Returns a single object from a collection.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ListObjects.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a720d-148">Возвращает родительский объект для указанного объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a720d-148">Returns the parent object for the specified object.</span>
          </span>
          <span data-ttu-id="a720d-149">Только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a720d-149">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>