<Type Name="Top10" FullName="Microsoft.Office.Interop.Excel.Top10">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c5d965f86d567323d23545ee60dfcb98bf9c8350" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20586214" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface Top10" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Top10" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Top10" />
  <TypeSignature Language="VB.NET" Value="Public Interface Top10" />
  <TypeSignature Language="C++ CLI" Value="public interface class Top10" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0002449D-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="4e613-101">Представляет основные десять visual правила условного форматирования.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4e613-101">Represents a top ten visual of a conditional formatting rule.</span>
      </span>
      <span data-ttu-id="4e613-102">Применение цвета к диапазону поможет вам узнать значение ячейки относительно других ячеек.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4e613-102">Applying a color to a range helps you see the value of a cell relative to other cells.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="4e613-103">
        <para>Все объекты условного форматирования в составе <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> коллекцию, содержащую объект, который является дочерним из <see cref="T:Microsoft.Office.Interop.Excel.Range" /> семейства сайтов. Правила форматирования 10 самых популярных можно создать с помощью любого <see cref="M:Microsoft.Office.Interop.Excel.FormatConditions.Add(Microsoft.Office.Interop.Excel.XlFormatConditionType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> или <see cref="M:Microsoft.Office.Interop.Excel.FormatConditions.AddTop10" /> методу коллекции <b>FormatConditions</b> .</para>
        <para />
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="4e613-103">
          <para>All conditional formatting objects are contained within a <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> collection object, which is a child of a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> collection. You can create a top 10 formatting rule by using either the <see cref="M:Microsoft.Office.Interop.Excel.FormatConditions.Add(Microsoft.Office.Interop.Excel.XlFormatConditionType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> or <see cref="M:Microsoft.Office.Interop.Excel.FormatConditions.AddTop10" /> method of the <b>FormatConditions</b> collection.</para>
          <para />
        </span>
      </span>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Top10.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e613-104">При использовании без квалификатор объекта, данное свойство возвращает <see cref="T:Microsoft.Office.Interop.Excel._Application" /> объект, представляющий приложение Microsoft Office Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e613-104">When used without an object qualifier, this property returns an  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Office Excel  application.</span>
          </span>
          <span data-ttu-id="4e613-105">При использовании с квалификатор объекта, данное свойство возвращает объект <b>приложения</b> , представляющего создателя указанный объект.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e613-105">When used with an object qualifier, this property returns an <b>Application</b> object that represents the creator of the specified object.</span>
          </span>
          <span data-ttu-id="4e613-106">Только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e613-106">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4e613-107">
            <b>Приложение</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4e613-107">
              <b>Application</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="4e613-108">
            <para>Это свойство можно использовать с помощью объекта OLE-автоматизации возвращает приложение этого объекта.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4e613-108">
              <para>You can use this property with an OLE Automation object to return the application of that object.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppliesTo">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range AppliesTo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range AppliesTo" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Top10.AppliesTo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AppliesTo As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ AppliesTo { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2626)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2626)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e613-109">Возвращает диапазон ячеек, к которым применяется правило форматирования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e613-109">Returns the cell range to which the formatting rule is applied.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.Range" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Borders">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Borders Borders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Borders Borders" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Top10.Borders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Borders As Borders" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Borders ^ Borders { Microsoft::Office::Interop::Excel::Borders ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(435)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(435)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Borders</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e613-110">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Borders" /> семейства сайтов, определяет форматирование границы ячеек, если правило условного форматирования имеет значение <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e613-110">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Borders" /> collection that specifies the formatting of cell borders if the conditional formatting rule evaluates to <b>True</b>.</span>
          </span>
          <span data-ttu-id="4e613-111">Только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e613-111">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4e613-112">
            <b>Границы</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4e613-112">
              <b>Borders</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="4e613-113">
            <para>Для условного форматирования объекта можно задать только свойства для верхней, нижней и со стороны границы ячейки.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4e613-113">
              <para>For a conditional formatting object, you can only set the properties for the top, bottom, and side borders of the cell.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalcFor">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCalcFor CalcFor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCalcFor CalcFor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Top10.CalcFor" />
      <MemberSignature Language="VB.NET" Value="Public Property CalcFor As XlCalcFor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCalcFor CalcFor { Microsoft::Office::Interop::Excel::XlCalcFor get(); void set(Microsoft::Office::Interop::Excel::XlCalcFor value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2730)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2730)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2730)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCalcFor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e613-114">Возвращает или задает, как должно оцениваться условное форматирование в отчете сводной таблицы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e613-114">Returns or sets how the conditional format in a PivotTable report should be evaluated.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.XlCalcFor" />
        </value>
        <remarks>
          <span data-ttu-id="4e613-115">
            <para>Это свойство применяется только в том случае, когда условное форматирование применяется к данным в отчете сводной таблицы.</para>
            <para>Этого свойства может быть присвоено <see cref="F:Microsoft.Office.Interop.Excel.XlCalcFor.xlAllValues" />, <see cref="F:Microsoft.Office.Interop.Excel.XlCalcFor.xlColGroups" />, или <see cref="F:Microsoft.Office.Interop.Excel.XlCalcFor.xlRowGroups" /> только тогда, когда <see cref="P:Microsoft.Office.Interop.Excel.Top10.ScopeType" /> свойству <see cref="F:Microsoft.Office.Interop.Excel.XlPivotConditionScope.xlFieldsScope" />.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4e613-115">
              <para>This property is applicable only when the conditional format is being applied to data in a PivotTable report.</para>
              <para>This property can be set to <see cref="F:Microsoft.Office.Interop.Excel.XlCalcFor.xlAllValues" />, <see cref="F:Microsoft.Office.Interop.Excel.XlCalcFor.xlColGroups" />, or <see cref="F:Microsoft.Office.Interop.Excel.XlCalcFor.xlRowGroups" /> only if the <see cref="P:Microsoft.Office.Interop.Excel.Top10.ScopeType" /> property is set to <see cref="F:Microsoft.Office.Interop.Excel.XlPivotConditionScope.xlFieldsScope" />. </para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Top10.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e613-116">Возвращает 32-битное целое число, указывающее на приложение, в котором объект был создан.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e613-116">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
          <span data-ttu-id="4e613-117">Только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e613-117">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />
        </value>
        <remarks>
          <span data-ttu-id="4e613-118">
            <para>Если объект был создан в Microsoft Excel, данное свойство возвращает строку XCEL, что эквивалентно шестнадцатеричный номер 5843454C.  Свойство <b>создателя</b> предназначено для использования в Microsoft Excel для Macintosh, где каждое приложение имеет код создателя четырех символов. Например Microsoft Excel содержит код создателя XCEL.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4e613-118">
              <para>If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.  The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code. For example, Microsoft Excel has the creator code XCEL.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Top10.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4e613-119">Удаление указанного условного форматирования правила.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e613-119">Deletes the specified conditional formatting rule object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Font Font { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Font Font" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Top10.Font" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Font ^ Font { Microsoft::Office::Interop::Excel::Font ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(146)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(146)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e613-120">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Font" /> объекта, который задает шрифт, форматирование, если правило условного форматирования имеет значение <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e613-120">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Font" /> object that specifies the font formatting if the conditional formatting rule evaluates to <b>True</b>.</span>
          </span>
          <span data-ttu-id="4e613-121">Только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e613-121">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4e613-122">
            <b>Шрифт</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4e613-122">
              <b>Font</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="4e613-123">
            <para>Не все свойства объекта <b>шрифта</b> , поддерживаются для условного форматирования объекта. Можно задать шрифт стиль, подчеркивание, цвет и зачеркивание атрибуты.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4e613-123">
              <para>Not all properties of the <b>Font</b> object are supported for a conditional formatting object. You can set the font style, underline, color, and strikethrough attributes.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Interior">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Interior Interior { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Interior Interior" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Top10.Interior" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Interior As Interior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Interior ^ Interior { Microsoft::Office::Interop::Excel::Interior ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Interior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e613-124">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> объект, который определяет атрибуты внутренних ячеек для условного форматирования правила, которое имеет значение <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e613-124">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object that specifies a cell's interior attributes for a conditional formatting rule that evaluates to <b>True</b>.</span>
          </span>
          <span data-ttu-id="4e613-125">Только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e613-125">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4e613-126">
            <b>Внутренняя</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4e613-126">
              <b>Interior</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifyAppliesToRange">
      <MemberSignature Language="C#" Value="public void ModifyAppliesToRange (Microsoft.Office.Interop.Excel.Range Range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ModifyAppliesToRange([in]class Microsoft.Office.Interop.Excel.Range Range) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Top10.ModifyAppliesToRange(Microsoft.Office.Interop.Excel.Range)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ModifyAppliesToRange(Microsoft::Office::Interop::Excel::Range ^ Range);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2627)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Range" Type="Microsoft.Office.Interop.Excel.Range" />
      </Parameters>
      <Docs>
        <param name="Range">
          <span data-ttu-id="4e613-127">Диапазон, к которому будет применяться это правило форматирования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e613-127">The range to which this formatting rule will be applied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e613-128">Задает диапазон ячеек, к которому применяется этот правила форматирования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e613-128">Sets the cell range to which this formatting rule applies.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="4e613-129">
            <para>Диапазон должен быть в стиль ссылок A1 и полностью содержаться в таблице, являющийся родительским <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> семейства сайтов. Он может включать оператор диапазона (двоеточие), оператор пересечения (пробел) или оператор объединения (запятая). Также можно использовать знак доллара, но они обрабатываются.</para>
            <para>Также можно использовать локально определенное имя в любой части диапазона, но имя должно быть языке макрос.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4e613-129">
              <para>The range must be in the A1 reference style and be entirely contained within the sheet that is the parent of the <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> collection. It can include the range operator (a colon), the intersection operator (a space), or the union operator (a comma). Dollar signs can also be used but they are ignored.</para>
              <para>You can also use a local defined name in any part of the range, but the name must be in the language of the macro.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberFormat">
      <MemberSignature Language="C#" Value="public object NumberFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object NumberFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Top10.NumberFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberFormat As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ NumberFormat { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e613-130">Возвращает или задает формат применяется к ячейке, если правило условного форматирования имеет значение <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e613-130">Returns or sets the number format applied to a cell if the conditional formatting rule evaluates to <b>True</b>.</span>
          </span>
          <span data-ttu-id="4e613-131">Для чтения и записи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e613-131">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4e613-132">
            <b>Объект</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4e613-132">
              <b>Object</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="4e613-133">
            <para>Формат номера задается с помощью одной кодов формата, отображаются на вкладке "число" диалогового окна Формат ячеек. Можно использовать встроенные числовой формат, например «Общие», или создать пользовательский числовой формат.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4e613-133">
              <para>The number format is specified using the same format codes displayed on the Number tab of the Format Cells dialog box. You can use a built-in number format, for example "General", or create a custom number format.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Top10.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e613-134">Возвращает родительский объект для указанного объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e613-134">Returns the parent object for the specified object.</span>
          </span>
          <span data-ttu-id="4e613-135">Только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e613-135">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4e613-136">
            <b>Объект</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4e613-136">
              <b>Object</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Percent">
      <MemberSignature Language="C#" Value="public bool Percent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Percent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Top10.Percent" />
      <MemberSignature Language="VB.NET" Value="Public Property Percent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Percent { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2729)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2729)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2729)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e613-137">Возвращает или задает <b>логическое</b> значение, указание, если ранг, определяется значение в процентах.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e613-137">Returns or sets a <b>Boolean</b> value, specifying if the rank is determined by a percentage value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4e613-138">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4e613-138">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public int Priority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Priority" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Top10.Priority" />
      <MemberSignature Language="VB.NET" Value="Public Property Priority As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Priority { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(985)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(985)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(985)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e613-139">Возвращает или задает значение приоритета правила условного форматирования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e613-139">Returns or sets the priority value of the conditional formatting rule.</span>
          </span>
          <span data-ttu-id="4e613-140">Приоритет определяет порядок вычисления, при наличии нескольких правила условного форматирования на листе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e613-140">The priority determines the order of evaluation when multiple conditional formatting rules exist in a worksheet.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4e613-141">
            <b>Integer</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4e613-141">
              <b>Integer</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="4e613-142">
            <para>При задании приоритета, значение должно быть положительное целое число от 1 до общее число правила условного форматирования в рабочем листе. Приоритет должен быть уникальное значение для всех правил в рабочем листе, поэтому изменение приоритета для указанного условного форматирования правила может стать причиной значение приоритета других правил на листе удаляются.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4e613-142">
              <para>When setting the priority, the value must be a positive integer between 1 and the total number of conditional formatting rules on the worksheet. The priority must be a unique value for all rules on the worksheet, so changing the priority for the specified conditional formattting rule may cause the priority value of the other rules on the worksheet to be shifted.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PTCondition">
      <MemberSignature Language="C#" Value="public bool PTCondition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PTCondition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Top10.PTCondition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PTCondition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PTCondition { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2631)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2631)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e613-143">Возвращает <b>логическое</b> значение, указывающее, если условное форматирование применяется к диаграмме сводной таблицы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e613-143">Returns a <b>Boolean</b> value indicating if the conditional format is being applied to a PivotTable chart.</span>
          </span>
          <span data-ttu-id="4e613-144">Только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e613-144">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4e613-145">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4e613-145">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rank">
      <MemberSignature Language="C#" Value="public int Rank { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Rank" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Top10.Rank" />
      <MemberSignature Language="VB.NET" Value="Public Property Rank As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Rank { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1290)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1290)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1290)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e613-146">Возвращает или задает <b>целое число, определяющее номер или процентное значение ранга для правила условного форматирования</b> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e613-146">Returns or sets an <b>Integer</b> value, specifying either the number or percentage of the rank value for the conditional format rule.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4e613-147">
            <b>Integer</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4e613-147">
              <b>Integer</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScopeType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlPivotConditionScope ScopeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlPivotConditionScope ScopeType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Top10.ScopeType" />
      <MemberSignature Language="VB.NET" Value="Public Property ScopeType As XlPivotConditionScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlPivotConditionScope ScopeType { Microsoft::Office::Interop::Excel::XlPivotConditionScope get(); void set(Microsoft::Office::Interop::Excel::XlPivotConditionScope value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2615)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2615)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2615)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlPivotConditionScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e613-148">Возвращает или задает область условное форматирование при применении диаграммы сводной таблицы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e613-148">Returns or sets the scope of the conditional format when it is applied to a PivotTable chart.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.XlPivotConditionScope" />
        </value>
        <remarks>
          <span data-ttu-id="4e613-149">
            <para>Значение по умолчанию — <see cref="F:Microsoft.Office.Interop.Excel.XlPivotConditionScope.xlSelectionScope" />, который задает область с помощью <see cref="P:Microsoft.Office.Interop.Excel.Top10.AppliesTo" /> свойство.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4e613-149">
              <para>The default value is <see cref="F:Microsoft.Office.Interop.Excel.XlPivotConditionScope.xlSelectionScope" />, which sets the scope using the <see cref="P:Microsoft.Office.Interop.Excel.Top10.AppliesTo" /> property.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFirstPriority">
      <MemberSignature Language="C#" Value="public void SetFirstPriority ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFirstPriority() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Top10.SetFirstPriority" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFirstPriority ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFirstPriority();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2629)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4e613-150">Устанавливает значение приоритета для данного правила условного форматирования значение «1», чтобы вычисляется перед всех правил в рабочем листе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e613-150">Sets the priority value for this conditional formatting rule to "1" so that it will be evaluated before all other rules on the worksheet.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="4e613-151">
            <para>При наличии нескольких правила условного форматирования на листе, если правило не было установлено ранее приоритет «1», этот метод будет отображено приоритет все существующие правила на листе увеличено с помощью одного.</para>
            <para>
              <b>Примечание</b>: уровни приоритета для правила условного форматирования, применяются на основе уровне рабочего листа.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4e613-151">
              <para>When you have multiple conditional formatting rules in a worksheet, if the rule was not previously set to priority "1", this method will cause the priority of all other existing rules on the worksheet to be increased by one.</para>
              <para>
                <b>Note</b>: Priority levels for conditional formatting rules are applied on a worksheet-level basis.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLastPriority">
      <MemberSignature Language="C#" Value="public void SetLastPriority ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLastPriority() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Top10.SetLastPriority" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLastPriority ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetLastPriority();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2630)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4e613-152">Задает порядок вычисления для данного правила условного форматирования, поэтому оценивается после всех правил в рабочем листе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e613-152">Sets the evaluation order for this conditional formatting rule so it is evaluated after all other rules on the worksheet.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="4e613-153">
            <para>Фактический vaule приоритет будет совпадать с общим количеством правила условного форматирования в рабочем листе. При наличии нескольких правила условного форматирования на лист, этот метод будет отображено приоритет правила, которые имели значение приоритета, больше, чем правило будет увеличено с помощью одного.</para>
            <para>
              <b>Примечание</b>: уровни приоритета для правила условного форматирования, применяются на основе уровне рабочего листа.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4e613-153">
              <para>The actual vaule of the priority will be equal to the total number of conditional formatting rules on the worksheet. When you have multiple conditional formatting rules  in a worksheet, this method will cause the priority of rules that had a priority value greater than this rule to be increased by one.</para>
              <para>
                <b>Note</b>: Priority levels for conditional formatting rules are applied on a worksheet-level basis.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StopIfTrue">
      <MemberSignature Language="C#" Value="public bool StopIfTrue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StopIfTrue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Top10.StopIfTrue" />
      <MemberSignature Language="VB.NET" Value="Public Property StopIfTrue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StopIfTrue { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2625)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e613-154">Возвращает или задает <b>логическое</b> значение, определяющее, если должно оцениваться дополнительных правил форматирования для ячейки, если текущее правило имеет значение <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e613-154">Returns or sets a <b>Boolean</b> value that determines if additional formatting rules on the cell should be evaluated if the current rule evaluates to <b>True</b>.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4e613-155">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4e613-155">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="4e613-156">
            <para>Для поддержки обратной совместимости, значение по умолчанию для этого свойства — <b>True</b>, которое является противоположным образом поведение форматирования правила, созданные в пользовательском интерфейсе.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4e613-156">
              <para>To support backward compatibility, the default value for this property is <b>True</b>, which is the opposite behavior of a formatting rule created in the user interface.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TopBottom">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlTopBottom TopBottom { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlTopBottom TopBottom" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Top10.TopBottom" />
      <MemberSignature Language="VB.NET" Value="Public Property TopBottom As XlTopBottom" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlTopBottom TopBottom { Microsoft::Office::Interop::Excel::XlTopBottom get(); void set(Microsoft::Office::Interop::Excel::XlTopBottom value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2728)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2728)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2728)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlTopBottom</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e613-157">Возвращает или задает одной из констант из <see cref="T:Microsoft.Office.Interop.Excel.XlTopBottom" /> перечисление, определить, был ли ранжирования вычисляется из вверх или вниз.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e613-157">Returns or sets one of the constants of the <see cref="T:Microsoft.Office.Interop.Excel.XlTopBottom" /> enumeration, determining if the ranking is evaluated from the top or bottom.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4e613-158">
            <b>XlTopBottom</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4e613-158">
              <b>XlTopBottom</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public int Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Top10.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Type { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e613-159">Возвращает тип условное форматирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e613-159">Returns the type of conditional format.</span>
          </span>
          <span data-ttu-id="4e613-160">Только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e613-160">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionType" />
        </value>
        <remarks>
          <span data-ttu-id="4e613-161">
            <para>Это свойство всегда возвращает <b>целое</b> значение «5», который соответствует <see cref="F:Microsoft.Office.Interop.Excel.XlFormatConditionType.xlTop10" />.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4e613-161">
              <para>This property will always return an <b>Integer</b> value of "5", which is equivalent to <see cref="F:Microsoft.Office.Interop.Excel.XlFormatConditionType.xlTop10" />.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>