<Type Name="Charts" FullName="Microsoft.Office.Interop.Excel.Charts">
  <Metadata><Meta Name="ms.openlocfilehash" Value="21bb7adb80852e2d82d5897dcd0ffec87dcefadd" /><Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/24/2018" /><Meta Name="ms.locfileid" Value="20581741" /></Metadata><TypeSignature Language="C#" Value="public interface Charts : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Charts implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Charts" />
  <TypeSignature Language="VB.NET" Value="Public Interface Charts&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class Charts : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0002086D-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a891a-101">Коллекция всех листов диаграммы в указанной или активной книге.</span><span class="sxs-lookup"><span data-stu-id="a891a-101">A collection of all the chart sheets in the specified or active workbook.</span></span> <span data-ttu-id="a891a-102">Каждый лист диаграммы представлен <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> объектом.</span><span class="sxs-lookup"><span data-stu-id="a891a-102">Each chart sheet is represented by a <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object.</span></span> <span data-ttu-id="a891a-103">Это не относится к диаграммам, встроенным на листы или листы диалоговых окон.</span><span class="sxs-lookup"><span data-stu-id="a891a-103">This doesn’t include charts embedded on worksheets or dialog sheets.</span></span> <span data-ttu-id="a891a-104">Сведения о внедренных диаграммах приведены в <see cref="T:Microsoft.Office.Interop.Excel.ChartObject" /> разделе Object.</span><span class="sxs-lookup"><span data-stu-id="a891a-104">For information about embedded charts, see the <see cref="T:Microsoft.Office.Interop.Excel.ChartObject" /> object.</span></span></summary>
    <remarks><para><span data-ttu-id="a891a-105">Используйте <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Charts" /> свойство, чтобы возвратить коллекцию <b>Charts</b> .</span><span class="sxs-lookup"><span data-stu-id="a891a-105">Use the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Charts" /> property to return the <b>Charts</b> collection.</span></span> <span data-ttu-id="a891a-106">Используйте <see cref="M:Microsoft.Office.Interop.Excel.Charts.Add(System.Object,System.Object,System.Object)" /> метод, чтобы создать новый лист диаграммы и добавить его в книгу.</span><span class="sxs-lookup"><span data-stu-id="a891a-106">Use the <see cref="M:Microsoft.Office.Interop.Excel.Charts.Add(System.Object,System.Object,System.Object)" /> method to create a new chart sheet and add it to the workbook.</span></span></para>
      <para><span data-ttu-id="a891a-107">Можно объединить <see cref="M:Microsoft.Office.Interop.Excel.Charts.Add(System.Object,System.Object,System.Object)" /> метод с <see cref="M:Microsoft.Office.Interop.Excel._Chart.ChartWizard(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> методом, чтобы добавить новую диаграмму, содержащую данные из листа.</span><span class="sxs-lookup"><span data-stu-id="a891a-107">You can combine the <see cref="M:Microsoft.Office.Interop.Excel.Charts.Add(System.Object,System.Object,System.Object)" /> method with the <see cref="M:Microsoft.Office.Interop.Excel._Chart.ChartWizard(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method to add a new chart that contains data from a worksheet.</span></span></para>
      <para><span data-ttu-id="a891a-108">Используйте <b>диаграммы</b>(<paramref name="index" />), где <paramref name="index" /> — это номер или имя индекса листа диаграммы, чтобы вернуть один объект <b>диаграммы</b> .</span><span class="sxs-lookup"><span data-stu-id="a891a-108">Use <b>Charts</b>(<paramref name="index" />), where <paramref name="index" /> is the chart sheet index number or name, to return a single <b>Chart</b> object.</span></span></para>
      <para><span data-ttu-id="a891a-109"><see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> Коллекция содержит все листы в книге (листы и листы диаграммы).</span><span class="sxs-lookup"><span data-stu-id="a891a-109">The <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection contains all the sheets in the workbook (both chart sheets and worksheets).</span></span> <span data-ttu-id="a891a-110">USE <b>Sheets</b>(<paramref name="index" />), <paramref name="index" /> где — это имя листа или номер, чтобы вернуть один лист.</span><span class="sxs-lookup"><span data-stu-id="a891a-110">Use <b>Sheets</b>(<paramref name="index" />), where <paramref name="index" /> is the sheet name or number, to return a single sheet.</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public object this[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object _Default(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Charts._Default(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default(Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="a891a-111">Зарезервировано для внутреннего использования.</span><span class="sxs-lookup"><span data-stu-id="a891a-111">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Dummy7">
      <MemberSignature Language="C#" Value="public void _Dummy7 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _Dummy7() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Charts._Dummy7" />
      <MemberSignature Language="VB.NET" Value="Public Sub _Dummy7 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void _Dummy7();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(65543)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1089)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a891a-112">Зарезервировано для внутреннего использования.</span><span class="sxs-lookup"><span data-stu-id="a891a-112">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_PrintOut">
      <MemberSignature Language="C#" Value="public void _PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Charts._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(905)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <summary><span data-ttu-id="a891a-113">Зарезервировано для внутреннего использования.</span><span class="sxs-lookup"><span data-stu-id="a891a-113">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Chart Add (object Before, object After, object Count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Chart Add([in]object Before, [in]object After, [in]object Count) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Charts.Add(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (Optional Before As Object, Optional After As Object, Optional Count As Object) As Chart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(181)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Chart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
        <Parameter Name="Count" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before">To be added.</param>
        <param name="After">To be added.</param>
        <param name="Count">To be added.</param>
        <summary><span data-ttu-id="a891a-114">Этот объект, элемент или перечисление устарели и не предназначены для использования в коде.</span><span class="sxs-lookup"><span data-stu-id="a891a-114">This object, member, or enumeration is deprecated and is not intended to be used in your code.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add2">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Chart Add2 (object Before, object After, object Count, object NewLayout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Chart Add2([in]object Before, [in]object After, [in]object Count, [in]object NewLayout) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Charts.Add2(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add2 (Optional Before As Object, Optional After As Object, Optional Count As Object, Optional NewLayout As Object) As Chart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3054)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Chart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
        <Parameter Name="Count" Type="System.Object" />
        <Parameter Name="NewLayout" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before"><span data-ttu-id="a891a-115">Объект, указывающий лист, перед которым добавляется новый лист.</span><span class="sxs-lookup"><span data-stu-id="a891a-115">An object that specifies the sheet before which the new sheet is added.</span></span></param>
        <param name="After"><span data-ttu-id="a891a-116">Объект, указывающий лист, после которого добавляется новый лист.</span><span class="sxs-lookup"><span data-stu-id="a891a-116">An object that specifies the sheet after which the new sheet is added.</span></span></param>
        <param name="Count"><span data-ttu-id="a891a-117">Количество добавляемых листов.</span><span class="sxs-lookup"><span data-stu-id="a891a-117">The number of sheets to be added.</span></span> <span data-ttu-id="a891a-118">Значение по умолчанию — один.</span><span class="sxs-lookup"><span data-stu-id="a891a-118">The default value is one.</span></span></param>
        <param name="NewLayout"><span data-ttu-id="a891a-119">Если <b>невлайаут</b> имеет <b>значение true</b>, диаграмма вставляется с использованием новых правил динамического форматирования (заголовок имеет значение включено, а условные обозначения — только при наличии нескольких рядов).</span><span class="sxs-lookup"><span data-stu-id="a891a-119">If <b>NewLayout</b> is <b>True</b>, the chart is inserted by using the new dynamic formatting rules (Title is on, and Legend is on only if there are multiple series).</span></span></param>
        <summary><span data-ttu-id="a891a-120">Вставляет диаграмму непосредственно на сетку.</span><span class="sxs-lookup"><span data-stu-id="a891a-120">Inserts a chart directly onto the grid.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Charts.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a891a-121">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Application" /> объект, представляющий приложение Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="a891a-121">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span></span> <span data-ttu-id="a891a-122">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="a891a-122">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public void Copy (object Before, object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy([in]object Before, [in]object After) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Charts.Copy(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Copy (Optional Before As Object, Optional After As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(551)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before"><span data-ttu-id="a891a-123">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="a891a-123">Optional <b>Object</b>.</span></span> <span data-ttu-id="a891a-124">Лист, на котором будет размещаться скопированный лист.</span><span class="sxs-lookup"><span data-stu-id="a891a-124">The sheet before which the copied sheet will be placed.</span></span> <span data-ttu-id="a891a-125">Вы не можете <paramref name="Before" /> указать, если <paramref name="After" />вы указали.</span><span class="sxs-lookup"><span data-stu-id="a891a-125">You cannot specify <paramref name="Before" /> if you specify <paramref name="After" />.</span></span></param>
        <param name="After"><span data-ttu-id="a891a-126">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="a891a-126">Optional <b>Object</b>.</span></span> <span data-ttu-id="a891a-127">Лист, после которого будет размещаться скопированный лист.</span><span class="sxs-lookup"><span data-stu-id="a891a-127">The sheet after which the copied sheet will be placed.</span></span> <span data-ttu-id="a891a-128">Вы не можете <paramref name="After" /> указать, если <paramref name="Before" />вы указали.</span><span class="sxs-lookup"><span data-stu-id="a891a-128">You cannot specify <paramref name="After" /> if you specify <paramref name="Before" />.</span></span></param>
        <summary><span data-ttu-id="a891a-129">Копирует лист в другое расположение в книге.</span><span class="sxs-lookup"><span data-stu-id="a891a-129">Copies the sheet to another location in the workbook.</span></span></summary>
        <remarks><para><span data-ttu-id="a891a-130">Если вы не укажете <paramref name="Before" /> или <paramref name="After" />, Microsoft Excel создаст новую книгу, содержащую скопированный лист.</span><span class="sxs-lookup"><span data-stu-id="a891a-130">If you don't specify either <paramref name="Before" /> or <paramref name="After" />, Microsoft Excel creates a new workbook that contains the copied sheet.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Charts.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a891a-131">Возвращает число объектов в коллекции.</span><span class="sxs-lookup"><span data-stu-id="a891a-131">Returns the number of objects in the collection.</span></span> <span data-ttu-id="a891a-132">Только для чтения, Integer.</span><span class="sxs-lookup"><span data-stu-id="a891a-132">Read-only Integer.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Charts.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a891a-133">Возвращает 32-битное целое число, указывающее на приложение, в котором объект был создан.</span><span class="sxs-lookup"><span data-stu-id="a891a-133">Returns a 32-bit integer that indicates the application in which this object was created.</span></span> <span data-ttu-id="a891a-134">Если объект был создан в Microsoft Excel, это свойство возвращает строку КСЦЕЛ, которая эквивалентна шестнадцатеричному числу 5843454C.</span><span class="sxs-lookup"><span data-stu-id="a891a-134">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span> <span data-ttu-id="a891a-135">Только <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />для чтения.</span><span class="sxs-lookup"><span data-stu-id="a891a-135">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="a891a-136">Свойство <b>Creator</b> предназначено для использования в Microsoft Excel для Macintosh, где каждое приложение содержит код создателя из четырех символов.</span><span class="sxs-lookup"><span data-stu-id="a891a-136">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="a891a-137">Например, в Microsoft Excel есть код создателя КСЦЕЛ.</span><span class="sxs-lookup"><span data-stu-id="a891a-137">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Charts.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a891a-138">Удаляет объект.</span><span class="sxs-lookup"><span data-stu-id="a891a-138">Deletes the object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Charts.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HPageBreaks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.HPageBreaks HPageBreaks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.HPageBreaks HPageBreaks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Charts.HPageBreaks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HPageBreaks As HPageBreaks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::HPageBreaks ^ HPageBreaks { Microsoft::Office::Interop::Excel::HPageBreaks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1418)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1418)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.HPageBreaks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a891a-139">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.HPageBreaks" /> коллекцию, представляющую горизонтальные разрывы страниц на листе.</span><span class="sxs-lookup"><span data-stu-id="a891a-139">Returns an <see cref="T:Microsoft.Office.Interop.Excel.HPageBreaks" /> collection that represents the horizontal page breaks on the sheet.</span></span> <span data-ttu-id="a891a-140">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="a891a-140">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="a891a-141">На листе может быть не более 1026 горизонтальных страниц.</span><span class="sxs-lookup"><span data-stu-id="a891a-141">There is a limit of 1026 horizontal page breaks per sheet.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object Item[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Charts.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item(Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Item[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="a891a-142">Обязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="a891a-142">Required <b>Object</b>.</span></span> <span data-ttu-id="a891a-143">Имя или номер индекса объекта.</span><span class="sxs-lookup"><span data-stu-id="a891a-143">The name or index number of the object.</span></span></param>
        <summary><span data-ttu-id="a891a-144">Возвращает один объект из коллекции.</span><span class="sxs-lookup"><span data-stu-id="a891a-144">Returns a single object from a collection.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public void Move (object Before, object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Move([in]object Before, [in]object After) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Charts.Move(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Move (Optional Before As Object, Optional After As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(637)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before"><span data-ttu-id="a891a-145">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="a891a-145">Optional <b>Object</b>.</span></span> <span data-ttu-id="a891a-146">Лист, на котором будет размещаться перемещенный лист.</span><span class="sxs-lookup"><span data-stu-id="a891a-146">The sheet before which the moved sheet will be placed.</span></span> <span data-ttu-id="a891a-147">Вы не можете <paramref name="Before" /> указать, если <paramref name="After" />вы указали.</span><span class="sxs-lookup"><span data-stu-id="a891a-147">You cannot specify <paramref name="Before" /> if you specify <paramref name="After" />.</span></span></param>
        <param name="After"><span data-ttu-id="a891a-148">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="a891a-148">Optional <b>Object</b>.</span></span> <span data-ttu-id="a891a-149">Лист, после которого будет помещен перемещенный лист.</span><span class="sxs-lookup"><span data-stu-id="a891a-149">The sheet after which the moved sheet will be placed.</span></span> <span data-ttu-id="a891a-150">Вы не можете <paramref name="After" /> указать, если <paramref name="Before" />вы указали.</span><span class="sxs-lookup"><span data-stu-id="a891a-150">You cannot specify <paramref name="After" /> if you specify <paramref name="Before" />.</span></span></param>
        <summary><span data-ttu-id="a891a-151">Перемещает лист в другое расположение в книге.</span><span class="sxs-lookup"><span data-stu-id="a891a-151">Moves the sheet to another location in the workbook.</span></span></summary>
        <remarks><para><span data-ttu-id="a891a-152">Если вы не укажете <paramref name="Before" /> или <paramref name="After" />, Microsoft Excel создаст новую книгу, содержащую перемещенный лист.</span><span class="sxs-lookup"><span data-stu-id="a891a-152">If you don't specify either <paramref name="Before" /> or <paramref name="After" />, Microsoft Excel creates a new workbook that contains the moved sheet.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Charts.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a891a-153">Возвращает родительский объект для указанного объекта.</span><span class="sxs-lookup"><span data-stu-id="a891a-153">Returns the parent object for the specified object.</span></span> <span data-ttu-id="a891a-154">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="a891a-154">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOut">
      <MemberSignature Language="C#" Value="public void PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Charts.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From"><span data-ttu-id="a891a-155">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="a891a-155">Optional <b>Object</b>.</span></span> <span data-ttu-id="a891a-156">Номер страницы, с которой начинается печать.</span><span class="sxs-lookup"><span data-stu-id="a891a-156">The number of the page at which to start printing.</span></span> <span data-ttu-id="a891a-157">Если этот аргумент опущен, печать начинается с начала.</span><span class="sxs-lookup"><span data-stu-id="a891a-157">If this argument is omitted, printing starts at the beginning.</span></span></param>
        <param name="To"><span data-ttu-id="a891a-158">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="a891a-158">Optional <b>Object</b>.</span></span> <span data-ttu-id="a891a-159">Номер последней страницы, которую требуется напечатать.</span><span class="sxs-lookup"><span data-stu-id="a891a-159">The number of the last page to print.</span></span> <span data-ttu-id="a891a-160">Если этот аргумент опущен, печать заканчивается на последней странице.</span><span class="sxs-lookup"><span data-stu-id="a891a-160">If this argument is omitted, printing ends with the last page.</span></span></param>
        <param name="Copies"><span data-ttu-id="a891a-161">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="a891a-161">Optional <b>Object</b>.</span></span> <span data-ttu-id="a891a-162">Число копий для печати.</span><span class="sxs-lookup"><span data-stu-id="a891a-162">The number of copies to print.</span></span> <span data-ttu-id="a891a-163">Если этот аргумент не задан, печатается одна копия.</span><span class="sxs-lookup"><span data-stu-id="a891a-163">If this argument is omitted, one copy is printed.</span></span></param>
        <param name="Preview"><span data-ttu-id="a891a-164">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="a891a-164">Optional <b>Object</b>.</span></span> <span data-ttu-id="a891a-165"><b>Значение true</b> , если Microsoft Excel вызывает предварительный просмотр перед печатью объекта.</span><span class="sxs-lookup"><span data-stu-id="a891a-165"><b>True</b> to have Microsoft Excel invoke print preview before printing the object.</span></span> <span data-ttu-id="a891a-166"><b>Значение false</b> (или опущено) для немедленной печати объекта.</span><span class="sxs-lookup"><span data-stu-id="a891a-166"><b>False</b> (or omitted) to print the object immediately.</span></span></param>
        <param name="ActivePrinter"><span data-ttu-id="a891a-167">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="a891a-167">Optional <b>Object</b>.</span></span> <span data-ttu-id="a891a-168">Задает имя активного принтера.</span><span class="sxs-lookup"><span data-stu-id="a891a-168">Sets the name of the active printer.</span></span></param>
        <param name="PrintToFile"><span data-ttu-id="a891a-169">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="a891a-169">Optional <b>Object</b>.</span></span> <span data-ttu-id="a891a-170"><b>Значение true</b> для печати в файл.</span><span class="sxs-lookup"><span data-stu-id="a891a-170"><b>True</b> to print to a file.</span></span> <span data-ttu-id="a891a-171">Если <paramref name="PrToFileName" /> параметр не указан, Microsoft Excel предлагает пользователю ввести имя выходного файла.</span><span class="sxs-lookup"><span data-stu-id="a891a-171">If <paramref name="PrToFileName" /> is not specified, Microsoft Excel prompts the user to enter the name of the output file.</span></span></param>
        <param name="Collate"><span data-ttu-id="a891a-172">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="a891a-172">Optional <b>Object</b>.</span></span> <span data-ttu-id="a891a-173"><b>Значение true</b> для разбора по копиям нескольких копий.</span><span class="sxs-lookup"><span data-stu-id="a891a-173"><b>True</b> to collate multiple copies.</span></span></param>
        <param name="PrToFileName"><span data-ttu-id="a891a-174">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="a891a-174">Optional <b>Object</b>.</span></span> <span data-ttu-id="a891a-175">Если <paramref name="PrintToFile" /> задано <b>значение true</b>, этот аргумент указывает имя файла, в который будет выполняться печать.</span><span class="sxs-lookup"><span data-stu-id="a891a-175">If <paramref name="PrintToFile" /> is set to <b>True</b>, this argument specifies the name of the file you want to print to.</span></span></param>
        <summary><span data-ttu-id="a891a-176">Печатает объект.</span><span class="sxs-lookup"><span data-stu-id="a891a-176">Prints the object.</span></span></summary>
        <remarks><para><span data-ttu-id="a891a-177">"Pages" (страницы) <paramref name="From" /> в <paramref name="To" /> описаниях и относится к печатным страницам, а не к общим страницам листа или книги.</span><span class="sxs-lookup"><span data-stu-id="a891a-177">"Pages" in the descriptions of <paramref name="From" /> and <paramref name="To" /> refers to printed pages, not overall pages in the sheet or workbook.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOut_2">
      <MemberSignature Language="C#" Value="public void PrintOut_2 (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOut_2([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Charts.PrintOut_2(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintOut_2 (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2361)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <param name="PrToFileName">To be added.</param>
        <summary><span data-ttu-id="a891a-178">Зарезервировано для внутреннего использования.</span><span class="sxs-lookup"><span data-stu-id="a891a-178">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintPreview">
      <MemberSignature Language="C#" Value="public void PrintPreview (object EnableChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintPreview([in]object EnableChanges) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Charts.PrintPreview(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintPreview (Optional EnableChanges As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(281)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EnableChanges" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="EnableChanges"><span data-ttu-id="a891a-179">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="a891a-179">Optional <b>Object</b>.</span></span> <span data-ttu-id="a891a-180"><b>Значение true</b> , чтобы включить изменения в указанных диаграммах.</span><span class="sxs-lookup"><span data-stu-id="a891a-180"><b>True</b> to enable changes to the specified charts.</span></span></param>
        <summary><span data-ttu-id="a891a-181">Показывает предварительный просмотр объекта в том виде, в котором он будет выглядеть при печати.</span><span class="sxs-lookup"><span data-stu-id="a891a-181">Shows a preview of the object as it would look when printed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (object Replace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select([in]object Replace) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Charts.Select(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (Optional Replace As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(235)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Replace" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Replace"><span data-ttu-id="a891a-182">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="a891a-182">Optional <b>Object</b>.</span></span> <span data-ttu-id="a891a-183">Заменяемый объект.</span><span class="sxs-lookup"><span data-stu-id="a891a-183">The object to replace.</span></span></param>
        <summary><span data-ttu-id="a891a-184">Выбирает объект.</span><span class="sxs-lookup"><span data-stu-id="a891a-184">Selects the object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public object Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Visible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Charts.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Visible { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a891a-185">Определяет, является ли объект видимым.</span><span class="sxs-lookup"><span data-stu-id="a891a-185">Determines whether the object is visible.</span></span> <span data-ttu-id="a891a-186"><b>Объект</b>для чтения и записи.</span><span class="sxs-lookup"><span data-stu-id="a891a-186">Read/write <b>Object</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VPageBreaks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.VPageBreaks VPageBreaks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.VPageBreaks VPageBreaks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Charts.VPageBreaks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VPageBreaks As VPageBreaks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::VPageBreaks ^ VPageBreaks { Microsoft::Office::Interop::Excel::VPageBreaks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1419)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1419)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.VPageBreaks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a891a-187">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.VPageBreaks" /> коллекцию, представляющую вертикальные разрывы страниц на листе.</span><span class="sxs-lookup"><span data-stu-id="a891a-187">Returns a <see cref="T:Microsoft.Office.Interop.Excel.VPageBreaks" /> collection that represents the vertical page breaks on the sheet.</span></span> <span data-ttu-id="a891a-188">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="a891a-188">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>