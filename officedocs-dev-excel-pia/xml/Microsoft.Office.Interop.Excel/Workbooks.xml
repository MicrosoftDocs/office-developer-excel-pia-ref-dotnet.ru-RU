<Type Name="Workbooks" FullName="Microsoft.Office.Interop.Excel.Workbooks">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e216142f85071dc6b33c9b1eb3c9ddffaa7369de" /><Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/24/2018" /><Meta Name="ms.locfileid" Value="20574937" /></Metadata><TypeSignature Language="C#" Value="public interface Workbooks : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Workbooks implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Workbooks" />
  <TypeSignature Language="VB.NET" Value="Public Interface Workbooks&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class Workbooks : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208DB-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4288)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a46b9-101">Коллекция всех <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> объектов, которые в данный момент открыты в приложении Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="a46b9-101">A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> objects that are currently open in the Microsoft Excel application.</span></span></summary>
    <remarks><para><span data-ttu-id="a46b9-102">Используйте <see cref="P:Microsoft.Office.Interop.Excel._Application.Workbooks" /> свойство, чтобы возвратить коллекцию <b>книг</b> .</span><span class="sxs-lookup"><span data-stu-id="a46b9-102">Use the <see cref="P:Microsoft.Office.Interop.Excel._Application.Workbooks" /> property to return the <b>Workbooks</b> collection.</span></span></para>
      <para><span data-ttu-id="a46b9-103">С помощью <see cref="M:Microsoft.Office.Interop.Excel.Workbooks.Add(System.Object)" /> метода создайте новую пустую книгу и добавьте ее в коллекцию.</span><span class="sxs-lookup"><span data-stu-id="a46b9-103">Use the <see cref="M:Microsoft.Office.Interop.Excel.Workbooks.Add(System.Object)" /> method to create a new, empty workbook and add it to the collection.</span></span></para>
      <para><span data-ttu-id="a46b9-104">Используйте <see cref="M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> метод, чтобы открыть файл.</span><span class="sxs-lookup"><span data-stu-id="a46b9-104">Use the <see cref="M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method to open a file.</span></span></para>
      <para><span data-ttu-id="a46b9-105">Для получения дополнительных сведений об использовании одного объекта <b>книги</b> , просмотрите <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> объект.</span><span class="sxs-lookup"><span data-stu-id="a46b9-105">For more information about using a single <b>Workbook</b> object, see the <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object.</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="__OpenText">
      <MemberSignature Language="C#" Value="public void __OpenText (string Filename, object Origin, object StartRow, object DataType, Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, object ConsecutiveDelimiter, object Tab, object Semicolon, object Comma, object Space, object Other, object OtherChar, object FieldInfo, object TextVisualLayout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void __OpenText([in]string Filename, [in]object Origin, [in]object StartRow, [in]object DataType, [in]valuetype Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier, [in]object ConsecutiveDelimiter, [in]object Tab, [in]object Semicolon, [in]object Comma, [in]object Space, [in]object Other, [in]object OtherChar, [in]object FieldInfo, [in]object TextVisualLayout) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.__OpenText(System.String,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlTextQualifier,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub __OpenText (Filename As String, Optional Origin As Object, Optional StartRow As Object, Optional DataType As Object, Optional TextQualifier As XlTextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, Optional ConsecutiveDelimiter As Object, Optional Tab As Object, Optional Semicolon As Object, Optional Comma As Object, Optional Space As Object, Optional Other As Object, Optional OtherChar As Object, Optional FieldInfo As Object, Optional TextVisualLayout As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(683)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(14)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="Origin" Type="System.Object" />
        <Parameter Name="StartRow" Type="System.Object" />
        <Parameter Name="DataType" Type="System.Object" />
        <Parameter Name="TextQualifier" Type="Microsoft.Office.Interop.Excel.XlTextQualifier" />
        <Parameter Name="ConsecutiveDelimiter" Type="System.Object" />
        <Parameter Name="Tab" Type="System.Object" />
        <Parameter Name="Semicolon" Type="System.Object" />
        <Parameter Name="Comma" Type="System.Object" />
        <Parameter Name="Space" Type="System.Object" />
        <Parameter Name="Other" Type="System.Object" />
        <Parameter Name="OtherChar" Type="System.Object" />
        <Parameter Name="FieldInfo" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="Origin">To be added.</param>
        <param name="StartRow">To be added.</param>
        <param name="DataType">To be added.</param>
        <param name="TextQualifier">To be added.</param>
        <param name="ConsecutiveDelimiter">To be added.</param>
        <param name="Tab">To be added.</param>
        <param name="Semicolon">To be added.</param>
        <param name="Comma">To be added.</param>
        <param name="Space">To be added.</param>
        <param name="Other">To be added.</param>
        <param name="OtherChar">To be added.</param>
        <param name="FieldInfo">To be added.</param>
        <param name="TextVisualLayout">To be added.</param>
        <summary><span data-ttu-id="a46b9-106">Зарезервировано для внутреннего использования.</span><span class="sxs-lookup"><span data-stu-id="a46b9-106">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook this[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Workbook _Default(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks._Default(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default(Index As Object) As Workbook" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Workbook ^ default[System::Object ^] { Microsoft::Office::Interop::Excel::Workbook ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="a46b9-107">Зарезервировано для внутреннего использования.</span><span class="sxs-lookup"><span data-stu-id="a46b9-107">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Open">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook _Open (string Filename, object UpdateLinks, object ReadOnly, object Format, object Password, object WriteResPassword, object IgnoreReadOnlyRecommended, object Origin, object Delimiter, object Editable, object Notify, object Converter, object AddToMru);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook _Open([in]string Filename, [in]object UpdateLinks, [in]object ReadOnly, [in]object Format, [in]object Password, [in]object WriteResPassword, [in]object IgnoreReadOnlyRecommended, [in]object Origin, [in]object Delimiter, [in]object Editable, [in]object Notify, [in]object Converter, [in]object AddToMru) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks._Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _Open (Filename As String, Optional UpdateLinks As Object, Optional ReadOnly As Object, Optional Format As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional IgnoreReadOnlyRecommended As Object, Optional Origin As Object, Optional Delimiter As Object, Optional Editable As Object, Optional Notify As Object, Optional Converter As Object, Optional AddToMru As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(682)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(13)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="UpdateLinks" Type="System.Object" />
        <Parameter Name="ReadOnly" Type="System.Object" />
        <Parameter Name="Format" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="IgnoreReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="Origin" Type="System.Object" />
        <Parameter Name="Delimiter" Type="System.Object" />
        <Parameter Name="Editable" Type="System.Object" />
        <Parameter Name="Notify" Type="System.Object" />
        <Parameter Name="Converter" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="UpdateLinks">To be added.</param>
        <param name="ReadOnly">To be added.</param>
        <param name="Format">To be added.</param>
        <param name="Password">To be added.</param>
        <param name="WriteResPassword">To be added.</param>
        <param name="IgnoreReadOnlyRecommended">To be added.</param>
        <param name="Origin">To be added.</param>
        <param name="Delimiter">To be added.</param>
        <param name="Editable">To be added.</param>
        <param name="Notify">To be added.</param>
        <param name="Converter">To be added.</param>
        <param name="AddToMru">To be added.</param>
        <summary><span data-ttu-id="a46b9-108">Зарезервировано для внутреннего использования.</span><span class="sxs-lookup"><span data-stu-id="a46b9-108">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_OpenText">
      <MemberSignature Language="C#" Value="public void _OpenText (string Filename, object Origin, object StartRow, object DataType, Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, object ConsecutiveDelimiter, object Tab, object Semicolon, object Comma, object Space, object Other, object OtherChar, object FieldInfo, object TextVisualLayout, object DecimalSeparator, object ThousandsSeparator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _OpenText([in]string Filename, [in]object Origin, [in]object StartRow, [in]object DataType, [in]valuetype Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier, [in]object ConsecutiveDelimiter, [in]object Tab, [in]object Semicolon, [in]object Comma, [in]object Space, [in]object Other, [in]object OtherChar, [in]object FieldInfo, [in]object TextVisualLayout, [in]object DecimalSeparator, [in]object ThousandsSeparator) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks._OpenText(System.String,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlTextQualifier,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _OpenText (Filename As String, Optional Origin As Object, Optional StartRow As Object, Optional DataType As Object, Optional TextQualifier As XlTextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, Optional ConsecutiveDelimiter As Object, Optional Tab As Object, Optional Semicolon As Object, Optional Comma As Object, Optional Space As Object, Optional Other As Object, Optional OtherChar As Object, Optional FieldInfo As Object, Optional TextVisualLayout As Object, Optional DecimalSeparator As Object, Optional ThousandsSeparator As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1773)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(16)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="Origin" Type="System.Object" />
        <Parameter Name="StartRow" Type="System.Object" />
        <Parameter Name="DataType" Type="System.Object" />
        <Parameter Name="TextQualifier" Type="Microsoft.Office.Interop.Excel.XlTextQualifier" />
        <Parameter Name="ConsecutiveDelimiter" Type="System.Object" />
        <Parameter Name="Tab" Type="System.Object" />
        <Parameter Name="Semicolon" Type="System.Object" />
        <Parameter Name="Comma" Type="System.Object" />
        <Parameter Name="Space" Type="System.Object" />
        <Parameter Name="Other" Type="System.Object" />
        <Parameter Name="OtherChar" Type="System.Object" />
        <Parameter Name="FieldInfo" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
        <Parameter Name="DecimalSeparator" Type="System.Object" />
        <Parameter Name="ThousandsSeparator" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="Origin">To be added.</param>
        <param name="StartRow">To be added.</param>
        <param name="DataType">To be added.</param>
        <param name="TextQualifier">To be added.</param>
        <param name="ConsecutiveDelimiter">To be added.</param>
        <param name="Tab">To be added.</param>
        <param name="Semicolon">To be added.</param>
        <param name="Comma">To be added.</param>
        <param name="Space">To be added.</param>
        <param name="Other">To be added.</param>
        <param name="OtherChar">To be added.</param>
        <param name="FieldInfo">To be added.</param>
        <param name="TextVisualLayout">To be added.</param>
        <param name="DecimalSeparator">To be added.</param>
        <param name="ThousandsSeparator">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_OpenXML">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook _OpenXML (string Filename, object Stylesheets);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook _OpenXML([in]string Filename, [in]object Stylesheets) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks._OpenXML(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _OpenXML (Filename As String, Optional Stylesheets As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2071)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="Stylesheets" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="Stylesheets">To be added.</param>
        <summary><span data-ttu-id="a46b9-109">Зарезервировано для внутреннего использования.</span><span class="sxs-lookup"><span data-stu-id="a46b9-109">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook Add (object Template);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook Add([in]object Template) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (Optional Template As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(181)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Template" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Template"><span data-ttu-id="a46b9-110">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-110">Optional <b>Object</b>.</span></span> <span data-ttu-id="a46b9-111">Определяет, как создается новая книга.</span><span class="sxs-lookup"><span data-stu-id="a46b9-111">Determines how the new workbook is created.</span></span> <span data-ttu-id="a46b9-112">Если этот аргумент является строкой, указывающей имя существующего файла Microsoft Excel, создается новая книга с указанным файлом в качестве шаблона.</span><span class="sxs-lookup"><span data-stu-id="a46b9-112">If this argument is a string specifying the name of an existing Microsoft Excel file, the new workbook is created with the specified file as a template.</span></span> <span data-ttu-id="a46b9-113">Если этот аргумент является константой, Новая книга содержит один лист указанного типа.</span><span class="sxs-lookup"><span data-stu-id="a46b9-113">If this argument is a constant, the new workbook contains a single sheet of the specified type.</span></span> <span data-ttu-id="a46b9-114">Может быть одной <see cref="T:Microsoft.Office.Interop.Excel.XlWBATemplate" /> из следующих констант: <b>кслвбатчарт</b>, <b>xlWBATExcel4IntlMacroSheet</b>, <b>xlWBATExcel4MacroSheet</b>или <b>кслвбатворкшит</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-114">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlWBATemplate" /> constants: <b>xlWBATChart</b>, <b>xlWBATExcel4IntlMacroSheet</b>, <b>xlWBATExcel4MacroSheet</b>, or <b>xlWBATWorksheet</b>.</span></span> <span data-ttu-id="a46b9-115">Если этот аргумент опущен, Microsoft Excel создает новую книгу с числом пустых листов (количество листов задается свойством <b>шитсинневворкбук</b> ).</span><span class="sxs-lookup"><span data-stu-id="a46b9-115">If this argument is omitted, Microsoft Excel creates a new workbook with a number of blank sheets (the number of sheets is set by the <b>SheetsInNewWorkbook</b> property).</span></span></param>
        <summary><span data-ttu-id="a46b9-116">Создает новую книгу.</span><span class="sxs-lookup"><span data-stu-id="a46b9-116">Creates a new workbook.</span></span> <span data-ttu-id="a46b9-117">Новая книга становится активной книгой.</span><span class="sxs-lookup"><span data-stu-id="a46b9-117">The new workbook becomes the active workbook.</span></span> <span data-ttu-id="a46b9-118">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> объект.</span><span class="sxs-lookup"><span data-stu-id="a46b9-118">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a46b9-119">Если <paramref name="Template" /> аргумент указывает файл, имя файла может содержать путь.</span><span class="sxs-lookup"><span data-stu-id="a46b9-119">If the <paramref name="Template" /> argument specifies a file, the file name can include a path.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a46b9-120">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Application" /> объект, представляющий приложение Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="a46b9-120">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span></span> <span data-ttu-id="a46b9-121">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="a46b9-121">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCheckOut">
      <MemberSignature Language="C#" Value="public bool CanCheckOut (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanCheckOut([in]string Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.CanCheckOut(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanCheckOut (Filename As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanCheckOut(System::String ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2070)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename"><span data-ttu-id="a46b9-122">Обязательный атрибут типа <b>String</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-122">Required <b>String</b>.</span></span> <span data-ttu-id="a46b9-123">Имя файла для извлечения.</span><span class="sxs-lookup"><span data-stu-id="a46b9-123">The name of the file to check out.</span></span></param>
        <summary><span data-ttu-id="a46b9-124"><b>Имеет значение true</b> , если Microsoft Excel может извлекать указанную книгу с сервера.</span><span class="sxs-lookup"><span data-stu-id="a46b9-124"><b>True</b> if Microsoft Excel can check out a specified workbook from a server.</span></span> <span data-ttu-id="a46b9-125">Для чтения и записи, <b>Boolean</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-125">Read/write <b>Boolean</b>.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckOut">
      <MemberSignature Language="C#" Value="public void CheckOut (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckOut([in]string Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.CheckOut(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckOut (Filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CheckOut(System::String ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2069)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename"><span data-ttu-id="a46b9-126">Обязательный атрибут типа <b>String</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-126">Required <b>String</b>.</span></span> <span data-ttu-id="a46b9-127">Имя файла для извлечения.</span><span class="sxs-lookup"><span data-stu-id="a46b9-127">The name of the file to check out.</span></span></param>
        <summary><span data-ttu-id="a46b9-128">Копирует указанную книгу с сервера на локальный компьютер для редактирования.</span><span class="sxs-lookup"><span data-stu-id="a46b9-128">Copies the specified workbook from a server to a local computer for editing.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(277)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a46b9-129">Закрывает объект.</span><span class="sxs-lookup"><span data-stu-id="a46b9-129">Closes the object.</span></span></summary>
        <remarks><para><span data-ttu-id="a46b9-130">Закрытие книги с помощью метода <b>Close</b> не приводит к выполнению AUTO_CLOSE макросов в книге.</span><span class="sxs-lookup"><span data-stu-id="a46b9-130">Closing a workbook using the <b>Close</b> method doesn't run any Auto_Close macros in the workbook.</span></span> <span data-ttu-id="a46b9-131">Используйте <see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" /> метод для запуска макросов автоматического закрытия.</span><span class="sxs-lookup"><span data-stu-id="a46b9-131">Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" /> method to run the auto close macros.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a46b9-132">Возвращает число объектов в коллекции.</span><span class="sxs-lookup"><span data-stu-id="a46b9-132">Returns the number of objects in the collection.</span></span> <span data-ttu-id="a46b9-133">Только для чтения, <b>Integer</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-133">Read-only <b>Integer</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a46b9-134">Возвращает 32-битное целое число, указывающее на приложение, в котором объект был создан.</span><span class="sxs-lookup"><span data-stu-id="a46b9-134">Returns a 32-bit integer that indicates the application in which this object was created.</span></span> <span data-ttu-id="a46b9-135">Если объект был создан в Microsoft Excel, это свойство возвращает строку КСЦЕЛ, которая эквивалентна шестнадцатеричному числу 5843454C.</span><span class="sxs-lookup"><span data-stu-id="a46b9-135">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span> <span data-ttu-id="a46b9-136">Только <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />для чтения.</span><span class="sxs-lookup"><span data-stu-id="a46b9-136">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="a46b9-137">Свойство <b>Creator</b> предназначено для использования в Microsoft Excel для Macintosh, где каждое приложение содержит код создателя из четырех символов.</span><span class="sxs-lookup"><span data-stu-id="a46b9-137">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="a46b9-138">Например, в Microsoft Excel есть код создателя КСЦЕЛ.</span><span class="sxs-lookup"><span data-stu-id="a46b9-138">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook Item[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Workbook Item(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item(Index As Object) As Workbook" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Workbook ^ Item[System::Object ^] { Microsoft::Office::Interop::Excel::Workbook ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="a46b9-139">Обязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-139">Required <b>Object</b>.</span></span> <span data-ttu-id="a46b9-140">Имя или номер индекса объекта.</span><span class="sxs-lookup"><span data-stu-id="a46b9-140">The name or index number of the object.</span></span></param>
        <summary><span data-ttu-id="a46b9-141">Возвращает один объект из коллекции.</span><span class="sxs-lookup"><span data-stu-id="a46b9-141">Returns a single object from a collection.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook Open (string Filename, object UpdateLinks, object ReadOnly, object Format, object Password, object WriteResPassword, object IgnoreReadOnlyRecommended, object Origin, object Delimiter, object Editable, object Notify, object Converter, object AddToMru, object Local, object CorruptLoad);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook Open([in]string Filename, [in]object UpdateLinks, [in]object ReadOnly, [in]object Format, [in]object Password, [in]object WriteResPassword, [in]object IgnoreReadOnlyRecommended, [in]object Origin, [in]object Delimiter, [in]object Editable, [in]object Notify, [in]object Converter, [in]object AddToMru, [in]object Local, [in]object CorruptLoad) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Open (Filename As String, Optional UpdateLinks As Object, Optional ReadOnly As Object, Optional Format As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional IgnoreReadOnlyRecommended As Object, Optional Origin As Object, Optional Delimiter As Object, Optional Editable As Object, Optional Notify As Object, Optional Converter As Object, Optional AddToMru As Object, Optional Local As Object, Optional CorruptLoad As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1923)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(15)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="UpdateLinks" Type="System.Object" />
        <Parameter Name="ReadOnly" Type="System.Object" />
        <Parameter Name="Format" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="IgnoreReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="Origin" Type="System.Object" />
        <Parameter Name="Delimiter" Type="System.Object" />
        <Parameter Name="Editable" Type="System.Object" />
        <Parameter Name="Notify" Type="System.Object" />
        <Parameter Name="Converter" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
        <Parameter Name="Local" Type="System.Object" />
        <Parameter Name="CorruptLoad" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename"><span data-ttu-id="a46b9-142">Обязательный атрибут типа <b>String</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-142">Required <b>String</b>.</span></span> <span data-ttu-id="a46b9-143">Имя файла книги, которую необходимо открыть.</span><span class="sxs-lookup"><span data-stu-id="a46b9-143">The file name of the workbook to be opened.</span></span></param>
        <param name="UpdateLinks"><span data-ttu-id="a46b9-144">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-144">Optional <b>Object</b>.</span></span> <span data-ttu-id="a46b9-145">Указывает способ обновления ссылок в файле.</span><span class="sxs-lookup"><span data-stu-id="a46b9-145">Specifies the way links in the file are updated.</span></span> <span data-ttu-id="a46b9-146">Если этот аргумент не указан, пользователю предлагается указать, как будут обновляться ссылки.</span><span class="sxs-lookup"><span data-stu-id="a46b9-146">If this argument is omitted, the user is prompted to specify how links will be updated.</span></span> <span data-ttu-id="a46b9-147">В противном случае этот аргумент является одним из значений, приведенных в следующей таблице. Если Microsoft Excel открывает файл в формате WKS, WK1 или WK3, а <paramref name="UpdateLinks" /> аргумент равен 2, Microsoft Excel создает диаграммы на основе диаграмм, вложенных в файл.</span><span class="sxs-lookup"><span data-stu-id="a46b9-147">Otherwise, this argument is one of the values listed in the following table.If Microsoft Excel is opening a file in the WKS, WK1, or WK3 format and the <paramref name="UpdateLinks" /> argument is 2, Microsoft Excel generates charts from the graphs attached to the file.</span></span> <span data-ttu-id="a46b9-148">Если для аргумента задано значение 0, диаграммы не создаются.</span><span class="sxs-lookup"><span data-stu-id="a46b9-148">If the argument is 0, no charts are created.</span></span></param>
        <param name="ReadOnly"><span data-ttu-id="a46b9-149">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-149">Optional <b>Object</b>.</span></span> <span data-ttu-id="a46b9-150">Значение true, чтобы открыть книгу в режиме только для чтения.</span><span class="sxs-lookup"><span data-stu-id="a46b9-150">True to open the workbook in read-only mode.</span></span></param>
        <param name="Format"><span data-ttu-id="a46b9-151">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-151">Optional <b>Object</b>.</span></span> <span data-ttu-id="a46b9-152">Если Microsoft Excel открывает текстовый файл, этот аргумент определяет символ-разделитель, как показано в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="a46b9-152">If Microsoft Excel is opening a text file, this argument specifies the delimiter character, as shown in the following table.</span></span> <span data-ttu-id="a46b9-153">Если этот аргумент не указан, используется текущий разделитель.</span><span class="sxs-lookup"><span data-stu-id="a46b9-153">If this argument is omitted, the current delimiter is used.</span></span></param>
        <param name="Password"><span data-ttu-id="a46b9-154">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-154">Optional <b>Object</b>.</span></span> <span data-ttu-id="a46b9-155">Строка, содержащая пароль, необходимый для открытия защищенной книги.</span><span class="sxs-lookup"><span data-stu-id="a46b9-155">A string that contains the password required to open a protected workbook.</span></span> <span data-ttu-id="a46b9-156">Если этот аргумент опущен и для книги требуется пароль, пользователю предлагается ввести пароль.</span><span class="sxs-lookup"><span data-stu-id="a46b9-156">If this argument is omitted and the workbook requires a password, the user is prompted for the password.</span></span></param>
        <param name="WriteResPassword"><span data-ttu-id="a46b9-157">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-157">Optional <b>Object</b>.</span></span> <span data-ttu-id="a46b9-158">Строка, содержащая пароль, необходимый для записи в книгу, зарезервированную для записи.</span><span class="sxs-lookup"><span data-stu-id="a46b9-158">A string that contains the password required to write to a write-reserved workbook.</span></span> <span data-ttu-id="a46b9-159">Если этот аргумент опущен и для книги требуется пароль, пользователю будет выдан запрос на ввод пароля.</span><span class="sxs-lookup"><span data-stu-id="a46b9-159">If this argument is omitted and the workbook requires a password, the user will be prompted for the password.</span></span></param>
        <param name="IgnoreReadOnlyRecommended"><span data-ttu-id="a46b9-160">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-160">Optional <b>Object</b>.</span></span> <span data-ttu-id="a46b9-161"><b>True</b> , чтобы Microsoft Excel не отображал рекомендуемое только для чтения сообщение (рекомендуется ли книга была сохранена с помощью параметра " <b>только для чтения</b> ").</span><span class="sxs-lookup"><span data-stu-id="a46b9-161"><b>True</b> to have Microsoft Excel not display the read-only recommended message (if the workbook was saved with the <b>Read-Only Recommended</b> option).</span></span></param>
        <param name="Origin"><span data-ttu-id="a46b9-162">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-162">Optional <b>Object</b>.</span></span> <span data-ttu-id="a46b9-163">Если файл является текстовым, этот аргумент указывает на то, где он поступил (чтобы страницы кода и возврат каретки/перевод строки (CR/LF) могли быть правильно сопоставлены).</span><span class="sxs-lookup"><span data-stu-id="a46b9-163">If the file is a text file, this argument indicates where it originated (so that code pages and Carriage Return/Line Feed (CR/LF) can be mapped correctly).</span></span> <span data-ttu-id="a46b9-164">Может быть <see cref="T:Microsoft.Office.Interop.Excel.XlPlatform" /> одной из следующих констант: <b>кслмаЦинтош</b>, <b>кслвиндовс</b>или <b>кслмсдос</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-164">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlPlatform" /> constants: <b>xlMacintosh</b>, <b>xlWindows</b>, or <b>xlMSDOS</b>.</span></span> <span data-ttu-id="a46b9-165">Если этот аргумент не указан, используется текущая операционная система.</span><span class="sxs-lookup"><span data-stu-id="a46b9-165">If this argument is omitted, the current operating system is used.</span></span></param>
        <param name="Delimiter"><span data-ttu-id="a46b9-166">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-166">Optional <b>Object</b>.</span></span> <span data-ttu-id="a46b9-167">Если файл является текстовым файлом, а аргумент <b>Format</b> имеет значение 6, этот аргумент представляет собой строку, задающую символ, который будет использоваться в качестве разделителя.</span><span class="sxs-lookup"><span data-stu-id="a46b9-167">If the file is a text file and the <b>Format</b> argument is 6, this argument is a string that specifies the character to be used as the delimiter.</span></span> <span data-ttu-id="a46b9-168">Например, используйте Chr (9) для табуляции, используйте "," для запятых, введите ";" для точки с запятой или используйте специальный символ.</span><span class="sxs-lookup"><span data-stu-id="a46b9-168">For example, use Chr(9) for tabs, use "," for commas, use ";" for semicolons, or use a custom character.</span></span> <span data-ttu-id="a46b9-169">Используется только первый символ строки.</span><span class="sxs-lookup"><span data-stu-id="a46b9-169">Only the first character of the string is used.</span></span></param>
        <param name="Editable"><span data-ttu-id="a46b9-170">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-170">Optional <b>Object</b>.</span></span> <span data-ttu-id="a46b9-171">Если файл является надстройкой Microsoft Excel 4,0, этот аргумент имеет <b>значение true</b> , чтобы открыть надстройку, чтобы она стала видимым окном.</span><span class="sxs-lookup"><span data-stu-id="a46b9-171">If the file is a Microsoft Excel 4.0 add-in, this argument is <b>True</b> to open the add-in so that it’s a visible window.</span></span> <span data-ttu-id="a46b9-172">Если этот аргумент имеет <b>значение false</b> или опущен, надстройка открывается как скрытая и не может быть скрыта.</span><span class="sxs-lookup"><span data-stu-id="a46b9-172">If this argument is <b>False</b> or omitted, the add-in is opened as hidden, and it cannot be unhidden.</span></span> <span data-ttu-id="a46b9-173">Этот параметр не применяется к надстройкам, созданным в Microsoft Excel 5,0 или более поздней версии.</span><span class="sxs-lookup"><span data-stu-id="a46b9-173">This option doesn't apply to add-ins created in Microsoft Excel 5.0 or later.</span></span> <span data-ttu-id="a46b9-174">Если файл является шаблоном Excel, используйте <b>значение true</b> , чтобы открыть указанный шаблон для редактирования или <b>значение false</b> , чтобы открыть новую книгу на основе указанного шаблона.</span><span class="sxs-lookup"><span data-stu-id="a46b9-174">If the file is an Excel template, use <b>True</b> to open the specified template for editing or <b>False</b> to open a new workbook based on the specified template.</span></span> <span data-ttu-id="a46b9-175">Значение по умолчанию — <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-175">The default value is <b>False</b>.</span></span></param>
        <param name="Notify"><span data-ttu-id="a46b9-176">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-176">Optional <b>Object</b>.</span></span> <span data-ttu-id="a46b9-177">Если файл не может быть открыт в режиме чтения и записи, этот аргумент имеет <b>значение true</b> , чтобы добавить файл в список уведомлений о файле.</span><span class="sxs-lookup"><span data-stu-id="a46b9-177">If the file cannot be opened in read/write mode, this argument is <b>True</b> to add the file to the file notification list.</span></span> <span data-ttu-id="a46b9-178">Microsoft Excel откроет файл как доступный только для чтения, опросить список уведомлений о файле, а затем уведомить пользователя, когда файл станет доступен.</span><span class="sxs-lookup"><span data-stu-id="a46b9-178">Microsoft Excel will open the file as read-only, poll the file notification list, and then notify the user when the file becomes available.</span></span> <span data-ttu-id="a46b9-179">Если этот аргумент имеет <b>значение false</b> или опущено, уведомления не запрашиваются, а все попытки открыть недоступный файл завершатся ошибкой.</span><span class="sxs-lookup"><span data-stu-id="a46b9-179">If this argument is <b>False</b> or omitted, no notification is requested, and any attempts to open an unavailable file will fail.</span></span></param>
        <param name="Converter"><span data-ttu-id="a46b9-180">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-180">Optional <b>Object</b>.</span></span> <span data-ttu-id="a46b9-181">Индекс первого конвертера файлов, который будет пытаться открыть файл.</span><span class="sxs-lookup"><span data-stu-id="a46b9-181">The index of the first file converter to try when opening the file.</span></span> <span data-ttu-id="a46b9-182">Заданный конвертер файлов сначала пытается выполнить операцию. Если этот конвертер не распознает файл, попытаются выполнить все другие конвертеры.</span><span class="sxs-lookup"><span data-stu-id="a46b9-182">The specified file converter is tried first; if this converter doesn’t recognize the file, all other converters are tried.</span></span> <span data-ttu-id="a46b9-183">Индекс преобразователя состоит из номеров строк преобразователей, возвращаемых <see cref="P:Microsoft.Office.Interop.Excel._Application.FileConverters(System.Object,System.Object)" /> свойством.</span><span class="sxs-lookup"><span data-stu-id="a46b9-183">The converter index consists of the row numbers of the converters returned by the <see cref="P:Microsoft.Office.Interop.Excel._Application.FileConverters(System.Object,System.Object)" /> property.</span></span></param>
        <param name="AddToMru"><span data-ttu-id="a46b9-184">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-184">Optional <b>Object</b>.</span></span> <span data-ttu-id="a46b9-185"><b>Значение true</b> , чтобы добавить эту книгу в список недавно использовавшихся файлов.</span><span class="sxs-lookup"><span data-stu-id="a46b9-185"><b>True</b> to add this workbook to the list of recently used files.</span></span> <span data-ttu-id="a46b9-186">Значение по умолчанию — <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-186">The default value is <b>False</b>.</span></span></param>
        <param name="Local"><span data-ttu-id="a46b9-187">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-187">Optional <b>Object</b>.</span></span> <span data-ttu-id="a46b9-188"><b>True</b> — сохраняет файлы на языке Microsoft Excel (включая параметры панели управления).</span><span class="sxs-lookup"><span data-stu-id="a46b9-188"><b>True</b> saves files against the language of Microsoft Excel (including control panel settings).</span></span> <span data-ttu-id="a46b9-189"><b>False</b> (по умолчанию) — сохранение файлов на языке Visual Basic для приложений (VBA) (обычно это английский (США)), если проект VBA, где запущены книги, не является устаревшим международным проектом Xl5/95 VBA.</span><span class="sxs-lookup"><span data-stu-id="a46b9-189"><b>False</b> (default) saves files against the language of Visual Basic for Applications (VBA) (which is typically U.S. English unless the VBA project where Workbooks.Open is run from is an old internationalized XL5/95 VBA project).</span></span></param>
        <param name="CorruptLoad"><span data-ttu-id="a46b9-190">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-190">Optional <b>Object</b>.</span></span> <span data-ttu-id="a46b9-191">Может быть одной из следующих констант: <b>кслнормаллоад</b>, <b>кслрепаирфиле</b>и <b>кслекстрактдата</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-191">Can be one of the following constants: <b>xlNormalLoad</b>, <b>xlRepairFile</b>, and <b>xlExtractData</b>.</span></span> <span data-ttu-id="a46b9-192">Поведение по умолчанию, если значение не указано, обычно является нормальным, но может быть безопасной или восстановление данных, если Excel уже пытался открыть файл.</span><span class="sxs-lookup"><span data-stu-id="a46b9-192">The default behavior if no value is specified is usually normal, but may be safe load or data recovery if Excel has already attempted to open the file.</span></span> <span data-ttu-id="a46b9-193">Первая попытка является нормальной.</span><span class="sxs-lookup"><span data-stu-id="a46b9-193">The first attempt is normal.</span></span> <span data-ttu-id="a46b9-194">Если приложение Excel перестает работать при открытии файла, вторая попытка является безопасной.</span><span class="sxs-lookup"><span data-stu-id="a46b9-194">If Excel stops operating while opening the file, the second attempt is safe load.</span></span> <span data-ttu-id="a46b9-195">Если Excel снова перестанет работать, то следующая попытка является восстановлением данных.</span><span class="sxs-lookup"><span data-stu-id="a46b9-195">If Excel again stops operating, the next attempt is data recovery.</span></span></param>
        <summary><span data-ttu-id="a46b9-196">Открывает книгу.</span><span class="sxs-lookup"><span data-stu-id="a46b9-196">Opens a workbook.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a46b9-197">По умолчанию при открытии файлов программным способом включаются макросы.</span><span class="sxs-lookup"><span data-stu-id="a46b9-197">By default, macros are enabled when opening files programmatically.</span></span> <span data-ttu-id="a46b9-198">Используйте <see cref="P:Microsoft.Office.Interop.Excel._Application.AutomationSecurity" /> свойство, чтобы задать режим безопасности макросов, используемый при программном открытии файлов.</span><span class="sxs-lookup"><span data-stu-id="a46b9-198">Use the <see cref="P:Microsoft.Office.Interop.Excel._Application.AutomationSecurity" /> property to set the macro security mode used when opening files programmatically.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenDatabase">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook OpenDatabase (string Filename, object CommandText, object CommandType, object BackgroundQuery, object ImportDataAs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook OpenDatabase([in]string Filename, [in]object CommandText, [in]object CommandType, [in]object BackgroundQuery, [in]object ImportDataAs) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.OpenDatabase(System.String,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenDatabase (Filename As String, Optional CommandText As Object, Optional CommandType As Object, Optional BackgroundQuery As Object, Optional ImportDataAs As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2067)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="CommandText" Type="System.Object" />
        <Parameter Name="CommandType" Type="System.Object" />
        <Parameter Name="BackgroundQuery" Type="System.Object" />
        <Parameter Name="ImportDataAs" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename"><span data-ttu-id="a46b9-199">Обязательный атрибут типа <b>String</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-199">Required <b>String</b>.</span></span> <span data-ttu-id="a46b9-200">Строка подключения.</span><span class="sxs-lookup"><span data-stu-id="a46b9-200">The connection string.</span></span></param>
        <param name="CommandText"><span data-ttu-id="a46b9-201">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-201">Optional <b>Object</b>.</span></span> <span data-ttu-id="a46b9-202">Текст команды запроса.</span><span class="sxs-lookup"><span data-stu-id="a46b9-202">The command text of the query.</span></span></param>
        <param name="CommandType"><span data-ttu-id="a46b9-203">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-203">Optional <b>Object</b>.</span></span> <span data-ttu-id="a46b9-204">Тип команды запроса.</span><span class="sxs-lookup"><span data-stu-id="a46b9-204">The command type of the query.</span></span> <span data-ttu-id="a46b9-205">Доступны следующие типы команд: Default, SQL и Table.</span><span class="sxs-lookup"><span data-stu-id="a46b9-205">The following command types are available: Default, SQL, and Table.</span></span></param>
        <param name="BackgroundQuery"><span data-ttu-id="a46b9-206">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-206">Optional <b>Object</b>.</span></span> <span data-ttu-id="a46b9-207">Фон запроса.</span><span class="sxs-lookup"><span data-stu-id="a46b9-207">The background of the query.</span></span></param>
        <param name="ImportDataAs"><span data-ttu-id="a46b9-208">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-208">Optional <b>Object</b>.</span></span> <span data-ttu-id="a46b9-209">Определяет формат запроса.</span><span class="sxs-lookup"><span data-stu-id="a46b9-209">Determines the format of the query.</span></span></param>
        <summary><span data-ttu-id="a46b9-210">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> объект, представляющий базу данных.</span><span class="sxs-lookup"><span data-stu-id="a46b9-210">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object representing a database.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenText">
      <MemberSignature Language="C#" Value="public void OpenText (string Filename, object Origin, object StartRow, object DataType, Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, object ConsecutiveDelimiter, object Tab, object Semicolon, object Comma, object Space, object Other, object OtherChar, object FieldInfo, object TextVisualLayout, object DecimalSeparator, object ThousandsSeparator, object TrailingMinusNumbers, object Local);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OpenText([in]string Filename, [in]object Origin, [in]object StartRow, [in]object DataType, [in]valuetype Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier, [in]object ConsecutiveDelimiter, [in]object Tab, [in]object Semicolon, [in]object Comma, [in]object Space, [in]object Other, [in]object OtherChar, [in]object FieldInfo, [in]object TextVisualLayout, [in]object DecimalSeparator, [in]object ThousandsSeparator, [in]object TrailingMinusNumbers, [in]object Local) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.OpenText(System.String,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlTextQualifier,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OpenText (Filename As String, Optional Origin As Object, Optional StartRow As Object, Optional DataType As Object, Optional TextQualifier As XlTextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, Optional ConsecutiveDelimiter As Object, Optional Tab As Object, Optional Semicolon As Object, Optional Comma As Object, Optional Space As Object, Optional Other As Object, Optional OtherChar As Object, Optional FieldInfo As Object, Optional TextVisualLayout As Object, Optional DecimalSeparator As Object, Optional ThousandsSeparator As Object, Optional TrailingMinusNumbers As Object, Optional Local As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1924)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(18)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="Origin" Type="System.Object" />
        <Parameter Name="StartRow" Type="System.Object" />
        <Parameter Name="DataType" Type="System.Object" />
        <Parameter Name="TextQualifier" Type="Microsoft.Office.Interop.Excel.XlTextQualifier" />
        <Parameter Name="ConsecutiveDelimiter" Type="System.Object" />
        <Parameter Name="Tab" Type="System.Object" />
        <Parameter Name="Semicolon" Type="System.Object" />
        <Parameter Name="Comma" Type="System.Object" />
        <Parameter Name="Space" Type="System.Object" />
        <Parameter Name="Other" Type="System.Object" />
        <Parameter Name="OtherChar" Type="System.Object" />
        <Parameter Name="FieldInfo" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
        <Parameter Name="DecimalSeparator" Type="System.Object" />
        <Parameter Name="ThousandsSeparator" Type="System.Object" />
        <Parameter Name="TrailingMinusNumbers" Type="System.Object" />
        <Parameter Name="Local" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename"><span data-ttu-id="a46b9-211">Обязательный атрибут типа <b>String</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-211">Required <b>String</b>.</span></span> <span data-ttu-id="a46b9-212">Указывает имя текстового файла, который необходимо открыть и проанализировать.</span><span class="sxs-lookup"><span data-stu-id="a46b9-212">Specifies the file name of the text file to be opened and parsed.</span></span></param>
        <param name="Origin"><span data-ttu-id="a46b9-213">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-213">Optional <b>Object</b>.</span></span> <span data-ttu-id="a46b9-214">Указывает происхождение текстового файла.</span><span class="sxs-lookup"><span data-stu-id="a46b9-214">Specifies the origin of the text file.</span></span> <span data-ttu-id="a46b9-215">Может быть <see cref="T:Microsoft.Office.Interop.Excel.XlPlatform" /> одной из следующих констант: <b>кслмаЦинтош</b>, <b>кслвиндовс</b>или <b>кслмсдос</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-215">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlPlatform" /> constants: <b>xlMacintosh</b>, <b>xlWindows</b>, or <b>xlMSDOS</b>.</span></span> <span data-ttu-id="a46b9-216">Кроме того, это может быть целое число, представляющее номер кодовой страницы необходимой кодовой страницы.</span><span class="sxs-lookup"><span data-stu-id="a46b9-216">Additionally, this could be an integer representing the code page number of the desired code page.</span></span> <span data-ttu-id="a46b9-217">Например, "1256" указывает на то, что кодировка исходного текстового файла — "Арабский (Windows)".</span><span class="sxs-lookup"><span data-stu-id="a46b9-217">For example, "1256" would specify that the encoding of the source text file is Arabic (Windows).</span></span> <span data-ttu-id="a46b9-218">Если этот аргумент опущен, метод использует текущее значение параметра "источник файла" в <b>мастере импорта текста</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-218">If this argument is omitted, the method uses the current setting of the File Origin option in the <b>Text Import Wizard</b>.</span></span></param>
        <param name="StartRow"><span data-ttu-id="a46b9-219">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-219">Optional <b>Object</b>.</span></span> <span data-ttu-id="a46b9-220">Номер строки, с которой начинается синтаксический анализ текста.</span><span class="sxs-lookup"><span data-stu-id="a46b9-220">The row number at which to start parsing text.</span></span> <span data-ttu-id="a46b9-221">Значение по умолчанию равно 1.</span><span class="sxs-lookup"><span data-stu-id="a46b9-221">The default value is 1.</span></span></param>
        <param name="DataType"><span data-ttu-id="a46b9-222">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-222">Optional <b>Object</b>.</span></span> <span data-ttu-id="a46b9-223">Задает формат столбцов данных в файле.</span><span class="sxs-lookup"><span data-stu-id="a46b9-223">Specifies the column format of the data in the file.</span></span> <span data-ttu-id="a46b9-224">Может быть одной из следующих <see cref="T:Microsoft.Office.Interop.Excel.XlTextParsingType" /> констант: <b>кслделимитед</b> или <b>кслфикседвидс</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-224">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlTextParsingType" /> constants: <b>xlDelimited</b> or <b>xlFixedWidth</b>.</span></span> <span data-ttu-id="a46b9-225">Если этот аргумент не указан, Microsoft Excel пытается определить формат столбца при открытии файла.</span><span class="sxs-lookup"><span data-stu-id="a46b9-225">If this argument is not specified, Microsoft Excel attempts to determine the column format when it opens the file.</span></span></param>
        <param name="TextQualifier"><span data-ttu-id="a46b9-226">Необязательный <see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" />параметр.</span><span class="sxs-lookup"><span data-stu-id="a46b9-226">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" />.</span></span> <span data-ttu-id="a46b9-227">Указывает ограничитель текста.</span><span class="sxs-lookup"><span data-stu-id="a46b9-227">Specifies the text qualifier.</span></span> <span data-ttu-id="a46b9-228">Может быть одной из этих <see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" /> констант. <b>кслтексткуалифиердаублекуоте</b><paramref name="default" /><b>кслтексткуалифиерноне</b><b>кслтексткуалифиерсинглекуоте</b></span><span class="sxs-lookup"><span data-stu-id="a46b9-228">Can be one of these <see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" /> constants.<b>xlTextQualifierDoubleQuote</b><paramref name="default" /><b>xlTextQualifierNone</b><b>xlTextQualifierSingleQuote</b></span></span></param>
        <param name="ConsecutiveDelimiter"><span data-ttu-id="a46b9-229">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-229">Optional <b>Object</b>.</span></span> <span data-ttu-id="a46b9-230"><b>Значение true</b> , если последовательные разделители считаются одним разделителем.</span><span class="sxs-lookup"><span data-stu-id="a46b9-230"><b>True</b> to have consecutive delimiters considered one delimiter.</span></span> <span data-ttu-id="a46b9-231">Значение по умолчанию - <b>false</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-231">The default is <b>False</b>.</span></span></param>
        <param name="Tab"><span data-ttu-id="a46b9-232">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-232">Optional <b>Object</b>.</span></span> <span data-ttu-id="a46b9-233">Значение true, чтобы знак табуляции был разделителем (<paramref name="DataType" /> должен быть <b>кслделимитед</b>).</span><span class="sxs-lookup"><span data-stu-id="a46b9-233">True to have the tab character be the delimiter (<paramref name="DataType" /> must be <b>xlDelimited</b>).</span></span> <span data-ttu-id="a46b9-234">Значение по умолчанию — <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-234">The default value is <b>False</b>.</span></span></param>
        <param name="Semicolon"><span data-ttu-id="a46b9-235">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-235">Optional <b>Object</b>.</span></span> <span data-ttu-id="a46b9-236"><b>Значение true</b> , чтобы символ точки с запятой был разделителем (<paramref name="DataType" /> должен быть <b>кслделимитед</b>).</span><span class="sxs-lookup"><span data-stu-id="a46b9-236"><b>True</b> to have the semicolon character be the delimiter (<paramref name="DataType" /> must be <b>xlDelimited</b>).</span></span> <span data-ttu-id="a46b9-237">Значение по умолчанию — <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-237">The default value is <b>False</b>.</span></span></param>
        <param name="Comma"><span data-ttu-id="a46b9-238">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-238">Optional <b>Object</b>.</span></span> <span data-ttu-id="a46b9-239"><b>Значение true</b> , чтобы разделитель был разделителем (<paramref name="DataType" /> должен быть <b>кслделимитед</b>).</span><span class="sxs-lookup"><span data-stu-id="a46b9-239"><b>True</b> to have the comma character be the delimiter (<paramref name="DataType" /> must be <b>xlDelimited</b>).</span></span> <span data-ttu-id="a46b9-240">Значение по умолчанию — <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-240">The default value is <b>False</b>.</span></span></param>
        <param name="Space"><span data-ttu-id="a46b9-241">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-241">Optional <b>Object</b>.</span></span> <span data-ttu-id="a46b9-242"><b>Значение true</b> , чтобы символ пробела был разделителем (<paramref name="DataType" /> должен быть <b>кслделимитед</b>).</span><span class="sxs-lookup"><span data-stu-id="a46b9-242"><b>True</b> to have the space character be the delimiter (<paramref name="DataType" /> must be <b>xlDelimited</b>).</span></span> <span data-ttu-id="a46b9-243">Значение по умолчанию — <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-243">The default value is <b>False</b>.</span></span></param>
        <param name="Other"><span data-ttu-id="a46b9-244">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-244">Optional <b>Object</b>.</span></span> <span data-ttu-id="a46b9-245"><b>Значение true</b> , чтобы символ, указываемый <paramref name="OtherChar" /> аргументом, был разделителем (<paramref name="DataType" /> должен быть <b>кслделимитед</b>).</span><span class="sxs-lookup"><span data-stu-id="a46b9-245"><b>True</b> to have the character specified by the <paramref name="OtherChar" /> argument be the delimiter (<paramref name="DataType" /> must be <b>xlDelimited</b>).</span></span> <span data-ttu-id="a46b9-246">Значение по умолчанию — <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-246">The default value is <b>False</b>.</span></span></param>
        <param name="OtherChar"><span data-ttu-id="a46b9-247">Необязательный <b>объект</b> ( <paramref name="Other" /> обязательный, если имеет <b>значение true</b>).</span><span class="sxs-lookup"><span data-stu-id="a46b9-247">Optional <b>Object</b> (required if <paramref name="Other" /> is <b>True</b>).</span></span> <span data-ttu-id="a46b9-248">Задает символ разделителя, если <paramref name="Other" /> он имеет <b>значение true</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-248">Specifies the delimiter character when <paramref name="Other" /> is <b>True</b>.</span></span> <span data-ttu-id="a46b9-249">Если указано более одного символа, используется только первый символ строки; остальные символы игнорируются.</span><span class="sxs-lookup"><span data-stu-id="a46b9-249">If more than one character is specified, only the first character of the string is used; the remaining characters are ignored.</span></span></param>
        <param name="FieldInfo"><span data-ttu-id="a46b9-250">Необязательный <see cref="T:Microsoft.Office.Interop.Excel.XlColumnDataType" />параметр.</span><span class="sxs-lookup"><span data-stu-id="a46b9-250">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlColumnDataType" />.</span></span> <span data-ttu-id="a46b9-251">Массив, содержащий сведения о синтаксическом анализе для отдельных столбцов данных.</span><span class="sxs-lookup"><span data-stu-id="a46b9-251">An array containing parse information for individual columns of data.</span></span> <span data-ttu-id="a46b9-252">Интерпретация зависит от значения <paramref name="DataType" />.</span><span class="sxs-lookup"><span data-stu-id="a46b9-252">The interpretation depends on the value of <paramref name="DataType" />.</span></span> <span data-ttu-id="a46b9-253">Если данные разделены, этот аргумент является массивом массивов из двух элементов, каждый из которых указывает массив из двух элементов, указывающий параметры преобразования для определенного столбца.</span><span class="sxs-lookup"><span data-stu-id="a46b9-253">When the data is delimited, this argument is an array of two-element arrays, with each two-element array specifying the conversion options for a particular column.</span></span> <span data-ttu-id="a46b9-254">Первый элемент — это номер столбца (от 1), а второй — одна из констант<b>кслколумндататипе</b> , указывающих способ синтаксического анализа столбца. <b>кслженералформат</b> Общие<b>кслтекстформат</b> текст<b>Кслмдиформат</b> МДИ Date<b>кслдмиформат</b> ДМИ Date<b>кслимдформат</b> ИМД Date<b>Кслмидформат</b> МИД Date<b>Кслдимформат</b> Dym Date<b>xlYDMFormat</b> YDM Date<b>xlEMDFormat</b> EMD Date<b>xlSkipColumn</b> Skip ColumnYou xlEMDFormat Taiwanese Skip <b>xlEMDFormat</b></span><span class="sxs-lookup"><span data-stu-id="a46b9-254">The first element is the column number (1-based), and the second element is one of the<b>XlColumnDataType</b> constants specifying how the column is parsed.<b>xlGeneralFormat</b> General<b>xlTextFormat</b> Text<b>xlMDYFormat</b> MDY date<b>xlDMYFormat</b> DMY date<b>xlYMDFormat</b> YMD date<b>xlMYDFormat</b> MYD date<b>xlDYMFormat</b> DYM date<b>xlYDMFormat</b> YDM date<b>xlEMDFormat</b> EMD date<b>xlSkipColumn</b> Skip ColumnYou can use <b>xlEMDFormat</b> only if you have installed and selected Taiwanese language support.</span></span> <span data-ttu-id="a46b9-255">Константа <b>кслемдформат</b> указывает, что используются даты эры таиванесе. Описатели столбцов могут быть в любом порядке.</span><span class="sxs-lookup"><span data-stu-id="a46b9-255">The <b>xlEMDFormat</b> constant specifies that Taiwanese era dates are being used.The column specifiers can be in any order.</span></span> <span data-ttu-id="a46b9-256">Если для определенного столбца входных данных нет спецификатора столбца, то столбец анализируется с использованием общих параметров. <b>Примечания</b> Если указать, что столбец должен быть пропущен, необходимо явно указать тип для всех оставшихся столбцов, иначе данные не будут анализироваться должным образом. Если в данных есть распознаваемые даты, ячейка будет отформатирована как дата на листе, даже если для столбца задано значение "Общие".</span><span class="sxs-lookup"><span data-stu-id="a46b9-256">If there's no column specifier for a particular column in the input data, the column is parsed with the General setting.<b>Notes</b>If you specify that a column is to be skipped, you must explicitly state the type for all remaining columns or the data will not parse correctly.If there is a recognizable date in the data, the cell will be formatted as a date in the worksheet even if the setting for the column is General.</span></span> <span data-ttu-id="a46b9-257">Кроме того, если указать один из указанных выше форматов даты для столбца, а данные не содержат распознанной даты, после этого формат ячейки на листе будет общим. Если источник данных содержит столбцы фиксированной ширины, первый элемент в каждом массиве из двух элементов указывает позицию начального символа в столбце (в виде целого числа; символ 0 (ноль) — первый символ).</span><span class="sxs-lookup"><span data-stu-id="a46b9-257">Additionally, if you specify one of the above date formats for a column and the data does not contain a recognized date, then the cell format in the worksheet will be General.If the source data has fixed-width columns, the first element in each two-element array specifies the position of the starting character in the column (as an integer; character 0 (zero) is the first character).</span></span> <span data-ttu-id="a46b9-258">Второй элемент в массиве из двух элементов задает параметр Parse для столбца в виде числа от 0 до 9, как показано в приведенной выше таблице.</span><span class="sxs-lookup"><span data-stu-id="a46b9-258">The second element in the two-element array specifies the parse option for the column as a number between 0 and 9, as listed in the preceding table.</span></span></param>
        <param name="TextVisualLayout"><span data-ttu-id="a46b9-259">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-259">Optional <b>Object</b>.</span></span> <span data-ttu-id="a46b9-260">Визуальная структура текста.</span><span class="sxs-lookup"><span data-stu-id="a46b9-260">The visual layout of the text.</span></span></param>
        <param name="DecimalSeparator"><span data-ttu-id="a46b9-261">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-261">Optional <b>Object</b>.</span></span> <span data-ttu-id="a46b9-262">Разделитель целой и дробной части, который Microsoft Excel использует при распознавании чисел.</span><span class="sxs-lookup"><span data-stu-id="a46b9-262">The decimal separator that Microsoft Excel uses when recognizing numbers.</span></span> <span data-ttu-id="a46b9-263">Значение по умолчанию — параметр системы.</span><span class="sxs-lookup"><span data-stu-id="a46b9-263">The default setting is the system setting.</span></span></param>
        <param name="ThousandsSeparator"><span data-ttu-id="a46b9-264">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-264">Optional <b>Object</b>.</span></span> <span data-ttu-id="a46b9-265">Разделитель групп разрядов, который Excel использует при распознавании чисел.</span><span class="sxs-lookup"><span data-stu-id="a46b9-265">The thousands separator that Excel uses when recognizing numbers.</span></span> <span data-ttu-id="a46b9-266">Значение по умолчанию — параметр системы. В следующей таблице показаны результаты импорта текста в Excel для различных параметров импорта.</span><span class="sxs-lookup"><span data-stu-id="a46b9-266">The default setting is the system setting.The following table shows the results of importing text into Excel for various import settings.</span></span> <span data-ttu-id="a46b9-267">Числовые результаты отображаются в самом правом столбце.</span><span class="sxs-lookup"><span data-stu-id="a46b9-267">Numeric results are displayed in the rightmost column.</span></span></param>
        <param name="TrailingMinusNumbers"><span data-ttu-id="a46b9-268">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-268">Optional <b>Object</b>.</span></span></param>
        <param name="Local"><span data-ttu-id="a46b9-269">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-269">Optional <b>Object</b>.</span></span></param>
        <summary><span data-ttu-id="a46b9-270">Загружает и анализирует текстовый файл в виде новой книги с одним листом, который содержит проанализированные данные текстового файла.</span><span class="sxs-lookup"><span data-stu-id="a46b9-270">Loads and parses a text file as a new workbook with a single sheet that contains the parsed text-file data.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenXML">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook OpenXML (string Filename, object Stylesheets, object LoadOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook OpenXML([in]string Filename, [in]object Stylesheets, [in]object LoadOption) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.OpenXML(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenXML (Filename As String, Optional Stylesheets As Object, Optional LoadOption As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2280)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="Stylesheets" Type="System.Object" />
        <Parameter Name="LoadOption" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename"><span data-ttu-id="a46b9-271">Обязательный атрибут типа <b>String</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-271">Required <b>String</b>.</span></span> <span data-ttu-id="a46b9-272">Имя открываемого файла.</span><span class="sxs-lookup"><span data-stu-id="a46b9-272">The name of the file to open.</span></span></param>
        <param name="Stylesheets"><span data-ttu-id="a46b9-273">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-273">Optional <b>Object</b>.</span></span> <span data-ttu-id="a46b9-274">Одно значение или массив значений, указывающих, какие инструкции по обработке XSL-преобразования (XSLT) необходимо применить.</span><span class="sxs-lookup"><span data-stu-id="a46b9-274">Either a single value or an array of values that specify which XSL Transformation (XSLT) style sheet processing instructions to apply.</span></span></param>
        <param name="LoadOption"><span data-ttu-id="a46b9-275">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="a46b9-275">Optional <b>Object</b>.</span></span> <span data-ttu-id="a46b9-276">Указывает, как Excel открывает файл данных XML.</span><span class="sxs-lookup"><span data-stu-id="a46b9-276">Specifies how Excel opens the XML data file.</span></span> <span data-ttu-id="a46b9-277">Может быть одной из следующих <see cref="T:Microsoft.Office.Interop.Excel.XlXmlLoadOption" /> констант:<b>кслксмллоадимпорттолист</b> размещает содержимое XML-файла данных в XML-списке. <b>кслксмллоадмапксмл</b> Отображает схему XML-файла данных в области задач <b>Структура XML</b> . <b>кслксмллоадопенксмл</b> Открывает файл данных XML.</span><span class="sxs-lookup"><span data-stu-id="a46b9-277">Can be one of these <see cref="T:Microsoft.Office.Interop.Excel.XlXmlLoadOption" /> constants:<b>xlXmlLoadImportToList</b> Places the contents of the XML data file in an XML list.<b>xlXmlLoadMapXml</b> Displays the schema of the XML data file in the <b>XML Structure</b> task pane.<b>xlXmlLoadOpenXml</b> Opens the XML data file.</span></span> <span data-ttu-id="a46b9-278">Содержимое файла будет выровнено. <b>кслксмллоадпромптусер</b> Предлагает пользователю выбрать способ открытия файла.</span><span class="sxs-lookup"><span data-stu-id="a46b9-278">The contents of the file will be flattened.<b>xlXmlLoadPromptUser</b> Prompts the user to choose how to open the file.</span></span></param>
        <summary><span data-ttu-id="a46b9-279">Открывает файл данных XML.</span><span class="sxs-lookup"><span data-stu-id="a46b9-279">Opens an XML data file.</span></span> <span data-ttu-id="a46b9-280">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> объект.</span><span class="sxs-lookup"><span data-stu-id="a46b9-280">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="a46b9-281">Функции XML, за исключением сохранения файлов в формате электронных таблиц XML, доступны только в Microsoft Office профессиональный выпуск 2003 и Microsoft Office Excel 2003.</span><span class="sxs-lookup"><span data-stu-id="a46b9-281">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a46b9-282">Возвращает родительский объект для указанного объекта.</span><span class="sxs-lookup"><span data-stu-id="a46b9-282">Returns the parent object for the specified object.</span></span> <span data-ttu-id="a46b9-283">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="a46b9-283">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>