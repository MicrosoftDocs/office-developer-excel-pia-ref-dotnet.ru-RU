<Type Name="IconSetCondition" FullName="Microsoft.Office.Interop.Excel.IconSetCondition">
  <Metadata><Meta Name="ms.openlocfilehash" Value="60529c90129fadd3409df7f77d68bfab6f56e963" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="50000213" /></Metadata><TypeSignature Language="C#" Value="public interface IconSetCondition" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IconSetCondition" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.IconSetCondition" />
  <TypeSignature Language="VB.NET" Value="Public Interface IconSetCondition" />
  <TypeSignature Language="C++ CLI" Value="public interface class IconSetCondition" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00024497-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="05faa-101">Представляет правило условного форматирования набора значков.</span><span class="sxs-lookup"><span data-stu-id="05faa-101">Represents an icon set conditional formatting rule.</span></span></summary>
    <remarks><para><span data-ttu-id="05faa-102">Все объекты условного форматирования содержатся в объекте коллекции, который является <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> его <see cref="T:Microsoft.Office.Interop.Excel.Range" /> частью.</span><span class="sxs-lookup"><span data-stu-id="05faa-102">All conditional formatting objects are contained within a <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> collection object, which is a child of a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> collection.</span></span> <span data-ttu-id="05faa-103">Правило форматирования набора значков можно создать с помощью метода или метода коллекции <see cref="M:Microsoft.Office.Interop.Excel.FormatConditions.Add(Microsoft.Office.Interop.Excel.XlFormatConditionType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> <see cref="M:Microsoft.Office.Interop.Excel.FormatConditions.AddIconSetCondition" /> <b>FormatConditions.</b></span><span class="sxs-lookup"><span data-stu-id="05faa-103">You can create an icon set formatting rule by using either the <see cref="M:Microsoft.Office.Interop.Excel.FormatConditions.Add(Microsoft.Office.Interop.Excel.XlFormatConditionType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method or <see cref="M:Microsoft.Office.Interop.Excel.FormatConditions.AddIconSetCondition" /> method of the <b>FormatConditions</b> collection.</span></span></para>
      <para><span data-ttu-id="05faa-104">Каждый набор значков содержит три, четыре или пять значков.</span><span class="sxs-lookup"><span data-stu-id="05faa-104">Each icon set contains three, four, or five icons.</span></span> <span data-ttu-id="05faa-105">Свойство объекта используется для возврата объекта, чтобы указать один из встроенных <see cref="P:Microsoft.Office.Interop.Excel._Workbook.IconSets" /> <see cref="T:Microsoft.Office.Interop.Excel._Workbook" /> <see cref="T:Microsoft.Office.Interop.Excel.IconSets" /> наборов значков.</span><span class="sxs-lookup"><span data-stu-id="05faa-105">You use the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.IconSets" /> property of the <see cref="T:Microsoft.Office.Interop.Excel._Workbook" /> object to return an <see cref="T:Microsoft.Office.Interop.Excel.IconSets" /> object to specify one of the built-in icon sets.</span></span> <span data-ttu-id="05faa-106">Каждый отдельный значок в наборе значков затем передается подмножество значений диапазона членами <see cref="T:Microsoft.Office.Interop.Excel.IconCriteria" /> обтека.</span><span class="sxs-lookup"><span data-stu-id="05faa-106">Each individual icon in the icon set is then assigned to a subset of the values of the range by the members of the <see cref="T:Microsoft.Office.Interop.Excel.IconCriteria" /> obect.</span></span> <span data-ttu-id="05faa-107">Тип порогового значения также указывается этим объектом.</span><span class="sxs-lookup"><span data-stu-id="05faa-107">The type of threshold is also specified by this object.</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05faa-108">Если используется без квалификатора объекта, это свойство возвращает объект, Microsoft Office  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> Excel.</span><span class="sxs-lookup"><span data-stu-id="05faa-108">When used without an object qualifier, this property returns an  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Office Excel  application.</span></span> <span data-ttu-id="05faa-109">При применении с квалификатором объекта это свойство возвращает объект <b>Application,</b> который представляет создателя указанного объекта.</span><span class="sxs-lookup"><span data-stu-id="05faa-109">When used with an object qualifier, this property returns an <b>Application</b> object that represents the creator of the specified object.</span></span> <span data-ttu-id="05faa-110">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="05faa-110">Read-only.</span></span></summary>
        <value><span data-ttu-id="05faa-111"><b>Приложение</b> (см. выше)</span><span class="sxs-lookup"><span data-stu-id="05faa-111"><b>Application</b> (see above)</span></span></value>
        <remarks><para><span data-ttu-id="05faa-112">Это свойство можно использовать с объектом автоматизации OLE для возврата приложения этого объекта.</span><span class="sxs-lookup"><span data-stu-id="05faa-112">You can use this property with an OLE Automation object to return the application of that object.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AppliesTo">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range AppliesTo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range AppliesTo" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.AppliesTo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AppliesTo As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ AppliesTo { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2626)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2626)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05faa-113">Возвращает объект, определяющий диапазон ячеей, к которому применяется <see cref="T:Microsoft.Office.Interop.Excel.Range" /> правило форматирования.</span><span class="sxs-lookup"><span data-stu-id="05faa-113">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object specifying the cell range to which the formatting rule is applied.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.Range" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05faa-114">Возвращает 32-битное значение, эквивалентное значению, которое указывает приложение, в котором <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> был создан этот объект.</span><span class="sxs-lookup"><span data-stu-id="05faa-114">Returns a 32-bit integer equivalent to an <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> value that indicates the application in which this object was created.</span></span> <span data-ttu-id="05faa-115">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="05faa-115">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /></value>
        <remarks><para><span data-ttu-id="05faa-116">Если объект был создан в Microsoft Excel, это свойство возвращает строку XCEL, эквивалентную 5843454C.</span><span class="sxs-lookup"><span data-stu-id="05faa-116">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span>  <span data-ttu-id="05faa-117">Свойство <b>Creator</b> предназначено для использования в Microsoft Excel для Macintosh, где каждое приложение имеет четырех символьный код создателя.</span><span class="sxs-lookup"><span data-stu-id="05faa-117">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="05faa-118">Например, в Microsoft Excel есть код создателя XCEL.</span><span class="sxs-lookup"><span data-stu-id="05faa-118">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.IconSetCondition.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="05faa-119">Удаляет указанный объект правила условного форматирования.</span><span class="sxs-lookup"><span data-stu-id="05faa-119">Deletes the specified conditional formatting rule object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Formula">
      <MemberSignature Language="C#" Value="public string Formula { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Formula" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.Formula" />
      <MemberSignature Language="VB.NET" Value="Public Property Formula As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Formula { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05faa-120">Возвращает или задает <b>строку,</b> представляющую формулу, которая определяет значения, к которым будет применяться набор значков.</span><span class="sxs-lookup"><span data-stu-id="05faa-120">Returns or sets a <b>String</b> representing a formula, which determines the values to which the icon set will be applied.</span></span></summary>
        <value><span data-ttu-id="05faa-121"><b>Строка</b></span><span class="sxs-lookup"><span data-stu-id="05faa-121"><b>String</b></span></span></value>
        <remarks><para><span data-ttu-id="05faa-122">Это свойство полезно для ограничения диапазона значений, отображаемого в условном формате.</span><span class="sxs-lookup"><span data-stu-id="05faa-122">This property is useful to limit the range of values that will display the conditional format.</span></span> <span data-ttu-id="05faa-123">Типичным сценарием является ситуация, когда у вас есть диапазон чисел, содержащих как положительные, так и отрицательные значения.</span><span class="sxs-lookup"><span data-stu-id="05faa-123">A typical scenario is when you have a range of numbers containing both positive and negative values.</span></span> <span data-ttu-id="05faa-124">Может потребоваться создать более одного условного формата для этого диапазона чисел— один для положительных значений, а другой для отрицательных значений.</span><span class="sxs-lookup"><span data-stu-id="05faa-124">You may want to create more than one conditional format for this range of numbers—one for positive values and another for negative values.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IconCriteria">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.IconCriteria IconCriteria { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.IconCriteria IconCriteria" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.IconCriteria" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IconCriteria As IconCriteria" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::IconCriteria ^ IconCriteria { Microsoft::Office::Interop::Excel::IconCriteria ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2727)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2727)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.IconCriteria</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05faa-125">Возвращает коллекцию, которая представляет набор условий для правила <see cref="T:Microsoft.Office.Interop.Excel.IconCriteria" /> условного форматирования набора значков.</span><span class="sxs-lookup"><span data-stu-id="05faa-125">Returns an <see cref="T:Microsoft.Office.Interop.Excel.IconCriteria" /> collection, which represents the set of criteria for an icon set conditional formatting rule.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.IconCriteria" /></value>
        <remarks><para><span data-ttu-id="05faa-126">Получив коллекцию, вы можете использовать ее свойство для <see cref="T:Microsoft.Office.Interop.Excel.IconCriteria" /> <see cref="P:Microsoft.Office.Interop.Excel.IconCriteria.Item(System.Object)" /> возврата <see cref="T:Microsoft.Office.Interop.Excel.IconCriterion" /> объекта.</span><span class="sxs-lookup"><span data-stu-id="05faa-126">After you have the <see cref="T:Microsoft.Office.Interop.Excel.IconCriteria" />collection, you can use the <see cref="P:Microsoft.Office.Interop.Excel.IconCriteria.Item(System.Object)" /> property of the collection to return an <see cref="T:Microsoft.Office.Interop.Excel.IconCriterion" /> object.</span></span> <span data-ttu-id="05faa-127">Объект <see cref="T:Microsoft.Office.Interop.Excel.IconCriterion" /> представляет один критерий набора значков.</span><span class="sxs-lookup"><span data-stu-id="05faa-127">The <see cref="T:Microsoft.Office.Interop.Excel.IconCriterion" /> object represents a single criterion of an icon set.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IconSet">
      <MemberSignature Language="C#" Value="public object IconSet { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object IconSet" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.IconSet" />
      <MemberSignature Language="VB.NET" Value="Public Property IconSet As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ IconSet { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2726)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2726)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2726)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05faa-128">Возвращает или задает коллекцию, которая задает набор значков, <see cref="T:Microsoft.Office.Interop.Excel.IconSets" /> используемый в условном формате.</span><span class="sxs-lookup"><span data-stu-id="05faa-128">Returns or sets an <see cref="T:Microsoft.Office.Interop.Excel.IconSets" /> collection, which specifies the icon set used in the conditional format.</span></span></summary>
        <value><span data-ttu-id="05faa-129"><b>Object</b></span><span class="sxs-lookup"><span data-stu-id="05faa-129"><b>Object</b></span></span></value>
        <remarks><para><span data-ttu-id="05faa-130">Вы можете назначить набор значков с помощью <see cref="P:Microsoft.Office.Interop.Excel._Workbook.IconSets" /> свойства <see cref="T:Microsoft.Office.Interop.Excel._Workbook" /> объекта.</span><span class="sxs-lookup"><span data-stu-id="05faa-130">You can assign the icon set by using the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.IconSets" /> property of the <see cref="T:Microsoft.Office.Interop.Excel._Workbook" /> object.</span></span> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifyAppliesToRange">
      <MemberSignature Language="C#" Value="public void ModifyAppliesToRange (Microsoft.Office.Interop.Excel.Range Range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ModifyAppliesToRange([in]class Microsoft.Office.Interop.Excel.Range Range) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.IconSetCondition.ModifyAppliesToRange(Microsoft.Office.Interop.Excel.Range)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ModifyAppliesToRange(Microsoft::Office::Interop::Excel::Range ^ Range);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2627)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Range" Type="Microsoft.Office.Interop.Excel.Range" />
      </Parameters>
      <Docs>
        <param name="Range"><span data-ttu-id="05faa-131">Диапазон, к которому будет применяться это правило форматирования.</span><span class="sxs-lookup"><span data-stu-id="05faa-131">The range to which this formatting rule will be applied.</span></span></param>
        <summary><span data-ttu-id="05faa-132">Задает диапазон ячеей, к которому применяется это правило форматирования.</span><span class="sxs-lookup"><span data-stu-id="05faa-132">Sets the cell range to which this formatting rule applies.</span></span></summary>
        <remarks><para><span data-ttu-id="05faa-133">Диапазон должен быть в стиле ссылки A1 и полностью содержаться в листе, который является родительским для <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> коллекции.</span><span class="sxs-lookup"><span data-stu-id="05faa-133">The range must be in the A1 reference style and be entirely contained within the sheet that is the parent of the <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> collection.</span></span> <span data-ttu-id="05faa-134">Он может содержать оператор диапазона (двоеточие), оператор пересечения (пробел) или оператор объединения (запятая).</span><span class="sxs-lookup"><span data-stu-id="05faa-134">It can include the range operator (a colon), the intersection operator (a space), or the union operator (a comma).</span></span> <span data-ttu-id="05faa-135">Знаки доллара также можно использовать, но они игнорируются.</span><span class="sxs-lookup"><span data-stu-id="05faa-135">Dollar signs can also be used but they are ignored.</span></span></para>
          <para><span data-ttu-id="05faa-136">Вы также можете использовать локально определенное имя в любой части диапазона, но имя должно быть на языке макроса.</span><span class="sxs-lookup"><span data-stu-id="05faa-136">You can also use a local defined name in any part of the range, but the name must be in the language of the macro.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05faa-137">Возвращает родительский объект для указанного объекта.</span><span class="sxs-lookup"><span data-stu-id="05faa-137">Returns the parent object for the specified object.</span></span> <span data-ttu-id="05faa-138">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="05faa-138">Read-only.</span></span></summary>
        <value><span data-ttu-id="05faa-139"><b>Object</b></span><span class="sxs-lookup"><span data-stu-id="05faa-139"><b>Object</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PercentileValues">
      <MemberSignature Language="C#" Value="public bool PercentileValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PercentileValues" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.PercentileValues" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentileValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PercentileValues { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2724)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2724)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2724)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05faa-140">Возвращает или задает <b>boolean значение,</b> указывающее, определяются ли пороговые значения условного формата набора значков с помощью процентилей.</span><span class="sxs-lookup"><span data-stu-id="05faa-140">Returns or sets a <b>Boolean</b> value indicating if the thresholds for an icon set conditional format are determined by using percentiles.</span></span></summary>
        <value><span data-ttu-id="05faa-141"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="05faa-141"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="05faa-142">Это свойство возвращает значение <b>False,</b> если не для каждого порогового значения установлено значение percentile.</span><span class="sxs-lookup"><span data-stu-id="05faa-142">This property will return <b>False</b> if not every threshold is set to percentile.</span></span> <span data-ttu-id="05faa-143">Если для этого свойства <b>установлено значение True,</b> для каждого типа порогового значения будет установлено значение percentile.</span><span class="sxs-lookup"><span data-stu-id="05faa-143">Setting this property to <b>True</b> will set every threshold type to percentile.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public int Priority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Priority" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.Priority" />
      <MemberSignature Language="VB.NET" Value="Public Property Priority As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Priority { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(985)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(985)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(985)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05faa-144">Возвращает или задает значение приоритета правила условного форматирования.</span><span class="sxs-lookup"><span data-stu-id="05faa-144">Returns or sets the priority value of the conditional formatting rule.</span></span> <span data-ttu-id="05faa-145">Приоритет определяет порядок оценки при налияниях на таблицу нескольких правил условного форматирования.</span><span class="sxs-lookup"><span data-stu-id="05faa-145">The priority determines the order of evaluation when multiple conditional formatting rules exist in a worksheet.</span></span></summary>
        <value><span data-ttu-id="05faa-146">64-разрядное целое число.</span><span class="sxs-lookup"><span data-stu-id="05faa-146"><b>Integer</b></span></span></value>
        <remarks><para><span data-ttu-id="05faa-147">При установке приоритета значение должно быть положительным числом от 1 до общего количества правил условного форматирования на этом сайте.</span><span class="sxs-lookup"><span data-stu-id="05faa-147">When setting the priority, the value must be a positive integer between 1 and the total number of conditional formatting rules on the worksheet.</span></span> <span data-ttu-id="05faa-148">Приоритетом должно быть уникальное значение для всех правил на этом документе, поэтому изменение приоритета для указанного правила условного форматирования может привести к смещению значения приоритета других правил на этом документе.</span><span class="sxs-lookup"><span data-stu-id="05faa-148">The priority must be a unique value for all rules on the worksheet, so changing the priority for the specified conditional formatting rule may cause the priority value of the other rules on the worksheet to be shifted.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PTCondition">
      <MemberSignature Language="C#" Value="public bool PTCondition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PTCondition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.PTCondition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PTCondition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PTCondition { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2631)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2631)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05faa-149">Возвращает <b>boolean значение,</b> указывающее, применяется ли условный формат к диаграмме pivotTable.</span><span class="sxs-lookup"><span data-stu-id="05faa-149">Returns a <b>Boolean</b> value indicating if the conditional format is being applied to a PivotTable chart.</span></span> <span data-ttu-id="05faa-150">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="05faa-150">Read-only.</span></span></summary>
        <value><span data-ttu-id="05faa-151"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="05faa-151"><b>Boolean</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReverseOrder">
      <MemberSignature Language="C#" Value="public bool ReverseOrder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReverseOrder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.ReverseOrder" />
      <MemberSignature Language="VB.NET" Value="Public Property ReverseOrder As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReverseOrder { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2723)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2723)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2723)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05faa-152">Возвращает или задает значение <b>boolean,</b> указывающее, отменен ли порядок значков для набора значков.</span><span class="sxs-lookup"><span data-stu-id="05faa-152">Returns or sets a <b>Boolean</b> value indicating if the order of icons is reversed for an icon set.</span></span></summary>
        <value><span data-ttu-id="05faa-153"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="05faa-153"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="05faa-154">По умолчанию большинство наборов значков можно использовать для связывания положительных изображений с более высокими значениями.</span><span class="sxs-lookup"><span data-stu-id="05faa-154">By default, most of the icon sets you can use associate positive images with higher values.</span></span> <span data-ttu-id="05faa-155">Например, набор значков "3 индикатора трафика" применяет зеленый круг к порогу верхнего значения, а красный круг — к минимальным значениям в диапазоне.</span><span class="sxs-lookup"><span data-stu-id="05faa-155">For example, the "3 Traffic Lights" icon set applies a green circle to the upper value threshold and a red circle to the lowest values in the range.</span></span> <span data-ttu-id="05faa-156">Если данные таково, что более низкие значения являются более нежелательными, например результаты времени вехи, может потребоваться изменить порядок, в который значки применяются к диапазону, чтобы связать зеленый круг с минимальными значениями.</span><span class="sxs-lookup"><span data-stu-id="05faa-156">If your data is such that lower values are more desirable, such as marathon time results, you may want to reverse the order that icons are applied to the range to associate the green circle to the lowest values.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ScopeType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlPivotConditionScope ScopeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlPivotConditionScope ScopeType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.ScopeType" />
      <MemberSignature Language="VB.NET" Value="Public Property ScopeType As XlPivotConditionScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlPivotConditionScope ScopeType { Microsoft::Office::Interop::Excel::XlPivotConditionScope get(); void set(Microsoft::Office::Interop::Excel::XlPivotConditionScope value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2615)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2615)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2615)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlPivotConditionScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05faa-157">Возвращает или задает одну из констант этого перенамерения, которая определяет область условного форматирования при применении к диаграмме <see cref="T:Microsoft.Office.Interop.Excel.XlPivotConditionScope" /> pivotTable.</span><span class="sxs-lookup"><span data-stu-id="05faa-157">Returns or sets one of the constants of the <see cref="T:Microsoft.Office.Interop.Excel.XlPivotConditionScope" /> enumeration, which determines the scope of the conditional format when it is applied to a PivotTable chart.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.XlPivotConditionScope" /></value>
        <remarks><para><span data-ttu-id="05faa-158">Значение по умолчанию — <see cref="F:Microsoft.Office.Interop.Excel.XlPivotConditionScope.xlSelectionScope" /> задает область с помощью <see cref="P:Microsoft.Office.Interop.Excel.IconSetCondition.AppliesTo" /> свойства.</span><span class="sxs-lookup"><span data-stu-id="05faa-158">The default value is <see cref="F:Microsoft.Office.Interop.Excel.XlPivotConditionScope.xlSelectionScope" />, which sets the scope using the <see cref="P:Microsoft.Office.Interop.Excel.IconSetCondition.AppliesTo" /> property.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFirstPriority">
      <MemberSignature Language="C#" Value="public void SetFirstPriority ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFirstPriority() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.IconSetCondition.SetFirstPriority" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFirstPriority ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFirstPriority();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2629)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="05faa-159">Задает для этого правила условного форматирования значение "1", чтобы оно оценивалось перед всеми другими правилами на этом сайте.</span><span class="sxs-lookup"><span data-stu-id="05faa-159">Sets the priority value for this conditional formatting rule to "1" so that it will be evaluated before all other rules on the worksheet.</span></span></summary>
        <remarks><para><span data-ttu-id="05faa-160">Если на этом сайте имеется несколько правил условного форматирования, если ранее правило не было установлено с приоритетом "1", то при этом приоритет всех остальных существующих правил на этом сайте будет увеличен на один.</span><span class="sxs-lookup"><span data-stu-id="05faa-160">When you have multiple conditional formatting rules in a worksheet, if the rule was not previously set to priority "1", this method will cause the priority of all other existing rules on the worksheet to be increased by one.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLastPriority">
      <MemberSignature Language="C#" Value="public void SetLastPriority ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLastPriority() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.IconSetCondition.SetLastPriority" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLastPriority ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetLastPriority();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2630)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="05faa-161">Задает порядок оценки для этого правила условного форматирования, чтобы оно оценивалось после всех остальных правил на этом сайте.</span><span class="sxs-lookup"><span data-stu-id="05faa-161">Sets the evaluation order for this conditional formatting rule so it is evaluated after all other rules on the worksheet.</span></span></summary>
        <remarks><para><span data-ttu-id="05faa-162">Фактическое значение приоритета будет равно общему числу правил условного форматирования на этом сайте.</span><span class="sxs-lookup"><span data-stu-id="05faa-162">The actual value of the priority will be equal to the total number of conditional formatting rules on the worksheet.</span></span> <span data-ttu-id="05faa-163">При работе с несколькими правилами условного форматирования на одном из таблиц этот метод приведет к увеличению приоритета правил, значение приоритета для них больше, чем это правило.</span><span class="sxs-lookup"><span data-stu-id="05faa-163">When you have multiple conditional formatting rules in a worksheet, this method will cause the priority of rules that had a priority value greater than this rule to be increased by one.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowIconOnly">
      <MemberSignature Language="C#" Value="public bool ShowIconOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowIconOnly" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.ShowIconOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowIconOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowIconOnly { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2725)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2725)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2725)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05faa-164">Возвращает или задает <b>boolean значение,</b> указывающее, отображается ли только значок для условного формата набора значков.</span><span class="sxs-lookup"><span data-stu-id="05faa-164">Returns or sets a <b>Boolean</b> value indicating if only the icon is displayed for an icon set conditional format.</span></span></summary>
        <value><span data-ttu-id="05faa-165"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="05faa-165"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="05faa-166">Значение по умолчанию для этого свойства <b>— False.</b></span><span class="sxs-lookup"><span data-stu-id="05faa-166">The default value for this property is <b>False</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="StopIfTrue">
      <MemberSignature Language="C#" Value="public bool StopIfTrue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StopIfTrue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.StopIfTrue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StopIfTrue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StopIfTrue { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2625)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05faa-167">Возвращает или задает <b>boolean значение,</b> которое определяет, следует ли оценивать дополнительные правила форматирования в ячейке, если текущее правило имеет <b>значение True.</b></span><span class="sxs-lookup"><span data-stu-id="05faa-167">Returns or sets a <b>Boolean</b> value that determines if additional formatting rules on the cell should be evaluated if the current rule evaluates to <b>True</b>.</span></span></summary>
        <value><span data-ttu-id="05faa-168"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="05faa-168"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="05faa-169">Для поддержки обратной совместимости значение по умолчанию для этого свойства — <b>True,</b>что является обратным поведением правила форматирования, созданного в пользовательском интерфейсе.</span><span class="sxs-lookup"><span data-stu-id="05faa-169">To support backward compatibility, the default value for this property is <b>True</b>, which is the opposite behavior of a formatting rule created in the user interface.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public int Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Type { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05faa-170">Возвращает одну из констант в этом виде, которая указывает <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionType" /> тип условного форматирования.</span><span class="sxs-lookup"><span data-stu-id="05faa-170">Returns one of the constants of the <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionType" /> enumeration, which specifies the type of conditional format.</span></span> <span data-ttu-id="05faa-171">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="05faa-171">Read-only.</span></span></summary>
        <value><span data-ttu-id="05faa-172">64-разрядное целое число.</span><span class="sxs-lookup"><span data-stu-id="05faa-172"><b>Integer</b></span></span></value>
        <remarks><para><span data-ttu-id="05faa-173">Это свойство всегда возвращает значение 6, что эквивалентно <see cref="T:Microsoft.Office.Interop.Excel.XlIconSet" /> .</span><span class="sxs-lookup"><span data-stu-id="05faa-173">This property will always return a value of 6, which is equivalent to <see cref="T:Microsoft.Office.Interop.Excel.XlIconSet" />.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>