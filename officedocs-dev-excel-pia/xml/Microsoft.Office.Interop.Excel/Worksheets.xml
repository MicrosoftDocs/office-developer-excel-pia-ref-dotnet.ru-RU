<Type Name="Worksheets" FullName="Microsoft.Office.Interop.Excel.Worksheets">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a754235a311170e13d0d4825decb297f28a9fa27" /><Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/24/2018" /><Meta Name="ms.locfileid" Value="20581503" /></Metadata><TypeSignature Language="C#" Value="public interface Worksheets : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Worksheets implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Worksheets" />
  <TypeSignature Language="VB.NET" Value="Public Interface Worksheets&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class Worksheets : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208B1-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b033c-101">Коллекция всех <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> объектов в указанной или активной книге.</span><span class="sxs-lookup"><span data-stu-id="b033c-101">A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> objects in the specified or active workbook.</span></span> <span data-ttu-id="b033c-102">Каждый объект <b>листа</b> представляет лист.</span><span class="sxs-lookup"><span data-stu-id="b033c-102">Each <b>Worksheet</b> object represents a worksheet.</span></span></summary>
    <remarks><para><span data-ttu-id="b033c-103">Используйте <see cref="P:Microsoft.Office.Interop.Excel._Application.Worksheets" /> свойство, чтобы возвратить коллекцию <b>листы</b> .</span><span class="sxs-lookup"><span data-stu-id="b033c-103">Use the <see cref="P:Microsoft.Office.Interop.Excel._Application.Worksheets" /> property to return the <b>Worksheets</b> collection.</span></span></para>
      <para><span data-ttu-id="b033c-104">Используйте <see cref="M:Microsoft.Office.Interop.Excel.Worksheets.Add(System.Object,System.Object,System.Object,System.Object)" /> метод, чтобы создать новый лист и добавить его в коллекцию.</span><span class="sxs-lookup"><span data-stu-id="b033c-104">Use the <see cref="M:Microsoft.Office.Interop.Excel.Worksheets.Add(System.Object,System.Object,System.Object,System.Object)" /> method to create a new worksheet and add it to the collection.</span></span></para>
      <para><span data-ttu-id="b033c-105">Используйте <b>листы</b>(<paramref name="index" />), где <paramref name="index" /> — это номер или имя индекса листа, чтобы вернуть один объект <b>листа</b> .</span><span class="sxs-lookup"><span data-stu-id="b033c-105">Use <b>Worksheets</b>(<paramref name="index" />), where <paramref name="index" /> is the worksheet index number or name, to return a single <b>Worksheet</b> object.</span></span></para>
      <para><span data-ttu-id="b033c-106">Объект <b>листа</b> также является членом <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> коллекции.</span><span class="sxs-lookup"><span data-stu-id="b033c-106">The <b>Worksheet</b> object is also a member of the <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection.</span></span> <span data-ttu-id="b033c-107">Коллекция <b>Sheets</b> содержит все листы в книге (листы и листы диаграммы).</span><span class="sxs-lookup"><span data-stu-id="b033c-107">The <b>Sheets</b> collection contains all the sheets in the workbook (both chart sheets and worksheets).</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public object this[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object _Default(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Worksheets._Default(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default(Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="b033c-108">Зарезервировано для внутреннего использования.</span><span class="sxs-lookup"><span data-stu-id="b033c-108">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_PrintOut">
      <MemberSignature Language="C#" Value="public void _PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Worksheets._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(905)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <summary><span data-ttu-id="b033c-109">Зарезервировано для внутреннего использования.</span><span class="sxs-lookup"><span data-stu-id="b033c-109">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public object Add (object Before, object After, object Count, object Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Add([in]object Before, [in]object After, [in]object Count, [in]object Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Worksheets.Add(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (Optional Before As Object, Optional After As Object, Optional Count As Object, Optional Type As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(181)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
        <Parameter Name="Count" Type="System.Object" />
        <Parameter Name="Type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before"><span data-ttu-id="b033c-110">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="b033c-110">Optional <b>Object</b>.</span></span> <span data-ttu-id="b033c-111">Объект, указывающий лист, перед которым добавляется новый лист.</span><span class="sxs-lookup"><span data-stu-id="b033c-111">An object that specifies the sheet before which the new sheet is added.</span></span></param>
        <param name="After"><span data-ttu-id="b033c-112">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="b033c-112">Optional <b>Object</b>.</span></span> <span data-ttu-id="b033c-113">Объект, указывающий лист, после которого добавляется новый лист.</span><span class="sxs-lookup"><span data-stu-id="b033c-113">An object that specifies the sheet after which the new sheet is added.</span></span></param>
        <param name="Count"><span data-ttu-id="b033c-114">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="b033c-114">Optional <b>Object</b>.</span></span> <span data-ttu-id="b033c-115">Количество добавляемых листов.</span><span class="sxs-lookup"><span data-stu-id="b033c-115">The number of sheets to be added.</span></span> <span data-ttu-id="b033c-116">Значение по умолчанию — один.</span><span class="sxs-lookup"><span data-stu-id="b033c-116">The default value is one.</span></span></param>
        <param name="Type"><span data-ttu-id="b033c-117">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="b033c-117">Optional <b>Object</b>.</span></span> <span data-ttu-id="b033c-118">Определяет тип листа.</span><span class="sxs-lookup"><span data-stu-id="b033c-118">Specifies the sheet type.</span></span> <span data-ttu-id="b033c-119">Может быть одной <see cref="T:Microsoft.Office.Interop.Excel.XlSheetType" /> из следующих констант: <b>xlWorksheet</b>, <b>кслчарт</b>, <b>xlExcel4MacroSheet</b>или <b>xlExcel4IntlMacroSheet</b>.</span><span class="sxs-lookup"><span data-stu-id="b033c-119">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSheetType" /> constants: <b>xlWorksheet</b>, <b>xlChart</b>, <b>xlExcel4MacroSheet</b>, or <b>xlExcel4IntlMacroSheet</b>.</span></span> <span data-ttu-id="b033c-120">Если вставляется лист на основе существующего шаблона, укажите путь к шаблону.</span><span class="sxs-lookup"><span data-stu-id="b033c-120">If you are inserting a sheet based on an existing template, specify the path to the template.</span></span> <span data-ttu-id="b033c-121">Значение по умолчанию — <b>xlWorksheet</b>.</span><span class="sxs-lookup"><span data-stu-id="b033c-121">The default value is <b>xlWorksheet</b>.</span></span></param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="b033c-122"><paramref name="After" /> Если <paramref name="Before" /> оба параметра опущены, новый лист вставляется перед активным листом.</span><span class="sxs-lookup"><span data-stu-id="b033c-122">If <paramref name="Before" /> and <paramref name="After" /> are both omitted, the new sheet is inserted before the active sheet.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Add2">
      <MemberSignature Language="C#" Value="public object Add2 (object Before, object After, object Count, object NewLayout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Add2([in]object Before, [in]object After, [in]object Count, [in]object NewLayout) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Worksheets.Add2(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add2 (Optional Before As Object, Optional After As Object, Optional Count As Object, Optional NewLayout As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3054)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
        <Parameter Name="Count" Type="System.Object" />
        <Parameter Name="NewLayout" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before"><span data-ttu-id="b033c-123">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="b033c-123">Optional <b>Object</b>.</span></span> <span data-ttu-id="b033c-124">Объект, указывающий лист, перед которым добавляется новый лист.</span><span class="sxs-lookup"><span data-stu-id="b033c-124">An object that specifies the sheet before which the new sheet is added.</span></span></param>
        <param name="After"><span data-ttu-id="b033c-125">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="b033c-125">Optional <b>Object</b>.</span></span> <span data-ttu-id="b033c-126">Объект, указывающий лист, после которого добавляется новый лист.</span><span class="sxs-lookup"><span data-stu-id="b033c-126">An object that specifies the sheet after which the new sheet is added.</span></span></param>
        <param name="Count"><span data-ttu-id="b033c-127">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="b033c-127">Optional <b>Object</b>.</span></span> <span data-ttu-id="b033c-128">Количество добавляемых листов.</span><span class="sxs-lookup"><span data-stu-id="b033c-128">The number of sheets to be added.</span></span> <span data-ttu-id="b033c-129">Значение по умолчанию — 1</span><span class="sxs-lookup"><span data-stu-id="b033c-129">The default value is one</span></span></param>
        <param name="NewLayout"><span data-ttu-id="b033c-130">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="b033c-130">Optional <b>Object</b>.</span></span> <span data-ttu-id="b033c-131">Объект, задающий макет, который будет использоваться для нового листа.</span><span class="sxs-lookup"><span data-stu-id="b033c-131">An object that specifies the layout to be used for the new worksheet.</span></span></param>
        <summary><span data-ttu-id="b033c-132">Этот метод реализован только для объекта коллекции <b>Charts</b> <b>и при использовании объектов</b> <b>Sheets и Sheets</b> будет возвращать ошибку времени выполнения.</span><span class="sxs-lookup"><span data-stu-id="b033c-132">This method is only implemented for the <b>Charts</b> collection object and will produce a run time error if used on  the <b>Sheets</b> and <b>Worksheets</b> objects.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="b033c-133"><paramref name="After" /> Если <paramref name="Before" /> оба параметра опущены, новый лист вставляется перед активным листом.</span><span class="sxs-lookup"><span data-stu-id="b033c-133">If <paramref name="Before" /> and <paramref name="After" /> are both omitted, the new sheet is inserted before the active sheet.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Worksheets.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b033c-134">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Application" /> объект, представляющий приложение Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="b033c-134">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span></span> <span data-ttu-id="b033c-135">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="b033c-135">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public void Copy (object Before, object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy([in]object Before, [in]object After) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Worksheets.Copy(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Copy (Optional Before As Object, Optional After As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(551)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before"><span data-ttu-id="b033c-136">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="b033c-136">Optional <b>Object</b>.</span></span> <span data-ttu-id="b033c-137">Лист, на котором будет размещаться скопированный лист.</span><span class="sxs-lookup"><span data-stu-id="b033c-137">The sheet before which the copied sheet will be placed.</span></span> <span data-ttu-id="b033c-138">Вы не можете <paramref name="Before" /> указать, если <paramref name="After" />вы указали.</span><span class="sxs-lookup"><span data-stu-id="b033c-138">You cannot specify <paramref name="Before" /> if you specify <paramref name="After" />.</span></span></param>
        <param name="After"><span data-ttu-id="b033c-139">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="b033c-139">Optional <b>Object</b>.</span></span> <span data-ttu-id="b033c-140">Лист, после которого будет размещаться скопированный лист.</span><span class="sxs-lookup"><span data-stu-id="b033c-140">The sheet after which the copied sheet will be placed.</span></span> <span data-ttu-id="b033c-141">Вы не можете <paramref name="After" /> указать, если <paramref name="Before" />вы указали.</span><span class="sxs-lookup"><span data-stu-id="b033c-141">You cannot specify <paramref name="After" /> if you specify <paramref name="Before" />.</span></span></param>
        <summary><span data-ttu-id="b033c-142">Копирует лист в другое расположение в книге.</span><span class="sxs-lookup"><span data-stu-id="b033c-142">Copies the sheet to another location in the workbook.</span></span></summary>
        <remarks><para><span data-ttu-id="b033c-143">Если вы не укажете <paramref name="Before" /> или <paramref name="After" />, Microsoft Excel создаст новую книгу, содержащую скопированный лист.</span><span class="sxs-lookup"><span data-stu-id="b033c-143">If you don't specify either <paramref name="Before" /> or <paramref name="After" />, Microsoft Excel creates a new workbook that contains the copied sheet.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Worksheets.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b033c-144">Возвращает число объектов в коллекции.</span><span class="sxs-lookup"><span data-stu-id="b033c-144">Returns the number of objects in the collection.</span></span> <span data-ttu-id="b033c-145">Только для чтения, <b>Integer</b>.</span><span class="sxs-lookup"><span data-stu-id="b033c-145">Read-only <b>Integer</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Worksheets.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b033c-146">Возвращает 32-битное целое число, указывающее на приложение, в котором объект был создан.</span><span class="sxs-lookup"><span data-stu-id="b033c-146">Returns a 32-bit integer that indicates the application in which this object was created.</span></span> <span data-ttu-id="b033c-147">Если объект был создан в Microsoft Excel, это свойство возвращает строку КСЦЕЛ, которая эквивалентна шестнадцатеричному числу 5843454C.</span><span class="sxs-lookup"><span data-stu-id="b033c-147">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span> <span data-ttu-id="b033c-148">Только <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />для чтения.</span><span class="sxs-lookup"><span data-stu-id="b033c-148">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="b033c-149">Свойство <b>Creator</b> предназначено для использования в Microsoft Excel для Macintosh, где каждое приложение содержит код создателя из четырех символов.</span><span class="sxs-lookup"><span data-stu-id="b033c-149">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="b033c-150">Например, в Microsoft Excel есть код создателя КСЦЕЛ.</span><span class="sxs-lookup"><span data-stu-id="b033c-150">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Worksheets.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b033c-151">Удаляет объект.</span><span class="sxs-lookup"><span data-stu-id="b033c-151">Deletes the object.</span></span></summary>
        <remarks><para><span data-ttu-id="b033c-152">При удалении объекта <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> or <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" />этот метод отображает диалоговое окно, предлагающее пользователю подтвердить удаление.</span><span class="sxs-lookup"><span data-stu-id="b033c-152">When you delete a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> or <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" />, this method displays a dialog box that prompts the user to confirm the deletion.</span></span> <span data-ttu-id="b033c-153">Это диалоговое окно отображается по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="b033c-153">This dialog box is displayed by default.</span></span> <span data-ttu-id="b033c-154">Метод <b>Delete</b> возвращает <b>логическое</b> значение <b>false</b> , если пользователь нажимает кнопку Cancel (Отмена) в диалоговом окне или <b>значение true</b> , если пользователь нажимает кнопку Delete (удалить).</span><span class="sxs-lookup"><span data-stu-id="b033c-154">The <b>Delete</b> method returns a <b>Boolean</b> value that is <b>False</b> if the user clicked Cancel on the dialog box or <b>True</b> if the user clicked Delete.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FillAcrossSheets">
      <MemberSignature Language="C#" Value="public void FillAcrossSheets (Microsoft.Office.Interop.Excel.Range Range, Microsoft.Office.Interop.Excel.XlFillWith Type = Microsoft.Office.Interop.Excel.XlFillWith.xlFillWithAll);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FillAcrossSheets([in]class Microsoft.Office.Interop.Excel.Range Range, [in]valuetype Microsoft.Office.Interop.Excel.XlFillWith Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Worksheets.FillAcrossSheets(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.XlFillWith)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(469)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Range" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlFillWith" />
      </Parameters>
      <Docs>
        <param name="Range"><span data-ttu-id="b033c-155">Обязательный <see cref="T:Microsoft.Office.Interop.Excel.Range" /> объект.</span><span class="sxs-lookup"><span data-stu-id="b033c-155">Required <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span></span> <span data-ttu-id="b033c-156">Диапазон для заполнения на всех листах в коллекции.</span><span class="sxs-lookup"><span data-stu-id="b033c-156">The range to fill on all the worksheets in the collection.</span></span> <span data-ttu-id="b033c-157">Диапазон должен находиться на листе в пределах коллекции.</span><span class="sxs-lookup"><span data-stu-id="b033c-157">The range must be from a worksheet within the collection.</span></span></param>
        <param name="Type"><span data-ttu-id="b033c-158">Необязательный <see cref="T:Microsoft.Office.Interop.Excel.XlFillWith" />параметр.</span><span class="sxs-lookup"><span data-stu-id="b033c-158">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlFillWith" />.</span></span> <span data-ttu-id="b033c-159">Указывает, как копировать диапазон.</span><span class="sxs-lookup"><span data-stu-id="b033c-159">Specifies how to copy the range.</span></span></param>
        <summary><span data-ttu-id="b033c-160">Копирует диапазон в ту же область на всех остальных листах в коллекции.</span><span class="sxs-lookup"><span data-stu-id="b033c-160">Copies a range to the same area on all other worksheets in a collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Worksheets.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HPageBreaks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.HPageBreaks HPageBreaks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.HPageBreaks HPageBreaks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Worksheets.HPageBreaks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HPageBreaks As HPageBreaks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::HPageBreaks ^ HPageBreaks { Microsoft::Office::Interop::Excel::HPageBreaks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1418)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1418)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.HPageBreaks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b033c-161">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.HPageBreaks" /> коллекцию, представляющую горизонтальные разрывы страниц на листе.</span><span class="sxs-lookup"><span data-stu-id="b033c-161">Returns an <see cref="T:Microsoft.Office.Interop.Excel.HPageBreaks" /> collection that represents the horizontal page breaks on the sheet.</span></span> <span data-ttu-id="b033c-162">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="b033c-162">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="b033c-163">На листе может быть не более 1 026 горизонтальных страниц.</span><span class="sxs-lookup"><span data-stu-id="b033c-163">There is a limit of 1,026 horizontal page breaks per sheet.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object Item[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Worksheets.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item(Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Item[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="b033c-164">Обязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="b033c-164">Required <b>Object</b>.</span></span> <span data-ttu-id="b033c-165">Имя или номер индекса объекта.</span><span class="sxs-lookup"><span data-stu-id="b033c-165">The name or index number of the object.</span></span></param>
        <summary><span data-ttu-id="b033c-166">Возвращает один объект из коллекции.</span><span class="sxs-lookup"><span data-stu-id="b033c-166">Returns a single object from a collection.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public void Move (object Before, object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Move([in]object Before, [in]object After) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Worksheets.Move(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Move (Optional Before As Object, Optional After As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(637)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before"><span data-ttu-id="b033c-167">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="b033c-167">Optional <b>Object</b>.</span></span> <span data-ttu-id="b033c-168">Лист, на котором будет размещаться перемещенный лист.</span><span class="sxs-lookup"><span data-stu-id="b033c-168">The sheet before which the moved sheet will be placed.</span></span> <span data-ttu-id="b033c-169">Вы не можете <paramref name="Before" /> указать, если <paramref name="After" />вы указали.</span><span class="sxs-lookup"><span data-stu-id="b033c-169">You cannot specify <paramref name="Before" /> if you specify <paramref name="After" />.</span></span></param>
        <param name="After"><span data-ttu-id="b033c-170">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="b033c-170">Optional <b>Object</b>.</span></span> <span data-ttu-id="b033c-171">Лист, после которого будет помещен перемещенный лист.</span><span class="sxs-lookup"><span data-stu-id="b033c-171">The sheet after which the moved sheet will be placed.</span></span> <span data-ttu-id="b033c-172">Вы не можете <paramref name="After" /> указать, если вы указали <b>Before</b>.</span><span class="sxs-lookup"><span data-stu-id="b033c-172">You cannot specify <paramref name="After" /> if you specify <b>Before</b>.</span></span></param>
        <summary><span data-ttu-id="b033c-173">Перемещает лист в другое расположение в книге.</span><span class="sxs-lookup"><span data-stu-id="b033c-173">Moves the sheet to another location in the workbook.</span></span></summary>
        <remarks><para><span data-ttu-id="b033c-174">Если вы не укажете <paramref name="Before" /> или <paramref name="After" />, Microsoft Excel создаст новую книгу, содержащую перемещенный лист.</span><span class="sxs-lookup"><span data-stu-id="b033c-174">If you don't specify either <paramref name="Before" /> or <paramref name="After" />, Microsoft Excel creates a new workbook that contains the moved sheet.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Worksheets.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b033c-175">Возвращает родительский объект для указанного объекта.</span><span class="sxs-lookup"><span data-stu-id="b033c-175">Returns the parent object for the specified object.</span></span> <span data-ttu-id="b033c-176">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="b033c-176">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOut">
      <MemberSignature Language="C#" Value="public void PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Worksheets.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From"><span data-ttu-id="b033c-177">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="b033c-177">Optional <b>Object</b>.</span></span> <span data-ttu-id="b033c-178">Номер страницы, с которой начинается печать.</span><span class="sxs-lookup"><span data-stu-id="b033c-178">The number of the page at which to start printing.</span></span> <span data-ttu-id="b033c-179">Если этот аргумент опущен, печать начинается с начала.</span><span class="sxs-lookup"><span data-stu-id="b033c-179">If this argument is omitted, printing starts at the beginning.</span></span></param>
        <param name="To"><span data-ttu-id="b033c-180">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="b033c-180">Optional <b>Object</b>.</span></span> <span data-ttu-id="b033c-181">Номер последней страницы, которую требуется напечатать.</span><span class="sxs-lookup"><span data-stu-id="b033c-181">The number of the last page to print.</span></span> <span data-ttu-id="b033c-182">Если этот аргумент опущен, печать заканчивается на последней странице.</span><span class="sxs-lookup"><span data-stu-id="b033c-182">If this argument is omitted, printing ends with the last page.</span></span></param>
        <param name="Copies"><span data-ttu-id="b033c-183">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="b033c-183">Optional <b>Object</b>.</span></span> <span data-ttu-id="b033c-184">Число копий для печати.</span><span class="sxs-lookup"><span data-stu-id="b033c-184">The number of copies to print.</span></span> <span data-ttu-id="b033c-185">Если этот аргумент не задан, печатается одна копия.</span><span class="sxs-lookup"><span data-stu-id="b033c-185">If this argument is omitted, one copy is printed.</span></span></param>
        <param name="Preview"><span data-ttu-id="b033c-186">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="b033c-186">Optional <b>Object</b>.</span></span> <span data-ttu-id="b033c-187"><b>Значение true</b> , если Microsoft Excel вызывает предварительный просмотр перед печатью объекта.</span><span class="sxs-lookup"><span data-stu-id="b033c-187"><b>True</b> to have Microsoft Excel invoke print preview before printing the object.</span></span> <span data-ttu-id="b033c-188"><b>Значение false</b> (или опущено) для немедленной печати объекта.</span><span class="sxs-lookup"><span data-stu-id="b033c-188"><b>False</b> (or omitted) to print the object immediately.</span></span></param>
        <param name="ActivePrinter"><span data-ttu-id="b033c-189">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="b033c-189">Optional <b>Object</b>.</span></span> <span data-ttu-id="b033c-190">Задает имя активного принтера.</span><span class="sxs-lookup"><span data-stu-id="b033c-190">Sets the name of the active printer.</span></span></param>
        <param name="PrintToFile"><span data-ttu-id="b033c-191">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="b033c-191">Optional <b>Object</b>.</span></span> <span data-ttu-id="b033c-192"><b>Значение true</b> для печати в файл.</span><span class="sxs-lookup"><span data-stu-id="b033c-192"><b>True</b> to print to a file.</span></span> <span data-ttu-id="b033c-193">Если <paramref name="PrToFileName" /> параметр не указан, Microsoft Excel предлагает пользователю ввести имя выходного файла.</span><span class="sxs-lookup"><span data-stu-id="b033c-193">If <paramref name="PrToFileName" /> is not specified, Microsoft Excel prompts the user to enter the name of the output file.</span></span></param>
        <param name="Collate"><span data-ttu-id="b033c-194">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="b033c-194">Optional <b>Object</b>.</span></span> <span data-ttu-id="b033c-195"><b>Значение true</b> для разбора по копиям нескольких копий.</span><span class="sxs-lookup"><span data-stu-id="b033c-195"><b>True</b> to collate multiple copies.</span></span></param>
        <param name="PrToFileName"><span data-ttu-id="b033c-196">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="b033c-196">Optional <b>Object</b>.</span></span> <span data-ttu-id="b033c-197">Если <paramref name="PrintToFile" /> задано <b>значение true</b>, этот аргумент указывает имя файла, в который будет выполняться печать.</span><span class="sxs-lookup"><span data-stu-id="b033c-197">If <paramref name="PrintToFile" /> is set to <b>True</b>, this argument specifies the name of the file you want to print to.</span></span></param>
        <summary><span data-ttu-id="b033c-198">Печатает объект.</span><span class="sxs-lookup"><span data-stu-id="b033c-198">Prints the object.</span></span></summary>
        <remarks><para><span data-ttu-id="b033c-199">"Pages" (страницы) <paramref name="From" /> в <paramref name="To" /> описаниях и относится к печатным страницам, а не к общим страницам листа или книги.</span><span class="sxs-lookup"><span data-stu-id="b033c-199">"Pages" in the descriptions of <paramref name="From" /> and <paramref name="To" /> refers to printed pages — not overall pages in the sheet or workbook.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOutEx">
      <MemberSignature Language="C#" Value="public void PrintOutEx (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName, object IgnorePrintAreas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOutEx([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName, [in]object IgnorePrintAreas) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Worksheets.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintOutEx (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object, Optional IgnorePrintAreas As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2361)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
        <Parameter Name="IgnorePrintAreas" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <param name="PrToFileName">To be added.</param>
        <param name="IgnorePrintAreas">To be added.</param>
        <summary><span data-ttu-id="b033c-200">Зарезервировано для внутреннего использования.</span><span class="sxs-lookup"><span data-stu-id="b033c-200">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintPreview">
      <MemberSignature Language="C#" Value="public void PrintPreview (object EnableChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintPreview([in]object EnableChanges) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Worksheets.PrintPreview(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintPreview (Optional EnableChanges As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(281)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EnableChanges" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="EnableChanges"><span data-ttu-id="b033c-201">Позволяет вносить изменения в объект.</span><span class="sxs-lookup"><span data-stu-id="b033c-201">Enables changes to the object.</span></span></param>
        <summary><span data-ttu-id="b033c-202">Показывает предварительный просмотр объекта в том виде, в котором он будет выглядеть при печати.</span><span class="sxs-lookup"><span data-stu-id="b033c-202">Shows a preview of the object as it would look when printed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (object Replace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select([in]object Replace) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Worksheets.Select(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (Optional Replace As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(235)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Replace" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Replace"><span data-ttu-id="b033c-203">Необязательный <b>объект</b> (используется только с листами).</span><span class="sxs-lookup"><span data-stu-id="b033c-203">Optional <b>Object</b> (used only with sheets).</span></span> <span data-ttu-id="b033c-204"><b>Значение true</b> , чтобы заменить текущий выделенный фрагмент на указанный объект.</span><span class="sxs-lookup"><span data-stu-id="b033c-204"><b>True</b> to replace the current selection with the specified object.</span></span> <span data-ttu-id="b033c-205"><b>Значение false</b> , чтобы расширить текущий выделенный фрагмент для включения всех ранее выбранных объектов и указанного объекта.</span><span class="sxs-lookup"><span data-stu-id="b033c-205"><b>False</b> to extend the current selection to include any previously selected objects and the specified object.</span></span></param>
        <summary><span data-ttu-id="b033c-206">Выбирает объект.</span><span class="sxs-lookup"><span data-stu-id="b033c-206">Selects the object.</span></span></summary>
        <remarks><para><span data-ttu-id="b033c-207">Чтобы выбрать ячейку или диапазон ячеек, используйте метод <b>SELECT</b> .</span><span class="sxs-lookup"><span data-stu-id="b033c-207">To select a cell or a range of cells, use the <b>Select</b> method.</span></span> <span data-ttu-id="b033c-208">Чтобы сделать одну ячейку активной ячейкой, используйте <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Activate" /> метод.</span><span class="sxs-lookup"><span data-stu-id="b033c-208">To make a single cell the active cell, use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Activate" /> method.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public object Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Visible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Worksheets.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Visible { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b033c-209">Определяет, является ли объект видимым.</span><span class="sxs-lookup"><span data-stu-id="b033c-209">Determines whether the object is visible.</span></span> <span data-ttu-id="b033c-210"><b>Объект</b>для чтения и записи.</span><span class="sxs-lookup"><span data-stu-id="b033c-210">Read/write <b>Object</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VPageBreaks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.VPageBreaks VPageBreaks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.VPageBreaks VPageBreaks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Worksheets.VPageBreaks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VPageBreaks As VPageBreaks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::VPageBreaks ^ VPageBreaks { Microsoft::Office::Interop::Excel::VPageBreaks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1419)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1419)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.VPageBreaks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b033c-211">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.VPageBreaks" /> коллекцию, представляющую вертикальные разрывы страниц на листе.</span><span class="sxs-lookup"><span data-stu-id="b033c-211">Returns a <see cref="T:Microsoft.Office.Interop.Excel.VPageBreaks" /> collection that represents the vertical page breaks on the sheet.</span></span> <span data-ttu-id="b033c-212">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="b033c-212">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>