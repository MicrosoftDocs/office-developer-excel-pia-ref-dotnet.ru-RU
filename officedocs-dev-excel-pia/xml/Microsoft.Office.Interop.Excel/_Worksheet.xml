<Type Name="_Worksheet" FullName="Microsoft.Office.Interop.Excel._Worksheet">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7f0ab611aa4d579db9ac504ef7ee328ea8f5b52e" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="09/03/2018" />
    <Meta Name="ms.locfileid" Value="20583134" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface _Worksheet" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _Worksheet" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel._Worksheet" />
  <TypeSignature Language="VB.NET" Value="Public Interface _Worksheet" />
  <TypeSignature Language="C++ CLI" Value="public interface class _Worksheet" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208D8-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4288)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="3f68e-101">Это основной интерфейс в компонентном классе COM, необходимые для управляемого кода для взаимодействия с соответствующим COM-объектом.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3f68e-101">This is a primary interface in a COM coclass that is required by managed code for interoperability with the corresponding COM object.</span>
      </span>
      <span data-ttu-id="3f68e-102">Этот основной интерфейс используется только в том случае, если метод, который будет использоваться совместно совпадает с именем событие COM-объектом; в этом случае преобразовывается этот интерфейс для вызова метода и приведены последние интерфейс события для подключения к событию.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3f68e-102">Use this primary interface only when the method you want to use shares the same name as an event of the COM object; in this case, cast to this interface to call the method, and cast to the latest events interface to connect to the event.</span>
      </span>
      <span data-ttu-id="3f68e-103">В противном случае используется интерфейс .NET, который является производным от компонентного класса COM для доступа к методы, свойства и события COM-объектом.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3f68e-103">Otherwise, use the .NET interface that is derived from the COM coclass to access methods, properties, and events of the COM object.</span>
      </span>
      <span data-ttu-id="3f68e-104">Дополнительные сведения о COM-объектом, можно <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3f68e-104">For more information about the COM object, see <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" />.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="_CheckSpelling">
      <MemberSignature Language="C#" Value="public void _CheckSpelling (object CustomDictionary, object IgnoreUppercase, object AlwaysSuggest, object SpellLang, object IgnoreFinalYaa, object SpellScript);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _CheckSpelling([in]object CustomDictionary, [in]object IgnoreUppercase, [in]object AlwaysSuggest, [in]object SpellLang, [in]object IgnoreFinalYaa, [in]object SpellScript) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet._CheckSpelling(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _CheckSpelling (Optional CustomDictionary As Object, Optional IgnoreUppercase As Object, Optional AlwaysSuggest As Object, Optional SpellLang As Object, Optional IgnoreFinalYaa As Object, Optional SpellScript As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1817)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CustomDictionary" Type="System.Object" />
        <Parameter Name="IgnoreUppercase" Type="System.Object" />
        <Parameter Name="AlwaysSuggest" Type="System.Object" />
        <Parameter Name="SpellLang" Type="System.Object" />
        <Parameter Name="IgnoreFinalYaa" Type="System.Object" />
        <Parameter Name="SpellScript" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="CustomDictionary">To be added.</param>
        <param name="IgnoreUppercase">To be added.</param>
        <param name="AlwaysSuggest">To be added.</param>
        <param name="SpellLang">To be added.</param>
        <param name="IgnoreFinalYaa">To be added.</param>
        <param name="SpellScript">To be added.</param>
        <summary>
          <span data-ttu-id="3f68e-105">Зарезервировано для внутреннего использования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-105">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_CodeName">
      <MemberSignature Language="C#" Value="public string _CodeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string _CodeName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet._CodeName" />
      <MemberSignature Language="VB.NET" Value="Public Property _CodeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ _CodeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147418112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147418112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-2147418112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-106">Зарезервировано для внутреннего использования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-106">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_DisplayRightToLeft">
      <MemberSignature Language="C#" Value="public int _DisplayRightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 _DisplayRightToLeft" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet._DisplayRightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Property _DisplayRightToLeft As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int _DisplayRightToLeft { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(648)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(648)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(648)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-107">Зарезервировано для внутреннего использования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-107">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Evaluate">
      <MemberSignature Language="C#" Value="public object _Evaluate (object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _Evaluate([in]object Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet._Evaluate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _Evaluate (Name As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ _Evaluate(System::Object ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-5)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">To be added.</param>
        <summary>
          <span data-ttu-id="3f68e-108">Зарезервировано для внутреннего использования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-108">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_PasteSpecial">
      <MemberSignature Language="C#" Value="public void _PasteSpecial (object Format, object Link, object DisplayAsIcon, object IconFileName, object IconIndex, object IconLabel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _PasteSpecial([in]object Format, [in]object Link, [in]object DisplayAsIcon, [in]object IconFileName, [in]object IconIndex, [in]object IconLabel) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet._PasteSpecial(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _PasteSpecial (Optional Format As Object, Optional Link As Object, Optional DisplayAsIcon As Object, Optional IconFileName As Object, Optional IconIndex As Object, Optional IconLabel As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1027)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Format" Type="System.Object" />
        <Parameter Name="Link" Type="System.Object" />
        <Parameter Name="DisplayAsIcon" Type="System.Object" />
        <Parameter Name="IconFileName" Type="System.Object" />
        <Parameter Name="IconIndex" Type="System.Object" />
        <Parameter Name="IconLabel" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Format">To be added.</param>
        <param name="Link">To be added.</param>
        <param name="DisplayAsIcon">To be added.</param>
        <param name="IconFileName">To be added.</param>
        <param name="IconIndex">To be added.</param>
        <param name="IconLabel">To be added.</param>
        <summary>
          <span data-ttu-id="3f68e-109">Зарезервировано для внутреннего использования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-109">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_PrintOut">
      <MemberSignature Language="C#" Value="public void _PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(905)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(7)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <summary>
          <span data-ttu-id="3f68e-110">Зарезервировано для внутреннего использования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-110">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Protect">
      <MemberSignature Language="C#" Value="public void _Protect (object Password, object DrawingObjects, object Contents, object Scenarios, object UserInterfaceOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _Protect([in]object Password, [in]object DrawingObjects, [in]object Contents, [in]object Scenarios, [in]object UserInterfaceOnly) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet._Protect(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _Protect (Optional Password As Object, Optional DrawingObjects As Object, Optional Contents As Object, Optional Scenarios As Object, Optional UserInterfaceOnly As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(282)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(5)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="DrawingObjects" Type="System.Object" />
        <Parameter Name="Contents" Type="System.Object" />
        <Parameter Name="Scenarios" Type="System.Object" />
        <Parameter Name="UserInterfaceOnly" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password">To be added.</param>
        <param name="DrawingObjects">To be added.</param>
        <param name="Contents">To be added.</param>
        <param name="Scenarios">To be added.</param>
        <param name="UserInterfaceOnly">To be added.</param>
        <summary>
          <span data-ttu-id="3f68e-111">Зарезервировано для внутреннего использования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-111">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_SaveAs">
      <MemberSignature Language="C#" Value="public void _SaveAs (string Filename, object FileFormat, object Password, object WriteResPassword, object ReadOnlyRecommended, object CreateBackup, object AddToMru, object TextCodepage, object TextVisualLayout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _SaveAs([in]string Filename, [in]object FileFormat, [in]object Password, [in]object WriteResPassword, [in]object ReadOnlyRecommended, [in]object CreateBackup, [in]object AddToMru, [in]object TextCodepage, [in]object TextVisualLayout) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet._SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _SaveAs (Filename As String, Optional FileFormat As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional ReadOnlyRecommended As Object, Optional CreateBackup As Object, Optional AddToMru As Object, Optional TextCodepage As Object, Optional TextVisualLayout As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(284)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(9)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="FileFormat" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="ReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="CreateBackup" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
        <Parameter Name="TextCodepage" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="FileFormat">To be added.</param>
        <param name="Password">To be added.</param>
        <param name="WriteResPassword">To be added.</param>
        <param name="ReadOnlyRecommended">To be added.</param>
        <param name="CreateBackup">To be added.</param>
        <param name="AddToMru">To be added.</param>
        <param name="TextCodepage">To be added.</param>
        <param name="TextVisualLayout">To be added.</param>
        <summary>
          <span data-ttu-id="3f68e-112">Зарезервировано для внутреннего использования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-112">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Activate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Activate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Activate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(304)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-113">Делает текущий лист активный лист.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-113">Makes the current sheet the active sheet.</span>
          </span>
          <span data-ttu-id="3f68e-114">Эквивалент, щелкнув ярлычок листа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-114">Equivalent to clicking the sheet's tab.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-115">При использовании без квалификатор объекта, данное свойство возвращает <see cref="T:Microsoft.Office.Interop.Excel.Application" /> объект, представляющий приложение Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-115">When used without an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
          <span data-ttu-id="3f68e-116">Если используется с квалификатором объекта, это свойство возвращает объект <b>Application</b>, который представляет создателя указанного объекта (вы можете задать это свойство с объектом OLE-автоматизации для возврата приложения этого объекта).</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-116">When used with an object qualifier, this property returns an <b>Application</b> object that represents the creator of the specified object (you can use this property with an OLE Automation object to return the application of that object).</span>
          </span>
          <span data-ttu-id="3f68e-117">Только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-117">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Arcs">
      <MemberSignature Language="C#" Value="public object Arcs (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Arcs([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Arcs(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Arcs (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(760)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="3f68e-118">Зарезервировано для внутреннего использования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-118">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFilter">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.AutoFilter AutoFilter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.AutoFilter AutoFilter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.AutoFilter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AutoFilter As AutoFilter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::AutoFilter ^ AutoFilter { Microsoft::Office::Interop::Excel::AutoFilter ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(793)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(793)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.AutoFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-119">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.AutoFilter" /> объекта, если фильтрация включена.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-119">Returns an <see cref="T:Microsoft.Office.Interop.Excel.AutoFilter" /> object if filtering is on.</span>
          </span>
          <span data-ttu-id="3f68e-120">Возвращает <b>значение Nothing</b> , если фильтрация выключена.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-120">Returns <b>Nothing</b> if filtering is off.</span>
          </span>
          <span data-ttu-id="3f68e-121">Только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-121">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="3f68e-122">
            <para>Для создания объекта <b>автофильтра</b> для листа, необходимо включить автофильтра для диапазона на листе либо вручную или с помощью <see cref="M:Microsoft.Office.Interop.Excel.Range.AutoFilter(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlAutoFilterOperator,System.Object,System.Object)" /> метод <see cref="T:Microsoft.Office.Interop.Excel.Range" /> объект.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-122">
              <para>To create an <b>AutoFilter</b> object for a worksheet, you must turn autofiltering on for a range on the worksheet either manually or using the <see cref="M:Microsoft.Office.Interop.Excel.Range.AutoFilter(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlAutoFilterOperator,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFilterMode">
      <MemberSignature Language="C#" Value="public bool AutoFilterMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoFilterMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.AutoFilterMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoFilterMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoFilterMode { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(792)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(792)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(792)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-123">
            <b>Значение true,</b> Если в настоящее время стрелки раскрывающегося списка автофильтра отображаются на листе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-123">
              <b>True</b> if the AutoFilter drop-down arrows are currently displayed on the sheet.</span>
          </span>
          <span data-ttu-id="3f68e-124">Это свойство не зависит от <see cref="P:Microsoft.Office.Interop.Excel._Worksheet.FilterMode" /> свойство.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-124">This property is independent of the <see cref="P:Microsoft.Office.Interop.Excel._Worksheet.FilterMode" /> property.</span>
          </span>
          <span data-ttu-id="3f68e-125">Для чтения и записи, <b>Boolean</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-125">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="3f68e-126">
            <para>Данное свойство возвращает <b>значение True</b> , если стрелки раскрывающегося списка в данный момент отображаются. Это свойство можно задать значение <b>False</b> для удаления стрелки, но не может быть задано значение <b>True</b>. Использование <see cref="M:Microsoft.Office.Interop.Excel.Range.AutoFilter(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlAutoFilterOperator,System.Object,System.Object)" /> метод для фильтрации списка и отображения стрелки раскрывающегося списка.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-126">
              <para>This property returns <b>True</b> if the drop-down arrows are currently displayed. You can set this property to <b>False</b> to remove the arrows, but you cannot set it to <b>True</b>. Use the <see cref="M:Microsoft.Office.Interop.Excel.Range.AutoFilter(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlAutoFilterOperator,System.Object,System.Object)" /> method to filter a list and display the drop-down arrows.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Buttons">
      <MemberSignature Language="C#" Value="public object Buttons (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Buttons([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Buttons(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Buttons (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(557)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="3f68e-127">Зарезервировано для внутреннего использования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-127">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Calculate">
      <MemberSignature Language="C#" Value="public void Calculate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Calculate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Calculate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Calculate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Calculate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(279)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-128">Расчет всех открытых книг, определенного рабочего листа в книге или указанный диапазон ячеек на листе, как показано в следующей таблице.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-128">Calculates all open workbooks, a specific worksheet in a workbook, or a specified range of cells on a worksheet, as shown in the following table.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="3f68e-129">
            <list type="table">
              <item>
                <term>Все открытые книги</term>
                <description>Application.Calculate</description>
              </item>
              <item>
                <term>конкретный лист</term>
                <description>Worksheets(1). Вычисление</description>
              </item>
              <item>
                <term>указанный диапазон</term>
                <description>Worksheets(1). Rows(2). Вычисление</description>
              </item>
            </list>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-129">
              <list type="table">
                <item>
                  <term>All open workbooks</term>
                  <description>Application.Calculate</description>
                </item>
                <item>
                  <term>A specific worksheet</term>
                  <description>Worksheets(1).Calculate</description>
                </item>
                <item>
                  <term>A specified range</term>
                  <description>Worksheets(1).Rows(2).Calculate</description>
                </item>
              </list>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cells">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Cells { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Cells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Cells" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cells As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Cells { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(238)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(238)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-130">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Range" /> объект, представляющий все ячейки на листе (не только те ячейки, которые в настоящее время используются).</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-130">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the cells on the worksheet (not just the cells that are currently in use).</span>
          </span>
          <span data-ttu-id="3f68e-131">Только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-131">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="3f68e-132">
            <para>Так как <see cref="P:Microsoft.Office.Interop.Excel.Worksheets.Item(System.Object)" /> свойство является свойством по умолчанию для объекта <b>Range</b> , можно указать индекс строки и столбца сразу же после ключевого слова <b>ячеек</b> . Для получения дополнительных сведений см. свойство <b>Item</b> .</para>
            <para>С помощью этого свойства без квалификатор объекта возвращает объект <b>Range</b> , представляющий все ячейки на активном листе.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-132">
              <para>Because the <see cref="P:Microsoft.Office.Interop.Excel.Worksheets.Item(System.Object)" /> property is the default property for the <b>Range</b> object, you can specify the row and column index immediately after the <b>Cells</b> keyword. For more information, see the <b>Item</b> property.</para>
              <para>Using this property without an object qualifier returns a <b>Range</b> object that represents all the cells on the active worksheet.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartObjects">
      <MemberSignature Language="C#" Value="public object ChartObjects (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ChartObjects([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ChartObjects(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChartObjects (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1060)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="3f68e-133">Необязательный <b>Variant</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-133">Optional <b>Variant</b>.</span>
          </span>
          <span data-ttu-id="3f68e-134">Имя или номер диаграммы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-134">The name or number of the chart.</span>
          </span>
          <span data-ttu-id="3f68e-135">Этот аргумент может быть массив, чтобы указать несколько диаграмм.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-135">This argument can be an array to specify more than one chart.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f68e-136">Возвращает объект, представляющий либо одного внедренную диаграмму ( <see cref="T:Microsoft.Office.Interop.Excel.ChartObject" /> объект) или коллекцию всех внедренных диаграмм ( <see cref="T:Microsoft.Office.Interop.Excel.ChartObjects" /> объекта) на листе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-136">Returns an object that represents either a single embedded chart (a <see cref="T:Microsoft.Office.Interop.Excel.ChartObject" /> object) or a collection of all the embedded charts (a <see cref="T:Microsoft.Office.Interop.Excel.ChartObjects" /> object) on the sheet.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="3f68e-137">
            <para>Этот метод не соответствует <see cref="T:Microsoft.Office.Interop.Excel.Charts" /> свойство. Этот метод возвращает внедренные диаграммы; Свойство <b>диаграммы</b> возвращает листы диаграмм. Использование <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> свойство для возвращения <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> объект для внедренную диаграмму.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-137">
              <para>This method isn't equivalent to the <see cref="T:Microsoft.Office.Interop.Excel.Charts" /> property. This method returns embedded charts; the <b>Charts</b> property returns chart sheets. Use the <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> property to return the <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object for an embedded chart.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckBoxes">
      <MemberSignature Language="C#" Value="public object CheckBoxes (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CheckBoxes([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.CheckBoxes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckBoxes (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(824)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="3f68e-138">Зарезервировано для внутреннего использования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-138">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSpelling">
      <MemberSignature Language="C#" Value="public void CheckSpelling (object CustomDictionary, object IgnoreUppercase, object AlwaysSuggest, object SpellLang);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckSpelling([in]object CustomDictionary, [in]object IgnoreUppercase, [in]object AlwaysSuggest, [in]object SpellLang) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.CheckSpelling(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckSpelling (Optional CustomDictionary As Object, Optional IgnoreUppercase As Object, Optional AlwaysSuggest As Object, Optional SpellLang As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(505)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CustomDictionary" Type="System.Object" />
        <Parameter Name="IgnoreUppercase" Type="System.Object" />
        <Parameter Name="AlwaysSuggest" Type="System.Object" />
        <Parameter Name="SpellLang" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="CustomDictionary">
          <span data-ttu-id="3f68e-139">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-139">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-140">Строка, указывающая имя файла пользовательского словаря, который необходимо проверить, если слово не найдено в основном словаре.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-140">A string that indicates the file name of the custom dictionary to be examined if the word isn't found in the main dictionary.</span>
          </span>
          <span data-ttu-id="3f68e-141">Если этот аргумент задан, используется в настоящее время указанного словаря.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-141">If this argument is omitted, the currently specified dictionary is used.</span>
          </span>
        </param>
        <param name="IgnoreUppercase">
          <span data-ttu-id="3f68e-142">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-142">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-143">
            <b>Значение true,</b> чтобы пропускать слова, которые являются прописными буквами Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-143">
              <b>True</b> to have Microsoft Excel ignore words that are all uppercase.</span>
          </span>
          <span data-ttu-id="3f68e-144">
            <b>Значение false</b> для Microsoft Excel слов, которые являются прописными буквами.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-144">
              <b>False</b> to have Microsoft Excel check words that are all uppercase.</span>
          </span>
          <span data-ttu-id="3f68e-145">Если этот аргумент указан, будет использоваться текущее значение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-145">If this argument is omitted, the current setting will be used.</span>
          </span>
        </param>
        <param name="AlwaysSuggest">
          <span data-ttu-id="3f68e-146">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-146">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-147">
            <b>Значение true,</b> чтобы отобразить список предлагаемых альтернативных вариантов при обнаружении неправильных правописания Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-147">
              <b>True</b> to have Microsoft Excel display a list of suggested alternate spellings when an incorrect spelling is found.</span>
          </span>
          <span data-ttu-id="3f68e-148">, <b>Значение false,</b> чтобы ожидать ввода правописания Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-148">
              <b>False</b> to have Microsoft Excel wait for you to input the correct spelling.</span>
          </span>
          <span data-ttu-id="3f68e-149">Если этот аргумент указан, будет использоваться текущее значение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-149">If this argument is omitted, the current setting will be used.</span>
          </span>
        </param>
        <param name="SpellLang">
          <span data-ttu-id="3f68e-150">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-150">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-151">Язык словаря.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-151">The language of the dictionary being used.</span>
          </span>
          <span data-ttu-id="3f68e-152">Может иметь одно из значений <b>MsoLanguageID</b> , используемые <see cref="P:Microsoft.Office.Core.LanguageSettings.LanguageID(Microsoft.Office.Core.MsoAppLanguageID)" /> свойство.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-152">Can be one of the <b>MsoLanguageID</b> values used by the <see cref="P:Microsoft.Office.Core.LanguageSettings.LanguageID(Microsoft.Office.Core.MsoAppLanguageID)" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f68e-153">Проверка орфографии в объекте.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-153">Checks the spelling of an object.</span>
          </span>
          <span data-ttu-id="3f68e-154">Эта форма не имеет возвращаемого значения; Microsoft Excel отображает диалоговое окно проверки орфографии.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-154">This form has no return value; Microsoft Excel displays the Spelling dialog box.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="3f68e-155">
            <para>Этот метод используется для проверки заголовков, нижних колонтитулов и объекты на листе.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-155">
              <para>Use this method to check headers, footers, and objects on a worksheet.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CircleInvalid">
      <MemberSignature Language="C#" Value="public void CircleInvalid ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CircleInvalid() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.CircleInvalid" />
      <MemberSignature Language="VB.NET" Value="Public Sub CircleInvalid ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CircleInvalid();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1437)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-156">Недопустимые записи круга в рабочем листе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-156">Circles invalid entries on the worksheet.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CircularReference">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range CircularReference { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range CircularReference" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.CircularReference" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CircularReference As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ CircularReference { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1069)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1069)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-157">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Range" /> объект, представляющий диапазон, который содержит первую циклическую ссылку на листе или возвращает <b>значение Nothing</b> , если нет циклические ссылки на листе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-157">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the range containing the first circular reference on the sheet, or returns <b>Nothing</b> if there's no circular reference on the sheet.</span>
          </span>
          <span data-ttu-id="3f68e-158">Циклические ссылки необходимо удалить перед продолжением вычислений.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-158">The circular reference must be removed before calculation can proceed.</span>
          </span>
          <span data-ttu-id="3f68e-159">Только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-159">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearArrows">
      <MemberSignature Language="C#" Value="public void ClearArrows ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearArrows() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ClearArrows" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearArrows ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearArrows();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(970)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-160">Очищает стрелки с листа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-160">Clears the tracer arrows from the worksheet.</span>
          </span>
          <span data-ttu-id="3f68e-161">Стрелки трассировки добавляются с помощью функции аудита.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-161">Tracer arrows are added by using the auditing feature.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearCircles">
      <MemberSignature Language="C#" Value="public void ClearCircles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearCircles() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ClearCircles" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearCircles ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearCircles();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1436)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-162">Очищает круга из недопустимые записи в рабочем листе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-162">Clears circles from invalid entries on the worksheet.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="3f68e-163">
            <para>Использования <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.CircleInvalid" /> метод круг ячеек, содержащих недопустимые данные.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-163">
              <para>Use the <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.CircleInvalid" /> method to circle cells that contain invalid data.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeName">
      <MemberSignature Language="C#" Value="public string CodeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CodeName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.CodeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CodeName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1373)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1373)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-164">Возвращает имя кода для объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-164">Returns the code name for the object.</span>
          </span>
          <span data-ttu-id="3f68e-165">Только для чтения, <b>String</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-165">Read-only <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="3f68e-166">
            <para>Значение, используемое в ячейке справа от <b>(имя)</b> в окне Свойства — это имя кода выбранного объекта. Во время разработки можно изменить имя кода объекта, изменив это значение. Программное изменение этого свойства во время выполнения.</para>
            <para>Имя кода для объекта можно использовать вместо выражение, возвращающее объект.</para>
            <para>Возможна имя должно отличаться от имени кода. При создании листа, имя листа и с кодовым именем совпадают, но изменение имя листа не влияет на имя кода и изменение имени кода (с помощью свойства окно в редакторе Visual Basic) не влияет на имя листа.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-166">
              <para>The value that you see in the cell to the right of <b>(Name)</b> in the Properties window is the code name of the selected object. At design time, you can change the code name of an object by changing this value. You cannot programmatically change this property at run time.</para>
              <para>The code name for an object can be used in place of an expression that returns the object.</para>
              <para>It’s possible for the sheet name to be different from the code name. When you create a sheet, the sheet name and code name are the same, but changing the sheet name doesn’t change the code name, and changing the code name (using the Properties window in the Visual Basic Editor) doesn’t change the sheet name.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Columns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Columns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Columns As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Columns { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(241)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(241)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-167">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Range" /> объект, представляющий все столбцы на указанный лист.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-167">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the columns on the specified worksheet.</span>
          </span>
          <span data-ttu-id="3f68e-168">Только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-168">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Comments">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Comments Comments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Comments Comments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Comments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Comments As Comments" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Comments ^ Comments { Microsoft::Office::Interop::Excel::Comments ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(575)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(575)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Comments</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-169">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Comments" /> коллекции, представляющей все комментарии указанный лист.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-169">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Comments" /> collection that represents all the comments for the specified worksheet.</span>
          </span>
          <span data-ttu-id="3f68e-170">Только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-170">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConsolidationFunction">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlConsolidationFunction ConsolidationFunction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlConsolidationFunction ConsolidationFunction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ConsolidationFunction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConsolidationFunction As XlConsolidationFunction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlConsolidationFunction ConsolidationFunction { Microsoft::Office::Interop::Excel::XlConsolidationFunction get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(789)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(789)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlConsolidationFunction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-171">Возвращает код функции для текущей консолидации.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-171">Returns the function code used for the current consolidation.</span>
          </span>
          <span data-ttu-id="3f68e-172">Может иметь одно из <see cref="T:Microsoft.Office.Interop.Excel.XlConsolidationFunction" /> константы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-172">Can be one of the <see cref="T:Microsoft.Office.Interop.Excel.XlConsolidationFunction" /> constants.</span>
          </span>
          <span data-ttu-id="3f68e-173">Только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-173">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConsolidationOptions">
      <MemberSignature Language="C#" Value="public object ConsolidationOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ConsolidationOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ConsolidationOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConsolidationOptions As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ConsolidationOptions { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(790)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(790)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-174">Возвращает массив трех элементов из вариантов консолидации, как показано в следующей таблице.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-174">Returns a three-element array of consolidation options, as shown in the following table.</span>
          </span>
          <span data-ttu-id="3f68e-175">Если элемент имеет <b>значение True</b>, этот параметр имеет значение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-175">If the element is <b>True</b>, that option is set.</span>
          </span>
          <span data-ttu-id="3f68e-176">Только для чтения, <b>объект</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-176">Read-only <b>Object</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="3f68e-177">
            <list type="table">
              <item>
                <term>1</term>
                <description>Используйте меток в верхней строке.</description>
              </item>
              <item>
                <term>2</term>
                <description>Использование меток в левом столбце.</description>
              </item>
              <item>
                <term>3</term>
                <description>Создание ссылки на источник данных.</description>
              </item>
            </list>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-177">
              <list type="table">
                <item>
                  <term>1</term>
                  <description>Use labels in top row.</description>
                </item>
                <item>
                  <term>2</term>
                  <description>Use labels in left column.</description>
                </item>
                <item>
                  <term>3</term>
                  <description>Create links to source data.</description>
                </item>
              </list>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConsolidationSources">
      <MemberSignature Language="C#" Value="public object ConsolidationSources { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ConsolidationSources" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ConsolidationSources" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConsolidationSources As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ConsolidationSources { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(791)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(791)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-178">Возвращает массив строковых значений, содержащих имена листов источника для текущей консолидации рабочего листа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-178">Returns an array of string values that name the source sheets for the worksheet's current consolidation.</span>
          </span>
          <span data-ttu-id="3f68e-179">Возвращает <b>пустой</b> , если нет Консолидация на листе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-179">Returns <b>Empty</b> if there's no consolidation on the sheet.</span>
          </span>
          <span data-ttu-id="3f68e-180">Только для чтения, <b>объект</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-180">Read-only <b>Object</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public void Copy (object Before, object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy([in]object Before, [in]object After) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Copy(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Copy (Optional Before As Object, Optional After As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(551)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before">
          <span data-ttu-id="3f68e-181">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-181">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-182">Лист, перед которым будет размещаться копируемый лист.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-182">The sheet before which the copied sheet will be placed.</span>
          </span>
          <span data-ttu-id="3f68e-183">Не удается задать <paramref name="Before" /> при указании <paramref name="After" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-183">You cannot specify <paramref name="Before" /> if you specify <paramref name="After" />.</span>
          </span>
        </param>
        <param name="After">
          <span data-ttu-id="3f68e-184">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-184">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-185">Лист, после которого будет размещаться копируемый лист.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-185">The sheet after which the copied sheet will be placed.</span>
          </span>
          <span data-ttu-id="3f68e-186">Не удается задать <paramref name="After" /> при указании <paramref name="Before" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-186">You cannot specify <paramref name="After" /> if you specify <paramref name="Before" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f68e-187">Копирование таблицы в другое место в книге.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-187">Copies the sheet to another location in the workbook.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="3f68e-188">
            <para>Если не указать либо <paramref name="Before" /> или <paramref name="After" />, Microsoft Excel создает новую книгу, содержащую копируемый лист.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-188">
              <para>If you don't specify either <paramref name="Before" /> or <paramref name="After" />, Microsoft Excel creates a new workbook that contains the copied sheet.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-189">Возвращает константу в <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> перечисление, указывающее, приложения, в котором был создан этот объект.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-189">Returns a constant in the <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> enumeration that indicates the application in which this object was created.</span>
          </span>
          <span data-ttu-id="3f68e-190">Если объект был создан в Microsoft Excel, данное свойство возвращает строку XCEL, что эквивалентно шестнадцатеричный номер 5843454C.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-190">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span>
          </span>
          <span data-ttu-id="3f68e-191">Только для чтения <b>xlCreatorCode</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-191">Read-only <b>xlCreatorCode</b>.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />
        </value>
        <remarks>
          <span data-ttu-id="3f68e-192">Свойство <para><b>создателя</b> предназначено для использования в Microsoft Excel для Macintosh, где каждое приложение имеет код создателя четырех символов. Например, Microsoft Excel содержит код создателя XCEL.</para><para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-192">
              <para>The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code. For example, Microsoft Excel has the creator code XCEL.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomProperties">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CustomProperties CustomProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.CustomProperties CustomProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.CustomProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomProperties As CustomProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::CustomProperties ^ CustomProperties { Microsoft::Office::Interop::Excel::CustomProperties ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2030)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2030)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CustomProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-193">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.CustomProperties" /> объект, представляющий идентификатор сведения, связанные с рабочим листом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-193">Returns a <see cref="T:Microsoft.Office.Interop.Excel.CustomProperties" /> object representing the identifier information associated with a worksheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="3f68e-194">
            <para>Для свойства <b>настраиваемые свойства</b> , сведения о идентификатор для листа может представлять метаданных XML.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-194">
              <para>For the <b>CustomProperties</b> property, identifier information for a worksheet can represent metadata for XML.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-195">Удаляет объект.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-195">Deletes the object.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="3f68e-196">При удалении <para><see cref="T:Microsoft.Office.Interop.Excel.Worksheet" />, этот метод отображает диалоговое окно с запросом подтверждения удаления. Это диалоговое окно отображается по умолчанию. Метод <b>Delete</b> возвращает <b>логическое</b> значение, которое присвоено <b>значение False</b> , если пользователь нажатия кнопки "Отмена" в диалоговом окне или <b>значение True,</b> Если пользователь выбрал удаление.</para><para></para></span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-196">
              <para>When you delete a <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" />, this method displays a dialog box that prompts the user to confirm the deletion. This dialog box is displayed by default. The <b>Delete</b> method returns a <b>Boolean</b> value that is <b>False</b> if the user clicked Cancel on the dialog box or <b>True</b> if the user clicked Delete.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayAutomaticPageBreaks">
      <MemberSignature Language="C#" Value="public bool DisplayAutomaticPageBreaks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayAutomaticPageBreaks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.DisplayAutomaticPageBreaks" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayAutomaticPageBreaks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayAutomaticPageBreaks { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(643)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(643)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(643)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-197">Зарезервировано для внутреннего использования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-197">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayPageBreaks">
      <MemberSignature Language="C#" Value="public bool DisplayPageBreaks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayPageBreaks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.DisplayPageBreaks" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayPageBreaks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayPageBreaks { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1435)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1435)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1435)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-198">
            <b>Значение true,</b> Если отображать разрывов страниц (Автоматическая и ручная) на указанный лист.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-198">
              <b>True</b> if page breaks (both automatic and manual) on the specified worksheet are displayed.</span>
          </span>
          <span data-ttu-id="3f68e-199">Для чтения и записи, <b>Boolean</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-199">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="3f68e-200">
            <para>Нельзя настраивать данное свойство, если у вас нет установленного принтера.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-200">
              <para>You can't set this property if you don't have a printer installed.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayRightToLeft">
      <MemberSignature Language="C#" Value="public bool DisplayRightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayRightToLeft" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.DisplayRightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayRightToLeft As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayRightToLeft { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1774)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1774)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1774)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-201">
            <b>Значение true,</b> Если в указанном окне, лист или <b>ListObject</b> отображается справа налево, а не слева направо.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-201">
              <b>True</b> if the specified window, worksheet, or <b>ListObject</b> is displayed from right to left instead of from left to right.</span>
          </span>
          <span data-ttu-id="3f68e-202">
            <b>Значение false,</b> Если объект отображается слева направо.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-202">
              <b>False</b> if the object is displayed from left to right.</span>
          </span>
          <span data-ttu-id="3f68e-203">Только для чтения, <b>Boolean</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-203">Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawingObjects">
      <MemberSignature Language="C#" Value="public object DrawingObjects (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DrawingObjects([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.DrawingObjects(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DrawingObjects (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(88)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="3f68e-204">Зарезервировано для внутреннего использования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-204">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Drawings">
      <MemberSignature Language="C#" Value="public object Drawings (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Drawings([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Drawings(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Drawings (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="3f68e-205">Зарезервировано для внутреннего использования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-205">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DropDowns">
      <MemberSignature Language="C#" Value="public object DropDowns (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DropDowns([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.DropDowns(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DropDowns (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(836)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="3f68e-206">Зарезервировано для внутреннего использования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-206">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableAutoFilter">
      <MemberSignature Language="C#" Value="public bool EnableAutoFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableAutoFilter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.EnableAutoFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableAutoFilter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableAutoFilter { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1156)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1156)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1156)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-207">
            <b>Значение true,</b> Если стрелки автофильтра включены при использовании защиты только пользовательского интерфейса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-207">
              <b>True</b> if AutoFilter arrows are enabled when user-interface-only protection is turned on.</span>
          </span>
          <span data-ttu-id="3f68e-208">Для чтения и записи, <b>Boolean</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-208">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="3f68e-209">
            <para>Это свойство применяется для каждого листа и не сохраняется с листом или сеансом.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-209">
              <para>This property applies to each worksheet and isn't saved with the worksheet or session.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableCalculation">
      <MemberSignature Language="C#" Value="public bool EnableCalculation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableCalculation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.EnableCalculation" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableCalculation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableCalculation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1424)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1424)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1424)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-210">
            <b>Значение true,</b> Если Microsoft Excel будут автоматически перерассчитаны рабочего листа при необходимости.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-210">
              <b>True</b> if Microsoft Excel automatically recalculates the worksheet when necessary.</span>
          </span>
          <span data-ttu-id="3f68e-211">
            <b>Значение false,</b> Если Excel не пересчитывать лист.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-211">
              <b>False</b> if Excel doesn't recalculate the sheet.</span>
          </span>
          <span data-ttu-id="3f68e-212">Для чтения и записи, <b>Boolean</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-212">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="3f68e-213">
            <para>, Если значение этого свойства имеет <b>значение False</b>, не могут запрашивать пересчета. При изменении значения с <b>False</b> на <b>True</b>лист пересчитывается.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-213">
              <para>When the value of this property is <b>False</b>, you cannot request a recalculation. When you change the value from <b>False</b> to <b>True</b>, Excel recalculates the worksheet.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableFormatConditionsCalculation">
      <MemberSignature Language="C#" Value="public bool EnableFormatConditionsCalculation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableFormatConditionsCalculation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.EnableFormatConditionsCalculation" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableFormatConditionsCalculation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableFormatConditionsCalculation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2511)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2511)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2511)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-214">Возвращает или задает в случае условные форматы будут автоматически по мере необходимости.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-214">Returns or sets if conditional formats will occur automatically as needed.</span>
          </span>
          <span data-ttu-id="3f68e-215">Для чтения и записи, <b>Boolean</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-215">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f68e-216">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-216">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="3f68e-217">
            <para>Если параметр имеет значение <b>True</b> (по умолчанию), ознакомительная версия условные форматы происходит автоматически по мере необходимости.  Если задано значение <b>False</b>, условные форматы не будет повторно вычисляется.  Все ранее примененное условное форматирование будет отображаться, но он не будет как значения ячейки или <see cref="P:Microsoft.Office.Interop.Excel.FormatCondition.AppliesTo" /> изменены диапазонов.  </para>
            <para>Назначения этот флаг, чтобы разрешить разработчикам полностью настроить правило перед его оценкой.  Это особенно полезна при применении условие через большой диапазон как производительности может быть медленным, в таких случаях.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-217">
              <para>When set to <b>True</b> (default), evaluation of conditional formats will occur automatically as needed.  When set to <b>False</b>, conditional formats will not be re-evaluated.  Any previously applied conditional formatting will still be visible, but it will not update as cell values or <see cref="P:Microsoft.Office.Interop.Excel.FormatCondition.AppliesTo" /> ranges are changed.  </para>
              <para>The purpose of this flag is to allow programmers to configure a rule completely before evaluating it.  This is particularly useful when condition is applied over a large range as performance can be slow in these cases.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableOutlining">
      <MemberSignature Language="C#" Value="public bool EnableOutlining { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableOutlining" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.EnableOutlining" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableOutlining As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableOutlining { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1157)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1157)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1157)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-218">
            <b>Значение true,</b> Если символы структуры отображаются при использовании защиты только пользовательского интерфейса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-218">
              <b>True</b> if outlining symbols are enabled when user-interface-only protection is turned on.</span>
          </span>
          <span data-ttu-id="3f68e-219">Для чтения и записи, <b>Boolean</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-219">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="3f68e-220">
            <para>Это свойство применяется для каждого листа и не сохраняется с листом или сеансом.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-220">
              <para>This property applies to each worksheet and isn't saved with the worksheet or session.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePivotTable">
      <MemberSignature Language="C#" Value="public bool EnablePivotTable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePivotTable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.EnablePivotTable" />
      <MemberSignature Language="VB.NET" Value="Public Property EnablePivotTable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnablePivotTable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1158)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1158)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1158)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-221">
            <b>Значение true,</b> Если элементы управления сводной таблицы и действия включены при использовании защиты только пользовательского интерфейса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-221">
              <b>True</b> if PivotTable controls and actions are enabled when user-interface-only protection is turned on.</span>
          </span>
          <span data-ttu-id="3f68e-222">Для чтения и записи, <b>Boolean</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-222">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="3f68e-223">
            <para>Это свойство применяется для каждого листа и не сохраняется с листом или сеансом.</para>
            <para>Должен быть достаточное количество ниже разблокированными ячеек, а в правой части отчета сводной таблицы для Microsoft Excel для пересчета и отображения отчета сводной таблицы.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-223">
              <para>This property applies to each worksheet and isn't saved with the worksheet or session.</para>
              <para>There must be a sufficient number of unlocked cells below and to the right of the PivotTable report for Microsoft Excel to recalculate and display the PivotTable report.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableSelection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlEnableSelection EnableSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlEnableSelection EnableSelection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.EnableSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableSelection As XlEnableSelection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlEnableSelection EnableSelection { Microsoft::Office::Interop::Excel::XlEnableSelection get(); void set(Microsoft::Office::Interop::Excel::XlEnableSelection value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1425)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1425)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1425)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlEnableSelection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-224">Возвращает или задает, что можно выбрать на листе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-224">Returns or sets what can be selected on the sheet.</span>
          </span>
          <span data-ttu-id="3f68e-225">Чтение и запись <see cref="T:Microsoft.Office.Interop.Excel.XlEnableSelection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-225">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlEnableSelection" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="3f68e-226">
            <para>Это свойство действует только в том случае, когда лист защищен: <b>xlNoSelection</b> отключает все параметры, выбранные на листе, <b>xlUnlockedCells</b> разрешает только те ячейки, для свойства <b>Locked</b> имеет <b>значение False</b> для выбора и <b> xlNoRestrictions</b> позволяет выбрать любую ячейку.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-226">
              <para>This property takes effect only when the worksheet is protected: <b>xlNoSelection</b> prevents any selection on the sheet, <b>xlUnlockedCells</b> allows only those cells whose <b>Locked</b> property is <b>False</b> to be selected, and <b>xlNoRestrictions</b> allows any cell to be selected.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public object Evaluate (object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Evaluate([in]object Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Evaluate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Evaluate (Name As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Evaluate(System::Object ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="3f68e-227">
            <b>Строковое значение.</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-227">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="3f68e-228">Имя объекта, используя соглашение об именовании Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-228">The name of the object, using the naming convention of Microsoft Excel.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f68e-229">Преобразуется в Microsoft Excel имя объекта или значение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-229">Converts a Microsoft Excel name to an object or a value.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="3f68e-230">
            <para>С помощью этого метода можно использовать следующие типы имен в Microsoft Excel:</para>
            <list type="bullet">
              <item>
                <description>Определенные имена. Можно указать любое имя.</description>
              </item>
              <item>
                <description>Внешние ссылки. Вы можете использовать! оператор, который должен ссылаться на таблицу, определенные в другой книге.</description>
              </item>
            </list>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-230">
              <para>The following types of names in Microsoft Excel can be used with this method:</para>
              <list type="bullet">
                <item>
                  <description>Defined names. You can specify any name.</description>
                </item>
                <item>
                  <description>External references. You can use the ! operator to refer to a worksheet defined in another workbook.</description>
                </item>
              </list>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportAsFixedFormat">
      <MemberSignature Language="C#" Value="public void ExportAsFixedFormat (Microsoft.Office.Interop.Excel.XlFixedFormatType Type, object Filename, object Quality, object IncludeDocProperties, object IgnorePrintAreas, object From, object To, object OpenAfterPublish, object FixedFormatExtClassPtr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportAsFixedFormat([in]valuetype Microsoft.Office.Interop.Excel.XlFixedFormatType Type, [in]object Filename, [in]object Quality, [in]object IncludeDocProperties, [in]object IgnorePrintAreas, [in]object From, [in]object To, [in]object OpenAfterPublish, [in]object FixedFormatExtClassPtr) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExportAsFixedFormat (Type As XlFixedFormatType, Optional Filename As Object, Optional Quality As Object, Optional IncludeDocProperties As Object, Optional IgnorePrintAreas As Object, Optional From As Object, Optional To As Object, Optional OpenAfterPublish As Object, Optional FixedFormatExtClassPtr As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2493)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlFixedFormatType" />
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="Quality" Type="System.Object" />
        <Parameter Name="IncludeDocProperties" Type="System.Object" />
        <Parameter Name="IgnorePrintAreas" Type="System.Object" />
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="OpenAfterPublish" Type="System.Object" />
        <Parameter Name="FixedFormatExtClassPtr" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">
          <span data-ttu-id="3f68e-231">Тип формата файла для экспорта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-231">The type of file format to export to.</span>
          </span>
        </param>
        <param name="Filename">
          <span data-ttu-id="3f68e-232">Имя файла для сохранения файла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-232">The file name of the file to be saved.</span>
          </span>
          <span data-ttu-id="3f68e-233">Можно включить полный путь или short_Excel2007 сохраняет файл в текущей папке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-233">You can include a full path, or short_Excel2007 saves the file in the current folder.</span>
          </span>
        </param>
        <param name="Quality">
          <span data-ttu-id="3f68e-234">Необязательные <see cref="T:Microsoft.Office.Interop.Excel.XlFixedFormatQuality" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-234">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlFixedFormatQuality" />.</span>
          </span>
          <span data-ttu-id="3f68e-235">Задает качество публикуемого файла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-235">Specifies the quality of the published file.</span>
          </span>
        </param>
        <param name="IncludeDocProperties">
          <span data-ttu-id="3f68e-236">
            <b>Значение true,</b> Чтобы включить свойства документа; в противном случае — <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-236">
              <b>True</b> to include the document properties; otherwise <b>False</b>.</span>
          </span>
        </param>
        <param name="IgnorePrintAreas">
          <span data-ttu-id="3f68e-237">
            <b>Значение true,</b> следует ли игнорировать области печати, установленные при публикации; в противном случае — <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-237">
              <b>True</b> to ignore any print areas set when publishing; otherwise <b>False</b>.</span>
          </span>
        </param>
        <param name="From">
          <span data-ttu-id="3f68e-238">Номер страницы, с которого следует начинать публикации.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-238">The number of the page at which to start publishing.</span>
          </span>
          <span data-ttu-id="3f68e-239">Если этот аргумент задан, публикация начинается с начала.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-239">If this argument is omitted, publishing starts at the beginning.</span>
          </span>
        </param>
        <param name="To">
          <span data-ttu-id="3f68e-240">Номер последней страницы для публикации.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-240">The number of the last page to publish.</span>
          </span>
          <span data-ttu-id="3f68e-241">Если этот аргумент задан, публикация заканчивается на последней странице.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-241">If this argument is omitted, publishing ends with the last page.</span>
          </span>
        </param>
        <param name="OpenAfterPublish">
          <span data-ttu-id="3f68e-242">
            <b>Значение true</b> для отображения файла в средстве просмотра после его публикации; в противном случае — <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-242">
              <b>True</b> to display the file in the viewer after it is published; otherwise <b>False</b>.</span>
          </span>
        </param>
        <param name="FixedFormatExtClassPtr">
          <span data-ttu-id="3f68e-243">Указатель на класс <b>FixedFormatExt</b> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-243">Pointer to the <b>FixedFormatExt</b> class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f68e-244">Экспорт в файл указанного формата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-244">Exports to a file of the specified format.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="3f68e-245">
            <para>Этот метод также поддерживает инициализацию надстройки для экспорта файла в файл фиксированного формата. Например Excel выполнит преобразование формата файла, если имеются преобразователи. Преобразование обычно запущенных пользователем.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-245">
              <para>This method also supports initializing an add-in to export a file to a fixed-format file. For example, Excel will perform file format conversion if the converters are  present. The conversion is usually initiated by the user.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterMode">
      <MemberSignature Language="C#" Value="public bool FilterMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FilterMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.FilterMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FilterMode { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(800)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(800)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-246">
            <b>Значение true,</b> Если лист находится в режиме фильтра.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-246">
              <b>True</b> if the worksheet is in filter mode.</span>
          </span>
          <span data-ttu-id="3f68e-247">Только для чтения, <b>Boolean</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-247">Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="3f68e-248">
            <para>Это свойство имеет <b>значение True</b> , если таблица содержит фильтрованный список, в котором есть скрытые строки.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-248">
              <para>This property is <b>True</b> if the worksheet contains a filtered list in which there are hidden rows.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBoxes">
      <MemberSignature Language="C#" Value="public object GroupBoxes (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GroupBoxes([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.GroupBoxes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GroupBoxes (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(834)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="3f68e-249">Зарезервировано для внутреннего использования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-249">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupObjects">
      <MemberSignature Language="C#" Value="public object GroupObjects (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GroupObjects([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.GroupObjects(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GroupObjects (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1113)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="3f68e-250">Зарезервировано для внутреннего использования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-250">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HPageBreaks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.HPageBreaks HPageBreaks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.HPageBreaks HPageBreaks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.HPageBreaks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HPageBreaks As HPageBreaks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::HPageBreaks ^ HPageBreaks { Microsoft::Office::Interop::Excel::HPageBreaks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1418)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1418)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.HPageBreaks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-251">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.HPageBreaks" /> разрывов коллекции, представляющей горизонтальной страницы на листе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-251">Returns an <see cref="T:Microsoft.Office.Interop.Excel.HPageBreaks" /> collection that represents the horizontal page breaks on the sheet.</span>
          </span>
          <span data-ttu-id="3f68e-252">Только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-252">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="3f68e-253">
            <para>Не более 1 026 горизонтальных разрывов страниц на листе.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-253">
              <para>There is a limit of 1,026 horizontal page breaks per sheet.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Hyperlinks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Hyperlinks Hyperlinks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Hyperlinks Hyperlinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Hyperlinks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hyperlinks As Hyperlinks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Hyperlinks ^ Hyperlinks { Microsoft::Office::Interop::Excel::Hyperlinks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1393)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1393)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Hyperlinks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-254">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> коллекции, представляющей гиперссылок для диапазон или таблицу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-254">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> collection that represents the hyperlinks for the range or worksheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(486)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(486)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-255">Возвращает число объектов в коллекции подобных объектов индекса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-255">Returns the index number of the object within the collection of similar objects.</span>
          </span>
          <span data-ttu-id="3f68e-256">Только для чтения <b>целое число</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-256">Read-only <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Labels">
      <MemberSignature Language="C#" Value="public object Labels (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Labels([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Labels(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Labels (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(841)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="3f68e-257">Зарезервировано для внутреннего использования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-257">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lines">
      <MemberSignature Language="C#" Value="public object Lines (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Lines([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Lines(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Lines (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(767)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="3f68e-258">Зарезервировано для внутреннего использования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-258">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListBoxes">
      <MemberSignature Language="C#" Value="public object ListBoxes (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ListBoxes([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ListBoxes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ListBoxes (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(832)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="3f68e-259">Зарезервировано для внутреннего использования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-259">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListObjects">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ListObjects ListObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ListObjects ListObjects" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ListObjects" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ListObjects As ListObjects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ListObjects ^ ListObjects { Microsoft::Office::Interop::Excel::ListObjects ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2259)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2259)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ListObjects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-260">Возвращает коллекцию <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> объектов в книге.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-260">Returns a collection of <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> objects in the worksheet.</span>
          </span>
          <span data-ttu-id="3f68e-261">Семейство <b>объектов ListObject</b> только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-261">Read-only <b>ListObjects</b> collection.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MailEnvelope">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoEnvelope MailEnvelope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.MsoEnvelope MailEnvelope" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.MailEnvelope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MailEnvelope As MsoEnvelope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoEnvelope ^ MailEnvelope { Microsoft::Office::Core::MsoEnvelope ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2021)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2021)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoEnvelope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-262">Представляет заголовок электронной почты для документа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-262">Represents an e-mail header for a document.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public void Move (object Before, object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Move([in]object Before, [in]object After) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Move(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Move (Optional Before As Object, Optional After As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(637)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before">
          <span data-ttu-id="3f68e-263">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-263">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-264">Лист, перед которым будет размещаться перемещаемый лист.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-264">The sheet before which the moved sheet will be placed.</span>
          </span>
          <span data-ttu-id="3f68e-265">Не удается задать <paramref name="Before" /> при указании <paramref name="After" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-265">You cannot specify <paramref name="Before" /> if you specify <paramref name="After" />.</span>
          </span>
        </param>
        <param name="After">
          <span data-ttu-id="3f68e-266">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-266">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-267">Лист, после которого будет размещаться перемещаемый лист.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-267">The sheet after which the moved sheet will be placed.</span>
          </span>
          <span data-ttu-id="3f68e-268">Не удается задать <paramref name="After" /> при указании <paramref name="Before" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-268">You cannot specify <paramref name="After" /> if you specify <paramref name="Before" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f68e-269">Перемещает окно в другое место в книге</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-269">Moves the sheet to another location in the workbook</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="3f68e-270">
            <para>Если не указать либо <paramref name="Before" /> или <paramref name="After" />, Microsoft Excel создает новую книгу, содержащее перемещаемый лист.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-270">
              <para>If you don't specify either <paramref name="Before" /> or <paramref name="After" />, Microsoft Excel creates a new workbook that contains the moved sheet.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-271">Возвращает или задает имя объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-271">Returns or sets the name of the object.</span>
          </span>
          <span data-ttu-id="3f68e-272">Для чтения и записи, <b>String</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-272">Read/write <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Names">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Names Names { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Names Names" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Names" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Names As Names" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Names ^ Names { Microsoft::Office::Interop::Excel::Names ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(442)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(442)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Names</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-273">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Names" /> коллекции, представляющей все имена конкретного листа (имена, определенные с помощью «WorksheetName!»</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-273">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Names" /> collection that represents all the worksheet-specific names (names defined with the "WorksheetName!"</span>
          </span>
          <span data-ttu-id="3f68e-274">префикс).</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-274">prefix).</span>
          </span>
          <span data-ttu-id="3f68e-275">Объект <b>имена</b> только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-275">Read-only <b>Names</b> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public object Next { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Next" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Next" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Next As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Next { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(502)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(502)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-276">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Chart" />, <see cref="T:Microsoft.Office.Interop.Excel.Range" />, или <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> объект, представляющий следующий лист или ячейки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-276">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Chart" />, <see cref="T:Microsoft.Office.Interop.Excel.Range" />, or <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object that represents the next sheet or cell.</span>
          </span>
          <span data-ttu-id="3f68e-277">Только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-277">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="3f68e-278">
            <para>Если объект является диапазона, это свойство моделирует клавишу TAB, хотя это свойство возвращает следующую ячейку без выбора его.</para>
            <para>На защищенном листе, данное свойство возвращает разблокированными переход к следующей ячейке. На листе незащищенного данное свойство всегда возвращает ячейку сразу же справа от указанной ячейке.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-278">
              <para>If the object is a range, this property emulates the TAB key, although the property returns the next cell without selecting it.</para>
              <para>On a protected sheet, this property returns the next unlocked cell. On an unprotected sheet, this property always returns the cell immediately to the right of the specified cell.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OLEObjects">
      <MemberSignature Language="C#" Value="public object OLEObjects (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object OLEObjects([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.OLEObjects(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function OLEObjects (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(799)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="3f68e-279">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-279">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-280">Имя или номер объекта OLE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-280">The name or number of the OLE object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f68e-281">Возвращает объект, который представляет один объект OLE ( <see cref="T:Microsoft.Office.Interop.Excel.OLEObject" />) или коллекцию всех объектов OLE ( <see cref="T:Microsoft.Office.Interop.Excel.OLEObjects" /> коллекции) на диаграммы или таблицы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-281">Returns an object that represents either a single OLE object (an <see cref="T:Microsoft.Office.Interop.Excel.OLEObject" />) or a collection of all OLE objects (an <see cref="T:Microsoft.Office.Interop.Excel.OLEObjects" /> collection) on the chart or sheet.</span>
          </span>
          <span data-ttu-id="3f68e-282">Только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-282">Read-only.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCalculate">
      <MemberSignature Language="C#" Value="public string OnCalculate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnCalculate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.OnCalculate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnCalculate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnCalculate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-283">Зарезервировано для внутреннего использования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-283">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnData">
      <MemberSignature Language="C#" Value="public string OnData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.OnData" />
      <MemberSignature Language="VB.NET" Value="Public Property OnData As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnData { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(629)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(629)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(629)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-284">Зарезервировано для внутреннего использования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-284">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDoubleClick">
      <MemberSignature Language="C#" Value="public string OnDoubleClick { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnDoubleClick" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.OnDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Property OnDoubleClick As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnDoubleClick { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-285">Зарезервировано для внутреннего использования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-285">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEntry">
      <MemberSignature Language="C#" Value="public string OnEntry { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnEntry" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.OnEntry" />
      <MemberSignature Language="VB.NET" Value="Public Property OnEntry As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnEntry { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(627)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(627)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(627)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-286">Зарезервировано для внутреннего использования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-286">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetActivate">
      <MemberSignature Language="C#" Value="public string OnSheetActivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetActivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.OnSheetActivate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSheetActivate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSheetActivate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-287">Зарезервировано для внутреннего использования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-287">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetDeactivate">
      <MemberSignature Language="C#" Value="public string OnSheetDeactivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetDeactivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.OnSheetDeactivate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSheetDeactivate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSheetDeactivate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-288">Зарезервировано для внутреннего использования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-288">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OptionButtons">
      <MemberSignature Language="C#" Value="public object OptionButtons (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object OptionButtons([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.OptionButtons(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function OptionButtons (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(826)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="3f68e-289">Зарезервировано для внутреннего использования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-289">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Outline">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Outline Outline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Outline Outline" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Outline" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Outline As Outline" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Outline ^ Outline { Microsoft::Office::Interop::Excel::Outline ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(102)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(102)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Outline</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-290">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Outline" /> объект, представляющий структуры для указанного рабочего листа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-290">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Outline" /> object that represents the outline for the specified worksheet.</span>
          </span>
          <span data-ttu-id="3f68e-291">Только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-291">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ovals">
      <MemberSignature Language="C#" Value="public object Ovals (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Ovals([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Ovals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ovals (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(801)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="3f68e-292">Зарезервировано для внутреннего использования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-292">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PageSetup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PageSetup PageSetup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PageSetup PageSetup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.PageSetup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PageSetup As PageSetup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PageSetup ^ PageSetup { Microsoft::Office::Interop::Excel::PageSetup ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(998)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(998)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PageSetup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-293">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.PageSetup" /> объект, содержащий все установки параметров страницы для указанного объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-293">Returns a <see cref="T:Microsoft.Office.Interop.Excel.PageSetup" /> object that contains all the page setup settings for the specified object.</span>
          </span>
          <span data-ttu-id="3f68e-294">Только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-294">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-295">Возвращает родительский объект для указанного объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-295">Returns the parent object for the specified object.</span>
          </span>
          <span data-ttu-id="3f68e-296">Только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-296">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste (object Destination, object Link);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Paste([in]object Destination, [in]object Link) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Paste(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Paste (Optional Destination As Object, Optional Link As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(211)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Destination" Type="System.Object" />
        <Parameter Name="Link" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Destination">
          <span data-ttu-id="3f68e-297">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-297">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-298">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> объект, который указывает, где необходимо вставить содержимое буфера обмена.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-298">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that specifies where the Clipboard contents should be pasted.</span>
          </span>
          <span data-ttu-id="3f68e-299">Если этот аргумент задан, используется текущее выделение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-299">If this argument is omitted, the current selection is used.</span>
          </span>
          <span data-ttu-id="3f68e-300">Этот аргумент может быть указан только если содержимое буфера обмена может быть вставлено в диапазон.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-300">This argument can be specified only if the contents of the Clipboard can be pasted into a range.</span>
          </span>
          <span data-ttu-id="3f68e-301">Если этот параметр задан, <paramref name="Link" /> аргумент не может использоваться.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-301">If this argument is specified, the <paramref name="Link" /> argument cannot be used.</span>
          </span>
        </param>
        <param name="Link">
          <span data-ttu-id="3f68e-302">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-302">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-303">
            <b>Значение true</b> для установления связи источник вставленные данные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-303">
              <b>True</b> to establish a link to the source of the pasted data.</span>
          </span>
          <span data-ttu-id="3f68e-304">Если этот параметр задан, <paramref name="Destination" /> аргумент не может использоваться.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-304">If this argument is specified, the <paramref name="Destination" /> argument cannot be used.</span>
          </span>
          <span data-ttu-id="3f68e-305">Значение по умолчанию — <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-305">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f68e-306">Вставка содержимого буфера обмена в лист.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-306">Pastes the contents of the Clipboard onto the sheet.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="3f68e-307">
            <para>Если не указать <paramref name="Destination" /> аргумент, необходимо выбрать диапазон назначения прежде чем использовать этот метод.</para>
            <para>Этот метод может изменить выделение таблицы, в зависимости от содержимого буфера обмена.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-307">
              <para>If you don’t specify the <paramref name="Destination" /> argument, you must select the destination range before you use this method.</para>
              <para>This method may modify the sheet selection, depending on the contents of the Clipboard.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasteSpecial">
      <MemberSignature Language="C#" Value="public void PasteSpecial (object Format, object Link, object DisplayAsIcon, object IconFileName, object IconIndex, object IconLabel, object NoHTMLFormatting);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PasteSpecial([in]object Format, [in]object Link, [in]object DisplayAsIcon, [in]object IconFileName, [in]object IconIndex, [in]object IconLabel, [in]object NoHTMLFormatting) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.PasteSpecial(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PasteSpecial (Optional Format As Object, Optional Link As Object, Optional DisplayAsIcon As Object, Optional IconFileName As Object, Optional IconIndex As Object, Optional IconLabel As Object, Optional NoHTMLFormatting As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1928)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(7)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Format" Type="System.Object" />
        <Parameter Name="Link" Type="System.Object" />
        <Parameter Name="DisplayAsIcon" Type="System.Object" />
        <Parameter Name="IconFileName" Type="System.Object" />
        <Parameter Name="IconIndex" Type="System.Object" />
        <Parameter Name="IconLabel" Type="System.Object" />
        <Parameter Name="NoHTMLFormatting" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Format">
          <span data-ttu-id="3f68e-308">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-308">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-309">Строка, задающая формат буфера обмена данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-309">A string that specifies the Clipboard format of the data.</span>
          </span>
        </param>
        <param name="Link">
          <span data-ttu-id="3f68e-310">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-310">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-311">
            <b>Значение true</b> для установления связи источник вставленные данные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-311">
              <b>True</b> to establish a link to the source of the pasted data.</span>
          </span>
          <span data-ttu-id="3f68e-312">Если источник данных не допускают связывание или исходное приложение не поддерживает создание ссылок, этот параметр игнорируется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-312">If the source data isn’t suitable for linking or the source application doesn't support linking, this parameter is ignored.</span>
          </span>
          <span data-ttu-id="3f68e-313">Значение по умолчанию — <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-313">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="DisplayAsIcon">
          <span data-ttu-id="3f68e-314">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-314">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-315">
            <b>Значение true</b> для отображения вставленные данные в виде значка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-315">
              <b>True</b> to display the pasted data as an icon.</span>
          </span>
          <span data-ttu-id="3f68e-316">Значение по умолчанию — <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-316">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="IconFileName">
          <span data-ttu-id="3f68e-317">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-317">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-318">Имя файла, содержащего значок, чтобы использовать, если <paramref name="DisplayAsIcon" /> имеет <b>значение True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-318">The name of the file that contains the icon to use if <paramref name="DisplayAsIcon" /> is <b>True</b>.</span>
          </span>
        </param>
        <param name="IconIndex">
          <span data-ttu-id="3f68e-319">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-319">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-320">Номер индекса значка в пределах файла значка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-320">The index number of the icon within the icon file.</span>
          </span>
        </param>
        <param name="IconLabel">
          <span data-ttu-id="3f68e-321">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-321">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-322">Текстовая подпись значка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-322">The text label of the icon.</span>
          </span>
        </param>
        <param name="NoHTMLFormatting">
          <span data-ttu-id="3f68e-323">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-323">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-324">
            <b>Значение true,</b> Чтобы удалить все форматирование, гиперссылки и рисунки из HTML-код.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-324">
              <b>True</b> to remove all formatting, hyperlinks, and images from HTML.</span>
          </span>
          <span data-ttu-id="3f68e-325">
            <b>Значение false,</b> Чтобы вставить HTML-код, как есть.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-325">
              <b>False</b> to paste HTML as is.</span>
          </span>
          <span data-ttu-id="3f68e-326">Значение по умолчанию — <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-326">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f68e-327">Вставка содержимого буфера обмена в лист, используя заданный формат.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-327">Pastes the contents of the Clipboard onto the sheet using a specified format.</span>
          </span>
          <span data-ttu-id="3f68e-328">Используйте этот метод для вставки данных из других приложений или вставки данных в определенном формате.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-328">Use this method to paste data from other applications or to paste data in a specific format.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="3f68e-329">
            <para>
              <paramref name="NoHTMLFormatting" />будет только данному при <paramref name="Format" /> = «HTML». Во всех остальных случаях <paramref name="NoHTMLFormatting" /> будет игнорироваться.</para>
            <para>Необходимо выбрать диапазон назначения, прежде чем использовать этот метод.</para>
            <para>Этот метод может изменить выделение таблицы, в зависимости от содержимого буфера обмена.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-329">
              <para>
                <paramref name="NoHTMLFormatting" /> will only matter when <paramref name="Format" /> = “HTML”. In all other cases, <paramref name="NoHTMLFormatting" /> will be ignored.</para>
              <para>You must select the destination range before you use this method.</para>
              <para>This method may modify the sheet selection, depending on the contents of the Clipboard.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pictures">
      <MemberSignature Language="C#" Value="public object Pictures (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Pictures([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Pictures(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Pictures (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(771)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="3f68e-330">Зарезервировано для внутреннего использования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-330">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotTables">
      <MemberSignature Language="C#" Value="public object PivotTables (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object PivotTables([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.PivotTables(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PivotTables (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(690)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="3f68e-331">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-331">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-332">Имя или номер отчета.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-332">The name or number of the report.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f68e-333">Возвращает объект, представляющий либо один отчет сводной таблицы ( <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> объект) или коллекцию всех отчетов сводной таблицы ( <see cref="T:Microsoft.Office.Interop.Excel.PivotTables" /> объекта) на листе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-333">Returns an object that represents either a single PivotTable report (a <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> object) or a collection of all the PivotTable reports (a <see cref="T:Microsoft.Office.Interop.Excel.PivotTables" /> object) on a worksheet.</span>
          </span>
          <span data-ttu-id="3f68e-334">Только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-334">Read-only.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotTableWizard">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotTable PivotTableWizard (object SourceType, object SourceData, object TableDestination, object TableName, object RowGrand, object ColumnGrand, object SaveData, object HasAutoFormat, object AutoPage, object Reserved, object BackgroundQuery, object OptimizeCache, object PageFieldOrder, object PageFieldWrapCount, object ReadData, object Connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.PivotTable PivotTableWizard([in]object SourceType, [in]object SourceData, [in]object TableDestination, [in]object TableName, [in]object RowGrand, [in]object ColumnGrand, [in]object SaveData, [in]object HasAutoFormat, [in]object AutoPage, [in]object Reserved, [in]object BackgroundQuery, [in]object OptimizeCache, [in]object PageFieldOrder, [in]object PageFieldWrapCount, [in]object ReadData, [in]object Connection) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.PivotTableWizard(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PivotTableWizard (Optional SourceType As Object, Optional SourceData As Object, Optional TableDestination As Object, Optional TableName As Object, Optional RowGrand As Object, Optional ColumnGrand As Object, Optional SaveData As Object, Optional HasAutoFormat As Object, Optional AutoPage As Object, Optional Reserved As Object, Optional BackgroundQuery As Object, Optional OptimizeCache As Object, Optional PageFieldOrder As Object, Optional PageFieldWrapCount As Object, Optional ReadData As Object, Optional Connection As Object) As PivotTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(684)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(16)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SourceType" Type="System.Object" />
        <Parameter Name="SourceData" Type="System.Object" />
        <Parameter Name="TableDestination" Type="System.Object" />
        <Parameter Name="TableName" Type="System.Object" />
        <Parameter Name="RowGrand" Type="System.Object" />
        <Parameter Name="ColumnGrand" Type="System.Object" />
        <Parameter Name="SaveData" Type="System.Object" />
        <Parameter Name="HasAutoFormat" Type="System.Object" />
        <Parameter Name="AutoPage" Type="System.Object" />
        <Parameter Name="Reserved" Type="System.Object" />
        <Parameter Name="BackgroundQuery" Type="System.Object" />
        <Parameter Name="OptimizeCache" Type="System.Object" />
        <Parameter Name="PageFieldOrder" Type="System.Object" />
        <Parameter Name="PageFieldWrapCount" Type="System.Object" />
        <Parameter Name="ReadData" Type="System.Object" />
        <Parameter Name="Connection" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SourceType">
          <span data-ttu-id="3f68e-335">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-335">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-336">Источник данных отчета.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-336">The source of the report data.</span>
          </span>
          <span data-ttu-id="3f68e-337">Может иметь одно из <see cref="T:Microsoft.Office.Interop.Excel.XlPivotTableSourceType" />.constants.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-337">Can be one of the <see cref="T:Microsoft.Office.Interop.Excel.XlPivotTableSourceType" />.constants.</span>
          </span>
        </param>
        <param name="SourceData">
          <span data-ttu-id="3f68e-338">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-338">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-339">Данные для нового отчета.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-339">The data for the new report.</span>
          </span>
          <span data-ttu-id="3f68e-340">Может быть <see cref="T:Microsoft.Office.Interop.Excel.Range" /> объект, массив диапазонов или константа текст, представляющий имя другого отчета.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-340">Can be a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object, an array of ranges, or a text constant that represents the name of another report.</span>
          </span>
          <span data-ttu-id="3f68e-341">Для внешней базы данных <paramref name="SourceData" /> представляет собой массив строк, содержащий строку запроса SQL, где каждый элемент — это длиной до 255 знаков.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-341">For an external database, <paramref name="SourceData" /> is an array of strings containing the SQL query string, where each element is up to 255 characters in length.</span>
          </span>
          <span data-ttu-id="3f68e-342">Следует использовать <paramref name="Connection" /> для указания строка подключения ODBC.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-342">You should use the <paramref name="Connection" /> argument to specify the ODBC connection string.</span>
          </span>
          <span data-ttu-id="3f68e-343">Для обеспечения совместимости с предыдущими версиями Excel <paramref name="SourceData" /> может быть двух элементов массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-343">For compatibility with earlier versions of Excel, <paramref name="SourceData" /> can be a two-element array.</span>
          </span>
          <span data-ttu-id="3f68e-344">Первый элемент является строка подключения, определяющее источник данных ODBC.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-344">The first element is the connection string specifying the ODBC source for the data.</span>
          </span>
          <span data-ttu-id="3f68e-345">Второй элемент — строка запроса SQL, используемый для получения данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-345">The second element is the SQL query string used to get the data.</span>
          </span>
          <span data-ttu-id="3f68e-346">При указании <paramref name="SourceData" />, необходимо также указать <paramref name="SourceType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-346">If you specify <paramref name="SourceData" />, you must also specify <paramref name="SourceType" />.</span>
          </span>
          <span data-ttu-id="3f68e-347">Если активную ячейку находится внутри <paramref name="SourceData" /> диапазона, необходимо указать <paramref name="TableDestination" /> также.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-347">If the active cell is inside the <paramref name="SourceData" /> range, you must specify <paramref name="TableDestination" /> as well.</span>
          </span>
        </param>
        <param name="TableDestination">
          <span data-ttu-id="3f68e-348">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-348">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-349">Объект <b>Range</b> , указывающий, куда следует поместить в рабочем листе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-349">A <b>Range</b> object specifying where the report should be placed on the worksheet.</span>
          </span>
          <span data-ttu-id="3f68e-350">Если этот аргумент указан, отчет помещается в активную ячейку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-350">If this argument is omitted, the report is placed at the active cell.</span>
          </span>
        </param>
        <param name="TableName">
          <span data-ttu-id="3f68e-351">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-351">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-352">Строка, которая указывает имя нового отчета.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-352">A string that specifies the name of the new report.</span>
          </span>
        </param>
        <param name="RowGrand">
          <span data-ttu-id="3f68e-353">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-353">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-354">
            <b>Значение true,</b> чтобы отображать общие итоги для строк в отчете.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-354">
              <b>True</b> to show grand totals for rows in the report.</span>
          </span>
        </param>
        <param name="ColumnGrand">
          <span data-ttu-id="3f68e-355">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-355">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-356">
            <b>Значение true,</b> чтобы показать общие итоги для столбцов в отчете.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-356">
              <b>True</b> to show grand totals for columns in the report.</span>
          </span>
        </param>
        <param name="SaveData">
          <span data-ttu-id="3f68e-357">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-357">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-358">
            <b>Значение true,</b> чтобы сохранить данные в отчете.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-358">
              <b>True</b> to save data with the report.</span>
          </span>
          <span data-ttu-id="3f68e-359">
            <b>Значение false</b> для сохранения только определение отчета.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-359">
              <b>False</b> to save only the report definition.</span>
          </span>
        </param>
        <param name="HasAutoFormat">
          <span data-ttu-id="3f68e-360">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-360">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-361">
            <b>Значение true,</b> чтобы Microsoft Excel автоматически формат отчета при его обновлении или при перемещении полей.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-361">
              <b>True</b> to have Microsoft Excel automatically format the report when it’s refreshed or when fields are moved.</span>
          </span>
        </param>
        <param name="AutoPage">
          <span data-ttu-id="3f68e-362">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-362">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-363">Только если <paramref name="SourceType" /> — это <b>xlConsolidation</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-363">Valid only if <paramref name="SourceType" /> is <b>xlConsolidation</b>.</span>
          </span>
          <span data-ttu-id="3f68e-364">
            <b>Значение true,</b> Чтобы создать поле страницы для консолидации Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-364">
              <b>True</b> to have Microsoft Excel create a page field for the consolidation.</span>
          </span>
          <span data-ttu-id="3f68e-365">Если <paramref name="AutoPage" /> равно <b>False</b>, необходимо создать или поля страницы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-365">If <paramref name="AutoPage" /> is <b>False</b>, you must create the page field or fields.</span>
          </span>
        </param>
        <param name="Reserved">
          <span data-ttu-id="3f68e-366">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-366">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-367">Не используется с Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-367">Not used by Microsoft Excel.</span>
          </span>
        </param>
        <param name="BackgroundQuery">
          <span data-ttu-id="3f68e-368">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-368">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-369">
            <b>Значение true,</b> чтобы приложение Excel выполнения запросов для отчета асинхронно (в фоновом режиме).</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-369">
              <b>True</b> to have Excel perform queries for the report asynchronously (in the background).</span>
          </span>
          <span data-ttu-id="3f68e-370">Значение по умолчанию — <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-370">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="OptimizeCache">
          <span data-ttu-id="3f68e-371">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-371">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-372">
            <b>Значение true,</b> чтобы оптимизировать кэш сводной таблицы при его создании.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-372">
              <b>True</b> to optimize the PivotTable cache when it's constructed.</span>
          </span>
          <span data-ttu-id="3f68e-373">Значение по умолчанию — <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-373">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="PageFieldOrder">
          <span data-ttu-id="3f68e-374">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-374">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-375">Порядок страниц поля добавляются в макет отчета сводной таблицы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-375">The order in which page fields are added to the PivotTable report’s layout.</span>
          </span>
          <span data-ttu-id="3f68e-376">Может иметь одно из следующих констант <b>XlOrder</b> : <b>xlDownThenOver</b> или <b>xlOverThenDown</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-376">Can be one of the following <b>XlOrder</b> constants: <b>xlDownThenOver</b> or <b>xlOverThenDown</b>.</span>
          </span>
          <span data-ttu-id="3f68e-377">Значение по умолчанию — <b>xlDownThenOver</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-377">The default value is <b>xlDownThenOver</b>.</span>
          </span>
        </param>
        <param name="PageFieldWrapCount">
          <span data-ttu-id="3f68e-378">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-378">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-379">Количество полей страницы в столбцы или строки в отчете сводной таблицы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-379">The number of page fields in each column or row in the PivotTable report.</span>
          </span>
          <span data-ttu-id="3f68e-380">Значение по умолчанию — нуль (0).</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-380">The default value is 0 (zero).</span>
          </span>
        </param>
        <param name="ReadData">
          <span data-ttu-id="3f68e-381">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-381">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-382">
            <b>Значение true,</b> Чтобы создать кэш сводной таблицы, содержащий все записи из внешней базы данных; в этом кэше может быть очень большим.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-382">
              <b>True</b> to create a PivotTable cache that contains all records from the external database; this cache can be very large.</span>
          </span>
          <span data-ttu-id="3f68e-383">Если <paramref name="ReadData" /> равно <b>False</b>, можно задать некоторые поля как на стороне сервера поля страниц перед фактически чтения данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-383">If <paramref name="ReadData" /> is <b>False</b>, you can set some of the fields as server-based page fields before the data is actually read.</span>
          </span>
        </param>
        <param name="Connection">
          <span data-ttu-id="3f68e-384">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-384">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-385">Строка, содержащая параметры ODBC, которые позволяют Excel подключаться к источнику данных ODBC.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-385">A string that contains ODBC settings that allow Excel to connect to an ODBC data source.</span>
          </span>
          <span data-ttu-id="3f68e-386">Строка подключения имеет вид «ODBC; &lt;строка подключения&gt;«.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-386">The connection string has the form "ODBC;&lt;connection string&gt;".</span>
          </span>
          <span data-ttu-id="3f68e-387">Этот аргумент переопределяет все предыдущие параметры для <see cref="T:Microsoft.Office.Interop.Excel.PivotCache" /> объекта <see cref="P:Microsoft.Office.Interop.Excel.PivotCache.Connection" /> свойство.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-387">This argument overrides any previous setting for the <see cref="T:Microsoft.Office.Interop.Excel.PivotCache" /> object’s <see cref="P:Microsoft.Office.Interop.Excel.PivotCache.Connection" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f68e-388">Создает <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-388">Creates a <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> object.</span>
          </span>
          <span data-ttu-id="3f68e-389">Этот метод не отображает мастер сводных таблиц.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-389">This method doesn’t display the PivotTable Wizard.</span>
          </span>
          <span data-ttu-id="3f68e-390">Этот метод недоступен для источников данных OLE DB.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-390">This method isn’t available for OLE DB data sources.</span>
          </span>
          <span data-ttu-id="3f68e-391">Использование <see cref="M:Microsoft.Office.Interop.Excel.Worksheets.Add(System.Object,System.Object,System.Object,System.Object)" /> метод, чтобы добавить в кэш сводной таблицы, а затем создайте отчет сводной таблицы на основе кэша.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-391">Use the <see cref="M:Microsoft.Office.Interop.Excel.Worksheets.Add(System.Object,System.Object,System.Object,System.Object)" /> method to add a PivotTable cache, and then create a PivotTable report based on the cache.</span>
          </span>
          <span data-ttu-id="3f68e-392">Объект <b>сводной таблицы</b> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-392">
              <b>PivotTable</b> object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Previous">
      <MemberSignature Language="C#" Value="public object Previous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Previous" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Previous" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Previous As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Previous { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(503)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(503)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-393">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Chart" />, <see cref="T:Microsoft.Office.Interop.Excel.Range" />, или <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> объект, представляющий предыдущей таблицы или ячейки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-393">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Chart" />, <see cref="T:Microsoft.Office.Interop.Excel.Range" />, or <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object that represents the previous sheet or cell.</span>
          </span>
          <span data-ttu-id="3f68e-394">Только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-394">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="3f68e-395">
            <para>Если объект является диапазона, это свойство моделирует нажатие клавиши SHIFT + TAB, в отличие от сочетания клавиш, тем не менее, это свойство возвращает предыдущую ячейку без выбора его.</para>
            <para>На защищенном листе, данное свойство возвращает предыдущую ячейку разблокированными. На листе незащищенного данное свойство всегда возвращает ячейку сразу же слева от указанной ячейке.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-395">
              <para>If the object is a range, this property emulates pressing SHIFT+TAB; unlike the key combination, however, the property returns the previous cell without selecting it.</para>
              <para>On a protected sheet, this property returns the previous unlocked cell. On an unprotected sheet, this property always returns the cell immediately to the left of the specified cell.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintedCommentPages">
      <MemberSignature Language="C#" Value="public int PrintedCommentPages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PrintedCommentPages" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.PrintedCommentPages" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrintedCommentPages As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PrintedCommentPages { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2857)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2857)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-396">Получает число страниц примечаний, которые печатается для текущего листа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-396">Gets the number of comment pages that will be printed for the current worksheet.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3f68e-397">Число страниц примечаний, которые печатается для текущего листа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-397">The number of comment pages that will be printed for the current worksheet.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="3f68e-398">
            <para>Только для чтения.</para>
            <para>
              <see cref="P:Microsoft.Office.Interop.Excel._Worksheet.PrintedCommentPages" /> Свойство будет возвращать только число больше 0, если комментарии на вкладке таблицы параметры страницы диалоговое окно задано значение в конце листа. Данное свойство возвращает ноль, если лист является лист диаграммы или листом диалога MS Excel 5.0.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-398">
              <para>Read-only.</para>
              <para>The <see cref="P:Microsoft.Office.Interop.Excel._Worksheet.PrintedCommentPages" /> property will only return a number greater than zero if the Comments setting on the Sheet tab of the Page Setup dialog box is set to At end of sheet. This property will return zero if the sheet is a Chart sheet or a MS Excel 5.0 Dialog sheet.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOut">
      <MemberSignature Language="C#" Value="public void PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">
          <span data-ttu-id="3f68e-399">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-399">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-400">Номер страницы, с которого следует начинать печати.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-400">The number of the page at which to start printing.</span>
          </span>
          <span data-ttu-id="3f68e-401">Если этот аргумент задан, печать начинается с самого начала.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-401">If this argument is omitted, printing starts at the beginning.</span>
          </span>
        </param>
        <param name="To">
          <span data-ttu-id="3f68e-402">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-402">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-403">Номер последней страницы для печати.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-403">The number of the last page to print.</span>
          </span>
          <span data-ttu-id="3f68e-404">Если этот аргумент задан, печать заканчивается на последней странице.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-404">If this argument is omitted, printing ends with the last page.</span>
          </span>
        </param>
        <param name="Copies">
          <span data-ttu-id="3f68e-405">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-405">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-406">Число копий для печати.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-406">The number of copies to print.</span>
          </span>
          <span data-ttu-id="3f68e-407">Если этот аргумент задан, печатается одна копия.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-407">If this argument is omitted, one copy is printed.</span>
          </span>
        </param>
        <param name="Preview">
          <span data-ttu-id="3f68e-408">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-408">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-409">
            <b>Значение true,</b> чтобы вызвать предварительного просмотра перед печатью объекта Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-409">
              <b>True</b> to have Microsoft Excel invoke print preview before printing the object.</span>
          </span>
          <span data-ttu-id="3f68e-410">
            <b>Значение false</b> (или опущен) для печати на объект немедленно.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-410">
              <b>False</b> (or omitted) to print the object immediately.</span>
          </span>
        </param>
        <param name="ActivePrinter">
          <span data-ttu-id="3f68e-411">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-411">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-412">Задает имя активного принтера.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-412">Sets the name of the active printer.</span>
          </span>
        </param>
        <param name="PrintToFile">
          <span data-ttu-id="3f68e-413">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-413">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-414">
            <b>Значение true</b> для печати в файл.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-414">
              <b>True</b> to print to a file.</span>
          </span>
          <span data-ttu-id="3f68e-415">Если <paramref name="PrToFileName" /> не указан, Microsoft Excel выводит запрос на ввод имени выходного файла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-415">If <paramref name="PrToFileName" /> is not specified, Microsoft Excel prompts the user to enter the name of the output file.</span>
          </span>
        </param>
        <param name="Collate">
          <span data-ttu-id="3f68e-416">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-416">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-417">
            <b>Значение true</b> для сортировки нескольких копий.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-417">
              <b>True</b> to collate multiple copies.</span>
          </span>
        </param>
        <param name="PrToFileName">
          <span data-ttu-id="3f68e-418">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-418">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-419">Если <paramref name="PrintToFile" /> имеет значение <b>True</b>, этот аргумент указывает имя файла, который вы хотите напечатать для.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-419">If <paramref name="PrintToFile" /> is set to <b>True</b>, this argument specifies the name of the file you want to print to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f68e-420">Печатает объект.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-420">Prints the object.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="3f68e-421">
            <para>«Страницы» в описании <paramref name="From" /> и <paramref name="To" /> ссылается на печатных страниц, не в целом страниц на листе или книге.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-421">
              <para>"Pages" in the descriptions of <paramref name="From" /> and <paramref name="To" /> refers to printed pages, not overall pages in the sheet or workbook.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOutEx">
      <MemberSignature Language="C#" Value="public void PrintOutEx (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName, object IgnorePrintAreas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOutEx([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName, [in]object IgnorePrintAreas) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintOutEx (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object, Optional IgnorePrintAreas As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2361)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(9)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
        <Parameter Name="IgnorePrintAreas" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <param name="PrToFileName">To be added.</param>
        <param name="IgnorePrintAreas">To be added.</param>
        <summary>
          <span data-ttu-id="3f68e-422">Зарезервировано для внутреннего использования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-422">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintPreview">
      <MemberSignature Language="C#" Value="public void PrintPreview (object EnableChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintPreview([in]object EnableChanges) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.PrintPreview(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintPreview (Optional EnableChanges As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(281)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EnableChanges" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="EnableChanges">
          <span data-ttu-id="3f68e-423">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-423">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-424">
            <b>Значение true,</b> Чтобы включить изменения в указанный лист.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-424">
              <b>True</b> to enable changes to the specified worksheet.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f68e-425">Показывает предварительного просмотра объекта, как будет выглядеть при печати.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-425">Shows a preview of the object as it would look when printed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Protect">
      <MemberSignature Language="C#" Value="public void Protect (object Password, object DrawingObjects, object Contents, object Scenarios, object UserInterfaceOnly, object AllowFormattingCells, object AllowFormattingColumns, object AllowFormattingRows, object AllowInsertingColumns, object AllowInsertingRows, object AllowInsertingHyperlinks, object AllowDeletingColumns, object AllowDeletingRows, object AllowSorting, object AllowFiltering, object AllowUsingPivotTables);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Protect([in]object Password, [in]object DrawingObjects, [in]object Contents, [in]object Scenarios, [in]object UserInterfaceOnly, [in]object AllowFormattingCells, [in]object AllowFormattingColumns, [in]object AllowFormattingRows, [in]object AllowInsertingColumns, [in]object AllowInsertingRows, [in]object AllowInsertingHyperlinks, [in]object AllowDeletingColumns, [in]object AllowDeletingRows, [in]object AllowSorting, [in]object AllowFiltering, [in]object AllowUsingPivotTables) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Protect(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Protect (Optional Password As Object, Optional DrawingObjects As Object, Optional Contents As Object, Optional Scenarios As Object, Optional UserInterfaceOnly As Object, Optional AllowFormattingCells As Object, Optional AllowFormattingColumns As Object, Optional AllowFormattingRows As Object, Optional AllowInsertingColumns As Object, Optional AllowInsertingRows As Object, Optional AllowInsertingHyperlinks As Object, Optional AllowDeletingColumns As Object, Optional AllowDeletingRows As Object, Optional AllowSorting As Object, Optional AllowFiltering As Object, Optional AllowUsingPivotTables As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2029)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="DrawingObjects" Type="System.Object" />
        <Parameter Name="Contents" Type="System.Object" />
        <Parameter Name="Scenarios" Type="System.Object" />
        <Parameter Name="UserInterfaceOnly" Type="System.Object" />
        <Parameter Name="AllowFormattingCells" Type="System.Object" />
        <Parameter Name="AllowFormattingColumns" Type="System.Object" />
        <Parameter Name="AllowFormattingRows" Type="System.Object" />
        <Parameter Name="AllowInsertingColumns" Type="System.Object" />
        <Parameter Name="AllowInsertingRows" Type="System.Object" />
        <Parameter Name="AllowInsertingHyperlinks" Type="System.Object" />
        <Parameter Name="AllowDeletingColumns" Type="System.Object" />
        <Parameter Name="AllowDeletingRows" Type="System.Object" />
        <Parameter Name="AllowSorting" Type="System.Object" />
        <Parameter Name="AllowFiltering" Type="System.Object" />
        <Parameter Name="AllowUsingPivotTables" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password">
          <span data-ttu-id="3f68e-426">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-426">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-427">Строка, определяющая с учетом регистра пароль для листа или книги.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-427">A string that specifies a case-sensitive password for the worksheet or workbook.</span>
          </span>
          <span data-ttu-id="3f68e-428">Если этот аргумент задан, можно снять листа или книги без с помощью пароля.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-428">If this argument is omitted, you can unprotect the worksheet or workbook without using a password.</span>
          </span>
          <span data-ttu-id="3f68e-429">В противном случае необходимо указать пароль для снятия защиты с листа или книги.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-429">Otherwise, you must specify the password to unprotect the worksheet or workbook.</span>
          </span>
          <span data-ttu-id="3f68e-430">Если вы забыли пароль, не может снять защиту листа или книги.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-430">If you forget the password, you cannot unprotect the worksheet or workbook.</span>
          </span>
          <span data-ttu-id="3f68e-431">Рекомендуется хранить в надежном месте список паролей и соответствующие имена документов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-431">It's a good idea to keep a list of your passwords and their corresponding document names in a safe place.</span>
          </span>
        </param>
        <param name="DrawingObjects">
          <span data-ttu-id="3f68e-432">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-432">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-433">
            <b>Значение true,</b> Чтобы защитить фигур.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-433">
              <b>True</b> to protect shapes.</span>
          </span>
          <span data-ttu-id="3f68e-434">Значение по умолчанию — <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-434">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Contents">
          <span data-ttu-id="3f68e-435">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-435">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-436">
            <b>Значение true</b> для защиты содержимого.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-436">
              <b>True</b> to protect contents.</span>
          </span>
          <span data-ttu-id="3f68e-437">Диаграмма обеспечивает защиту всей диаграммы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-437">For a chart, this protects the entire chart.</span>
          </span>
          <span data-ttu-id="3f68e-438">Лист обеспечивает защиту заблокированные ячейки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-438">For a worksheet, this protects the locked cells.</span>
          </span>
          <span data-ttu-id="3f68e-439">Значение по умолчанию — <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-439">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="Scenarios">
          <span data-ttu-id="3f68e-440">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-440">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-441">
            <b>Значение true,</b> Чтобы защитить сценариев.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-441">
              <b>True</b> to protect scenarios.</span>
          </span>
          <span data-ttu-id="3f68e-442">Этот параметр используется только для таблиц.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-442">This argument is valid only for worksheets.</span>
          </span>
          <span data-ttu-id="3f68e-443">Значение по умолчанию — <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-443">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="UserInterfaceOnly">
          <span data-ttu-id="3f68e-444">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-444">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-445">
            <b>Значение true,</b> Чтобы защитить пользовательского интерфейса, но не макросов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-445">
              <b>True</b> to protect the user interface but not macros.</span>
          </span>
          <span data-ttu-id="3f68e-446">Если этот аргумент указан, защита применяется с макросами и пользовательского интерфейса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-446">If this argument is omitted, protection applies both to macros and to the user interface.</span>
          </span>
        </param>
        <param name="AllowFormattingCells">
          <span data-ttu-id="3f68e-447">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-447">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-448">
            <b>Значение true,</b> пользователь может форматирование любой ячейки защищенного рабочего листа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-448">
              <b>True</b> allows the user to format any cell on a protected worksheet.</span>
          </span>
          <span data-ttu-id="3f68e-449">Значение по умолчанию — <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-449">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AllowFormattingColumns">
          <span data-ttu-id="3f68e-450">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-450">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-451">
            <b>Значение true,</b> пользователь может форматирование любого столбца защищенного рабочего листа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-451">
              <b>True</b> allows the user to format any column on a protected worksheet.</span>
          </span>
          <span data-ttu-id="3f68e-452">Значение по умолчанию — <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-452">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AllowFormattingRows">
          <span data-ttu-id="3f68e-453">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-453">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-454">
            <b>Значение true,</b> пользователь может форматирование любой строки защищенного рабочего листа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-454">
              <b>True</b> allows the user to format any row on a protected worksheet.</span>
          </span>
          <span data-ttu-id="3f68e-455">Значение по умолчанию — <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-455">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AllowInsertingColumns">
          <span data-ttu-id="3f68e-456">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-456">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-457">
            <b>Значение true,</b> пользователь может вставить столбцы из защищенного рабочего листа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-457">
              <b>True</b> allows the user to insert columns on the protected worksheet.</span>
          </span>
          <span data-ttu-id="3f68e-458">Значение по умолчанию — <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-458">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AllowInsertingRows">
          <span data-ttu-id="3f68e-459">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-459">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-460">
            <b>Значение true,</b> пользователь может вставить строки из защищенного рабочего листа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-460">
              <b>True</b> allows the user to insert rows on the protected worksheet.</span>
          </span>
          <span data-ttu-id="3f68e-461">Значение по умолчанию — <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-461">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AllowInsertingHyperlinks">
          <span data-ttu-id="3f68e-462">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-462">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-463">
            <b>Значение true,</b> пользователь может вставить гиперссылки в рабочем листе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-463">
              <b>True</b> allows the user to insert hyperlinks on the worksheet.</span>
          </span>
          <span data-ttu-id="3f68e-464">Значение по умолчанию — <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-464">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AllowDeletingColumns">
          <span data-ttu-id="3f68e-465">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-465">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-466">
            <b>Значение true,</b> пользователь может удалять столбцы защищенного рабочего листа, где каждый ячейку в столбце к удалению не заблокирована.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-466">
              <b>True</b> allows the user to delete columns on the protected worksheet, where every cell in the column to be deleted is unlocked.</span>
          </span>
          <span data-ttu-id="3f68e-467">Значение по умолчанию — <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-467">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AllowDeletingRows">
          <span data-ttu-id="3f68e-468">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-468">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-469">
            <b>Значение true,</b> пользователь может удалять строки из защищенного рабочего листа если каждой ячейки в строке к удалению не заблокирована.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-469">
              <b>True</b> allows the user to delete rows on the protected worksheet where every cell in the row to be deleted is unlocked.</span>
          </span>
          <span data-ttu-id="3f68e-470">Значение по умолчанию — <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-470">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AllowSorting">
          <span data-ttu-id="3f68e-471">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-471">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-472">
            <b>Значение true,</b> пользователь может сортировать защищенного рабочего листа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-472">
              <b>True</b> allows the user to sort on the protected worksheet.</span>
          </span>
          <span data-ttu-id="3f68e-473">Каждой ячейки в диапазоне сортировки необходимо разблокировать или без защиты.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-473">Every cell in the sort range must be unlocked or unprotected.</span>
          </span>
          <span data-ttu-id="3f68e-474">Значение по умолчанию — <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-474">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AllowFiltering">
          <span data-ttu-id="3f68e-475">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-475">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-476">
            <b>Значение true,</b> пользователь может задать фильтры из защищенного рабочего листа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-476">
              <b>True</b> allows the user to set filters on the protected worksheet.</span>
          </span>
          <span data-ttu-id="3f68e-477">Пользователи могут изменить критерии фильтрации, но не можно включить или отключить автоматическое фильтра.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-477">Users can change filter criteria but can not enable or disable an auto filter.</span>
          </span>
          <span data-ttu-id="3f68e-478">Пользователи могут устанавливать фильтры на основе существующего автоматически.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-478">Users can set filters on an existing auto filter.</span>
          </span>
          <span data-ttu-id="3f68e-479">Значение по умолчанию — <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-479">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AllowUsingPivotTables">
          <span data-ttu-id="3f68e-480">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-480">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-481">
            <b>Значение true,</b> пользователь может использовать отчеты сводных таблиц защищенного рабочего листа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-481">
              <b>True</b> allows the user to use pivot table reports on the protected worksheet.</span>
          </span>
          <span data-ttu-id="3f68e-482">Значение по умолчанию — <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-482">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f68e-483">Защищает рабочий лист, чтобы его нельзя изменить.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-483">Protects a worksheet so that it cannot be modified.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="3f68e-484">
            <para>Если применить метод <b>защитить</b> с <paramref name="UserInterfaceOnly" /> аргумент значение <b>True</b> для листа и затем сохранить рабочую книгу всю таблицу (не только интерфейс) будет защищен при открытии книги. Чтобы повторно включить защиты пользовательского интерфейса после открытия книги, необходимо еще раз применить метод <b>защитить</b> с <paramref name="UserInterfaceOnly" /> присвоено <b>значение True</b>.</para>
            <para>, Если требуется внести изменения в защищенный лист, можно использовать метод <b>защитить</b> защищенного рабочего листа, если предоставлен пароль. Может быть другой метод для снятия защиты с листа, внесите необходимые изменения и затем снова защитить лист.</para>
            <para>
              <b>Примечание</b>: «Unprotected» означает, что ячейка может быть заблокирована (диалоговое окно Формат ячеек), но включен в диапазон, определенный в окне Разрешить изменение диапазонов диалоговое окно, и пользователь защиту с диапазона с помощью пароля или проверки разрешений NT.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-484">
              <para>If you apply the <b>Protect</b> method with the <paramref name="UserInterfaceOnly" /> argument set to <b>True</b> to a worksheet and then save the workbook, the entire worksheet (not just the interface) will be fully protected when you reopen the workbook. To re-enable the user interface protection after the workbook is opened, you must again apply the <b>Protect</b> method with <paramref name="UserInterfaceOnly" /> set to <b>True</b>.</para>
              <para>If you want to make a change to a protected worksheet, it is possible to use the <b>Protect</b> method on a protected worksheet if the password is supplied. Another method would be to unprotect the worksheet, make the necessary changes, and then protect the worksheet again.</para>
              <para>
                <b>Note</b>: 'Unprotected' means the cell may be locked (Format Cells dialog) but is included in a range defined in the Allow Users to Edit Ranges dialog, and the user has unprotected the range with a password or been validated via NT permissions.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectContents">
      <MemberSignature Language="C#" Value="public bool ProtectContents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectContents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ProtectContents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectContents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectContents { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(292)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(292)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-485">
            <b>Значение true,</b> Если содержимое листа защищены.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-485">
              <b>True</b> if the contents of the sheet are protected.</span>
          </span>
          <span data-ttu-id="3f68e-486">Диаграмма обеспечивает защиту всей диаграммы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-486">For a chart, this protects the entire chart.</span>
          </span>
          <span data-ttu-id="3f68e-487">Лист обеспечивает защиту отдельные ячейки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-487">For a worksheet, this protects the individual cells.</span>
          </span>
          <span data-ttu-id="3f68e-488">Только для чтения, <b>Boolean</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-488">Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectDrawingObjects">
      <MemberSignature Language="C#" Value="public bool ProtectDrawingObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectDrawingObjects" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ProtectDrawingObjects" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectDrawingObjects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectDrawingObjects { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(293)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(293)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-489">
            <b>Значение true,</b> Если фигур защищены.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-489">
              <b>True</b> if shapes are protected.</span>
          </span>
          <span data-ttu-id="3f68e-490">Только для чтения, <b>Boolean</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-490">Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Protection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Protection Protection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Protection Protection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Protection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Protection As Protection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Protection ^ Protection { Microsoft::Office::Interop::Excel::Protection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(176)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(176)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Protection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-491">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Protection" /> объект, представляющий параметры защиты рабочего листа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-491">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Protection" /> object that represents the protection options of the worksheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectionMode">
      <MemberSignature Language="C#" Value="public bool ProtectionMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectionMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ProtectionMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectionMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectionMode { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1159)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1159)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-492">
            <b>Значение true,</b> Если включена защиты только пользовательского интерфейса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-492">
              <b>True</b> if user-interface-only protection is turned on.</span>
          </span>
          <span data-ttu-id="3f68e-493">Чтобы включить защиты пользовательского интерфейса, используйте <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Protect(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> метод с <paramref name="UserInterfaceOnly" /> аргумент присвоено <b>значение True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-493">To turn on user interface protection, use the <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Protect(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method with the <paramref name="UserInterfaceOnly" /> argument set to <b>True</b>.</span>
          </span>
          <span data-ttu-id="3f68e-494">Только для чтения, <b>Boolean</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-494">Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectScenarios">
      <MemberSignature Language="C#" Value="public bool ProtectScenarios { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectScenarios" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ProtectScenarios" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectScenarios As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectScenarios { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(294)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(294)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-495">
            <b>Значение true,</b> Если сценарии рабочего листа защищены.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-495">
              <b>True</b> if the worksheet scenarios are protected.</span>
          </span>
          <span data-ttu-id="3f68e-496">Только для чтения, <b>Boolean</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-496">Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryTables">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.QueryTables QueryTables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.QueryTables QueryTables" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.QueryTables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueryTables As QueryTables" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::QueryTables ^ QueryTables { Microsoft::Office::Interop::Excel::QueryTables ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1434)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1434)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.QueryTables</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-497">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.QueryTables" /> коллекции, представляющей все таблицы запросов на указанный лист.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-497">Returns the <see cref="T:Microsoft.Office.Interop.Excel.QueryTables" /> collection that represents all the query tables on the specified worksheet.</span>
          </span>
          <span data-ttu-id="3f68e-498">Только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-498">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Range">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Range[object Cell1, object Cell2] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Range(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Range(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Range(Cell1 As Object, Optional Cell2 As Object) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Range[System::Object ^, System::Object ^] { Microsoft::Office::Interop::Excel::Range ^ get(System::Object ^ Cell1, System::Object ^ Cell2); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(197)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(197)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cell1" Type="System.Object" />
        <Parameter Name="Cell2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Cell1">
          <span data-ttu-id="3f68e-499">Требуется <b>объект</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-499">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-500">Имя диапазона.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-500">The name of the range.</span>
          </span>
          <span data-ttu-id="3f68e-501">Это должно быть ссылка в стиле A1 на языке макрос.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-501">This must be an A1-style reference in the language of the macro.</span>
          </span>
          <span data-ttu-id="3f68e-502">Он может включать оператор диапазона (двоеточие), оператор пересечения (пробел) или оператор объединения (запятая).</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-502">It can include the range operator (a colon), the intersection operator (a space), or the union operator (a comma).</span>
          </span>
          <span data-ttu-id="3f68e-503">Может также включать знак доллара, но они будет игнорироваться.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-503">It can also include dollar signs, but they’re ignored.</span>
          </span>
          <span data-ttu-id="3f68e-504">Можно использовать локально определенное имя в любой части диапазона.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-504">You can use a local defined name in any part of the range.</span>
          </span>
          <span data-ttu-id="3f68e-505">Если используется имя, предполагается, что имя является языке макрос.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-505">If you use a name, the name is assumed to be in the language of the macro.</span>
          </span>
        </param>
        <param name="Cell2">
          <span data-ttu-id="3f68e-506">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-506">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-507">Ячейка в левом верхнем и нижнем правом углу диапазона.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-507">The cell in the upper-left and lower-right corner of the range.</span>
          </span>
          <span data-ttu-id="3f68e-508">Может быть объект <b>диапазон</b> , который содержит одну ячейку, целый столбец или всю строку или он может быть строкой, именем ячейки на языке макрос.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-508">Can be a <b>Range</b> object that contains a single cell, an entire column, or entire row, or it can be a string that names a single cell in the language of the macro.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f68e-509">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Range" /> объект, который представляет ячейки или диапазона ячеек.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-509">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents a cell or a range of cells.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rectangles">
      <MemberSignature Language="C#" Value="public object Rectangles (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Rectangles([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Rectangles(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Rectangles (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(774)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="3f68e-510">Зарезервировано для внутреннего использования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-510">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetAllPageBreaks">
      <MemberSignature Language="C#" Value="public void ResetAllPageBreaks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetAllPageBreaks() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ResetAllPageBreaks" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetAllPageBreaks ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetAllPageBreaks();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1426)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-511">Сброс разрывов страниц на указанный лист.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-511">Resets all page breaks on the specified worksheet.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Rows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Rows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Rows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rows As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Rows { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(258)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(258)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-512">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Range" /> объект, представляющий все строки на указанный лист.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-512">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the rows on the specified worksheet.</span>
          </span>
          <span data-ttu-id="3f68e-513">Объект <b>Range</b> только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-513">Read-only <b>Range</b> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public void SaveAs (string Filename, object FileFormat, object Password, object WriteResPassword, object ReadOnlyRecommended, object CreateBackup, object AddToMru, object TextCodepage, object TextVisualLayout, object Local);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveAs([in]string Filename, [in]object FileFormat, [in]object Password, [in]object WriteResPassword, [in]object ReadOnlyRecommended, [in]object CreateBackup, [in]object AddToMru, [in]object TextCodepage, [in]object TextVisualLayout, [in]object Local) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAs (Filename As String, Optional FileFormat As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional ReadOnlyRecommended As Object, Optional CreateBackup As Object, Optional AddToMru As Object, Optional TextCodepage As Object, Optional TextVisualLayout As Object, Optional Local As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1925)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="FileFormat" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="ReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="CreateBackup" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
        <Parameter Name="TextCodepage" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
        <Parameter Name="Local" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="3f68e-514">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-514">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-515">Строка, указывающая имя сохраняемого файла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-515">A string that indicates the name of the file to be saved.</span>
          </span>
          <span data-ttu-id="3f68e-516">Можно включить полный путь; Если вы не произошло, Microsoft Excel сохраняет файл в текущей папке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-516">You can include a full path; if you don't, Microsoft Excel saves the file in the current folder.</span>
          </span>
        </param>
        <param name="FileFormat">
          <span data-ttu-id="3f68e-517">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-517">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-518">Формат файла, который будет использоваться при сохранении файла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-518">The file format to use when you save the file.</span>
          </span>
          <span data-ttu-id="3f68e-519">Список доступных в разделе <see cref="P:Microsoft.Office.Interop.Excel._Workbook.FileFormat" /> свойство.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-519">For a list of valid choices, see the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.FileFormat" /> property.</span>
          </span>
          <span data-ttu-id="3f68e-520">Для существующего файла формат по умолчанию — это последний формата файла, указанного; для нового файла по умолчанию используется формат версии Excel используется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-520">For an existing file, the default format is the last file format specified; for a new file, the default is the format of the version of Excel being used.</span>
          </span>
        </param>
        <param name="Password">
          <span data-ttu-id="3f68e-521">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-521">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-522">С учетом регистра строку (не более 15 символов), которое указывает, защиты паролем для файла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-522">A case-sensitive string (no more than 15 characters) that indicates the protection password to be given to the file.</span>
          </span>
        </param>
        <param name="WriteResPassword">
          <span data-ttu-id="3f68e-523">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-523">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-524">Строка, указывающая записи пароль для этого файла.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-524">A string that indicates the write-reservation password for this file.</span>
          </span>
          <span data-ttu-id="3f68e-525">Если файл сохранен в кодировке пароль и пароль не указан при открытии файла, файл открыт только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-525">If a file is saved with the password and the password isn't supplied when the file is opened, the file is opened as read-only.</span>
          </span>
        </param>
        <param name="ReadOnlyRecommended">
          <span data-ttu-id="3f68e-526">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-526">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-527">
            <b>Значение true,</b> чтобы отображать сообщение при открытии файла рекомендуя открыть файл только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-527">
              <b>True</b> to display a message when the file is opened recommending that the file be opened as read-only.</span>
          </span>
        </param>
        <param name="CreateBackup">
          <span data-ttu-id="3f68e-528">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-528">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-529">
            <b>Значение true,</b> Чтобы создать файл резервной копии.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-529">
              <b>True</b> to create a backup file.</span>
          </span>
        </param>
        <param name="AddToMru">
          <span data-ttu-id="3f68e-530">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-530">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-531">
            <b>Значение true,</b> Чтобы добавить эту книгу в список недавно использовавшихся файлов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-531">
              <b>True</b> to add this workbook to the list of recently used files.</span>
          </span>
          <span data-ttu-id="3f68e-532">Значение по умолчанию — <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-532">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="TextCodepage">
          <span data-ttu-id="3f68e-533">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-533">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-534">Не используется в США английская Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-534">Not used in U.S. English Microsoft Excel.</span>
          </span>
        </param>
        <param name="TextVisualLayout">
          <span data-ttu-id="3f68e-535">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-535">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-536">Не используется в США английская Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-536">Not used in U.S. English Microsoft Excel.</span>
          </span>
        </param>
        <param name="Local">
          <span data-ttu-id="3f68e-537">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-537">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-538">
            <b>Значение true,</b> сохранение файлов с языковыми Microsoft Excel (в том числе настройки панели управления).</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-538">
              <b>True</b> saves files against the language of Microsoft Excel (including control panel settings).</span>
          </span>
          <span data-ttu-id="3f68e-539">
            <b>Значение false</b> (по умолчанию) — сохранение файлов с языка Visual Basic для приложений (VBA) (как правило английский (США) Если проекта VBA, где выполняется Workbooks.Open из старого международные проекта VBA XL5/95).</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-539">
              <b>False</b> (default) saves files against the language of Visual Basic for Applications (VBA) (which is typically U.S. English unless the VBA project where Workbooks.Open is run from is an old internationalized XL5/95 VBA project).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f68e-540">Сохраняет изменения диаграммы или таблицы в другой файл.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-540">Saves changes to the chart or worksheet in a different file.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scenarios">
      <MemberSignature Language="C#" Value="public object Scenarios (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Scenarios([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Scenarios(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Scenarios (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(908)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="3f68e-541">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-541">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-542">Имя или номер сценария.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-542">The name or number of the scenario.</span>
          </span>
          <span data-ttu-id="3f68e-543">Позволяет указать несколько сценариев массив.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-543">Use an array to specify more than one scenario.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f68e-544">Возвращает объект, представляющий либо один сценарий ( <see cref="T:Microsoft.Office.Interop.Excel.Scenario" /> объект) или семейство этих сценариев ( <see cref="T:Microsoft.Office.Interop.Excel.Scenarios" /> объект) в рабочем листе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-544">Returns an object that represents either a single scenario (a <see cref="T:Microsoft.Office.Interop.Excel.Scenario" /> object) or a collection of scenarios (a <see cref="T:Microsoft.Office.Interop.Excel.Scenarios" /> object) on the worksheet.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scripts">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.Scripts Scripts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.Scripts Scripts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Scripts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Scripts As Scripts" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::Scripts ^ Scripts { Microsoft::Office::Core::Scripts ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1816)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1816)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.Scripts</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-545">Возвращает <see cref="T:Microsoft.Office.Core.Scripts" /> коллекции, которая содержит <see cref="T:Microsoft.Office.Core.Script" /> объектов, представляющих блоки кода в указанный документ или сценарий при сохранении в качестве веб-страницы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-545">Returns the <see cref="T:Microsoft.Office.Core.Scripts" /> collection, which contains <see cref="T:Microsoft.Office.Core.Script" /> objects representing blocks of script or code in the specified document when it’s saved as a Web page.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollArea">
      <MemberSignature Language="C#" Value="public string ScrollArea { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScrollArea" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ScrollArea" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollArea As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScrollArea { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1433)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1433)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1433)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-546">Возвращает или задает диапазон, в котором разрешена прокрутка виде ссылки на диапазон стиля A1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-546">Returns or sets the range where scrolling is allowed as an A1-style range reference.</span>
          </span>
          <span data-ttu-id="3f68e-547">Невозможно выбрать ячейки вне области прокрутки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-547">Cells outside the scroll area cannot be selected.</span>
          </span>
          <span data-ttu-id="3f68e-548">Для чтения и записи, <b>String</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-548">Read/write <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="3f68e-549">
            <para>Этому свойству присвоено значение пустая строка ("») для поддержки выбора ячейки для всего листа.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-549">
              <para>Set this property to the empty string ("") to enable cell selection for the entire sheet.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollBars">
      <MemberSignature Language="C#" Value="public object ScrollBars (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ScrollBars([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ScrollBars(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScrollBars (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(830)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="3f68e-550">Зарезервировано для внутреннего использования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-550">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (object Replace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select([in]object Replace) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Select(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (Optional Replace As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(235)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Replace" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Replace">
          <span data-ttu-id="3f68e-551">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-551">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-552">Объект для замены.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-552">The object to replace.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f68e-553">Выбор объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-553">Selects the object.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="3f68e-554">
            <para>Выберите ячейки или диапазона ячеек, используйте метод <b>Select</b> . Чтобы сделать одну ячейку активной ячейки, используйте <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Activate" /> метод.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-554">
              <para>To select a cell or a range of cells, use the <b>Select</b> method. To make a single cell the active cell, use the <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Activate" /> method.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBackgroundPicture">
      <MemberSignature Language="C#" Value="public void SetBackgroundPicture (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBackgroundPicture([in]string Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.SetBackgroundPicture(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBackgroundPicture (Filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBackgroundPicture(System::String ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1188)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="3f68e-555">
            <b>Строковое значение.</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-555">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="3f68e-556">Имя файла рисунка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-556">The name of the graphic file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f68e-557">Задание фонового рисунка для листа или диаграммы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-557">Sets the background graphic for a worksheet or chart.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shapes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shapes Shapes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Shapes Shapes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Shapes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Shapes As Shapes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Shapes ^ Shapes { Microsoft::Office::Interop::Excel::Shapes ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1377)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1377)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shapes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-558">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> объект, представляющий все фигуры на лист или лист диаграммы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-558">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> object that represents all the shapes on the worksheet or chart sheet.</span>
          </span>
          <span data-ttu-id="3f68e-559">Только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-559">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowAllData">
      <MemberSignature Language="C#" Value="public void ShowAllData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowAllData() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ShowAllData" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowAllData ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowAllData();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(794)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-560">Делает видимой все строки в настоящее время фильтрованный список.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-560">Makes all rows of the currently filtered list visible.</span>
          </span>
          <span data-ttu-id="3f68e-561">Если автофильтра, этот метод изменяется с помощью стрелок «Все».</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-561">If AutoFilter is in use, this method changes the arrows to "All."</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDataForm">
      <MemberSignature Language="C#" Value="public void ShowDataForm ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowDataForm() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ShowDataForm" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowDataForm ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowDataForm();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(409)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-562">Отображение формы данных, связанных с рабочего листа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-562">Displays the data form associated with the worksheet.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="3f68e-563">
            <para>Выполнение приостанавливается при использовании формы данных. При закрытии формы, выполнение возобновляется со строки, следующей метод <b>ShowDataForm</b> .</para>
            <para>Этот метод запускает пользовательской формы данных, если он существует.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-563">
              <para>Execution pauses while you’re using the data form. When you close the data form, execution resumes at the line following the <b>ShowDataForm</b> method.</para>
              <para>This method runs the custom data form, if one exists.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartTags">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SmartTags SmartTags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SmartTags SmartTags" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.SmartTags" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartTags As SmartTags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SmartTags ^ SmartTags { Microsoft::Office::Interop::Excel::SmartTags ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2016)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2016)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SmartTags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-564">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.SmartTags" /> объект, представляющий идентификатор для указанной ячейке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-564">Returns a <see cref="T:Microsoft.Office.Interop.Excel.SmartTags" /> object representing the identifier for the specified cell.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sort Sort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sort Sort" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Sort" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sort As Sort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sort ^ Sort { Microsoft::Office::Interop::Excel::Sort ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(880)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(880)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sort</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-565">Возвращает отсортированные значения в текущем рабочего листа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-565">Returns the sorted values in the current worksheet.</span>
          </span>
          <span data-ttu-id="3f68e-566">Только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-566">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.Sort" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Spinners">
      <MemberSignature Language="C#" Value="public object Spinners (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Spinners([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Spinners(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Spinners (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(838)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="3f68e-567">Зарезервировано для внутреннего использования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-567">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardHeight">
      <MemberSignature Language="C#" Value="public double StandardHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 StandardHeight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.StandardHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StandardHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double StandardHeight { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(407)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(407)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-568">Возвращает высоту по умолчанию все строки в рабочем листе в пунктах.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-568">Returns the standard (default) height of all the rows in the worksheet in points.</span>
          </span>
          <span data-ttu-id="3f68e-569">Только для чтения <b>Double</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-569">Read-only <b>Double</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardWidth">
      <MemberSignature Language="C#" Value="public double StandardWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 StandardWidth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.StandardWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double StandardWidth { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(408)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(408)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(408)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-570">Возвращает или задает ширину standard (по умолчанию) всех столбцов на листе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-570">Returns or sets the standard (default) width of all the columns in the worksheet.</span>
          </span>
          <span data-ttu-id="3f68e-571">Для чтения и записи, <b>Double</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-571">Read/write <b>Double</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="3f68e-572">
            <para>Единицы ширины столбца равна ширине одного знака в обычный стиль. Для пропорциональных шрифтов используется ширина символа 0 (ноль).</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-572">
              <para>One unit of column width is equal to the width of one character in the Normal style. For proportional fonts, the width of the character 0 (zero) is used.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tab">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Tab Tab { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Tab Tab" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Tab" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Tab As Tab" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Tab ^ Tab { Microsoft::Office::Interop::Excel::Tab ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1041)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1041)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Tab</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-573">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Tab" /> объект для диаграммы или листа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-573">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Tab" /> object for a chart or a worksheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextBoxes">
      <MemberSignature Language="C#" Value="public object TextBoxes (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object TextBoxes([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.TextBoxes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function TextBoxes (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(777)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="3f68e-574">Зарезервировано для внутреннего использования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-574">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransitionExpEval">
      <MemberSignature Language="C#" Value="public bool TransitionExpEval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransitionExpEval" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.TransitionExpEval" />
      <MemberSignature Language="VB.NET" Value="Public Property TransitionExpEval As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransitionExpEval { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(401)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(401)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(401)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-575">
            <b>Значение true,</b> Если Microsoft Excel с помощью правила вычисления выражений Lotus 1-2-3 рабочего листа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-575">
              <b>True</b> if Microsoft Excel uses Lotus 1-2-3 expression evaluation rules for the worksheet.</span>
          </span>
          <span data-ttu-id="3f68e-576">Для чтения и записи, <b>Boolean</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-576">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransitionFormEntry">
      <MemberSignature Language="C#" Value="public bool TransitionFormEntry { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransitionFormEntry" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.TransitionFormEntry" />
      <MemberSignature Language="VB.NET" Value="Public Property TransitionFormEntry As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransitionFormEntry { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(402)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(402)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(402)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-577">
            <b>Значение true,</b> Если Microsoft Excel с помощью правила ввода формул Lotus 1-2-3 рабочего листа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-577">
              <b>True</b> if Microsoft Excel uses Lotus 1-2-3 formula entry rules for the worksheet.</span>
          </span>
          <span data-ttu-id="3f68e-578">Для чтения и записи, <b>Boolean</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-578">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlSheetType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlSheetType Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As XlSheetType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlSheetType Type { Microsoft::Office::Interop::Excel::XlSheetType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlSheetType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-579">Возвращает или задает тип рабочего листа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-579">Returns or sets the worksheet type.</span>
          </span>
          <span data-ttu-id="3f68e-580">Только для чтения <see cref="T:Microsoft.Office.Interop.Excel.XlSheetType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-580">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlSheetType" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unprotect">
      <MemberSignature Language="C#" Value="public void Unprotect (object Password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unprotect([in]object Password) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Unprotect(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unprotect (Optional Password As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(285)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password">
          <span data-ttu-id="3f68e-581">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-581">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-582">Строка, указывающая с учетом регистра пароль, используемый для снятия защиты с листа или книги.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-582">A string that denotes the case-sensitive password to use to unprotect the sheet or workbook.</span>
          </span>
          <span data-ttu-id="3f68e-583">Если лист или книга не защищены паролем, этот аргумент игнорируется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-583">If the sheet or workbook isn't protected with a password, this argument is ignored.</span>
          </span>
          <span data-ttu-id="3f68e-584">Если опустить аргумент для листа, который был защищен паролем вы будет запрашиваться пароль.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-584">If you omit this argument for a sheet that's protected with a password, you'll be prompted for the password.</span>
          </span>
          <span data-ttu-id="3f68e-585">Если опустить аргумент для книги, защищенные паролем, происходит сбой метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-585">If you omit this argument for a workbook that's protected with a password, the method fails.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f68e-586">Снятие защиты листа или книги.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-586">Removes protection from a sheet or workbook.</span>
          </span>
          <span data-ttu-id="3f68e-587">Этот метод не оказывает влияния Если лист или книга незащищен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-587">This method has no effect if the sheet or workbook isn't protected.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="3f68e-588">
            <para>, Если забыт пароль, вы не может снять защиту с листа или книги. Рекомендуется хранить в надежном месте список паролей и соответствующие имена документов.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-588">
              <para>If you forget the password, you cannot unprotect the sheet or workbook. It's a good idea to keep a list of your passwords and their corresponding document names in a safe place.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UsedRange">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range UsedRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range UsedRange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.UsedRange" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UsedRange As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ UsedRange { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(412)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(412)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-589">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Range" /> объект, представляющий используемого диапазона на указанный лист.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-589">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the used range on the specified worksheet.</span>
          </span>
          <span data-ttu-id="3f68e-590">Только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-590">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlSheetVisibility Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlSheetVisibility Visible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As XlSheetVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlSheetVisibility Visible { Microsoft::Office::Interop::Excel::XlSheetVisibility get(); void set(Microsoft::Office::Interop::Excel::XlSheetVisibility value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlSheetVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-591">Определяет, является ли объект видимым.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-591">Determines whether the object is visible.</span>
          </span>
          <span data-ttu-id="3f68e-592">Чтение и запись <see cref="T:Microsoft.Office.Interop.Excel.XlSheetVisibility" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-592">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlSheetVisibility" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="3f68e-593">
            <para>Свойство <b>Visible</b> для элемента сводной таблицы имеет <b>значение True</b> , если элемент в данный момент виден в таблице.</para>
            <para>Если свойство <b>Visible</b> для имени задано значение <b>False</b>, имя не будет отображаться в диалоговом окне Определение имени.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-593">
              <para>The <b>Visible</b> property for a PivotTable item is <b>True</b> if the item is currently visible in the table.</para>
              <para>If you set the <b>Visible</b> property for a name to <b>False</b>, the name won't appear in the Define Name dialog box.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VPageBreaks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.VPageBreaks VPageBreaks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.VPageBreaks VPageBreaks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.VPageBreaks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VPageBreaks As VPageBreaks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::VPageBreaks ^ VPageBreaks { Microsoft::Office::Interop::Excel::VPageBreaks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1419)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1419)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.VPageBreaks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3f68e-594">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.VPageBreaks" /> разрывов коллекции, представляющей вертикальной страницы на листе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-594">Returns a <see cref="T:Microsoft.Office.Interop.Excel.VPageBreaks" /> collection that represents the vertical page breaks on the sheet.</span>
          </span>
          <span data-ttu-id="3f68e-595">Только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-595">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDataQuery">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range XmlDataQuery (string XPath, object SelectionNamespaces, object Map);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range XmlDataQuery([in]string XPath, [in]object SelectionNamespaces, [in]object Map) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.XmlDataQuery(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function XmlDataQuery (XPath As String, Optional SelectionNamespaces As Object, Optional Map As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2260)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="XPath" Type="System.String" />
        <Parameter Name="SelectionNamespaces" Type="System.Object" />
        <Parameter Name="Map" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="XPath">
          <span data-ttu-id="3f68e-596">Требуется <b>объект</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-596">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-597">Выражение XPath для запроса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-597">The XPath to query for.</span>
          </span>
        </param>
        <param name="SelectionNamespaces">
          <span data-ttu-id="3f68e-598">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-598">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-599">Разделитель пробел <b>строку</b> , содержащую пространств имен, используемых в параметр XPath.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-599">A space-delimited <b>String</b> that contains the namespaces referenced in the XPath parameter.</span>
          </span>
          <span data-ttu-id="3f68e-600">Возникнет ошибка во время выполнения, если один из заданных пространств имен не может быть разрешен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-600">A run-time error will be generated if one of the specified namespaces cannot be resolved.</span>
          </span>
        </param>
        <param name="Map">
          <span data-ttu-id="3f68e-601">Необязательные <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-601">Optional <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />.</span>
          </span>
          <span data-ttu-id="3f68e-602">Укажите сопоставления XML, чтобы запросить XPath в пределах определенной карты.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-602">Specify an XML map if you want to query for the XPath within a specific map.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f68e-603">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Range" /> объект, который представляет ячейки, сопоставленные с конкретной XPath.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-603">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the cells mapped to a particular XPath.</span>
          </span>
          <span data-ttu-id="3f68e-604">Возвращает <b>значение Nothing</b> , если указанный XPath не сопоставлен с рабочим листом, или если сопоставленный диапазон пуст.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-604">Returns <b>Nothing</b> if the specified XPath has not been mapped to the worksheet or if the mapped range is empty.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="3f68e-605">
            <para>Средства XML, за исключением сохранения файлов в формате таблиц XML, доступны только в профессиональном выпуске Microsoft Office 2003 и Microsoft Office Excel 2003.</para>
            <para>Если выражение XPath в пределах столбца в XML-список, объекту <b>диапазона</b> возвращаемых не включает строки заголовка или вставить строку.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-605">
              <para>XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</para>
              <para>If the XPath exists within a column in an XML list, the <b>Range</b> object returned does not include the header row or the Insert row.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlMapQuery">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range XmlMapQuery (string XPath, object SelectionNamespaces, object Map);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range XmlMapQuery([in]string XPath, [in]object SelectionNamespaces, [in]object Map) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.XmlMapQuery(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function XmlMapQuery (XPath As String, Optional SelectionNamespaces As Object, Optional Map As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2263)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="XPath" Type="System.String" />
        <Parameter Name="SelectionNamespaces" Type="System.Object" />
        <Parameter Name="Map" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="XPath">
          <span data-ttu-id="3f68e-606">Требуется <b>объект</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-606">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-607">Выражение XPath для запроса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-607">The XPath to query for.</span>
          </span>
        </param>
        <param name="SelectionNamespaces">
          <span data-ttu-id="3f68e-608">Необязательный элемент <b>Object</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-608">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="3f68e-609">Разделитель пробел <b>строку</b> , содержащую пространств имен, используемых в параметр XPath.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-609">A space-delimited <b>String</b> that contains the namespaces referenced in the XPath parameter.</span>
          </span>
          <span data-ttu-id="3f68e-610">Возникнет ошибка во время выполнения, если один из заданных пространств имен не может быть разрешен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-610">A run-time error will be generated if one of the specified namespaces cannot be resolved.</span>
          </span>
        </param>
        <param name="Map">
          <span data-ttu-id="3f68e-611">Необязательные <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-611">Optional <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />.</span>
          </span>
          <span data-ttu-id="3f68e-612">Укажите сопоставления XML, чтобы запросить XPath в пределах определенной карты.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-612">Specify an XML map if you want to query for the XPath within a specific map.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f68e-613">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Range" /> объект, который представляет ячейки, сопоставленные с конкретной XPath.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-613">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the cells mapped to a particular XPath.</span>
          </span>
          <span data-ttu-id="3f68e-614">Возвращает <b>значение Nothing</b> , если указанный XPath не сопоставлен с рабочим листом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-614">Returns <b>Nothing</b> if the specified XPath has not been mapped to the worksheet.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="3f68e-615">
            <para>Средства XML, за исключением сохранения файлов в формате таблиц XML, доступны только в профессиональном выпуске Microsoft Office 2003 и Microsoft Office Excel 2003.</para>
            <para>В отличие от <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.XmlDataQuery(System.String,System.Object,System.Object)" /> метод, метод <b>XmlMapQuery</b> возвращает целый столбец списка XML, включая строки заголовка и вставить строку.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3f68e-615">
              <para>XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</para>
              <para>Unlike the <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.XmlDataQuery(System.String,System.Object,System.Object)" /> method, the <b>XmlMapQuery</b> method returns the entire column of an XML list, including the header row and the Insert row.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>