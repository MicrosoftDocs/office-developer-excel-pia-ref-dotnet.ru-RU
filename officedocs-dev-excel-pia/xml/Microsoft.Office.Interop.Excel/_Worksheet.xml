<Type Name="_Worksheet" FullName="Microsoft.Office.Interop.Excel._Worksheet">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7f0ab611aa4d579db9ac504ef7ee328ea8f5b52e" /><Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/24/2018" /><Meta Name="ms.locfileid" Value="20583134" /></Metadata><TypeSignature Language="C#" Value="public interface _Worksheet" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _Worksheet" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel._Worksheet" />
  <TypeSignature Language="VB.NET" Value="Public Interface _Worksheet" />
  <TypeSignature Language="C++ CLI" Value="public interface class _Worksheet" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208D8-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4288)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ce2cc-101">Это основной интерфейс в компонентном классе COM, который требуется управляемому программному коду для взаимодействия с соответствующим объектом COM.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-101">This is a primary interface in a COM coclass that is required by managed code for interoperability with the corresponding COM object.</span></span> <span data-ttu-id="ce2cc-102">Используйте этот основной интерфейс только в тех случаях, когда метод, который предполагается использовать, имеет такое же имя, как событие объекта COM; в таких случаях для вызова метода приведите к этому интерфейсу, для соединения с событием приведите к интерфейсу последних событий.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-102">Use this primary interface only when the method you want to use shares the same name as an event of the COM object; in this case, cast to this interface to call the method, and cast to the latest events interface to connect to the event.</span></span> <span data-ttu-id="ce2cc-103">Иначе используйте интерфейс .NET, который создается но основе компонентного класса COM для доступа к методам, свойствам и событиям объекта COM.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-103">Otherwise, use the .NET interface that is derived from the COM coclass to access methods, properties, and events of the COM object.</span></span> <span data-ttu-id="ce2cc-104">Для получения дополнительных сведений об объекте COM см <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" />.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-104">For more information about the COM object, see <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" />.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="_CheckSpelling">
      <MemberSignature Language="C#" Value="public void _CheckSpelling (object CustomDictionary, object IgnoreUppercase, object AlwaysSuggest, object SpellLang, object IgnoreFinalYaa, object SpellScript);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _CheckSpelling([in]object CustomDictionary, [in]object IgnoreUppercase, [in]object AlwaysSuggest, [in]object SpellLang, [in]object IgnoreFinalYaa, [in]object SpellScript) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet._CheckSpelling(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _CheckSpelling (Optional CustomDictionary As Object, Optional IgnoreUppercase As Object, Optional AlwaysSuggest As Object, Optional SpellLang As Object, Optional IgnoreFinalYaa As Object, Optional SpellScript As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1817)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CustomDictionary" Type="System.Object" />
        <Parameter Name="IgnoreUppercase" Type="System.Object" />
        <Parameter Name="AlwaysSuggest" Type="System.Object" />
        <Parameter Name="SpellLang" Type="System.Object" />
        <Parameter Name="IgnoreFinalYaa" Type="System.Object" />
        <Parameter Name="SpellScript" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="CustomDictionary">To be added.</param>
        <param name="IgnoreUppercase">To be added.</param>
        <param name="AlwaysSuggest">To be added.</param>
        <param name="SpellLang">To be added.</param>
        <param name="IgnoreFinalYaa">To be added.</param>
        <param name="SpellScript">To be added.</param>
        <summary><span data-ttu-id="ce2cc-105">Зарезервировано для внутреннего использования.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-105">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_CodeName">
      <MemberSignature Language="C#" Value="public string _CodeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string _CodeName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet._CodeName" />
      <MemberSignature Language="VB.NET" Value="Public Property _CodeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ _CodeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147418112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147418112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-2147418112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-106">Зарезервировано для внутреннего использования.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-106">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_DisplayRightToLeft">
      <MemberSignature Language="C#" Value="public int _DisplayRightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 _DisplayRightToLeft" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet._DisplayRightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Property _DisplayRightToLeft As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int _DisplayRightToLeft { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(648)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(648)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(648)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-107">Зарезервировано для внутреннего использования.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-107">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Evaluate">
      <MemberSignature Language="C#" Value="public object _Evaluate (object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _Evaluate([in]object Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet._Evaluate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _Evaluate (Name As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ _Evaluate(System::Object ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-5)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">To be added.</param>
        <summary><span data-ttu-id="ce2cc-108">Зарезервировано для внутреннего использования.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-108">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_PasteSpecial">
      <MemberSignature Language="C#" Value="public void _PasteSpecial (object Format, object Link, object DisplayAsIcon, object IconFileName, object IconIndex, object IconLabel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _PasteSpecial([in]object Format, [in]object Link, [in]object DisplayAsIcon, [in]object IconFileName, [in]object IconIndex, [in]object IconLabel) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet._PasteSpecial(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _PasteSpecial (Optional Format As Object, Optional Link As Object, Optional DisplayAsIcon As Object, Optional IconFileName As Object, Optional IconIndex As Object, Optional IconLabel As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1027)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Format" Type="System.Object" />
        <Parameter Name="Link" Type="System.Object" />
        <Parameter Name="DisplayAsIcon" Type="System.Object" />
        <Parameter Name="IconFileName" Type="System.Object" />
        <Parameter Name="IconIndex" Type="System.Object" />
        <Parameter Name="IconLabel" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Format">To be added.</param>
        <param name="Link">To be added.</param>
        <param name="DisplayAsIcon">To be added.</param>
        <param name="IconFileName">To be added.</param>
        <param name="IconIndex">To be added.</param>
        <param name="IconLabel">To be added.</param>
        <summary><span data-ttu-id="ce2cc-109">Зарезервировано для внутреннего использования.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-109">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_PrintOut">
      <MemberSignature Language="C#" Value="public void _PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(905)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(7)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <summary><span data-ttu-id="ce2cc-110">Зарезервировано для внутреннего использования.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-110">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Protect">
      <MemberSignature Language="C#" Value="public void _Protect (object Password, object DrawingObjects, object Contents, object Scenarios, object UserInterfaceOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _Protect([in]object Password, [in]object DrawingObjects, [in]object Contents, [in]object Scenarios, [in]object UserInterfaceOnly) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet._Protect(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _Protect (Optional Password As Object, Optional DrawingObjects As Object, Optional Contents As Object, Optional Scenarios As Object, Optional UserInterfaceOnly As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(282)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(5)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="DrawingObjects" Type="System.Object" />
        <Parameter Name="Contents" Type="System.Object" />
        <Parameter Name="Scenarios" Type="System.Object" />
        <Parameter Name="UserInterfaceOnly" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password">To be added.</param>
        <param name="DrawingObjects">To be added.</param>
        <param name="Contents">To be added.</param>
        <param name="Scenarios">To be added.</param>
        <param name="UserInterfaceOnly">To be added.</param>
        <summary><span data-ttu-id="ce2cc-111">Зарезервировано для внутреннего использования.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-111">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_SaveAs">
      <MemberSignature Language="C#" Value="public void _SaveAs (string Filename, object FileFormat, object Password, object WriteResPassword, object ReadOnlyRecommended, object CreateBackup, object AddToMru, object TextCodepage, object TextVisualLayout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _SaveAs([in]string Filename, [in]object FileFormat, [in]object Password, [in]object WriteResPassword, [in]object ReadOnlyRecommended, [in]object CreateBackup, [in]object AddToMru, [in]object TextCodepage, [in]object TextVisualLayout) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet._SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _SaveAs (Filename As String, Optional FileFormat As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional ReadOnlyRecommended As Object, Optional CreateBackup As Object, Optional AddToMru As Object, Optional TextCodepage As Object, Optional TextVisualLayout As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(284)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(9)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="FileFormat" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="ReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="CreateBackup" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
        <Parameter Name="TextCodepage" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="FileFormat">To be added.</param>
        <param name="Password">To be added.</param>
        <param name="WriteResPassword">To be added.</param>
        <param name="ReadOnlyRecommended">To be added.</param>
        <param name="CreateBackup">To be added.</param>
        <param name="AddToMru">To be added.</param>
        <param name="TextCodepage">To be added.</param>
        <param name="TextVisualLayout">To be added.</param>
        <summary><span data-ttu-id="ce2cc-112">Зарезервировано для внутреннего использования.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-112">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Activate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Activate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Activate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(304)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ce2cc-113">Делает текущий лист активным.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-113">Makes the current sheet the active sheet.</span></span> <span data-ttu-id="ce2cc-114">Эквивалентно щелчку вкладки листа.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-114">Equivalent to clicking the sheet's tab.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-115">Если используется без квалификатора объекта, это свойство возвращает <see cref="T:Microsoft.Office.Interop.Excel.Application" /> объект, представляющий приложение Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-115">When used without an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span></span> <span data-ttu-id="ce2cc-116">Если используется с квалификатором объекта, это свойство возвращает объект <b>Application</b>, который представляет создателя указанного объекта (вы можете задать это свойство с объектом OLE-автоматизации для возврата приложения этого объекта).</span><span class="sxs-lookup"><span data-stu-id="ce2cc-116">When used with an object qualifier, this property returns an <b>Application</b> object that represents the creator of the specified object (you can use this property with an OLE Automation object to return the application of that object).</span></span> <span data-ttu-id="ce2cc-117">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-117">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Arcs">
      <MemberSignature Language="C#" Value="public object Arcs (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Arcs([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Arcs(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Arcs (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(760)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="ce2cc-118">Зарезервировано для внутреннего использования.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-118">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFilter">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.AutoFilter AutoFilter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.AutoFilter AutoFilter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.AutoFilter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AutoFilter As AutoFilter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::AutoFilter ^ AutoFilter { Microsoft::Office::Interop::Excel::AutoFilter ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(793)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(793)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.AutoFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-119">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.AutoFilter" /> объект, если фильтрация включена.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-119">Returns an <see cref="T:Microsoft.Office.Interop.Excel.AutoFilter" /> object if filtering is on.</span></span> <span data-ttu-id="ce2cc-120">Возвращает <b>значение Nothing</b> , если фильтрация отключена.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-120">Returns <b>Nothing</b> if filtering is off.</span></span> <span data-ttu-id="ce2cc-121">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-121">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="ce2cc-122">Чтобы создать объект <b>автофильтра</b> для листа, необходимо включить функцию автофильтрации для диапазона на листе вручную или с помощью <see cref="M:Microsoft.Office.Interop.Excel.Range.AutoFilter(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlAutoFilterOperator,System.Object,System.Object)" /> метода <see cref="T:Microsoft.Office.Interop.Excel.Range" /> объекта.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-122">To create an <b>AutoFilter</b> object for a worksheet, you must turn autofiltering on for a range on the worksheet either manually or using the <see cref="M:Microsoft.Office.Interop.Excel.Range.AutoFilter(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlAutoFilterOperator,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFilterMode">
      <MemberSignature Language="C#" Value="public bool AutoFilterMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoFilterMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.AutoFilterMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoFilterMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoFilterMode { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(792)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(792)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(792)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-123"><b>Значение true</b> , если стрелки раскрывающегося меню автофильтра отображаются на листе.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-123"><b>True</b> if the AutoFilter drop-down arrows are currently displayed on the sheet.</span></span> <span data-ttu-id="ce2cc-124">Это свойство не зависит от <see cref="P:Microsoft.Office.Interop.Excel._Worksheet.FilterMode" /> свойства.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-124">This property is independent of the <see cref="P:Microsoft.Office.Interop.Excel._Worksheet.FilterMode" /> property.</span></span> <span data-ttu-id="ce2cc-125">Для чтения и записи, <b>Boolean</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-125">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="ce2cc-126">Это свойство возвращает <b>значение true</b> , если стрелки раскрывающихся раскрывающихся сообщений в данный момент отображаются.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-126">This property returns <b>True</b> if the drop-down arrows are currently displayed.</span></span> <span data-ttu-id="ce2cc-127">Для этого свойства можно задать <b>значение false</b> , чтобы удалить стрелки, но задать для этого свойства значение <b>true</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-127">You can set this property to <b>False</b> to remove the arrows, but you cannot set it to <b>True</b>.</span></span> <span data-ttu-id="ce2cc-128">Используйте <see cref="M:Microsoft.Office.Interop.Excel.Range.AutoFilter(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlAutoFilterOperator,System.Object,System.Object)" /> метод, чтобы отфильтровать список и отобразить стрелки раскрывающегося списка.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-128">Use the <see cref="M:Microsoft.Office.Interop.Excel.Range.AutoFilter(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlAutoFilterOperator,System.Object,System.Object)" /> method to filter a list and display the drop-down arrows.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Buttons">
      <MemberSignature Language="C#" Value="public object Buttons (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Buttons([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Buttons(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Buttons (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(557)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="ce2cc-129">Зарезервировано для внутреннего использования.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-129">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Calculate">
      <MemberSignature Language="C#" Value="public void Calculate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Calculate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Calculate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Calculate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Calculate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(279)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ce2cc-130">Вычисляет все открытые книги, определенный лист в книге или определенный диапазон ячеек на листе, как показано в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-130">Calculates all open workbooks, a specific worksheet in a workbook, or a specified range of cells on a worksheet, as shown in the following table.</span></span></summary>
        <remarks><list type="table">
            <item>
              <term><span data-ttu-id="ce2cc-131">Все открытые книги</span><span class="sxs-lookup"><span data-stu-id="ce2cc-131">All open workbooks</span></span></term>
              <description><span data-ttu-id="ce2cc-132">Application. Calculate</span><span class="sxs-lookup"><span data-stu-id="ce2cc-132">Application.Calculate</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="ce2cc-133">Определенный лист</span><span class="sxs-lookup"><span data-stu-id="ce2cc-133">A specific worksheet</span></span></term>
              <description><span data-ttu-id="ce2cc-134">Листы (1). Вычисление</span><span class="sxs-lookup"><span data-stu-id="ce2cc-134">Worksheets(1).Calculate</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="ce2cc-135">Указанный диапазон</span><span class="sxs-lookup"><span data-stu-id="ce2cc-135">A specified range</span></span></term>
              <description><span data-ttu-id="ce2cc-136">Листы (1). Rows (2). Вычисление</span><span class="sxs-lookup"><span data-stu-id="ce2cc-136">Worksheets(1).Rows(2).Calculate</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Cells">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Cells { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Cells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Cells" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cells As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Cells { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(238)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(238)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-137">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Range" /> объект, который представляет все ячейки на листе (а не только используемые в данный момент ячейки).</span><span class="sxs-lookup"><span data-stu-id="ce2cc-137">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the cells on the worksheet (not just the cells that are currently in use).</span></span> <span data-ttu-id="ce2cc-138">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-138">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="ce2cc-139">Так как <see cref="P:Microsoft.Office.Interop.Excel.Worksheets.Item(System.Object)" /> свойство является свойством по умолчанию для объекта <b>Range</b> , можно указать индекс строки и столбца сразу же после ключевого слова <b>Cells</b> .</span><span class="sxs-lookup"><span data-stu-id="ce2cc-139">Because the <see cref="P:Microsoft.Office.Interop.Excel.Worksheets.Item(System.Object)" /> property is the default property for the <b>Range</b> object, you can specify the row and column index immediately after the <b>Cells</b> keyword.</span></span> <span data-ttu-id="ce2cc-140">Дополнительные сведения можно найти в разделе свойство <b>Item</b> .</span><span class="sxs-lookup"><span data-stu-id="ce2cc-140">For more information, see the <b>Item</b> property.</span></span></para>
          <para><span data-ttu-id="ce2cc-141">При использовании этого свойства без квалификатора объекта возвращается объект <b>Range</b>, который представляет все ячейки на активном листе.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-141">Using this property without an object qualifier returns a <b>Range</b> object that represents all the cells on the active worksheet.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartObjects">
      <MemberSignature Language="C#" Value="public object ChartObjects (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ChartObjects([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ChartObjects(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChartObjects (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1060)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="ce2cc-142">Необязательный <b>вариант</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-142">Optional <b>Variant</b>.</span></span> <span data-ttu-id="ce2cc-143">Имя или номер диаграммы.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-143">The name or number of the chart.</span></span> <span data-ttu-id="ce2cc-144">Этот аргумент может быть массивом, чтобы указать более одной диаграммы.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-144">This argument can be an array to specify more than one chart.</span></span></param>
        <summary><span data-ttu-id="ce2cc-145">Возвращает объект, представляющий либо одну внедренную диаграмму ( <see cref="T:Microsoft.Office.Interop.Excel.ChartObject" /> объект), либо коллекцию всех внедренных диаграмм ( <see cref="T:Microsoft.Office.Interop.Excel.ChartObjects" /> объект) на листе.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-145">Returns an object that represents either a single embedded chart (a <see cref="T:Microsoft.Office.Interop.Excel.ChartObject" /> object) or a collection of all the embedded charts (a <see cref="T:Microsoft.Office.Interop.Excel.ChartObjects" /> object) on the sheet.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="ce2cc-146">Этот метод не эквивалентен <see cref="T:Microsoft.Office.Interop.Excel.Charts" /> свойству.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-146">This method isn't equivalent to the <see cref="T:Microsoft.Office.Interop.Excel.Charts" /> property.</span></span> <span data-ttu-id="ce2cc-147">Этот метод возвращает внедренные диаграммы; Свойство <b>Charts</b> возвращает листы диаграммы.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-147">This method returns embedded charts; the <b>Charts</b> property returns chart sheets.</span></span> <span data-ttu-id="ce2cc-148">Используйте <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> свойство, чтобы возвратить <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> объект для внедренной диаграммы.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-148">Use the <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> property to return the <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object for an embedded chart.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckBoxes">
      <MemberSignature Language="C#" Value="public object CheckBoxes (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CheckBoxes([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.CheckBoxes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckBoxes (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(824)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="ce2cc-149">Зарезервировано для внутреннего использования.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-149">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSpelling">
      <MemberSignature Language="C#" Value="public void CheckSpelling (object CustomDictionary, object IgnoreUppercase, object AlwaysSuggest, object SpellLang);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckSpelling([in]object CustomDictionary, [in]object IgnoreUppercase, [in]object AlwaysSuggest, [in]object SpellLang) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.CheckSpelling(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckSpelling (Optional CustomDictionary As Object, Optional IgnoreUppercase As Object, Optional AlwaysSuggest As Object, Optional SpellLang As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(505)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CustomDictionary" Type="System.Object" />
        <Parameter Name="IgnoreUppercase" Type="System.Object" />
        <Parameter Name="AlwaysSuggest" Type="System.Object" />
        <Parameter Name="SpellLang" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="CustomDictionary"><span data-ttu-id="ce2cc-150">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-150">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-151">Строка, указывающая имя файла настраиваемого словаря, который необходимо проверить, если слово не найдено в основном словаре.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-151">A string that indicates the file name of the custom dictionary to be examined if the word isn't found in the main dictionary.</span></span> <span data-ttu-id="ce2cc-152">Если этот аргумент опущен, используется текущий словарь.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-152">If this argument is omitted, the currently specified dictionary is used.</span></span></param>
        <param name="IgnoreUppercase"><span data-ttu-id="ce2cc-153">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-153">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-154"><b>Значение true</b> , чтобы Microsoft Excel проигнорировал слова, которые являются прописными.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-154"><b>True</b> to have Microsoft Excel ignore words that are all uppercase.</span></span> <span data-ttu-id="ce2cc-155">Если выбрано <b>значение false</b> , Microsoft Excel проверяет слова, которые являются прописными.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-155"><b>False</b> to have Microsoft Excel check words that are all uppercase.</span></span> <span data-ttu-id="ce2cc-156">Если этот аргумент не указан, будет использоваться текущий параметр.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-156">If this argument is omitted, the current setting will be used.</span></span></param>
        <param name="AlwaysSuggest"><span data-ttu-id="ce2cc-157">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-157">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-158"><b>Значение true</b> , если в Microsoft Excel отображается список предлагаемых альтернативных слов, если обнаружена Неправильное правописание.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-158"><b>True</b> to have Microsoft Excel display a list of suggested alternate spellings when an incorrect spelling is found.</span></span> <span data-ttu-id="ce2cc-159"><b>Значение false</b> , чтобы Microsoft Excel ожидал ввода правильного правописания.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-159"><b>False</b> to have Microsoft Excel wait for you to input the correct spelling.</span></span> <span data-ttu-id="ce2cc-160">Если этот аргумент не указан, будет использоваться текущий параметр.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-160">If this argument is omitted, the current setting will be used.</span></span></param>
        <param name="SpellLang"><span data-ttu-id="ce2cc-161">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-161">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-162">Язык используемого словаря.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-162">The language of the dictionary being used.</span></span> <span data-ttu-id="ce2cc-163">Может быть одним из значений <b>мсолангуажеид</b> , используемых <see cref="P:Microsoft.Office.Core.LanguageSettings.LanguageID(Microsoft.Office.Core.MsoAppLanguageID)" /> свойством.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-163">Can be one of the <b>MsoLanguageID</b> values used by the <see cref="P:Microsoft.Office.Core.LanguageSettings.LanguageID(Microsoft.Office.Core.MsoAppLanguageID)" /> property.</span></span></param>
        <summary><span data-ttu-id="ce2cc-164">Проверяет правописание объекта.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-164">Checks the spelling of an object.</span></span> <span data-ttu-id="ce2cc-165">В этой форме нет возвращаемого значения; В Microsoft Excel отображается диалоговое окно "Правописание".</span><span class="sxs-lookup"><span data-stu-id="ce2cc-165">This form has no return value; Microsoft Excel displays the Spelling dialog box.</span></span></summary>
        <remarks><para><span data-ttu-id="ce2cc-166">Используйте этот метод для проверки верхних и нижних колонтитулов и объектов на листе.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-166">Use this method to check headers, footers, and objects on a worksheet.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CircleInvalid">
      <MemberSignature Language="C#" Value="public void CircleInvalid ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CircleInvalid() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.CircleInvalid" />
      <MemberSignature Language="VB.NET" Value="Public Sub CircleInvalid ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CircleInvalid();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1437)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ce2cc-167">Раскружков недопустимых записей на листе.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-167">Circles invalid entries on the worksheet.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CircularReference">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range CircularReference { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range CircularReference" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.CircularReference" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CircularReference As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ CircularReference { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1069)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1069)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-168">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Range" /> объект, представляющий диапазон, содержащий первую циклическую ссылку на листе, или <b>значение Nothing</b> , если на листе нет циклической ссылки.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-168">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the range containing the first circular reference on the sheet, or returns <b>Nothing</b> if there's no circular reference on the sheet.</span></span> <span data-ttu-id="ce2cc-169">Перед выполнением вычисления необходимо удалить циклическую ссылку.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-169">The circular reference must be removed before calculation can proceed.</span></span> <span data-ttu-id="ce2cc-170">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-170">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearArrows">
      <MemberSignature Language="C#" Value="public void ClearArrows ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearArrows() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ClearArrows" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearArrows ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearArrows();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(970)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ce2cc-171">Удаляет из листа стрелки трассировки.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-171">Clears the tracer arrows from the worksheet.</span></span> <span data-ttu-id="ce2cc-172">Стрелки слежения добавляются с помощью функции аудита.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-172">Tracer arrows are added by using the auditing feature.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearCircles">
      <MemberSignature Language="C#" Value="public void ClearCircles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearCircles() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ClearCircles" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearCircles ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearCircles();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1436)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ce2cc-173">Удаляет круги из недопустимых записей на листе.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-173">Clears circles from invalid entries on the worksheet.</span></span></summary>
        <remarks><para><span data-ttu-id="ce2cc-174">Используйте <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.CircleInvalid" /> метод для круга ячеек, содержащих недопустимые данные.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-174">Use the <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.CircleInvalid" /> method to circle cells that contain invalid data.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeName">
      <MemberSignature Language="C#" Value="public string CodeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CodeName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.CodeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CodeName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1373)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1373)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-175">Возвращает имя кода для объекта.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-175">Returns the code name for the object.</span></span> <span data-ttu-id="ce2cc-176">Только для чтения, <b>String</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-176">Read-only <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="ce2cc-177">Значение, которое отображается в ячейке справа от <b>(имя)</b> в окне Свойства, — это имя выбранного объекта.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-177">The value that you see in the cell to the right of <b>(Name)</b> in the Properties window is the code name of the selected object.</span></span> <span data-ttu-id="ce2cc-178">Во время создания можно изменить имя кода объекта, изменив это значение.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-178">At design time, you can change the code name of an object by changing this value.</span></span> <span data-ttu-id="ce2cc-179">Невозможно программно изменить это свойство во время выполнения.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-179">You cannot programmatically change this property at run time.</span></span></para>
          <para><span data-ttu-id="ce2cc-180">Имя кода для объекта можно использовать вместо выражения, которое возвращает объект.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-180">The code name for an object can be used in place of an expression that returns the object.</span></span></para>
          <para><span data-ttu-id="ce2cc-181">Имя листа может отличаться от имени кода.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-181">It’s possible for the sheet name to be different from the code name.</span></span> <span data-ttu-id="ce2cc-182">При создании листа имя листа и имя кода одинаковы, но изменение имени листа не приводит к изменению имени кода, а изменение имени кода (с помощью окна свойств в редакторе Visual Basic) не приводит к изменению имени листа.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-182">When you create a sheet, the sheet name and code name are the same, but changing the sheet name doesn’t change the code name, and changing the code name (using the Properties window in the Visual Basic Editor) doesn’t change the sheet name.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Columns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Columns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Columns As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Columns { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(241)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(241)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-183">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Range" /> объект, который представляет все столбцы на указанном листе.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-183">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the columns on the specified worksheet.</span></span> <span data-ttu-id="ce2cc-184">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-184">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Comments">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Comments Comments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Comments Comments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Comments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Comments As Comments" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Comments ^ Comments { Microsoft::Office::Interop::Excel::Comments ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(575)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(575)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Comments</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-185">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Comments" /> коллекцию, которая представляет все комментарии для указанного листа.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-185">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Comments" /> collection that represents all the comments for the specified worksheet.</span></span> <span data-ttu-id="ce2cc-186">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-186">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConsolidationFunction">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlConsolidationFunction ConsolidationFunction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlConsolidationFunction ConsolidationFunction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ConsolidationFunction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConsolidationFunction As XlConsolidationFunction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlConsolidationFunction ConsolidationFunction { Microsoft::Office::Interop::Excel::XlConsolidationFunction get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(789)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(789)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlConsolidationFunction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-187">Возвращает код функции, используемый для текущей консолидации.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-187">Returns the function code used for the current consolidation.</span></span> <span data-ttu-id="ce2cc-188">Может быть одной из <see cref="T:Microsoft.Office.Interop.Excel.XlConsolidationFunction" /> констант.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-188">Can be one of the <see cref="T:Microsoft.Office.Interop.Excel.XlConsolidationFunction" /> constants.</span></span> <span data-ttu-id="ce2cc-189">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-189">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConsolidationOptions">
      <MemberSignature Language="C#" Value="public object ConsolidationOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ConsolidationOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ConsolidationOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConsolidationOptions As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ConsolidationOptions { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(790)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(790)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-190">Возвращает массив параметров консолидации из трех элементов, как показано в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-190">Returns a three-element array of consolidation options, as shown in the following table.</span></span> <span data-ttu-id="ce2cc-191">Если элемент имеет <b>значение true</b>, этот параметр задается.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-191">If the element is <b>True</b>, that option is set.</span></span> <span data-ttu-id="ce2cc-192"><b>Объект</b>только для чтения.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-192">Read-only <b>Object</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><list type="table">
            <item>
              <term><span data-ttu-id="ce2cc-193">1,1</span><span class="sxs-lookup"><span data-stu-id="ce2cc-193">1</span></span></term>
              <description><span data-ttu-id="ce2cc-194">Используйте метки в верхней строке.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-194">Use labels in top row.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="ce2cc-195">2</span><span class="sxs-lookup"><span data-stu-id="ce2cc-195">2</span></span></term>
              <description><span data-ttu-id="ce2cc-196">Использование меток в левом столбце.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-196">Use labels in left column.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="ce2cc-197">4</span><span class="sxs-lookup"><span data-stu-id="ce2cc-197">3</span></span></term>
              <description><span data-ttu-id="ce2cc-198">Создание ссылок на исходные данные.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-198">Create links to source data.</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ConsolidationSources">
      <MemberSignature Language="C#" Value="public object ConsolidationSources { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ConsolidationSources" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ConsolidationSources" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConsolidationSources As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ConsolidationSources { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(791)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(791)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-199">Возвращает массив строковых значений, которые наименают исходные листы для текущей консолидации листа.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-199">Returns an array of string values that name the source sheets for the worksheet's current consolidation.</span></span> <span data-ttu-id="ce2cc-200">Возвращает значение <b>Empty</b> , если на листе отсутствует консолидация.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-200">Returns <b>Empty</b> if there's no consolidation on the sheet.</span></span> <span data-ttu-id="ce2cc-201"><b>Объект</b>только для чтения.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-201">Read-only <b>Object</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public void Copy (object Before, object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy([in]object Before, [in]object After) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Copy(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Copy (Optional Before As Object, Optional After As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(551)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before"><span data-ttu-id="ce2cc-202">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-202">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-203">Лист, на котором будет размещаться скопированный лист.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-203">The sheet before which the copied sheet will be placed.</span></span> <span data-ttu-id="ce2cc-204">Вы не можете <paramref name="Before" /> указать, если <paramref name="After" />вы указали.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-204">You cannot specify <paramref name="Before" /> if you specify <paramref name="After" />.</span></span></param>
        <param name="After"><span data-ttu-id="ce2cc-205">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-205">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-206">Лист, после которого будет размещаться скопированный лист.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-206">The sheet after which the copied sheet will be placed.</span></span> <span data-ttu-id="ce2cc-207">Вы не можете <paramref name="After" /> указать, если <paramref name="Before" />вы указали.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-207">You cannot specify <paramref name="After" /> if you specify <paramref name="Before" />.</span></span></param>
        <summary><span data-ttu-id="ce2cc-208">Копирует лист в другое расположение в книге.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-208">Copies the sheet to another location in the workbook.</span></span></summary>
        <remarks><para><span data-ttu-id="ce2cc-209">Если вы не укажете <paramref name="Before" /> или <paramref name="After" />, Microsoft Excel создаст новую книгу, содержащую скопированный лист.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-209">If you don't specify either <paramref name="Before" /> or <paramref name="After" />, Microsoft Excel creates a new workbook that contains the copied sheet.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-210">Возвращает константу в <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> перечислении, указывающую приложение, в котором был создан этот объект.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-210">Returns a constant in the <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> enumeration that indicates the application in which this object was created.</span></span> <span data-ttu-id="ce2cc-211">Если объект был создан в Microsoft Excel, это свойство возвращает строку КСЦЕЛ, которая эквивалентна шестнадцатеричному числу 5843454C.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-211">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span> <span data-ttu-id="ce2cc-212">Только для чтения, <b>кслкреаторкоде</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-212">Read-only <b>xlCreatorCode</b>.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /></value>
        <remarks><para><span data-ttu-id="ce2cc-213">Свойство <b>Creator</b> предназначено для использования в Microsoft Excel для Macintosh, где каждое приложение содержит код создателя из четырех символов.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-213">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="ce2cc-214">Например, в Microsoft Excel есть код создателя КСЦЕЛ.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-214">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomProperties">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CustomProperties CustomProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.CustomProperties CustomProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.CustomProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomProperties As CustomProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::CustomProperties ^ CustomProperties { Microsoft::Office::Interop::Excel::CustomProperties ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2030)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2030)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CustomProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-215">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.CustomProperties" /> объект, представляющий сведения об идентификаторе, связанном с листом.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-215">Returns a <see cref="T:Microsoft.Office.Interop.Excel.CustomProperties" /> object representing the identifier information associated with a worksheet.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="ce2cc-216">Для свойства <b>CustomProperties</b> данные идентификатора листа могут представлять метаданные для XML.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-216">For the <b>CustomProperties</b> property, identifier information for a worksheet can represent metadata for XML.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ce2cc-217">Удаляет объект.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-217">Deletes the object.</span></span></summary>
        <remarks><para><span data-ttu-id="ce2cc-218">При удалении <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" />этого метода отображается диалоговое окно, предлагающее пользователю подтвердить удаление.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-218">When you delete a <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" />, this method displays a dialog box that prompts the user to confirm the deletion.</span></span> <span data-ttu-id="ce2cc-219">Это диалоговое окно отображается по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-219">This dialog box is displayed by default.</span></span> <span data-ttu-id="ce2cc-220">Метод <b>Delete</b> возвращает <b>логическое</b> значение <b>false</b> , если пользователь нажимает кнопку Cancel (Отмена) в диалоговом окне или <b>значение true</b> , если пользователь нажимает кнопку Delete (удалить).</span><span class="sxs-lookup"><span data-stu-id="ce2cc-220">The <b>Delete</b> method returns a <b>Boolean</b> value that is <b>False</b> if the user clicked Cancel on the dialog box or <b>True</b> if the user clicked Delete.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayAutomaticPageBreaks">
      <MemberSignature Language="C#" Value="public bool DisplayAutomaticPageBreaks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayAutomaticPageBreaks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.DisplayAutomaticPageBreaks" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayAutomaticPageBreaks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayAutomaticPageBreaks { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(643)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(643)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(643)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-221">Зарезервировано для внутреннего использования.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-221">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayPageBreaks">
      <MemberSignature Language="C#" Value="public bool DisplayPageBreaks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayPageBreaks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.DisplayPageBreaks" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayPageBreaks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayPageBreaks { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1435)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1435)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1435)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-222"><b>Имеет значение true</b> , если на указанном листе отображаются разрывы страниц (автоматические и ручные).</span><span class="sxs-lookup"><span data-stu-id="ce2cc-222"><b>True</b> if page breaks (both automatic and manual) on the specified worksheet are displayed.</span></span> <span data-ttu-id="ce2cc-223">Для чтения и записи, <b>Boolean</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-223">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="ce2cc-224">Невозможно задать это свойство, если принтер не установлен.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-224">You can't set this property if you don't have a printer installed.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayRightToLeft">
      <MemberSignature Language="C#" Value="public bool DisplayRightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayRightToLeft" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.DisplayRightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayRightToLeft As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayRightToLeft { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1774)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1774)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1774)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-225"><b>Значение true</b> , если заданное окно, лист или <b>ListObject</b> отображаются справа налево, а не слева направо.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-225"><b>True</b> if the specified window, worksheet, or <b>ListObject</b> is displayed from right to left instead of from left to right.</span></span> <span data-ttu-id="ce2cc-226"><b>False</b> , если объект отображается слева направо.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-226"><b>False</b> if the object is displayed from left to right.</span></span> <span data-ttu-id="ce2cc-227">Только для чтения, <b>Boolean</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-227">Read-only <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawingObjects">
      <MemberSignature Language="C#" Value="public object DrawingObjects (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DrawingObjects([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.DrawingObjects(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DrawingObjects (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(88)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="ce2cc-228">Зарезервировано для внутреннего использования.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-228">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Drawings">
      <MemberSignature Language="C#" Value="public object Drawings (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Drawings([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Drawings(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Drawings (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="ce2cc-229">Зарезервировано для внутреннего использования.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-229">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DropDowns">
      <MemberSignature Language="C#" Value="public object DropDowns (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DropDowns([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.DropDowns(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DropDowns (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(836)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="ce2cc-230">Зарезервировано для внутреннего использования.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-230">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableAutoFilter">
      <MemberSignature Language="C#" Value="public bool EnableAutoFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableAutoFilter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.EnableAutoFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableAutoFilter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableAutoFilter { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1156)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1156)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1156)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-231"><b>True</b> , если стрелки автофильтра включены при включении защиты только пользовательских интерфейсов.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-231"><b>True</b> if AutoFilter arrows are enabled when user-interface-only protection is turned on.</span></span> <span data-ttu-id="ce2cc-232">Для чтения и записи, <b>Boolean</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-232">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="ce2cc-233">Это свойство применяется к каждому листу и не сохраняется в рабочем листе или сеансе.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-233">This property applies to each worksheet and isn't saved with the worksheet or session.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableCalculation">
      <MemberSignature Language="C#" Value="public bool EnableCalculation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableCalculation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.EnableCalculation" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableCalculation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableCalculation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1424)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1424)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1424)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-234"><b>Значение true</b> , если Microsoft Excel автоматически пересчитывает лист при необходимости.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-234"><b>True</b> if Microsoft Excel automatically recalculates the worksheet when necessary.</span></span> <span data-ttu-id="ce2cc-235"><b>False</b> , если Excel не пересчитывает лист.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-235"><b>False</b> if Excel doesn't recalculate the sheet.</span></span> <span data-ttu-id="ce2cc-236">Для чтения и записи, <b>Boolean</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-236">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="ce2cc-237">Если для этого свойства задано значение <b>false</b>, запрос на пересчет невозможен.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-237">When the value of this property is <b>False</b>, you cannot request a recalculation.</span></span> <span data-ttu-id="ce2cc-238">При изменении значения с " <b>false</b> " на <b>true</b>Excel пересчитывает лист.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-238">When you change the value from <b>False</b> to <b>True</b>, Excel recalculates the worksheet.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableFormatConditionsCalculation">
      <MemberSignature Language="C#" Value="public bool EnableFormatConditionsCalculation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableFormatConditionsCalculation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.EnableFormatConditionsCalculation" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableFormatConditionsCalculation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableFormatConditionsCalculation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2511)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2511)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2511)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-239">Возвращает или задает значение, указывающее, будут ли условные форматы выполняться автоматически по мере необходимости.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-239">Returns or sets if conditional formats will occur automatically as needed.</span></span> <span data-ttu-id="ce2cc-240">Для чтения и записи, <b>Boolean</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-240">Read/write <b>Boolean</b>.</span></span></summary>
        <value><span data-ttu-id="ce2cc-241"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="ce2cc-241"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="ce2cc-242">Если задано <b>значение true</b> (по умолчанию), при необходимости Оценка условных форматов будет выполнена автоматически.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-242">When set to <b>True</b> (default), evaluation of conditional formats will occur automatically as needed.</span></span>  <span data-ttu-id="ce2cc-243">Если задано значение <b>false</b>, условные форматы не будут переоцениваться.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-243">When set to <b>False</b>, conditional formats will not be re-evaluated.</span></span>  <span data-ttu-id="ce2cc-244">Все ранее примененные условные форматирования будут отображаться, но не будут обновляться по мере изменения значений <see cref="P:Microsoft.Office.Interop.Excel.FormatCondition.AppliesTo" /> в ячейках или диапазонов.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-244">Any previously applied conditional formatting will still be visible, but it will not update as cell values or <see cref="P:Microsoft.Office.Interop.Excel.FormatCondition.AppliesTo" /> ranges are changed.</span></span>  </para>
          <para><span data-ttu-id="ce2cc-245">Назначение этого флага позволяет программистам полностью настроить правило перед его оценкой.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-245">The purpose of this flag is to allow programmers to configure a rule completely before evaluating it.</span></span>  <span data-ttu-id="ce2cc-246">Это особенно полезно, если условие применяется к большому диапазону, так как в таких случаях производительность может быть низкой.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-246">This is particularly useful when condition is applied over a large range as performance can be slow in these cases.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableOutlining">
      <MemberSignature Language="C#" Value="public bool EnableOutlining { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableOutlining" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.EnableOutlining" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableOutlining As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableOutlining { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1157)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1157)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1157)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-247"><b>Значение true</b> , если структурированные символы включены при включении защиты только пользовательских интерфейсов.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-247"><b>True</b> if outlining symbols are enabled when user-interface-only protection is turned on.</span></span> <span data-ttu-id="ce2cc-248">Для чтения и записи, <b>Boolean</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-248">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="ce2cc-249">Это свойство применяется к каждому листу и не сохраняется в рабочем листе или сеансе.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-249">This property applies to each worksheet and isn't saved with the worksheet or session.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePivotTable">
      <MemberSignature Language="C#" Value="public bool EnablePivotTable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePivotTable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.EnablePivotTable" />
      <MemberSignature Language="VB.NET" Value="Public Property EnablePivotTable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnablePivotTable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1158)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1158)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1158)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-250"><b>Имеет значение true</b> , если элементы управления и действия сводной таблицы включены при включении защиты только пользовательских интерфейсов.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-250"><b>True</b> if PivotTable controls and actions are enabled when user-interface-only protection is turned on.</span></span> <span data-ttu-id="ce2cc-251">Для чтения и записи, <b>Boolean</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-251">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="ce2cc-252">Это свойство применяется к каждому листу и не сохраняется в рабочем листе или сеансе.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-252">This property applies to each worksheet and isn't saved with the worksheet or session.</span></span></para>
          <para><span data-ttu-id="ce2cc-253">Должно быть достаточное количество незаблокированных ячеек ниже и справа от отчета сводной таблицы для Microsoft Excel, чтобы пересчитать и отобразить отчет сводной таблицы.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-253">There must be a sufficient number of unlocked cells below and to the right of the PivotTable report for Microsoft Excel to recalculate and display the PivotTable report.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableSelection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlEnableSelection EnableSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlEnableSelection EnableSelection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.EnableSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableSelection As XlEnableSelection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlEnableSelection EnableSelection { Microsoft::Office::Interop::Excel::XlEnableSelection get(); void set(Microsoft::Office::Interop::Excel::XlEnableSelection value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1425)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1425)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1425)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlEnableSelection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-254">Возвращает или задает значение, которое может быть выбрано на листе.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-254">Returns or sets what can be selected on the sheet.</span></span> <span data-ttu-id="ce2cc-255">Чтение и запись <see cref="T:Microsoft.Office.Interop.Excel.XlEnableSelection" />.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-255">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlEnableSelection" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="ce2cc-256">Это свойство вступает в силу только в том случае, если лист защищен: <b>кслноселектион</b> предотвращает выбор на листе, <b>кслунлоккедцеллс</b> разрешает выбирать только те ячейки, для которых свойство <b>locked</b> имеет <b>значение false</b> , а <b>кслнорестриктионс</b> позволяет выбрать любую ячейку.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-256">This property takes effect only when the worksheet is protected: <b>xlNoSelection</b> prevents any selection on the sheet, <b>xlUnlockedCells</b> allows only those cells whose <b>Locked</b> property is <b>False</b> to be selected, and <b>xlNoRestrictions</b> allows any cell to be selected.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public object Evaluate (object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Evaluate([in]object Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Evaluate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Evaluate (Name As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Evaluate(System::Object ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name"><span data-ttu-id="ce2cc-257">Обязательный атрибут типа <b>String</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-257">Required <b>String</b>.</span></span> <span data-ttu-id="ce2cc-258">Имя объекта с использованием соглашения об именовании Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-258">The name of the object, using the naming convention of Microsoft Excel.</span></span></param>
        <summary><span data-ttu-id="ce2cc-259">Преобразует имя Microsoft Excel в объект или значение.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-259">Converts a Microsoft Excel name to an object or a value.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="ce2cc-260">С этим методом можно использовать следующие типы имен в Microsoft Excel:</span><span class="sxs-lookup"><span data-stu-id="ce2cc-260">The following types of names in Microsoft Excel can be used with this method:</span></span></para>
          <list type="bullet">
            <item>
              <description><span data-ttu-id="ce2cc-261">Определенные имена.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-261">Defined names.</span></span> <span data-ttu-id="ce2cc-262">Можно указать любое имя.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-262">You can specify any name.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="ce2cc-263">Внешние ссылки.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-263">External references.</span></span> <span data-ttu-id="ce2cc-264">Вы можете использовать параметр!</span><span class="sxs-lookup"><span data-stu-id="ce2cc-264">You can use the !</span></span> <span data-ttu-id="ce2cc-265">оператор для ссылки на лист, определенный в другой книге.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-265">operator to refer to a worksheet defined in another workbook.</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportAsFixedFormat">
      <MemberSignature Language="C#" Value="public void ExportAsFixedFormat (Microsoft.Office.Interop.Excel.XlFixedFormatType Type, object Filename, object Quality, object IncludeDocProperties, object IgnorePrintAreas, object From, object To, object OpenAfterPublish, object FixedFormatExtClassPtr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportAsFixedFormat([in]valuetype Microsoft.Office.Interop.Excel.XlFixedFormatType Type, [in]object Filename, [in]object Quality, [in]object IncludeDocProperties, [in]object IgnorePrintAreas, [in]object From, [in]object To, [in]object OpenAfterPublish, [in]object FixedFormatExtClassPtr) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExportAsFixedFormat (Type As XlFixedFormatType, Optional Filename As Object, Optional Quality As Object, Optional IncludeDocProperties As Object, Optional IgnorePrintAreas As Object, Optional From As Object, Optional To As Object, Optional OpenAfterPublish As Object, Optional FixedFormatExtClassPtr As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2493)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlFixedFormatType" />
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="Quality" Type="System.Object" />
        <Parameter Name="IncludeDocProperties" Type="System.Object" />
        <Parameter Name="IgnorePrintAreas" Type="System.Object" />
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="OpenAfterPublish" Type="System.Object" />
        <Parameter Name="FixedFormatExtClassPtr" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type"><span data-ttu-id="ce2cc-266">Формат файла для экспорта.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-266">The type of file format to export to.</span></span></param>
        <param name="Filename"><span data-ttu-id="ce2cc-267">Имя файла, который необходимо сохранить.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-267">The file name of the file to be saved.</span></span> <span data-ttu-id="ce2cc-268">Вы можете включить полный путь или short_Excel2007 сохранит файл в текущей папке.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-268">You can include a full path, or short_Excel2007 saves the file in the current folder.</span></span></param>
        <param name="Quality"><span data-ttu-id="ce2cc-269">Необязательный <see cref="T:Microsoft.Office.Interop.Excel.XlFixedFormatQuality" />параметр.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-269">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlFixedFormatQuality" />.</span></span> <span data-ttu-id="ce2cc-270">Указывает качество опубликованного файла.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-270">Specifies the quality of the published file.</span></span></param>
        <param name="IncludeDocProperties"><span data-ttu-id="ce2cc-271"><b>Значение true</b> , чтобы включить свойства документа; в противном случае — <b>false</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-271"><b>True</b> to include the document properties; otherwise <b>False</b>.</span></span></param>
        <param name="IgnorePrintAreas"><span data-ttu-id="ce2cc-272"><b>Значение true</b> , чтобы игнорировать области печати, заданные при публикации; в противном случае — <b>false</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-272"><b>True</b> to ignore any print areas set when publishing; otherwise <b>False</b>.</span></span></param>
        <param name="From"><span data-ttu-id="ce2cc-273">Номер страницы, с которой начинается публикация.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-273">The number of the page at which to start publishing.</span></span> <span data-ttu-id="ce2cc-274">Если этот аргумент опущен, публикация начинается с самого начала.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-274">If this argument is omitted, publishing starts at the beginning.</span></span></param>
        <param name="To"><span data-ttu-id="ce2cc-275">Номер последней публикуемой страницы.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-275">The number of the last page to publish.</span></span> <span data-ttu-id="ce2cc-276">Если этот аргумент опущен, публикация завершается с последней страницей.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-276">If this argument is omitted, publishing ends with the last page.</span></span></param>
        <param name="OpenAfterPublish"><span data-ttu-id="ce2cc-277"><b>Значение true</b> для отображения файла в средстве просмотра после его публикации; в противном случае — <b>false</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-277"><b>True</b> to display the file in the viewer after it is published; otherwise <b>False</b>.</span></span></param>
        <param name="FixedFormatExtClassPtr"><span data-ttu-id="ce2cc-278">Указатель на класс <b>фикседформатекст</b> .</span><span class="sxs-lookup"><span data-stu-id="ce2cc-278">Pointer to the <b>FixedFormatExt</b> class.</span></span></param>
        <summary><span data-ttu-id="ce2cc-279">Экспортирует в файл указанного формата.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-279">Exports to a file of the specified format.</span></span></summary>
        <remarks><para><span data-ttu-id="ce2cc-280">Этот метод также поддерживает инициализацию надстройки для экспорта файла в файл фиксированного формата.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-280">This method also supports initializing an add-in to export a file to a fixed-format file.</span></span> <span data-ttu-id="ce2cc-281">Например, при наличии конвертеров Excel будет выполнять преобразование формата файлов.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-281">For example, Excel will perform file format conversion if the converters are  present.</span></span> <span data-ttu-id="ce2cc-282">Преобразование обычно инициируется пользователем.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-282">The conversion is usually initiated by the user.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterMode">
      <MemberSignature Language="C#" Value="public bool FilterMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FilterMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.FilterMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FilterMode { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(800)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(800)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-283"><b>Имеет значение true</b> , если рабочий лист находится в режиме фильтрации.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-283"><b>True</b> if the worksheet is in filter mode.</span></span> <span data-ttu-id="ce2cc-284">Только для чтения, <b>Boolean</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-284">Read-only <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="ce2cc-285">Это свойство имеет <b>значение true</b> , если лист содержит отфильтрованный список, в котором есть скрытые строки.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-285">This property is <b>True</b> if the worksheet contains a filtered list in which there are hidden rows.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBoxes">
      <MemberSignature Language="C#" Value="public object GroupBoxes (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GroupBoxes([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.GroupBoxes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GroupBoxes (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(834)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="ce2cc-286">Зарезервировано для внутреннего использования.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-286">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupObjects">
      <MemberSignature Language="C#" Value="public object GroupObjects (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GroupObjects([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.GroupObjects(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GroupObjects (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1113)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="ce2cc-287">Зарезервировано для внутреннего использования.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-287">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HPageBreaks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.HPageBreaks HPageBreaks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.HPageBreaks HPageBreaks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.HPageBreaks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HPageBreaks As HPageBreaks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::HPageBreaks ^ HPageBreaks { Microsoft::Office::Interop::Excel::HPageBreaks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1418)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1418)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.HPageBreaks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-288">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.HPageBreaks" /> коллекцию, представляющую горизонтальные разрывы страниц на листе.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-288">Returns an <see cref="T:Microsoft.Office.Interop.Excel.HPageBreaks" /> collection that represents the horizontal page breaks on the sheet.</span></span> <span data-ttu-id="ce2cc-289">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-289">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="ce2cc-290">На листе может быть не более 1 026 горизонтальных страниц.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-290">There is a limit of 1,026 horizontal page breaks per sheet.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Hyperlinks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Hyperlinks Hyperlinks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Hyperlinks Hyperlinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Hyperlinks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hyperlinks As Hyperlinks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Hyperlinks ^ Hyperlinks { Microsoft::Office::Interop::Excel::Hyperlinks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1393)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1393)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Hyperlinks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-291">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> коллекцию, представляющую гиперссылки для диапазона или листа.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-291">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> collection that represents the hyperlinks for the range or worksheet.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(486)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(486)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-292">Возвращает номер индекса объекта в коллекции схожих объектов.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-292">Returns the index number of the object within the collection of similar objects.</span></span> <span data-ttu-id="ce2cc-293">Только для чтения, <b>Integer</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-293">Read-only <b>Integer</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Labels">
      <MemberSignature Language="C#" Value="public object Labels (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Labels([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Labels(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Labels (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(841)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="ce2cc-294">Зарезервировано для внутреннего использования.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-294">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lines">
      <MemberSignature Language="C#" Value="public object Lines (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Lines([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Lines(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Lines (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(767)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="ce2cc-295">Зарезервировано для внутреннего использования.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-295">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListBoxes">
      <MemberSignature Language="C#" Value="public object ListBoxes (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ListBoxes([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ListBoxes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ListBoxes (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(832)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="ce2cc-296">Зарезервировано для внутреннего использования.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-296">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListObjects">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ListObjects ListObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ListObjects ListObjects" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ListObjects" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ListObjects As ListObjects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ListObjects ^ ListObjects { Microsoft::Office::Interop::Excel::ListObjects ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2259)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2259)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ListObjects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-297">Возвращает коллекцию <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> объектов в рабочем листе.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-297">Returns a collection of <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> objects in the worksheet.</span></span> <span data-ttu-id="ce2cc-298">Коллекция объектов <b>ListObject</b> , доступная только для чтения.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-298">Read-only <b>ListObjects</b> collection.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MailEnvelope">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoEnvelope MailEnvelope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.MsoEnvelope MailEnvelope" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.MailEnvelope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MailEnvelope As MsoEnvelope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoEnvelope ^ MailEnvelope { Microsoft::Office::Core::MsoEnvelope ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2021)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2021)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoEnvelope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-299">Представляет заголовок сообщения электронной почты для документа.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-299">Represents an e-mail header for a document.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public void Move (object Before, object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Move([in]object Before, [in]object After) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Move(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Move (Optional Before As Object, Optional After As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(637)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before"><span data-ttu-id="ce2cc-300">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-300">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-301">Лист, на котором будет размещаться перемещенный лист.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-301">The sheet before which the moved sheet will be placed.</span></span> <span data-ttu-id="ce2cc-302">Вы не можете <paramref name="Before" /> указать, если <paramref name="After" />вы указали.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-302">You cannot specify <paramref name="Before" /> if you specify <paramref name="After" />.</span></span></param>
        <param name="After"><span data-ttu-id="ce2cc-303">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-303">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-304">Лист, после которого будет помещен перемещенный лист.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-304">The sheet after which the moved sheet will be placed.</span></span> <span data-ttu-id="ce2cc-305">Вы не можете <paramref name="After" /> указать, если <paramref name="Before" />вы указали.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-305">You cannot specify <paramref name="After" /> if you specify <paramref name="Before" />.</span></span></param>
        <summary><span data-ttu-id="ce2cc-306">Перемещение листа в другое место в книге</span><span class="sxs-lookup"><span data-stu-id="ce2cc-306">Moves the sheet to another location in the workbook</span></span></summary>
        <remarks><para><span data-ttu-id="ce2cc-307">Если вы не укажете <paramref name="Before" /> или <paramref name="After" />, Microsoft Excel создаст новую книгу, содержащую перемещенный лист.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-307">If you don't specify either <paramref name="Before" /> or <paramref name="After" />, Microsoft Excel creates a new workbook that contains the moved sheet.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-308">Возвращает или задает имя объекта.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-308">Returns or sets the name of the object.</span></span> <span data-ttu-id="ce2cc-309">Для чтения и записи, <b>String</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-309">Read/write <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Names">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Names Names { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Names Names" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Names" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Names As Names" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Names ^ Names { Microsoft::Office::Interop::Excel::Names ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(442)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(442)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Names</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-310">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Names" /> коллекцию, которая представляет все имена, зависящие от листа (имена, определенные с помощью "воркшитнаме!"</span><span class="sxs-lookup"><span data-stu-id="ce2cc-310">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Names" /> collection that represents all the worksheet-specific names (names defined with the "WorksheetName!"</span></span> <span data-ttu-id="ce2cc-311">префикс).</span><span class="sxs-lookup"><span data-stu-id="ce2cc-311">prefix).</span></span> <span data-ttu-id="ce2cc-312">Объект <b>имен</b> , предназначенных только для чтения.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-312">Read-only <b>Names</b> object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public object Next { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Next" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Next" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Next As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Next { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(502)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(502)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-313">Возвращает объект <see cref="T:Microsoft.Office.Interop.Excel.Chart" />, <see cref="T:Microsoft.Office.Interop.Excel.Range" />или <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> объект, представляющий следующий лист или ячейку.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-313">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Chart" />, <see cref="T:Microsoft.Office.Interop.Excel.Range" />, or <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object that represents the next sheet or cell.</span></span> <span data-ttu-id="ce2cc-314">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-314">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="ce2cc-315">Если объект является диапазоном, это свойство эмулирует клавишу TAB, хотя свойство возвращает следующую ячейку, не выбирая ее.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-315">If the object is a range, this property emulates the TAB key, although the property returns the next cell without selecting it.</span></span></para>
          <para><span data-ttu-id="ce2cc-316">На защищенном листе это свойство возвращает следующую незаблокированную ячейку.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-316">On a protected sheet, this property returns the next unlocked cell.</span></span> <span data-ttu-id="ce2cc-317">На незащищенном листе это свойство всегда возвращает ячейку, находящийся непосредственно справа от указанной ячейки.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-317">On an unprotected sheet, this property always returns the cell immediately to the right of the specified cell.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="OLEObjects">
      <MemberSignature Language="C#" Value="public object OLEObjects (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object OLEObjects([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.OLEObjects(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function OLEObjects (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(799)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="ce2cc-318">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-318">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-319">Имя или номер объекта OLE.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-319">The name or number of the OLE object.</span></span></param>
        <summary><span data-ttu-id="ce2cc-320">Возвращает объект, представляющий либо один объект OLE (a <see cref="T:Microsoft.Office.Interop.Excel.OLEObject" />), либо коллекцию всех объектов OLE ( <see cref="T:Microsoft.Office.Interop.Excel.OLEObjects" /> коллекций) на диаграмме или листе.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-320">Returns an object that represents either a single OLE object (an <see cref="T:Microsoft.Office.Interop.Excel.OLEObject" />) or a collection of all OLE objects (an <see cref="T:Microsoft.Office.Interop.Excel.OLEObjects" /> collection) on the chart or sheet.</span></span> <span data-ttu-id="ce2cc-321">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-321">Read-only.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCalculate">
      <MemberSignature Language="C#" Value="public string OnCalculate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnCalculate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.OnCalculate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnCalculate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnCalculate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-322">Зарезервировано для внутреннего использования.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-322">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnData">
      <MemberSignature Language="C#" Value="public string OnData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.OnData" />
      <MemberSignature Language="VB.NET" Value="Public Property OnData As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnData { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(629)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(629)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(629)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-323">Зарезервировано для внутреннего использования.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-323">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDoubleClick">
      <MemberSignature Language="C#" Value="public string OnDoubleClick { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnDoubleClick" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.OnDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Property OnDoubleClick As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnDoubleClick { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-324">Зарезервировано для внутреннего использования.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-324">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEntry">
      <MemberSignature Language="C#" Value="public string OnEntry { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnEntry" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.OnEntry" />
      <MemberSignature Language="VB.NET" Value="Public Property OnEntry As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnEntry { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(627)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(627)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(627)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-325">Зарезервировано для внутреннего использования.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-325">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetActivate">
      <MemberSignature Language="C#" Value="public string OnSheetActivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetActivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.OnSheetActivate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSheetActivate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSheetActivate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-326">Зарезервировано для внутреннего использования.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-326">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetDeactivate">
      <MemberSignature Language="C#" Value="public string OnSheetDeactivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetDeactivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.OnSheetDeactivate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSheetDeactivate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSheetDeactivate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-327">Зарезервировано для внутреннего использования.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-327">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OptionButtons">
      <MemberSignature Language="C#" Value="public object OptionButtons (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object OptionButtons([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.OptionButtons(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function OptionButtons (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(826)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="ce2cc-328">Зарезервировано для внутреннего использования.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-328">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Outline">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Outline Outline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Outline Outline" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Outline" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Outline As Outline" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Outline ^ Outline { Microsoft::Office::Interop::Excel::Outline ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(102)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(102)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Outline</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-329">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Outline" /> объект, представляющий структуру указанного листа.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-329">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Outline" /> object that represents the outline for the specified worksheet.</span></span> <span data-ttu-id="ce2cc-330">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-330">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ovals">
      <MemberSignature Language="C#" Value="public object Ovals (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Ovals([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Ovals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ovals (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(801)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="ce2cc-331">Зарезервировано для внутреннего использования.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-331">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PageSetup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PageSetup PageSetup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PageSetup PageSetup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.PageSetup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PageSetup As PageSetup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PageSetup ^ PageSetup { Microsoft::Office::Interop::Excel::PageSetup ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(998)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(998)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PageSetup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-332">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.PageSetup" /> объект, который содержит все параметры настройки страницы для указанного объекта.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-332">Returns a <see cref="T:Microsoft.Office.Interop.Excel.PageSetup" /> object that contains all the page setup settings for the specified object.</span></span> <span data-ttu-id="ce2cc-333">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-333">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-334">Возвращает родительский объект для указанного объекта.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-334">Returns the parent object for the specified object.</span></span> <span data-ttu-id="ce2cc-335">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-335">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste (object Destination, object Link);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Paste([in]object Destination, [in]object Link) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Paste(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Paste (Optional Destination As Object, Optional Link As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(211)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Destination" Type="System.Object" />
        <Parameter Name="Link" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Destination"><span data-ttu-id="ce2cc-336">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-336">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-337"><see cref="T:Microsoft.Office.Interop.Excel.Range" /> Объект, указывающий место вставки содержимого буфера обмена.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-337">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that specifies where the Clipboard contents should be pasted.</span></span> <span data-ttu-id="ce2cc-338">Если этот аргумент не указан, используется текущий выделенный фрагмент.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-338">If this argument is omitted, the current selection is used.</span></span> <span data-ttu-id="ce2cc-339">Этот аргумент можно указать только в том случае, если содержимое буфера обмена можно вставить в диапазон.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-339">This argument can be specified only if the contents of the Clipboard can be pasted into a range.</span></span> <span data-ttu-id="ce2cc-340">Если этот аргумент указан, то <paramref name="Link" /> аргумент не может быть использован.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-340">If this argument is specified, the <paramref name="Link" /> argument cannot be used.</span></span></param>
        <param name="Link"><span data-ttu-id="ce2cc-341">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-341">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-342"><b>Значение true</b> , чтобы установить ссылку на источник вставленных данных.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-342"><b>True</b> to establish a link to the source of the pasted data.</span></span> <span data-ttu-id="ce2cc-343">Если этот аргумент указан, то <paramref name="Destination" /> аргумент не может быть использован.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-343">If this argument is specified, the <paramref name="Destination" /> argument cannot be used.</span></span> <span data-ttu-id="ce2cc-344">Значение по умолчанию — <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-344">The default value is <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="ce2cc-345">Вставит содержимое буфера обмена на лист.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-345">Pastes the contents of the Clipboard onto the sheet.</span></span></summary>
        <remarks><para><span data-ttu-id="ce2cc-346">Если не указать <paramref name="Destination" /> аргумент, перед использованием этого метода необходимо выбрать конечный диапазон.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-346">If you don’t specify the <paramref name="Destination" /> argument, you must select the destination range before you use this method.</span></span></para>
          <para><span data-ttu-id="ce2cc-347">Этот метод может изменить выбор листа в зависимости от содержимого буфера обмена.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-347">This method may modify the sheet selection, depending on the contents of the Clipboard.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PasteSpecial">
      <MemberSignature Language="C#" Value="public void PasteSpecial (object Format, object Link, object DisplayAsIcon, object IconFileName, object IconIndex, object IconLabel, object NoHTMLFormatting);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PasteSpecial([in]object Format, [in]object Link, [in]object DisplayAsIcon, [in]object IconFileName, [in]object IconIndex, [in]object IconLabel, [in]object NoHTMLFormatting) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.PasteSpecial(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PasteSpecial (Optional Format As Object, Optional Link As Object, Optional DisplayAsIcon As Object, Optional IconFileName As Object, Optional IconIndex As Object, Optional IconLabel As Object, Optional NoHTMLFormatting As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1928)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(7)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Format" Type="System.Object" />
        <Parameter Name="Link" Type="System.Object" />
        <Parameter Name="DisplayAsIcon" Type="System.Object" />
        <Parameter Name="IconFileName" Type="System.Object" />
        <Parameter Name="IconIndex" Type="System.Object" />
        <Parameter Name="IconLabel" Type="System.Object" />
        <Parameter Name="NoHTMLFormatting" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Format"><span data-ttu-id="ce2cc-348">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-348">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-349">Строка, определяющая формат буфера обмена данными.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-349">A string that specifies the Clipboard format of the data.</span></span></param>
        <param name="Link"><span data-ttu-id="ce2cc-350">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-350">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-351"><b>Значение true</b> , чтобы установить ссылку на источник вставленных данных.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-351"><b>True</b> to establish a link to the source of the pasted data.</span></span> <span data-ttu-id="ce2cc-352">Если исходные данные не подходят для связывания или если исходное приложение не поддерживает связывание, этот параметр игнорируется.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-352">If the source data isn’t suitable for linking or the source application doesn't support linking, this parameter is ignored.</span></span> <span data-ttu-id="ce2cc-353">Значение по умолчанию — <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-353">The default value is <b>False</b>.</span></span></param>
        <param name="DisplayAsIcon"><span data-ttu-id="ce2cc-354">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-354">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-355"><b>Значение true</b> , чтобы отобразить вставленные данные в виде значка.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-355"><b>True</b> to display the pasted data as an icon.</span></span> <span data-ttu-id="ce2cc-356">Значение по умолчанию — <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-356">The default value is <b>False</b>.</span></span></param>
        <param name="IconFileName"><span data-ttu-id="ce2cc-357">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-357">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-358">Имя файла, содержащего значок, который следует использовать, если <paramref name="DisplayAsIcon" /> он имеет <b>значение true</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-358">The name of the file that contains the icon to use if <paramref name="DisplayAsIcon" /> is <b>True</b>.</span></span></param>
        <param name="IconIndex"><span data-ttu-id="ce2cc-359">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-359">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-360">Номер индекса значка в файле значка.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-360">The index number of the icon within the icon file.</span></span></param>
        <param name="IconLabel"><span data-ttu-id="ce2cc-361">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-361">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-362">Текстовая подпись значка.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-362">The text label of the icon.</span></span></param>
        <param name="NoHTMLFormatting"><span data-ttu-id="ce2cc-363">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-363">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-364"><b>Значение true</b> , чтобы удалить все форматирование, гиперссылки и изображения из HTML-кода.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-364"><b>True</b> to remove all formatting, hyperlinks, and images from HTML.</span></span> <span data-ttu-id="ce2cc-365"><b>False</b> , чтобы вставить HTML как есть.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-365"><b>False</b> to paste HTML as is.</span></span> <span data-ttu-id="ce2cc-366">Значение по умолчанию — <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-366">The default value is <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="ce2cc-367">Вставит содержимое буфера обмена на лист с использованием указанного формата.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-367">Pastes the contents of the Clipboard onto the sheet using a specified format.</span></span> <span data-ttu-id="ce2cc-368">Используйте этот метод для вставки данных из других приложений или для вставки данных в определенном формате.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-368">Use this method to paste data from other applications or to paste data in a specific format.</span></span></summary>
        <remarks><para><span data-ttu-id="ce2cc-369">
            <paramref name="NoHTMLFormatting" />имеет значения только тогда <paramref name="Format" /> , когда = "HTML".</span><span class="sxs-lookup"><span data-stu-id="ce2cc-369">
            <paramref name="NoHTMLFormatting" /> will only matter when <paramref name="Format" /> = “HTML”.</span></span> <span data-ttu-id="ce2cc-370">Во всех остальных случаях <paramref name="NoHTMLFormatting" /> будет игнорироваться.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-370">In all other cases, <paramref name="NoHTMLFormatting" /> will be ignored.</span></span></para>
          <para><span data-ttu-id="ce2cc-371">Перед использованием этого метода необходимо выбрать конечный диапазон.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-371">You must select the destination range before you use this method.</span></span></para>
          <para><span data-ttu-id="ce2cc-372">Этот метод может изменить выбор листа в зависимости от содержимого буфера обмена.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-372">This method may modify the sheet selection, depending on the contents of the Clipboard.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Pictures">
      <MemberSignature Language="C#" Value="public object Pictures (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Pictures([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Pictures(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Pictures (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(771)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="ce2cc-373">Зарезервировано для внутреннего использования.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-373">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotTables">
      <MemberSignature Language="C#" Value="public object PivotTables (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object PivotTables([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.PivotTables(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PivotTables (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(690)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="ce2cc-374">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-374">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-375">Имя или номер отчета.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-375">The name or number of the report.</span></span></param>
        <summary><span data-ttu-id="ce2cc-376">Возвращает объект, представляющий либо один отчет сводной таблицы ( <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> объект), либо коллекцию всех отчетов сводной таблицы ( <see cref="T:Microsoft.Office.Interop.Excel.PivotTables" /> объект) на листе.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-376">Returns an object that represents either a single PivotTable report (a <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> object) or a collection of all the PivotTable reports (a <see cref="T:Microsoft.Office.Interop.Excel.PivotTables" /> object) on a worksheet.</span></span> <span data-ttu-id="ce2cc-377">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-377">Read-only.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotTableWizard">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotTable PivotTableWizard (object SourceType, object SourceData, object TableDestination, object TableName, object RowGrand, object ColumnGrand, object SaveData, object HasAutoFormat, object AutoPage, object Reserved, object BackgroundQuery, object OptimizeCache, object PageFieldOrder, object PageFieldWrapCount, object ReadData, object Connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.PivotTable PivotTableWizard([in]object SourceType, [in]object SourceData, [in]object TableDestination, [in]object TableName, [in]object RowGrand, [in]object ColumnGrand, [in]object SaveData, [in]object HasAutoFormat, [in]object AutoPage, [in]object Reserved, [in]object BackgroundQuery, [in]object OptimizeCache, [in]object PageFieldOrder, [in]object PageFieldWrapCount, [in]object ReadData, [in]object Connection) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.PivotTableWizard(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PivotTableWizard (Optional SourceType As Object, Optional SourceData As Object, Optional TableDestination As Object, Optional TableName As Object, Optional RowGrand As Object, Optional ColumnGrand As Object, Optional SaveData As Object, Optional HasAutoFormat As Object, Optional AutoPage As Object, Optional Reserved As Object, Optional BackgroundQuery As Object, Optional OptimizeCache As Object, Optional PageFieldOrder As Object, Optional PageFieldWrapCount As Object, Optional ReadData As Object, Optional Connection As Object) As PivotTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(684)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(16)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SourceType" Type="System.Object" />
        <Parameter Name="SourceData" Type="System.Object" />
        <Parameter Name="TableDestination" Type="System.Object" />
        <Parameter Name="TableName" Type="System.Object" />
        <Parameter Name="RowGrand" Type="System.Object" />
        <Parameter Name="ColumnGrand" Type="System.Object" />
        <Parameter Name="SaveData" Type="System.Object" />
        <Parameter Name="HasAutoFormat" Type="System.Object" />
        <Parameter Name="AutoPage" Type="System.Object" />
        <Parameter Name="Reserved" Type="System.Object" />
        <Parameter Name="BackgroundQuery" Type="System.Object" />
        <Parameter Name="OptimizeCache" Type="System.Object" />
        <Parameter Name="PageFieldOrder" Type="System.Object" />
        <Parameter Name="PageFieldWrapCount" Type="System.Object" />
        <Parameter Name="ReadData" Type="System.Object" />
        <Parameter Name="Connection" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SourceType"><span data-ttu-id="ce2cc-378">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-378">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-379">Источник данных отчета.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-379">The source of the report data.</span></span> <span data-ttu-id="ce2cc-380">Может быть одной из <see cref="T:Microsoft.Office.Interop.Excel.XlPivotTableSourceType" />констант.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-380">Can be one of the <see cref="T:Microsoft.Office.Interop.Excel.XlPivotTableSourceType" />.constants.</span></span></param>
        <param name="SourceData"><span data-ttu-id="ce2cc-381">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-381">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-382">Данные для нового отчета.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-382">The data for the new report.</span></span> <span data-ttu-id="ce2cc-383">Может быть <see cref="T:Microsoft.Office.Interop.Excel.Range" /> объект, массив диапазонов или текстовая константа, представляющая имя другого отчета.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-383">Can be a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object, an array of ranges, or a text constant that represents the name of another report.</span></span> <span data-ttu-id="ce2cc-384">Для внешней базы данных <paramref name="SourceData" /> — это массив строк, содержащий строку запроса SQL, длина каждого элемента которого составляет до 255 символов.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-384">For an external database, <paramref name="SourceData" /> is an array of strings containing the SQL query string, where each element is up to 255 characters in length.</span></span> <span data-ttu-id="ce2cc-385">Используйте аргумент, <paramref name="Connection" /> чтобы указать строку подключения ODBC.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-385">You should use the <paramref name="Connection" /> argument to specify the ODBC connection string.</span></span> <span data-ttu-id="ce2cc-386">Для обеспечения совместимости с более ранними версиями <paramref name="SourceData" /> Excel можно использовать массив из двух элементов.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-386">For compatibility with earlier versions of Excel, <paramref name="SourceData" /> can be a two-element array.</span></span> <span data-ttu-id="ce2cc-387">Первый элемент — это строка подключения, указывающая источник ODBC для данных.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-387">The first element is the connection string specifying the ODBC source for the data.</span></span> <span data-ttu-id="ce2cc-388">Второй элемент — это строка SQL-запроса, используемая для получения данных.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-388">The second element is the SQL query string used to get the data.</span></span> <span data-ttu-id="ce2cc-389">Если указано <paramref name="SourceData" />, необходимо также указать <paramref name="SourceType" />.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-389">If you specify <paramref name="SourceData" />, you must also specify <paramref name="SourceType" />.</span></span> <span data-ttu-id="ce2cc-390">Если активная ячейка находится внутри <paramref name="SourceData" /> диапазона, необходимо также указать <paramref name="TableDestination" /> значение.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-390">If the active cell is inside the <paramref name="SourceData" /> range, you must specify <paramref name="TableDestination" /> as well.</span></span></param>
        <param name="TableDestination"><span data-ttu-id="ce2cc-391">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-391">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-392">Объект <b>Range</b> , указывающий место размещения отчета на листе.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-392">A <b>Range</b> object specifying where the report should be placed on the worksheet.</span></span> <span data-ttu-id="ce2cc-393">Если этот аргумент опущен, отчет помещается в активную ячейку.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-393">If this argument is omitted, the report is placed at the active cell.</span></span></param>
        <param name="TableName"><span data-ttu-id="ce2cc-394">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-394">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-395">Строка, указывающая имя нового отчета.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-395">A string that specifies the name of the new report.</span></span></param>
        <param name="RowGrand"><span data-ttu-id="ce2cc-396">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-396">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-397"><b>Значение true</b> , чтобы показывать общие итоги для строк в отчете.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-397"><b>True</b> to show grand totals for rows in the report.</span></span></param>
        <param name="ColumnGrand"><span data-ttu-id="ce2cc-398">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-398">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-399"><b>Значение true</b> , чтобы показывать общие итоги для столбцов в отчете.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-399"><b>True</b> to show grand totals for columns in the report.</span></span></param>
        <param name="SaveData"><span data-ttu-id="ce2cc-400">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-400">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-401"><b>Значение true</b> , чтобы сохранить данные с отчетом.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-401"><b>True</b> to save data with the report.</span></span> <span data-ttu-id="ce2cc-402"><b>Значение false</b> , чтобы сохранить только определение отчета.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-402"><b>False</b> to save only the report definition.</span></span></param>
        <param name="HasAutoFormat"><span data-ttu-id="ce2cc-403">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-403">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-404"><b>True</b> , чтобы Microsoft Excel автоматически отформатирует отчет при его обновлении или перемещении полей.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-404"><b>True</b> to have Microsoft Excel automatically format the report when it’s refreshed or when fields are moved.</span></span></param>
        <param name="AutoPage"><span data-ttu-id="ce2cc-405">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-405">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-406">Допустимо только в <paramref name="SourceType" /> том случае, если указан <b>кслконсолидатион</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-406">Valid only if <paramref name="SourceType" /> is <b>xlConsolidation</b>.</span></span> <span data-ttu-id="ce2cc-407"><b>Значение true</b> , если Microsoft Excel создает поле страницы для консолидации.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-407"><b>True</b> to have Microsoft Excel create a page field for the consolidation.</span></span> <span data-ttu-id="ce2cc-408">Если <paramref name="AutoPage" /> параметр имеет <b>значение false</b>, необходимо создать поле или поля страницы.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-408">If <paramref name="AutoPage" /> is <b>False</b>, you must create the page field or fields.</span></span></param>
        <param name="Reserved"><span data-ttu-id="ce2cc-409">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-409">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-410">Не используется в Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-410">Not used by Microsoft Excel.</span></span></param>
        <param name="BackgroundQuery"><span data-ttu-id="ce2cc-411">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-411">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-412"><b>Значение true</b> , чтобы Excel выполнял асинхронные запросы к отчету (в фоновом режиме).</span><span class="sxs-lookup"><span data-stu-id="ce2cc-412"><b>True</b> to have Excel perform queries for the report asynchronously (in the background).</span></span> <span data-ttu-id="ce2cc-413">Значение по умолчанию — <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-413">The default value is <b>False</b>.</span></span></param>
        <param name="OptimizeCache"><span data-ttu-id="ce2cc-414">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-414">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-415"><b>Значение true</b> , чтобы оптимизировать кэш сводной таблицы при его создании.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-415"><b>True</b> to optimize the PivotTable cache when it's constructed.</span></span> <span data-ttu-id="ce2cc-416">Значение по умолчанию — <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-416">The default value is <b>False</b>.</span></span></param>
        <param name="PageFieldOrder"><span data-ttu-id="ce2cc-417">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-417">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-418">Порядок, в котором поля страницы добавляются в макет отчета сводной таблицы.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-418">The order in which page fields are added to the PivotTable report’s layout.</span></span> <span data-ttu-id="ce2cc-419">Может быть одной из следующих констант <b>кслордер</b> : <b>кслдовнсеновер</b> или <b>ксловерсендовн</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-419">Can be one of the following <b>XlOrder</b> constants: <b>xlDownThenOver</b> or <b>xlOverThenDown</b>.</span></span> <span data-ttu-id="ce2cc-420">Значение по умолчанию — <b>кслдовнсеновер</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-420">The default value is <b>xlDownThenOver</b>.</span></span></param>
        <param name="PageFieldWrapCount"><span data-ttu-id="ce2cc-421">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-421">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-422">Число полей страницы в каждом столбце или строке в отчете сводной таблицы.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-422">The number of page fields in each column or row in the PivotTable report.</span></span> <span data-ttu-id="ce2cc-423">Значение по умолчанию: 0 (ноль).</span><span class="sxs-lookup"><span data-stu-id="ce2cc-423">The default value is 0 (zero).</span></span></param>
        <param name="ReadData"><span data-ttu-id="ce2cc-424">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-424">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-425"><b>Значение true</b> , чтобы создать кэш сводной таблицы, который содержит все записи из внешней базы данных; Этот кэш может быть очень большим.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-425"><b>True</b> to create a PivotTable cache that contains all records from the external database; this cache can be very large.</span></span> <span data-ttu-id="ce2cc-426">Если <paramref name="ReadData" /> этот параметр имеет <b>значение false</b>, то перед фактическим чтением данных можно задать некоторые поля в качестве полей страницы на сервере.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-426">If <paramref name="ReadData" /> is <b>False</b>, you can set some of the fields as server-based page fields before the data is actually read.</span></span></param>
        <param name="Connection"><span data-ttu-id="ce2cc-427">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-427">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-428">Строка, содержащая параметры ODBC, позволяющие Excel подключаться к источнику данных ODBC.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-428">A string that contains ODBC settings that allow Excel to connect to an ODBC data source.</span></span> <span data-ttu-id="ce2cc-429">Строка подключения имеет форму "ODBC; &lt;строка&gt;подключения ".</span><span class="sxs-lookup"><span data-stu-id="ce2cc-429">The connection string has the form "ODBC;&lt;connection string&gt;".</span></span> <span data-ttu-id="ce2cc-430">Этот аргумент переопределяет все предыдущие параметры для <see cref="T:Microsoft.Office.Interop.Excel.PivotCache" /> <see cref="P:Microsoft.Office.Interop.Excel.PivotCache.Connection" /> свойства объекта.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-430">This argument overrides any previous setting for the <see cref="T:Microsoft.Office.Interop.Excel.PivotCache" /> object’s <see cref="P:Microsoft.Office.Interop.Excel.PivotCache.Connection" /> property.</span></span></param>
        <summary><span data-ttu-id="ce2cc-431">Создает <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> объект.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-431">Creates a <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> object.</span></span> <span data-ttu-id="ce2cc-432">В этом методе мастер сводных таблиц не отображается.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-432">This method doesn’t display the PivotTable Wizard.</span></span> <span data-ttu-id="ce2cc-433">Этот метод недоступен для источников данных OLE DB.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-433">This method isn’t available for OLE DB data sources.</span></span> <span data-ttu-id="ce2cc-434">Используйте <see cref="M:Microsoft.Office.Interop.Excel.Worksheets.Add(System.Object,System.Object,System.Object,System.Object)" /> метод, чтобы добавить кэш сводной таблицы, а затем создайте отчет сводной таблицы на основе кэша.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-434">Use the <see cref="M:Microsoft.Office.Interop.Excel.Worksheets.Add(System.Object,System.Object,System.Object,System.Object)" /> method to add a PivotTable cache, and then create a PivotTable report based on the cache.</span></span> <span data-ttu-id="ce2cc-435">Объект <b>сводной таблицы</b> .</span><span class="sxs-lookup"><span data-stu-id="ce2cc-435"><b>PivotTable</b> object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Previous">
      <MemberSignature Language="C#" Value="public object Previous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Previous" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Previous" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Previous As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Previous { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(503)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(503)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-436">Возвращает объект <see cref="T:Microsoft.Office.Interop.Excel.Chart" />, <see cref="T:Microsoft.Office.Interop.Excel.Range" />или <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> объект, представляющий предыдущий лист или ячейку.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-436">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Chart" />, <see cref="T:Microsoft.Office.Interop.Excel.Range" />, or <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object that represents the previous sheet or cell.</span></span> <span data-ttu-id="ce2cc-437">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-437">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="ce2cc-438">Если объект является диапазоном, это свойство эмулирует нажатие клавиш SHIFT + TAB; Однако в отличие от сочетания клавиш, свойство возвращает предыдущую ячейку, не выбирая ее.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-438">If the object is a range, this property emulates pressing SHIFT+TAB; unlike the key combination, however, the property returns the previous cell without selecting it.</span></span></para>
          <para><span data-ttu-id="ce2cc-439">На защищенном листе это свойство возвращает предыдущую незаблокированную ячейку.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-439">On a protected sheet, this property returns the previous unlocked cell.</span></span> <span data-ttu-id="ce2cc-440">На незащищенном листе это свойство всегда возвращает ячейку, находящийся непосредственно слева от указанной ячейки.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-440">On an unprotected sheet, this property always returns the cell immediately to the left of the specified cell.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintedCommentPages">
      <MemberSignature Language="C#" Value="public int PrintedCommentPages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PrintedCommentPages" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.PrintedCommentPages" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrintedCommentPages As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PrintedCommentPages { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2857)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2857)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-441">Получает количество страниц примечаний, которые будут распечатаны для текущего листа.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-441">Gets the number of comment pages that will be printed for the current worksheet.</span></span></summary>
        <value><span data-ttu-id="ce2cc-442">Количество страниц примечаний, которые будут печататься для текущего листа.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-442">The number of comment pages that will be printed for the current worksheet.</span></span></value>
        <remarks><para><span data-ttu-id="ce2cc-443">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-443">Read-only.</span></span></para>
          <para><span data-ttu-id="ce2cc-444"><see cref="P:Microsoft.Office.Interop.Excel._Worksheet.PrintedCommentPages" /> Свойство возвращает число больше нуля, если для параметра комментарии на вкладке лист диалогового окна Параметры страницы задано значение в конце листа.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-444">The <see cref="P:Microsoft.Office.Interop.Excel._Worksheet.PrintedCommentPages" /> property will only return a number greater than zero if the Comments setting on the Sheet tab of the Page Setup dialog box is set to At end of sheet.</span></span> <span data-ttu-id="ce2cc-445">Это свойство возвращает ноль, если лист является листом диаграммы или листом диалога MS Excel 5,0.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-445">This property will return zero if the sheet is a Chart sheet or a MS Excel 5.0 Dialog sheet.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOut">
      <MemberSignature Language="C#" Value="public void PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From"><span data-ttu-id="ce2cc-446">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-446">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-447">Номер страницы, с которой начинается печать.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-447">The number of the page at which to start printing.</span></span> <span data-ttu-id="ce2cc-448">Если этот аргумент опущен, печать начинается с начала.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-448">If this argument is omitted, printing starts at the beginning.</span></span></param>
        <param name="To"><span data-ttu-id="ce2cc-449">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-449">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-450">Номер последней страницы, которую требуется напечатать.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-450">The number of the last page to print.</span></span> <span data-ttu-id="ce2cc-451">Если этот аргумент опущен, печать заканчивается на последней странице.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-451">If this argument is omitted, printing ends with the last page.</span></span></param>
        <param name="Copies"><span data-ttu-id="ce2cc-452">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-452">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-453">Число копий для печати.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-453">The number of copies to print.</span></span> <span data-ttu-id="ce2cc-454">Если этот аргумент не задан, печатается одна копия.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-454">If this argument is omitted, one copy is printed.</span></span></param>
        <param name="Preview"><span data-ttu-id="ce2cc-455">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-455">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-456"><b>Значение true</b> , если Microsoft Excel вызывает предварительный просмотр перед печатью объекта.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-456"><b>True</b> to have Microsoft Excel invoke print preview before printing the object.</span></span> <span data-ttu-id="ce2cc-457"><b>Значение false</b> (или опущено) для немедленной печати объекта.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-457"><b>False</b> (or omitted) to print the object immediately.</span></span></param>
        <param name="ActivePrinter"><span data-ttu-id="ce2cc-458">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-458">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-459">Задает имя активного принтера.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-459">Sets the name of the active printer.</span></span></param>
        <param name="PrintToFile"><span data-ttu-id="ce2cc-460">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-460">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-461"><b>Значение true</b> для печати в файл.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-461"><b>True</b> to print to a file.</span></span> <span data-ttu-id="ce2cc-462">Если <paramref name="PrToFileName" /> параметр не указан, Microsoft Excel предлагает пользователю ввести имя выходного файла.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-462">If <paramref name="PrToFileName" /> is not specified, Microsoft Excel prompts the user to enter the name of the output file.</span></span></param>
        <param name="Collate"><span data-ttu-id="ce2cc-463">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-463">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-464"><b>Значение true</b> для разбора по копиям нескольких копий.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-464"><b>True</b> to collate multiple copies.</span></span></param>
        <param name="PrToFileName"><span data-ttu-id="ce2cc-465">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-465">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-466">Если <paramref name="PrintToFile" /> задано <b>значение true</b>, этот аргумент указывает имя файла, в который будет выполняться печать.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-466">If <paramref name="PrintToFile" /> is set to <b>True</b>, this argument specifies the name of the file you want to print to.</span></span></param>
        <summary><span data-ttu-id="ce2cc-467">Печатает объект.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-467">Prints the object.</span></span></summary>
        <remarks><para><span data-ttu-id="ce2cc-468">"Pages" (страницы) <paramref name="From" /> в <paramref name="To" /> описаниях и относится к печатным страницам, а не к общим страницам листа или книги.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-468">"Pages" in the descriptions of <paramref name="From" /> and <paramref name="To" /> refers to printed pages, not overall pages in the sheet or workbook.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOutEx">
      <MemberSignature Language="C#" Value="public void PrintOutEx (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName, object IgnorePrintAreas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOutEx([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName, [in]object IgnorePrintAreas) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintOutEx (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object, Optional IgnorePrintAreas As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2361)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(9)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
        <Parameter Name="IgnorePrintAreas" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <param name="PrToFileName">To be added.</param>
        <param name="IgnorePrintAreas">To be added.</param>
        <summary><span data-ttu-id="ce2cc-469">Зарезервировано для внутреннего использования.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-469">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintPreview">
      <MemberSignature Language="C#" Value="public void PrintPreview (object EnableChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintPreview([in]object EnableChanges) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.PrintPreview(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintPreview (Optional EnableChanges As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(281)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EnableChanges" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="EnableChanges"><span data-ttu-id="ce2cc-470">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-470">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-471"><b>Значение true</b> , чтобы включить изменения на указанном листе.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-471"><b>True</b> to enable changes to the specified worksheet.</span></span></param>
        <summary><span data-ttu-id="ce2cc-472">Показывает предварительный просмотр объекта в том виде, в котором он будет выглядеть при печати.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-472">Shows a preview of the object as it would look when printed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Protect">
      <MemberSignature Language="C#" Value="public void Protect (object Password, object DrawingObjects, object Contents, object Scenarios, object UserInterfaceOnly, object AllowFormattingCells, object AllowFormattingColumns, object AllowFormattingRows, object AllowInsertingColumns, object AllowInsertingRows, object AllowInsertingHyperlinks, object AllowDeletingColumns, object AllowDeletingRows, object AllowSorting, object AllowFiltering, object AllowUsingPivotTables);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Protect([in]object Password, [in]object DrawingObjects, [in]object Contents, [in]object Scenarios, [in]object UserInterfaceOnly, [in]object AllowFormattingCells, [in]object AllowFormattingColumns, [in]object AllowFormattingRows, [in]object AllowInsertingColumns, [in]object AllowInsertingRows, [in]object AllowInsertingHyperlinks, [in]object AllowDeletingColumns, [in]object AllowDeletingRows, [in]object AllowSorting, [in]object AllowFiltering, [in]object AllowUsingPivotTables) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Protect(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Protect (Optional Password As Object, Optional DrawingObjects As Object, Optional Contents As Object, Optional Scenarios As Object, Optional UserInterfaceOnly As Object, Optional AllowFormattingCells As Object, Optional AllowFormattingColumns As Object, Optional AllowFormattingRows As Object, Optional AllowInsertingColumns As Object, Optional AllowInsertingRows As Object, Optional AllowInsertingHyperlinks As Object, Optional AllowDeletingColumns As Object, Optional AllowDeletingRows As Object, Optional AllowSorting As Object, Optional AllowFiltering As Object, Optional AllowUsingPivotTables As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2029)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="DrawingObjects" Type="System.Object" />
        <Parameter Name="Contents" Type="System.Object" />
        <Parameter Name="Scenarios" Type="System.Object" />
        <Parameter Name="UserInterfaceOnly" Type="System.Object" />
        <Parameter Name="AllowFormattingCells" Type="System.Object" />
        <Parameter Name="AllowFormattingColumns" Type="System.Object" />
        <Parameter Name="AllowFormattingRows" Type="System.Object" />
        <Parameter Name="AllowInsertingColumns" Type="System.Object" />
        <Parameter Name="AllowInsertingRows" Type="System.Object" />
        <Parameter Name="AllowInsertingHyperlinks" Type="System.Object" />
        <Parameter Name="AllowDeletingColumns" Type="System.Object" />
        <Parameter Name="AllowDeletingRows" Type="System.Object" />
        <Parameter Name="AllowSorting" Type="System.Object" />
        <Parameter Name="AllowFiltering" Type="System.Object" />
        <Parameter Name="AllowUsingPivotTables" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password"><span data-ttu-id="ce2cc-473">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-473">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-474">Строка, которая указывает пароль, учитывающий регистр, для листа или книги.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-474">A string that specifies a case-sensitive password for the worksheet or workbook.</span></span> <span data-ttu-id="ce2cc-475">Если этот аргумент не указан, можно снять защиту листа или книги, не используя пароль.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-475">If this argument is omitted, you can unprotect the worksheet or workbook without using a password.</span></span> <span data-ttu-id="ce2cc-476">В противном случае необходимо указать пароль для снятия защиты листа или книги.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-476">Otherwise, you must specify the password to unprotect the worksheet or workbook.</span></span> <span data-ttu-id="ce2cc-477">Если вы забыли пароль, вы не сможете снять защиту листа или книги.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-477">If you forget the password, you cannot unprotect the worksheet or workbook.</span></span> <span data-ttu-id="ce2cc-478">Рекомендуется хранить список паролей и соответствующих им имен документов в надежном месте.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-478">It's a good idea to keep a list of your passwords and their corresponding document names in a safe place.</span></span></param>
        <param name="DrawingObjects"><span data-ttu-id="ce2cc-479">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-479">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-480"><b>Значение true</b> для защиты фигур.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-480"><b>True</b> to protect shapes.</span></span> <span data-ttu-id="ce2cc-481">Значение по умолчанию — <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-481">The default value is <b>False</b>.</span></span></param>
        <param name="Contents"><span data-ttu-id="ce2cc-482">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-482">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-483"><b>Значение true</b> для защиты содержимого.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-483"><b>True</b> to protect contents.</span></span> <span data-ttu-id="ce2cc-484">Для диаграммы это обеспечивает защиту всей диаграммы.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-484">For a chart, this protects the entire chart.</span></span> <span data-ttu-id="ce2cc-485">Для листа защищает заблокированные ячейки.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-485">For a worksheet, this protects the locked cells.</span></span> <span data-ttu-id="ce2cc-486">Значение по умолчанию — <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-486">The default value is <b>True</b>.</span></span></param>
        <param name="Scenarios"><span data-ttu-id="ce2cc-487">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-487">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-488"><b>Значение true</b> , чтобы защитить сценарии.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-488"><b>True</b> to protect scenarios.</span></span> <span data-ttu-id="ce2cc-489">Этот аргумент действителен только для листов.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-489">This argument is valid only for worksheets.</span></span> <span data-ttu-id="ce2cc-490">Значение по умолчанию — <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-490">The default value is <b>True</b>.</span></span></param>
        <param name="UserInterfaceOnly"><span data-ttu-id="ce2cc-491">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-491">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-492"><b>Значение true</b> , чтобы защитить пользовательский интерфейс, но не макросы.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-492"><b>True</b> to protect the user interface but not macros.</span></span> <span data-ttu-id="ce2cc-493">Если этот аргумент опущен, защита применяется как к макросам, так и к пользовательскому интерфейсу.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-493">If this argument is omitted, protection applies both to macros and to the user interface.</span></span></param>
        <param name="AllowFormattingCells"><span data-ttu-id="ce2cc-494">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-494">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-495"><b>Значение true</b> позволяет пользователю форматировать любую ячейку на защищенном листе.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-495"><b>True</b> allows the user to format any cell on a protected worksheet.</span></span> <span data-ttu-id="ce2cc-496">Значение по умолчанию — <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-496">The default value is <b>False</b>.</span></span></param>
        <param name="AllowFormattingColumns"><span data-ttu-id="ce2cc-497">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-497">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-498"><b>Значение true</b> позволяет пользователю форматировать любой столбец на защищенном листе.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-498"><b>True</b> allows the user to format any column on a protected worksheet.</span></span> <span data-ttu-id="ce2cc-499">Значение по умолчанию — <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-499">The default value is <b>False</b>.</span></span></param>
        <param name="AllowFormattingRows"><span data-ttu-id="ce2cc-500">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-500">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-501"><b>Значение true</b> позволяет пользователю форматировать любую строку на защищенном листе.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-501"><b>True</b> allows the user to format any row on a protected worksheet.</span></span> <span data-ttu-id="ce2cc-502">Значение по умолчанию — <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-502">The default value is <b>False</b>.</span></span></param>
        <param name="AllowInsertingColumns"><span data-ttu-id="ce2cc-503">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-503">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-504"><b>Значение true</b> позволяет пользователю вставлять столбцы на защищенный лист.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-504"><b>True</b> allows the user to insert columns on the protected worksheet.</span></span> <span data-ttu-id="ce2cc-505">Значение по умолчанию — <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-505">The default value is <b>False</b>.</span></span></param>
        <param name="AllowInsertingRows"><span data-ttu-id="ce2cc-506">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-506">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-507"><b>Значение true</b> позволяет пользователю вставлять строки на защищенный лист.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-507"><b>True</b> allows the user to insert rows on the protected worksheet.</span></span> <span data-ttu-id="ce2cc-508">Значение по умолчанию — <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-508">The default value is <b>False</b>.</span></span></param>
        <param name="AllowInsertingHyperlinks"><span data-ttu-id="ce2cc-509">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-509">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-510"><b>Значение true</b> позволяет пользователю вставлять гиперссылки на листе.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-510"><b>True</b> allows the user to insert hyperlinks on the worksheet.</span></span> <span data-ttu-id="ce2cc-511">Значение по умолчанию — <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-511">The default value is <b>False</b>.</span></span></param>
        <param name="AllowDeletingColumns"><span data-ttu-id="ce2cc-512">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-512">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-513"><b>Значение true</b> позволяет пользователю удалять столбцы на защищенном листе, где каждая ячейка удаляемого столбца разблокируется.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-513"><b>True</b> allows the user to delete columns on the protected worksheet, where every cell in the column to be deleted is unlocked.</span></span> <span data-ttu-id="ce2cc-514">Значение по умолчанию — <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-514">The default value is <b>False</b>.</span></span></param>
        <param name="AllowDeletingRows"><span data-ttu-id="ce2cc-515">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-515">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-516"><b>Значение true</b> позволяет пользователю удалять строки на защищенном листе, где каждая ячейка удаляемой строки разблокирована.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-516"><b>True</b> allows the user to delete rows on the protected worksheet where every cell in the row to be deleted is unlocked.</span></span> <span data-ttu-id="ce2cc-517">Значение по умолчанию — <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-517">The default value is <b>False</b>.</span></span></param>
        <param name="AllowSorting"><span data-ttu-id="ce2cc-518">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-518">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-519"><b>Значение true</b> позволяет пользователю сортировать защищенный лист.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-519"><b>True</b> allows the user to sort on the protected worksheet.</span></span> <span data-ttu-id="ce2cc-520">Каждая ячейка в диапазоне сортировки должна быть разблокирована или незащищена.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-520">Every cell in the sort range must be unlocked or unprotected.</span></span> <span data-ttu-id="ce2cc-521">Значение по умолчанию — <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-521">The default value is <b>False</b>.</span></span></param>
        <param name="AllowFiltering"><span data-ttu-id="ce2cc-522">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-522">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-523"><b>Значение true</b> позволяет пользователю устанавливать фильтры для защищенного листа.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-523"><b>True</b> allows the user to set filters on the protected worksheet.</span></span> <span data-ttu-id="ce2cc-524">Пользователи могут изменять критерии фильтрации, но не могут включать или отключать автоматический фильтр.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-524">Users can change filter criteria but can not enable or disable an auto filter.</span></span> <span data-ttu-id="ce2cc-525">Пользователи могут устанавливать фильтры для существующего автоматического фильтра.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-525">Users can set filters on an existing auto filter.</span></span> <span data-ttu-id="ce2cc-526">Значение по умолчанию — <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-526">The default value is <b>False</b>.</span></span></param>
        <param name="AllowUsingPivotTables"><span data-ttu-id="ce2cc-527">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-527">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-528"><b>Значение true</b> позволяет пользователю использовать отчеты сводной таблицы на защищенном листе.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-528"><b>True</b> allows the user to use pivot table reports on the protected worksheet.</span></span> <span data-ttu-id="ce2cc-529">Значение по умолчанию — <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-529">The default value is <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="ce2cc-530">Защищает лист, чтобы его нельзя было изменить.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-530">Protects a worksheet so that it cannot be modified.</span></span></summary>
        <remarks><para><span data-ttu-id="ce2cc-531">Если вы примените метод <b>Protect</b> , для <paramref name="UserInterfaceOnly" /> аргумента которого задано <b>значение true</b> , а затем сохраните книгу, при повторном открытии книги весь лист (а не только интерфейс) будет полностью защищен.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-531">If you apply the <b>Protect</b> method with the <paramref name="UserInterfaceOnly" /> argument set to <b>True</b> to a worksheet and then save the workbook, the entire worksheet (not just the interface) will be fully protected when you reopen the workbook.</span></span> <span data-ttu-id="ce2cc-532">Чтобы повторно включить защиту пользовательского интерфейса после открытия книги, необходимо повторно применить метод <b>Protect</b> со <paramref name="UserInterfaceOnly" /> значением <b>true</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-532">To re-enable the user interface protection after the workbook is opened, you must again apply the <b>Protect</b> method with <paramref name="UserInterfaceOnly" /> set to <b>True</b>.</span></span></para>
          <para><span data-ttu-id="ce2cc-533">Если вы хотите внести изменения в защищенный лист, можно использовать метод <b>Protect</b> на защищенном листе, если он указан.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-533">If you want to make a change to a protected worksheet, it is possible to use the <b>Protect</b> method on a protected worksheet if the password is supplied.</span></span> <span data-ttu-id="ce2cc-534">Другой способ — снять защиту листа, внести необходимые изменения, а затем снова защитить лист.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-534">Another method would be to unprotect the worksheet, make the necessary changes, and then protect the worksheet again.</span></span></para>
          <para><span data-ttu-id="ce2cc-535">
            <b>Note</b>: "unprotectd" означает, что ячейка может быть заблокирована (диалоговое окно Format Cells), но включена в диапазон, определенный в диалоговом окне Разрешить изменение диапазонов, а пользователь не защищает диапазон паролем или проверил с помощью разрешений NT.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-535">
            <b>Note</b>: 'Unprotected' means the cell may be locked (Format Cells dialog) but is included in a range defined in the Allow Users to Edit Ranges dialog, and the user has unprotected the range with a password or been validated via NT permissions.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectContents">
      <MemberSignature Language="C#" Value="public bool ProtectContents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectContents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ProtectContents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectContents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectContents { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(292)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(292)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-536"><b>Значение true</b> , если содержимое листа защищено.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-536"><b>True</b> if the contents of the sheet are protected.</span></span> <span data-ttu-id="ce2cc-537">Для диаграммы это обеспечивает защиту всей диаграммы.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-537">For a chart, this protects the entire chart.</span></span> <span data-ttu-id="ce2cc-538">Для листа это позволяет защитить отдельные ячейки.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-538">For a worksheet, this protects the individual cells.</span></span> <span data-ttu-id="ce2cc-539">Только для чтения, <b>Boolean</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-539">Read-only <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectDrawingObjects">
      <MemberSignature Language="C#" Value="public bool ProtectDrawingObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectDrawingObjects" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ProtectDrawingObjects" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectDrawingObjects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectDrawingObjects { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(293)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(293)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-540"><b>Значение true</b> , если фигуры защищены.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-540"><b>True</b> if shapes are protected.</span></span> <span data-ttu-id="ce2cc-541">Только для чтения, <b>Boolean</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-541">Read-only <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Protection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Protection Protection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Protection Protection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Protection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Protection As Protection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Protection ^ Protection { Microsoft::Office::Interop::Excel::Protection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(176)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(176)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Protection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-542">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Protection" /> объект, представляющий параметры защиты листа.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-542">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Protection" /> object that represents the protection options of the worksheet.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectionMode">
      <MemberSignature Language="C#" Value="public bool ProtectionMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectionMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ProtectionMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectionMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectionMode { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1159)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1159)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-543"><b>Имеет значение true</b> , если включена защита "только пользовательский интерфейс".</span><span class="sxs-lookup"><span data-stu-id="ce2cc-543"><b>True</b> if user-interface-only protection is turned on.</span></span> <span data-ttu-id="ce2cc-544">Чтобы включить защиту пользовательского интерфейса, используйте <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Protect(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> метод с аргументом, <paramref name="UserInterfaceOnly" /> для которого задано <b>значение true</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-544">To turn on user interface protection, use the <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Protect(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method with the <paramref name="UserInterfaceOnly" /> argument set to <b>True</b>.</span></span> <span data-ttu-id="ce2cc-545">Только для чтения, <b>Boolean</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-545">Read-only <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectScenarios">
      <MemberSignature Language="C#" Value="public bool ProtectScenarios { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectScenarios" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ProtectScenarios" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectScenarios As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectScenarios { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(294)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(294)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-546"><b>Имеет значение true</b> , если сценарии рабочего листа защищены.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-546"><b>True</b> if the worksheet scenarios are protected.</span></span> <span data-ttu-id="ce2cc-547">Только для чтения, <b>Boolean</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-547">Read-only <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryTables">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.QueryTables QueryTables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.QueryTables QueryTables" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.QueryTables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueryTables As QueryTables" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::QueryTables ^ QueryTables { Microsoft::Office::Interop::Excel::QueryTables ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1434)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1434)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.QueryTables</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-548">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.QueryTables" /> коллекцию, которая представляет все таблицы запросов на указанном листе.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-548">Returns the <see cref="T:Microsoft.Office.Interop.Excel.QueryTables" /> collection that represents all the query tables on the specified worksheet.</span></span> <span data-ttu-id="ce2cc-549">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-549">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Range">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Range[object Cell1, object Cell2] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Range(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Range(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Range(Cell1 As Object, Optional Cell2 As Object) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Range[System::Object ^, System::Object ^] { Microsoft::Office::Interop::Excel::Range ^ get(System::Object ^ Cell1, System::Object ^ Cell2); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(197)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(197)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cell1" Type="System.Object" />
        <Parameter Name="Cell2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Cell1"><span data-ttu-id="ce2cc-550">Обязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-550">Required <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-551">Имя диапазона.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-551">The name of the range.</span></span> <span data-ttu-id="ce2cc-552">Это должна быть ссылка в стиле A1 на языке макроса.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-552">This must be an A1-style reference in the language of the macro.</span></span> <span data-ttu-id="ce2cc-553">Он может содержать оператор диапазона (двоеточие), оператор пересечения (пробел) или оператор объединения (запятая).</span><span class="sxs-lookup"><span data-stu-id="ce2cc-553">It can include the range operator (a colon), the intersection operator (a space), or the union operator (a comma).</span></span> <span data-ttu-id="ce2cc-554">Он также может включать знаки доллара, но они игнорируются.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-554">It can also include dollar signs, but they’re ignored.</span></span> <span data-ttu-id="ce2cc-555">Можно использовать локально определенное имя в любой части диапазона.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-555">You can use a local defined name in any part of the range.</span></span> <span data-ttu-id="ce2cc-556">При использовании имени предполагается, что оно записано на языке макроса.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-556">If you use a name, the name is assumed to be in the language of the macro.</span></span></param>
        <param name="Cell2"><span data-ttu-id="ce2cc-557">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-557">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-558">Ячейка в левом верхнем и правом нижнем углах диапазона.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-558">The cell in the upper-left and lower-right corner of the range.</span></span> <span data-ttu-id="ce2cc-559">Может быть объектом <b>Range</b>, содержащим одну ячейку, весь столбец или всю строку, или строкой, указывающей одну ячейку на языке макроса.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-559">Can be a <b>Range</b> object that contains a single cell, an entire column, or entire row, or it can be a string that names a single cell in the language of the macro.</span></span></param>
        <summary><span data-ttu-id="ce2cc-560">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Range" /> объект, представляющий ячейку или диапазон ячеек.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-560">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents a cell or a range of cells.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rectangles">
      <MemberSignature Language="C#" Value="public object Rectangles (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Rectangles([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Rectangles(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Rectangles (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(774)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="ce2cc-561">Зарезервировано для внутреннего использования.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-561">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetAllPageBreaks">
      <MemberSignature Language="C#" Value="public void ResetAllPageBreaks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetAllPageBreaks() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ResetAllPageBreaks" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetAllPageBreaks ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetAllPageBreaks();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1426)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ce2cc-562">Сбрасывает все разрывы страниц на указанном листе.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-562">Resets all page breaks on the specified worksheet.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Rows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Rows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Rows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rows As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Rows { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(258)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(258)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-563">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Range" /> объект, который представляет все строки на указанном листе.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-563">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the rows on the specified worksheet.</span></span> <span data-ttu-id="ce2cc-564">Объект <b>Range</b> предназначен только для чтения.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-564">Read-only <b>Range</b> object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public void SaveAs (string Filename, object FileFormat, object Password, object WriteResPassword, object ReadOnlyRecommended, object CreateBackup, object AddToMru, object TextCodepage, object TextVisualLayout, object Local);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveAs([in]string Filename, [in]object FileFormat, [in]object Password, [in]object WriteResPassword, [in]object ReadOnlyRecommended, [in]object CreateBackup, [in]object AddToMru, [in]object TextCodepage, [in]object TextVisualLayout, [in]object Local) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAs (Filename As String, Optional FileFormat As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional ReadOnlyRecommended As Object, Optional CreateBackup As Object, Optional AddToMru As Object, Optional TextCodepage As Object, Optional TextVisualLayout As Object, Optional Local As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1925)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="FileFormat" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="ReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="CreateBackup" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
        <Parameter Name="TextCodepage" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
        <Parameter Name="Local" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename"><span data-ttu-id="ce2cc-565">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-565">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-566">Строка, указывающая имя сохраняемого файла.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-566">A string that indicates the name of the file to be saved.</span></span> <span data-ttu-id="ce2cc-567">Можно включить полный путь; в противном случае Microsoft Excel сохранит файл в текущей папке.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-567">You can include a full path; if you don't, Microsoft Excel saves the file in the current folder.</span></span></param>
        <param name="FileFormat"><span data-ttu-id="ce2cc-568">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-568">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-569">Формат файла, используемый при сохранении файла.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-569">The file format to use when you save the file.</span></span> <span data-ttu-id="ce2cc-570">Список допустимых вариантов можно узнать в <see cref="P:Microsoft.Office.Interop.Excel._Workbook.FileFormat" /> свойстве.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-570">For a list of valid choices, see the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.FileFormat" /> property.</span></span> <span data-ttu-id="ce2cc-571">Для существующего файла форматом по умолчанию является последний указанный формат файла; для нового файла значением по умолчанию является формат используемой версии Excel.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-571">For an existing file, the default format is the last file format specified; for a new file, the default is the format of the version of Excel being used.</span></span></param>
        <param name="Password"><span data-ttu-id="ce2cc-572">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-572">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-573">Строка с учетом регистра (не более 15 символов), которая указывает пароль защиты, присваиваемый файлу.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-573">A case-sensitive string (no more than 15 characters) that indicates the protection password to be given to the file.</span></span></param>
        <param name="WriteResPassword"><span data-ttu-id="ce2cc-574">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-574">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-575">Строка, указывающая пароль для резервирования записи для этого файла.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-575">A string that indicates the write-reservation password for this file.</span></span> <span data-ttu-id="ce2cc-576">Если файл сохраняется с паролем и не предоставляется пароль при открытии файла, файл открывается только для чтения.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-576">If a file is saved with the password and the password isn't supplied when the file is opened, the file is opened as read-only.</span></span></param>
        <param name="ReadOnlyRecommended"><span data-ttu-id="ce2cc-577">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-577">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-578"><b>Значение true</b> для отображения сообщения при открытии файла с рекомендацией открыть файл только для чтения.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-578"><b>True</b> to display a message when the file is opened recommending that the file be opened as read-only.</span></span></param>
        <param name="CreateBackup"><span data-ttu-id="ce2cc-579">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-579">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-580"><b>Значение true</b> , чтобы создать файл резервной копии.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-580"><b>True</b> to create a backup file.</span></span></param>
        <param name="AddToMru"><span data-ttu-id="ce2cc-581">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-581">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-582"><b>Значение true</b> , чтобы добавить эту книгу в список недавно использовавшихся файлов.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-582"><b>True</b> to add this workbook to the list of recently used files.</span></span> <span data-ttu-id="ce2cc-583">Значение по умолчанию — <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-583">The default value is <b>False</b>.</span></span></param>
        <param name="TextCodepage"><span data-ttu-id="ce2cc-584">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-584">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-585">Не используется в Microsoft Excel на английском языке (США).</span><span class="sxs-lookup"><span data-stu-id="ce2cc-585">Not used in U.S. English Microsoft Excel.</span></span></param>
        <param name="TextVisualLayout"><span data-ttu-id="ce2cc-586">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-586">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-587">Не используется в Microsoft Excel на английском языке (США).</span><span class="sxs-lookup"><span data-stu-id="ce2cc-587">Not used in U.S. English Microsoft Excel.</span></span></param>
        <param name="Local"><span data-ttu-id="ce2cc-588">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-588">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-589"><b>True</b> — сохраняет файлы на языке Microsoft Excel (включая параметры панели управления).</span><span class="sxs-lookup"><span data-stu-id="ce2cc-589"><b>True</b> saves files against the language of Microsoft Excel (including control panel settings).</span></span> <span data-ttu-id="ce2cc-590"><b>False</b> (по умолчанию) — сохранение файлов на языке Visual Basic для приложений (VBA) (обычно это английский (США)), если проект VBA, где запущены книги, не является устаревшим международным проектом Xl5/95 VBA.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-590"><b>False</b> (default) saves files against the language of Visual Basic for Applications (VBA) (which is typically U.S. English unless the VBA project where Workbooks.Open is run from is an old internationalized XL5/95 VBA project).</span></span></param>
        <summary><span data-ttu-id="ce2cc-591">Сохраняет изменения диаграммы или листа в другом файле.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-591">Saves changes to the chart or worksheet in a different file.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scenarios">
      <MemberSignature Language="C#" Value="public object Scenarios (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Scenarios([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Scenarios(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Scenarios (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(908)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="ce2cc-592">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-592">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-593">Имя или номер сценария.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-593">The name or number of the scenario.</span></span> <span data-ttu-id="ce2cc-594">Используйте массив, чтобы указать несколько сценариев.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-594">Use an array to specify more than one scenario.</span></span></param>
        <summary><span data-ttu-id="ce2cc-595">Возвращает объект, представляющий либо один сценарий ( <see cref="T:Microsoft.Office.Interop.Excel.Scenario" /> объект), либо набор сценариев ( <see cref="T:Microsoft.Office.Interop.Excel.Scenarios" /> объект) на листе.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-595">Returns an object that represents either a single scenario (a <see cref="T:Microsoft.Office.Interop.Excel.Scenario" /> object) or a collection of scenarios (a <see cref="T:Microsoft.Office.Interop.Excel.Scenarios" /> object) on the worksheet.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scripts">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.Scripts Scripts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.Scripts Scripts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Scripts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Scripts As Scripts" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::Scripts ^ Scripts { Microsoft::Office::Core::Scripts ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1816)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1816)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.Scripts</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-596">Возвращает <see cref="T:Microsoft.Office.Core.Scripts" /> коллекцию, которая содержит <see cref="T:Microsoft.Office.Core.Script" /> объекты, представляющие блоки скрипта или кода в указанном документе при его сохранении в виде веб-страницы.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-596">Returns the <see cref="T:Microsoft.Office.Core.Scripts" /> collection, which contains <see cref="T:Microsoft.Office.Core.Script" /> objects representing blocks of script or code in the specified document when it’s saved as a Web page.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollArea">
      <MemberSignature Language="C#" Value="public string ScrollArea { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScrollArea" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ScrollArea" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollArea As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScrollArea { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1433)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1433)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1433)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-597">Возвращает или задает диапазон, в котором разрешена прокрутка в качестве ссылки на диапазон в стиле a1.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-597">Returns or sets the range where scrolling is allowed as an A1-style range reference.</span></span> <span data-ttu-id="ce2cc-598">Ячейки, не входящие в область прокрутки, не могут быть выбраны.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-598">Cells outside the scroll area cannot be selected.</span></span> <span data-ttu-id="ce2cc-599">Для чтения и записи, <b>String</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-599">Read/write <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="ce2cc-600">Задайте для этого свойства пустую строку (""), чтобы включить выделение ячеек для всего листа.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-600">Set this property to the empty string ("") to enable cell selection for the entire sheet.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollBars">
      <MemberSignature Language="C#" Value="public object ScrollBars (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ScrollBars([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ScrollBars(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScrollBars (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(830)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="ce2cc-601">Зарезервировано для внутреннего использования.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-601">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (object Replace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select([in]object Replace) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Select(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (Optional Replace As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(235)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Replace" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Replace"><span data-ttu-id="ce2cc-602">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-602">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-603">Заменяемый объект.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-603">The object to replace.</span></span></param>
        <summary><span data-ttu-id="ce2cc-604">Выбирает объект.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-604">Selects the object.</span></span></summary>
        <remarks><para><span data-ttu-id="ce2cc-605">Чтобы выбрать ячейку или диапазон ячеек, используйте метод <b>SELECT</b> .</span><span class="sxs-lookup"><span data-stu-id="ce2cc-605">To select a cell or a range of cells, use the <b>Select</b> method.</span></span> <span data-ttu-id="ce2cc-606">Чтобы сделать одну ячейку активной ячейкой, используйте <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Activate" /> метод.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-606">To make a single cell the active cell, use the <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Activate" /> method.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBackgroundPicture">
      <MemberSignature Language="C#" Value="public void SetBackgroundPicture (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBackgroundPicture([in]string Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.SetBackgroundPicture(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBackgroundPicture (Filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBackgroundPicture(System::String ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1188)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename"><span data-ttu-id="ce2cc-607">Обязательный атрибут типа <b>String</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-607">Required <b>String</b>.</span></span> <span data-ttu-id="ce2cc-608">Имя графического файла.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-608">The name of the graphic file.</span></span></param>
        <summary><span data-ttu-id="ce2cc-609">Задает фоновый рисунок для листа или диаграммы.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-609">Sets the background graphic for a worksheet or chart.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shapes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shapes Shapes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Shapes Shapes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Shapes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Shapes As Shapes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Shapes ^ Shapes { Microsoft::Office::Interop::Excel::Shapes ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1377)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1377)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shapes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-610">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> объект, который представляет все фигуры на листе или листе диаграммы.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-610">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> object that represents all the shapes on the worksheet or chart sheet.</span></span> <span data-ttu-id="ce2cc-611">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-611">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowAllData">
      <MemberSignature Language="C#" Value="public void ShowAllData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowAllData() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ShowAllData" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowAllData ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowAllData();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(794)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ce2cc-612">Делает видимыми все строки в текущий отфильтрованный список.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-612">Makes all rows of the currently filtered list visible.</span></span> <span data-ttu-id="ce2cc-613">Если используется Автофильтр, этот метод изменяет стрелки на "все".</span><span class="sxs-lookup"><span data-stu-id="ce2cc-613">If AutoFilter is in use, this method changes the arrows to "All."</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDataForm">
      <MemberSignature Language="C#" Value="public void ShowDataForm ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowDataForm() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ShowDataForm" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowDataForm ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowDataForm();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(409)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ce2cc-614">Отображает форму данных, связанную с листом.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-614">Displays the data form associated with the worksheet.</span></span></summary>
        <remarks><para><span data-ttu-id="ce2cc-615">Выполнение приостанавливается, пока вы используете форму данных.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-615">Execution pauses while you’re using the data form.</span></span> <span data-ttu-id="ce2cc-616">При закрытии формы данных выполнение возобновляется со строки, следующей за методом <b>шовдатаформ</b> .</span><span class="sxs-lookup"><span data-stu-id="ce2cc-616">When you close the data form, execution resumes at the line following the <b>ShowDataForm</b> method.</span></span></para>
          <para><span data-ttu-id="ce2cc-617">Этот метод выполняет пользовательскую форму данных, если она существует.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-617">This method runs the custom data form, if one exists.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartTags">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SmartTags SmartTags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SmartTags SmartTags" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.SmartTags" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartTags As SmartTags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SmartTags ^ SmartTags { Microsoft::Office::Interop::Excel::SmartTags ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2016)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2016)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SmartTags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-618">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.SmartTags" /> объект, представляющий идентификатор для указанной ячейки.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-618">Returns a <see cref="T:Microsoft.Office.Interop.Excel.SmartTags" /> object representing the identifier for the specified cell.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sort Sort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sort Sort" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Sort" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sort As Sort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sort ^ Sort { Microsoft::Office::Interop::Excel::Sort ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(880)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(880)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sort</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-619">Возвращает отсортированные значения на текущем листе.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-619">Returns the sorted values in the current worksheet.</span></span> <span data-ttu-id="ce2cc-620">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-620">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.Sort" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Spinners">
      <MemberSignature Language="C#" Value="public object Spinners (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Spinners([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Spinners(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Spinners (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(838)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="ce2cc-621">Зарезервировано для внутреннего использования.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-621">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardHeight">
      <MemberSignature Language="C#" Value="public double StandardHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 StandardHeight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.StandardHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StandardHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double StandardHeight { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(407)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(407)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-622">Возвращает стандартную высоту всех строк листа в пунктах (по умолчанию).</span><span class="sxs-lookup"><span data-stu-id="ce2cc-622">Returns the standard (default) height of all the rows in the worksheet in points.</span></span> <span data-ttu-id="ce2cc-623">Только для чтения, <b>Double</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-623">Read-only <b>Double</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardWidth">
      <MemberSignature Language="C#" Value="public double StandardWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 StandardWidth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.StandardWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double StandardWidth { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(408)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(408)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(408)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-624">Возвращает или задает стандартную (по умолчанию) ширину всех столбцов на листе.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-624">Returns or sets the standard (default) width of all the columns in the worksheet.</span></span> <span data-ttu-id="ce2cc-625">Для чтения и записи, <b>Double</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-625">Read/write <b>Double</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="ce2cc-626">Одна единица измерения ширины столбца равна ширине одного символа в стиле Normal.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-626">One unit of column width is equal to the width of one character in the Normal style.</span></span> <span data-ttu-id="ce2cc-627">Для пропорциональных шрифтов используется ширина знака 0 (ноль).</span><span class="sxs-lookup"><span data-stu-id="ce2cc-627">For proportional fonts, the width of the character 0 (zero) is used.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Tab">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Tab Tab { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Tab Tab" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Tab" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Tab As Tab" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Tab ^ Tab { Microsoft::Office::Interop::Excel::Tab ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1041)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1041)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Tab</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-628">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Tab" /> объект диаграммы или листа.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-628">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Tab" /> object for a chart or a worksheet.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextBoxes">
      <MemberSignature Language="C#" Value="public object TextBoxes (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object TextBoxes([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.TextBoxes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function TextBoxes (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(777)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="ce2cc-629">Зарезервировано для внутреннего использования.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-629">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransitionExpEval">
      <MemberSignature Language="C#" Value="public bool TransitionExpEval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransitionExpEval" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.TransitionExpEval" />
      <MemberSignature Language="VB.NET" Value="Public Property TransitionExpEval As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransitionExpEval { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(401)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(401)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(401)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-630"><b>Имеет значение true</b> , если Microsoft Excel использует правила оценки выражений Lotus 1-2-3 для листа.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-630"><b>True</b> if Microsoft Excel uses Lotus 1-2-3 expression evaluation rules for the worksheet.</span></span> <span data-ttu-id="ce2cc-631">Для чтения и записи, <b>Boolean</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-631">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransitionFormEntry">
      <MemberSignature Language="C#" Value="public bool TransitionFormEntry { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransitionFormEntry" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.TransitionFormEntry" />
      <MemberSignature Language="VB.NET" Value="Public Property TransitionFormEntry As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransitionFormEntry { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(402)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(402)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(402)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-632"><b>Имеет значение true</b> , если Microsoft Excel использует правила ввода формул Lotus 1-2-3 для листа.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-632"><b>True</b> if Microsoft Excel uses Lotus 1-2-3 formula entry rules for the worksheet.</span></span> <span data-ttu-id="ce2cc-633">Для чтения и записи, <b>Boolean</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-633">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlSheetType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlSheetType Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As XlSheetType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlSheetType Type { Microsoft::Office::Interop::Excel::XlSheetType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlSheetType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-634">Возвращает или задает тип листа.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-634">Returns or sets the worksheet type.</span></span> <span data-ttu-id="ce2cc-635">Только <see cref="T:Microsoft.Office.Interop.Excel.XlSheetType" />для чтения.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-635">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlSheetType" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unprotect">
      <MemberSignature Language="C#" Value="public void Unprotect (object Password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unprotect([in]object Password) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Unprotect(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unprotect (Optional Password As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(285)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password"><span data-ttu-id="ce2cc-636">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-636">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-637">Строка, указывающая пароль с учетом регистра, который будет использоваться для снятия защиты листа или книги.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-637">A string that denotes the case-sensitive password to use to unprotect the sheet or workbook.</span></span> <span data-ttu-id="ce2cc-638">Если лист или книга не защищены паролем, этот аргумент игнорируется.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-638">If the sheet or workbook isn't protected with a password, this argument is ignored.</span></span> <span data-ttu-id="ce2cc-639">Если опустить этот аргумент для листа, защищенного паролем, вам будет запрошен пароль.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-639">If you omit this argument for a sheet that's protected with a password, you'll be prompted for the password.</span></span> <span data-ttu-id="ce2cc-640">Если опустить этот аргумент для книги, защищенной паролем, метод завершится ошибкой.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-640">If you omit this argument for a workbook that's protected with a password, the method fails.</span></span></param>
        <summary><span data-ttu-id="ce2cc-641">Снимает защиту с листа или книги.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-641">Removes protection from a sheet or workbook.</span></span> <span data-ttu-id="ce2cc-642">Этот метод не работает, если лист или книга не защищены.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-642">This method has no effect if the sheet or workbook isn't protected.</span></span></summary>
        <remarks><para><span data-ttu-id="ce2cc-643">Если вы забыли пароль, вы не сможете снять защиту листа или книги.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-643">If you forget the password, you cannot unprotect the sheet or workbook.</span></span> <span data-ttu-id="ce2cc-644">Рекомендуется хранить список паролей и соответствующих им имен документов в надежном месте.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-644">It's a good idea to keep a list of your passwords and their corresponding document names in a safe place.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="UsedRange">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range UsedRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range UsedRange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.UsedRange" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UsedRange As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ UsedRange { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(412)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(412)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-645">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Range" /> объект, представляющий используемый диапазон на заданном листе.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-645">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the used range on the specified worksheet.</span></span> <span data-ttu-id="ce2cc-646">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-646">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlSheetVisibility Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlSheetVisibility Visible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As XlSheetVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlSheetVisibility Visible { Microsoft::Office::Interop::Excel::XlSheetVisibility get(); void set(Microsoft::Office::Interop::Excel::XlSheetVisibility value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlSheetVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-647">Определяет, является ли объект видимым.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-647">Determines whether the object is visible.</span></span> <span data-ttu-id="ce2cc-648">Чтение и запись <see cref="T:Microsoft.Office.Interop.Excel.XlSheetVisibility" />.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-648">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlSheetVisibility" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="ce2cc-649">Свойство <b>Visible</b> элемента сводной таблицы имеет <b>значение true</b> , если элемент в данный момент отображается в таблице.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-649">The <b>Visible</b> property for a PivotTable item is <b>True</b> if the item is currently visible in the table.</span></span></para>
          <para><span data-ttu-id="ce2cc-650">Если свойству <b>Visible</b> присвоено значение <b>false</b>, имя не будет отображаться в диалоговом окне Определение имени.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-650">If you set the <b>Visible</b> property for a name to <b>False</b>, the name won't appear in the Define Name dialog box.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="VPageBreaks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.VPageBreaks VPageBreaks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.VPageBreaks VPageBreaks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.VPageBreaks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VPageBreaks As VPageBreaks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::VPageBreaks ^ VPageBreaks { Microsoft::Office::Interop::Excel::VPageBreaks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1419)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1419)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.VPageBreaks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce2cc-651">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.VPageBreaks" /> коллекцию, представляющую вертикальные разрывы страниц на листе.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-651">Returns a <see cref="T:Microsoft.Office.Interop.Excel.VPageBreaks" /> collection that represents the vertical page breaks on the sheet.</span></span> <span data-ttu-id="ce2cc-652">Только для чтения.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-652">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDataQuery">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range XmlDataQuery (string XPath, object SelectionNamespaces, object Map);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range XmlDataQuery([in]string XPath, [in]object SelectionNamespaces, [in]object Map) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.XmlDataQuery(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function XmlDataQuery (XPath As String, Optional SelectionNamespaces As Object, Optional Map As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2260)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="XPath" Type="System.String" />
        <Parameter Name="SelectionNamespaces" Type="System.Object" />
        <Parameter Name="Map" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="XPath"><span data-ttu-id="ce2cc-653">Обязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-653">Required <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-654">XPath для запроса.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-654">The XPath to query for.</span></span></param>
        <param name="SelectionNamespaces"><span data-ttu-id="ce2cc-655">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-655">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-656"><b>Строка</b> с разделителями-пробелами, содержащая пространства имен, указанные в параметре XPath.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-656">A space-delimited <b>String</b> that contains the namespaces referenced in the XPath parameter.</span></span> <span data-ttu-id="ce2cc-657">Если одно из указанных пространств имен не удается разрешить, будет создана ошибка во время выполнения.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-657">A run-time error will be generated if one of the specified namespaces cannot be resolved.</span></span></param>
        <param name="Map"><span data-ttu-id="ce2cc-658">Необязательный <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />параметр.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-658">Optional <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />.</span></span> <span data-ttu-id="ce2cc-659">Укажите карту XML, если вы хотите запросить XPath в определенном сопоставлении.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-659">Specify an XML map if you want to query for the XPath within a specific map.</span></span></param>
        <summary><span data-ttu-id="ce2cc-660">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Range" /> объект, представляющий ячейки, сопоставленные с определенным XPath.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-660">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the cells mapped to a particular XPath.</span></span> <span data-ttu-id="ce2cc-661">Возвращает <b>значение Nothing</b> , если указанный XPath не сопоставлен с листом, или если сопоставленный диапазон пуст.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-661">Returns <b>Nothing</b> if the specified XPath has not been mapped to the worksheet or if the mapped range is empty.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="ce2cc-662">Функции XML, за исключением сохранения файлов в формате электронных таблиц XML, доступны только в Microsoft Office профессиональный выпуск 2003 и Microsoft Office Excel 2003.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-662">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para><span data-ttu-id="ce2cc-663">Если XPath существует в столбце в XML-списке, возвращаемый объект <b>Range</b> не включает строку заголовка или строку вставки.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-663">If the XPath exists within a column in an XML list, the <b>Range</b> object returned does not include the header row or the Insert row.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlMapQuery">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range XmlMapQuery (string XPath, object SelectionNamespaces, object Map);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range XmlMapQuery([in]string XPath, [in]object SelectionNamespaces, [in]object Map) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.XmlMapQuery(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function XmlMapQuery (XPath As String, Optional SelectionNamespaces As Object, Optional Map As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2263)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="XPath" Type="System.String" />
        <Parameter Name="SelectionNamespaces" Type="System.Object" />
        <Parameter Name="Map" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="XPath"><span data-ttu-id="ce2cc-664">Обязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-664">Required <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-665">XPath для запроса.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-665">The XPath to query for.</span></span></param>
        <param name="SelectionNamespaces"><span data-ttu-id="ce2cc-666">Необязательный <b>объект</b>.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-666">Optional <b>Object</b>.</span></span> <span data-ttu-id="ce2cc-667"><b>Строка</b> с разделителями-пробелами, содержащая пространства имен, указанные в параметре XPath.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-667">A space-delimited <b>String</b> that contains the namespaces referenced in the XPath parameter.</span></span> <span data-ttu-id="ce2cc-668">Если одно из указанных пространств имен не удается разрешить, будет создана ошибка во время выполнения.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-668">A run-time error will be generated if one of the specified namespaces cannot be resolved.</span></span></param>
        <param name="Map"><span data-ttu-id="ce2cc-669">Необязательный <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />параметр.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-669">Optional <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />.</span></span> <span data-ttu-id="ce2cc-670">Укажите карту XML, если вы хотите запросить XPath в определенном сопоставлении.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-670">Specify an XML map if you want to query for the XPath within a specific map.</span></span></param>
        <summary><span data-ttu-id="ce2cc-671">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Range" /> объект, представляющий ячейки, сопоставленные с определенным XPath.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-671">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the cells mapped to a particular XPath.</span></span> <span data-ttu-id="ce2cc-672">Возвращает <b>значение Nothing</b> , если указанный XPath не сопоставлен с листом.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-672">Returns <b>Nothing</b> if the specified XPath has not been mapped to the worksheet.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="ce2cc-673">Функции XML, за исключением сохранения файлов в формате электронных таблиц XML, доступны только в Microsoft Office профессиональный выпуск 2003 и Microsoft Office Excel 2003.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-673">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para><span data-ttu-id="ce2cc-674">В отличие от <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.XmlDataQuery(System.String,System.Object,System.Object)" /> метода, метод <b>ксмлмапкуери</b> возвращает весь столбец XML-списка, в том числе строку заголовка и строку вставки.</span><span class="sxs-lookup"><span data-stu-id="ce2cc-674">Unlike the <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.XmlDataQuery(System.String,System.Object,System.Object)" /> method, the <b>XmlMapQuery</b> method returns the entire column of an XML list, including the header row and the Insert row.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
