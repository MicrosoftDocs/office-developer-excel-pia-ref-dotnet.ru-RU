<Type Name="SpellingOptions" FullName="Microsoft.Office.Interop.Excel.SpellingOptions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="680281cf8f7bfb5111026034cee31a35884676c8" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20576085" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface SpellingOptions" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract SpellingOptions" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.SpellingOptions" />
  <TypeSignature Language="VB.NET" Value="Public Interface SpellingOptions" />
  <TypeSignature Language="C++ CLI" Value="public interface class SpellingOptions" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00024465-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="56422-101">Представляет различные параметры проверки орфографии для листа.</span>
      <span class="sxs-lookup">
        <span data-stu-id="56422-101">Represents the various spell-checking options for a worksheet.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="56422-102">
        <para>Использование <see cref="P:Microsoft.Office.Interop.Excel._Application.SpellingOptions" /> свойства <see cref="T:Microsoft.Office.Interop.Excel._Application" /> объекта возвращает объект <b>SpellingOptions</b> .</para>
        <para>После возвращения объекта <b>SpellingOptions</b> , можно использовать его следующие свойства или возвращает различные параметры проверки орфографии:</para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:Microsoft.Office.Interop.Excel.SpellingOptions.ArabicModes" />
            </description>
          </item>
          <item>
            <description>
              <see cref="P:Microsoft.Office.Interop.Excel.SpellingOptions.DictLang" />
            </description>
          </item>
          <item>
            <description>
              <see cref="P:Microsoft.Office.Interop.Excel.SpellingOptions.GermanPostReform" />
            </description>
          </item>
          <item>
            <description>
              <see cref="P:Microsoft.Office.Interop.Excel.SpellingOptions.HebrewModes" />
            </description>
          </item>
          <item>
            <description>
              <see cref="P:Microsoft.Office.Interop.Excel.SpellingOptions.IgnoreCaps" />
            </description>
          </item>
          <item>
            <description>
              <see cref="P:Microsoft.Office.Interop.Excel.SpellingOptions.IgnoreFileNames" />
            </description>
          </item>
          <item>
            <description>
              <see cref="P:Microsoft.Office.Interop.Excel.SpellingOptions.IgnoreMixedDigits" />
            </description>
          </item>
          <item>
            <description>
              <see cref="P:Microsoft.Office.Interop.Excel.SpellingOptions.KoreanCombineAux" />
            </description>
          </item>
          <item>
            <description>
              <see cref="P:Microsoft.Office.Interop.Excel.SpellingOptions.KoreanProcessCompound" />
            </description>
          </item>
          <item>
            <description>
              <see cref="P:Microsoft.Office.Interop.Excel.SpellingOptions.KoreanUseAutoChangeList" />
            </description>
          </item>
          <item>
            <description>
              <see cref="P:Microsoft.Office.Interop.Excel.SpellingOptions.SuggestMainOnly" />
            </description>
          </item>
          <item>
            <description>
              <see cref="P:Microsoft.Office.Interop.Excel.SpellingOptions.UserDict" />
            </description>
          </item>
        </list>
        <para />
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="56422-102">
          <para>Use the <see cref="P:Microsoft.Office.Interop.Excel._Application.SpellingOptions" /> property of the <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object to return a <b>SpellingOptions</b> object.</para>
          <para>Once a <b>SpellingOptions</b> object is returned, you can use its following properties to set or return various spell-checking options:</para>
          <list type="bullet">
            <item>
              <description>
                <see cref="P:Microsoft.Office.Interop.Excel.SpellingOptions.ArabicModes" />
              </description>
            </item>
            <item>
              <description>
                <see cref="P:Microsoft.Office.Interop.Excel.SpellingOptions.DictLang" />
              </description>
            </item>
            <item>
              <description>
                <see cref="P:Microsoft.Office.Interop.Excel.SpellingOptions.GermanPostReform" />
              </description>
            </item>
            <item>
              <description>
                <see cref="P:Microsoft.Office.Interop.Excel.SpellingOptions.HebrewModes" />
              </description>
            </item>
            <item>
              <description>
                <see cref="P:Microsoft.Office.Interop.Excel.SpellingOptions.IgnoreCaps" />
              </description>
            </item>
            <item>
              <description>
                <see cref="P:Microsoft.Office.Interop.Excel.SpellingOptions.IgnoreFileNames" />
              </description>
            </item>
            <item>
              <description>
                <see cref="P:Microsoft.Office.Interop.Excel.SpellingOptions.IgnoreMixedDigits" />
              </description>
            </item>
            <item>
              <description>
                <see cref="P:Microsoft.Office.Interop.Excel.SpellingOptions.KoreanCombineAux" />
              </description>
            </item>
            <item>
              <description>
                <see cref="P:Microsoft.Office.Interop.Excel.SpellingOptions.KoreanProcessCompound" />
              </description>
            </item>
            <item>
              <description>
                <see cref="P:Microsoft.Office.Interop.Excel.SpellingOptions.KoreanUseAutoChangeList" />
              </description>
            </item>
            <item>
              <description>
                <see cref="P:Microsoft.Office.Interop.Excel.SpellingOptions.SuggestMainOnly" />
              </description>
            </item>
            <item>
              <description>
                <see cref="P:Microsoft.Office.Interop.Excel.SpellingOptions.UserDict" />
              </description>
            </item>
          </list>
          <para />
        </span>
      </span>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ArabicModes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlArabicModes ArabicModes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlArabicModes ArabicModes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SpellingOptions.ArabicModes" />
      <MemberSignature Language="VB.NET" Value="Public Property ArabicModes As XlArabicModes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlArabicModes ArabicModes { Microsoft::Office::Interop::Excel::XlArabicModes get(); void set(Microsoft::Office::Interop::Excel::XlArabicModes value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2231)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2231)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2231)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlArabicModes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56422-103">Возвращает или задает режим для арабского языка проверки правописания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56422-103">Returns or sets the mode for the Arabic spelling checker.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArabicStrictAlefHamza">
      <MemberSignature Language="C#" Value="public bool ArabicStrictAlefHamza { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ArabicStrictAlefHamza" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SpellingOptions.ArabicStrictAlefHamza" />
      <MemberSignature Language="VB.NET" Value="Public Property ArabicStrictAlefHamza As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ArabicStrictAlefHamza { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2932)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2932)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2932)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56422-104">Получает или задает средство проверки правописания использует правила слов арабского языка, начинающихся с алиф гамза.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56422-104">Gets or sets whether the spelling checker uses rules regarding Arabic words beginning with an alef hamza.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="56422-105">
            <b>значение true,</b> Если средство проверки правописания использует правила арабский слова, начиная с алиф гамза; в противном случае — <b>false</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56422-105">
              <b>true</b> if the spelling checker uses rules regarding Arabic words beginning with an alef hamza; otherwise, <b>false</b>.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="56422-106">
            <para>Чтение и запись.</para>
            <para>
              <b>значение true,</b> Если средство проверки правописания использует правила орфографии арабского языка Приступая к работе с алиф гамза; в противном случае — <b>false</b>.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="56422-106">
              <para>Read/write.</para>
              <para>
                <b>true</b> if the spelling checker uses spelling rules regarding Arabic words beginning with an alef hamza; otherwise <b>false</b>.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ArabicStrictFinalYaa">
      <MemberSignature Language="C#" Value="public bool ArabicStrictFinalYaa { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ArabicStrictFinalYaa" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SpellingOptions.ArabicStrictFinalYaa" />
      <MemberSignature Language="VB.NET" Value="Public Property ArabicStrictFinalYaa As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ArabicStrictFinalYaa { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2933)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2933)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2933)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56422-107">Получает или задает ли средство проверки правописания использует правила арабского языка с йаа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56422-107">Gets or sets whether the spelling checker uses rules regarding Arabic words ending with the letter yaa.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="56422-108">
            <b>значение true,</b> Если средство проверки правописания использует правила арабского языка с йаа; в противном случае — <b>false</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56422-108">
              <b>true</b> if the spelling checker uses rules regarding Arabic words ending with the letter yaa; otherwise, <b>false</b>.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="56422-109">
            <para>Чтение и запись.</para>
            <para>
              <b>значение true,</b> Если средство проверки правописания использует правила арабского языка с йаа; в противном случае — <b>значение false</b>.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="56422-109">
              <para>Read/write.</para>
              <para>
                <b>true</b> if the spelling checker uses rules regarding Arabic words ending with the letter yaa; otherwise <b>false</b>.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ArabicStrictTaaMarboota">
      <MemberSignature Language="C#" Value="public bool ArabicStrictTaaMarboota { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ArabicStrictTaaMarboota" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SpellingOptions.ArabicStrictTaaMarboota" />
      <MemberSignature Language="VB.NET" Value="Public Property ArabicStrictTaaMarboota As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ArabicStrictTaaMarboota { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2934)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2934)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2934)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56422-110">Получает или задает средство проверки правописания для пометки слов арабского языка, заканчивающихся haa вместо taa marboota используются правила.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56422-110">Gets or sets whether the spelling checker uses rules to flag Arabic words ending with haa instead of taa marboota.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="56422-111">
            <b>значение true</b> , если используется средство проверки правописания правил для пометки слов арабского языка, заканчивающихся haa вместо taa marboota; в противном случае — <b>false</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56422-111">
              <b>true</b> if the spelling checker uses rules to flag Arabic words ending with haa instead of taa marboota; otherwise, <b>false</b>.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="56422-112">
            <para>Чтение и запись.</para>
            <para>
              <b>значение true</b> , если используется средство проверки правописания правил для пометки слов арабского языка, заканчивающихся haa вместо taa marboota; в противном случае — <b>значение false</b>.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="56422-112">
              <para>Read/write.</para>
              <para>
                <b>true</b> if the spelling checker uses rules to flag Arabic words ending with haa instead of taa marboota; otherwise <b>false</b>.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BrazilReform">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlPortugueseReform BrazilReform { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlPortugueseReform BrazilReform" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SpellingOptions.BrazilReform" />
      <MemberSignature Language="VB.NET" Value="Public Property BrazilReform As XlPortugueseReform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlPortugueseReform BrazilReform { Microsoft::Office::Interop::Excel::XlPortugueseReform get(); void set(Microsoft::Office::Interop::Excel::XlPortugueseReform value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2938)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2938)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2938)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlPortugueseReform</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56422-113">Получает или задает режим для проверки орфографии португальский (Бразилия).</span>
          <span class="sxs-lookup">
            <span data-stu-id="56422-113">Gets or sets the mode for checking the spelling of Brazilian Portuguese.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="56422-114">Режим проверки орфографии португальский (Бразилия).</span>
          <span class="sxs-lookup">
            <span data-stu-id="56422-114">The mode for checking the spelling of Brazilian Portuguese.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="56422-115">
            <para>Чтение и запись.</para>
            <para>
              <b>Примечание</b>: это свойство не устанавливает режим для проверки орфографии португальский. Для этого используйте <see cref="P:Microsoft.Office.Interop.Excel.SpellingOptions.PortugalReform" /> свойство.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="56422-115">
              <para>Read/write.</para>
              <para>
                <b>Note</b>: This property does not set the mode for checking the spelling of European Portuguese. To do that, use the <see cref="P:Microsoft.Office.Interop.Excel.SpellingOptions.PortugalReform" /> property.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DictLang">
      <MemberSignature Language="C#" Value="public int DictLang { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DictLang" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SpellingOptions.DictLang" />
      <MemberSignature Language="VB.NET" Value="Public Property DictLang As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DictLang { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2220)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2220)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2220)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56422-116">Выбирает язык словаря, используемый при выполнении проверки орфографии Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56422-116">Selects the dictionary language used when Microsoft Excel performs spelling checks.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GermanPostReform">
      <MemberSignature Language="C#" Value="public bool GermanPostReform { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GermanPostReform" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SpellingOptions.GermanPostReform" />
      <MemberSignature Language="VB.NET" Value="Public Property GermanPostReform As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GermanPostReform { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2226)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2226)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2226)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56422-117">
            <b>Значение true,</b> чтобы автоматически проверять орфографию слова, используя немецкие после реформы правила.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56422-117">
              <b>True</b> to check the spelling of words using the German post-reform rules.</span>
          </span>
          <span data-ttu-id="56422-118">
            <b>False</b> отменяет этой функции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56422-118">
              <b>False</b> cancels this feature.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HebrewModes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlHebrewModes HebrewModes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlHebrewModes HebrewModes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SpellingOptions.HebrewModes" />
      <MemberSignature Language="VB.NET" Value="Public Property HebrewModes As XlHebrewModes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlHebrewModes HebrewModes { Microsoft::Office::Interop::Excel::XlHebrewModes get(); void set(Microsoft::Office::Interop::Excel::XlHebrewModes value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2230)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2230)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2230)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlHebrewModes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56422-119">Возвращает или задает режим для иврита средство проверки правописания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56422-119">Returns or sets the mode for the Hebrew spelling checker.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="56422-120">
            <para>Допустимым иврита word может быть базового словаря или любой насыщенность.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="56422-120">
              <para>A legitimate Hebrew word can be a basic dictionary entry or any inflection.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreCaps">
      <MemberSignature Language="C#" Value="public bool IgnoreCaps { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreCaps" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SpellingOptions.IgnoreCaps" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreCaps As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreCaps { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2222)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2222)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2222)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56422-121">
            <b>Значение false</b> , то этот параметр Microsoft Excel на наличие слова в верхнем регистре; <b>Значение true,</b> этот параметр пропускать слова в верхнем регистре when в Excel с помощью средства проверки орфографии.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56422-121">
              <b>False</b> instructs Microsoft Excel to check for uppercase words; <b>True</b> instructs Excel to ignore words in uppercase when using the spelling checker.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreFileNames">
      <MemberSignature Language="C#" Value="public bool IgnoreFileNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreFileNames" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SpellingOptions.IgnoreFileNames" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreFileNames As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreFileNames { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2225)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2225)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2225)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56422-122">
            <b>Значение false</b> , то этот параметр Microsoft Excel на наличие адреса Интернета и файлов; <b>Значение true,</b> указывает, что пропускать адреса Интернета и файлов при использовании средства проверки правописания в Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56422-122">
              <b>False</b> instructs Microsoft Excel to check for Internet and file addresses; <b>True</b> instructs Excel to ignore Internet and file addresses when using the spell checker.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreMixedDigits">
      <MemberSignature Language="C#" Value="public bool IgnoreMixedDigits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreMixedDigits" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SpellingOptions.IgnoreMixedDigits" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreMixedDigits As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreMixedDigits { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2224)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2224)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2224)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56422-123">
            <b>Значение false</b> , то этот параметр Microsoft Excel на наличие смешанных знаков; <b>Значение true,</b> указывает, что Excel игнорировать смешанных цифр при проверке правописания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56422-123">
              <b>False</b> instructs Microsoft Excel to check for mixed digits; <b>True</b> instructs Excel to ignore mixed digits when checking spelling.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KoreanCombineAux">
      <MemberSignature Language="C#" Value="public bool KoreanCombineAux { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KoreanCombineAux" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SpellingOptions.KoreanCombineAux" />
      <MemberSignature Language="VB.NET" Value="Public Property KoreanCombineAux As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KoreanCombineAux { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2227)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2227)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2227)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56422-124">Если задано значение <b>True</b>, Microsoft Excel объединяет корейский вспомогательные глаголы и прилагательные при проверке правописания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56422-124">When set to <b>True</b>, Microsoft Excel combines Korean auxiliary verbs and adjectives when spelling is checked.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KoreanProcessCompound">
      <MemberSignature Language="C#" Value="public bool KoreanProcessCompound { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KoreanProcessCompound" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SpellingOptions.KoreanProcessCompound" />
      <MemberSignature Language="VB.NET" Value="Public Property KoreanProcessCompound As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KoreanProcessCompound { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2229)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2229)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2229)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56422-125">Если задано значение <b>True</b>, это позволяет Microsoft Excel для обработки корейский составных существительных при использовании средства проверки орфографии.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56422-125">When set to <b>True</b>, this enables Microsoft Excel to process Korean compound nouns when using the spelling checker.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KoreanUseAutoChangeList">
      <MemberSignature Language="C#" Value="public bool KoreanUseAutoChangeList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KoreanUseAutoChangeList" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SpellingOptions.KoreanUseAutoChangeList" />
      <MemberSignature Language="VB.NET" Value="Public Property KoreanUseAutoChangeList As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KoreanUseAutoChangeList { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2228)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2228)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2228)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56422-126">Если задано значение <b>True</b>, это позволяет использовать список автозамены для корейского слова при использовании средства проверки правописания Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56422-126">When set to <b>True</b>, this enables Microsoft Excel to use the auto-change list for Korean words when using the spelling checker.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PortugalReform">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlPortugueseReform PortugalReform { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlPortugueseReform PortugalReform" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SpellingOptions.PortugalReform" />
      <MemberSignature Language="VB.NET" Value="Public Property PortugalReform As XlPortugueseReform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlPortugueseReform PortugalReform { Microsoft::Office::Interop::Excel::XlPortugueseReform get(); void set(Microsoft::Office::Interop::Excel::XlPortugueseReform value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2937)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2937)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2937)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlPortugueseReform</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56422-127">Получает или задает режим для проверки орфографии португальский.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56422-127">Gets or sets the mode for checking the spelling of European Portuguese.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="56422-128">Режим проверки орфографии португальский.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56422-128">The mode for checking the spelling of European Portuguese.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="56422-129">
            <para>Чтение и запись.</para>
            <para>
              <b>Примечание</b>: это свойство не устанавливает режим для проверки орфографии португальский (Бразилия). Для этого используйте <see cref="P:Microsoft.Office.Interop.Excel.SpellingOptions.BrazilReform" /> свойство.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="56422-129">
              <para>Read/write.</para>
              <para>
                <b>Note</b>: This property does not set the mode for checking the spelling of Brazilian Portuguese. To do that, use the <see cref="P:Microsoft.Office.Interop.Excel.SpellingOptions.BrazilReform" /> property.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RussianStrictE">
      <MemberSignature Language="C#" Value="public bool RussianStrictE { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RussianStrictE" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SpellingOptions.RussianStrictE" />
      <MemberSignature Language="VB.NET" Value="Public Property RussianStrictE As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RussianStrictE { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2935)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2935)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2935)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56422-130">Получает или задает средство проверки правописания использует правила русского слова, содержащие буквы "ë".</span>
          <span class="sxs-lookup">
            <span data-stu-id="56422-130">Gets or sets whether the spelling checker uses rules regarding Russian words containing the character ë.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="56422-131">
            <b>значение true,</b> Если средство проверки правописания использует правила русского слова, содержащие буквы "ë"; в противном случае — <b>false</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56422-131">
              <b>true</b> if the spelling checker uses rules regarding Russian words containing the character ë; otherwise, <b>false</b>.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="56422-132">
            <para>Чтение и запись.</para>
            <para>
              <b>значение true,</b> Если средство проверки правописания использует правила русского слова, содержащие буквы "ë"; в противном случае — <b>false</b>.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="56422-132">
              <para>Read/write.</para>
              <para>
                <b>true</b> if the spelling checker uses rules regarding Russian words containing the character ë; otherwise <b>false</b>.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpanishModes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlSpanishModes SpanishModes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlSpanishModes SpanishModes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SpellingOptions.SpanishModes" />
      <MemberSignature Language="VB.NET" Value="Public Property SpanishModes As XlSpanishModes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlSpanishModes SpanishModes { Microsoft::Office::Interop::Excel::XlSpanishModes get(); void set(Microsoft::Office::Interop::Excel::XlSpanishModes value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2936)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2936)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2936)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlSpanishModes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56422-133">Получает или задает режим для проверки правописания для испанского языка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56422-133">Gets or sets the mode for checking the spelling of Spanish.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="56422-134">Режим для проверки правописания для испанского языка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56422-134">The mode for checking the spelling of Spanish.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="56422-135">
            <para>Чтение и запись.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="56422-135">
              <para>Read/write.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SuggestMainOnly">
      <MemberSignature Language="C#" Value="public bool SuggestMainOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SuggestMainOnly" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SpellingOptions.SuggestMainOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property SuggestMainOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SuggestMainOnly { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2223)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2223)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2223)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56422-136">Если задано значение <b>True</b>, этот параметр Microsoft Excel предложения слова из основного словаря, при использовании средства проверки орфографии.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56422-136">When set to <b>True</b>, instructs Microsoft Excel to suggest words from only the main dictionary when using the spelling checker.</span>
          </span>
          <span data-ttu-id="56422-137">
            <b>False</b> удаляет ограничения при использовании средства проверки орфографии предложения слова из основного словаря.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56422-137">
              <b>False</b> removes the limits of suggesting words from only the main dictionary when using the spelling checker.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserDict">
      <MemberSignature Language="C#" Value="public string UserDict { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserDict" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.SpellingOptions.UserDict" />
      <MemberSignature Language="VB.NET" Value="Public Property UserDict As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserDict { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2221)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2221)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2221)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56422-138">Указывает, что Microsoft Excel для создания вспомогательного словаря, к которому можно добавить новые слова, при правописания для выполнения проверок на листе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56422-138">Instructs Microsoft Excel to create a custom dictionary to which new words can be added when performing spelling checks on a worksheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>