<Type Name="IconCriterion" FullName="Microsoft.Office.Interop.Excel.IconCriterion">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ea64a84828ccdf2d525d938a0e449a1b515ebd05" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20579298" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IconCriterion" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IconCriterion" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.IconCriterion" />
  <TypeSignature Language="VB.NET" Value="Public Interface IconCriterion" />
  <TypeSignature Language="C++ CLI" Value="public interface class IconCriterion" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00024499-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="6b73b-101">Представляет критерий для отдельных значок в наборе значок.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6b73b-101">Represents the criterion for an individual icon in an icon set.</span>
      </span>
      <span data-ttu-id="6b73b-102">Критерий указывает диапазон значений и тип порогового значения, связанный со значком в значок набора правила условного форматирования.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6b73b-102">The criterion specifies the range of values and the threshold type associated with the icon in an icon set conditional formatting rule.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="6b73b-103">
        <para>Все критерии для значка set условное форматирование в содержатся в <see cref="T:Microsoft.Office.Interop.Excel.IconCriteria" /> семейства сайтов. Можно получить доступ к каждого объекта <b>IconCriterion</b> в коллекции, передав индекса в коллекции. Пример для получения дополнительных сведений см.</para>
        <para />
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="6b73b-103">
          <para>All of the criteria for an icon set conditional format are contained in an <see cref="T:Microsoft.Office.Interop.Excel.IconCriteria" /> collection. You can access each <b>IconCriterion</b> object in the collection by passing an index into the collection. See the example for details.</para>
          <para />
        </span>
      </span>
    </remarks>
    <example>
      <span data-ttu-id="6b73b-104">
        <para>В следующем примере кода создает диапазон номеров, представляющий результаты тестирования и затем применяется значок набора правила условного форматирования для этого диапазона. Тип набора значков затем изменяется с значки по умолчанию в набор пяти стрелки. И, наконец тип пороговое значение изменяется из процентиль жестко номер.</para>
        <code>&lt;span class="label"&gt;Sub CreateIconSetCF()    Dim cfIconSet As IconSetCondition        'Fill cells with sample data    With ActiveSheet        .Range("C1") = 55        .Range("C2") = 92        .Range("C3") = 88        .Range("C4") = 77        .Range("C5") = 66        .Range("C6") = 93        .Range("C7") = 76        .Range("C8") = 80        .Range("C9") = 79        .Range("C10") = 83        .Range("C11") = 66        .Range("C12") = 74    End With        Range("C1:C12").Select          'Create an icon set conditional format for the created sample data range    Set cfIconSet = Selection.FormatConditions.AddIconSetCondition        'Change the icon set to a five-arrow icon set    cfIconSet.IconSet = ActiveWorkbook.IconSets(xl5Arrows)        'The IconCriterion collection contains all IconCriteria    'By indexing into the collection you can modify each criterion    With cfIconSet.IconCriteria(1)        .Type = xlConditionValueNumber        .Value = 0        .Operator = 7    End With    With cfIconSet.IconCriteria(2)        .Type = xlConditionValueNumber        .Value = 60        .Operator = 7    End With    With cfIconSet.IconCriteria(3)        .Type = xlConditionValueNumber        .Value = 70        .Operator = 7    End With    With cfIconSet.IconCriteria(4)        .Type = xlConditionValueNumber        .Value = 80        .Operator = 7    End With    With cfIconSet.IconCriteria(5)        .Type = xlConditionValueNumber        .Value = 90        .Operator = 7    End With        End Sub&lt;/span&gt;</code>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="6b73b-104">
          <para>The following code example creates a range of numbers representing test scores and then applies an icon set conditional formatting rule to that range. The type of icon set is then changed from the default icons to a five-arrow icon set. Finally, the threshold type is modified from percentile to a hard-coded number.</para>
          <code>&lt;span class="label"&gt;Sub CreateIconSetCF()    Dim cfIconSet As IconSetCondition        'Fill cells with sample data    With ActiveSheet        .Range("C1") = 55        .Range("C2") = 92        .Range("C3") = 88        .Range("C4") = 77        .Range("C5") = 66        .Range("C6") = 93        .Range("C7") = 76        .Range("C8") = 80        .Range("C9") = 79        .Range("C10") = 83        .Range("C11") = 66        .Range("C12") = 74    End With        Range("C1:C12").Select          'Create an icon set conditional format for the created sample data range    Set cfIconSet = Selection.FormatConditions.AddIconSetCondition        'Change the icon set to a five-arrow icon set    cfIconSet.IconSet = ActiveWorkbook.IconSets(xl5Arrows)        'The IconCriterion collection contains all IconCriteria    'By indexing into the collection you can modify each criterion    With cfIconSet.IconCriteria(1)        .Type = xlConditionValueNumber        .Value = 0        .Operator = 7    End With    With cfIconSet.IconCriteria(2)        .Type = xlConditionValueNumber        .Value = 60        .Operator = 7    End With    With cfIconSet.IconCriteria(3)        .Type = xlConditionValueNumber        .Value = 70        .Operator = 7    End With    With cfIconSet.IconCriteria(4)        .Type = xlConditionValueNumber        .Value = 80        .Operator = 7    End With    With cfIconSet.IconCriteria(5)        .Type = xlConditionValueNumber        .Value = 90        .Operator = 7    End With        End Sub&lt;/span&gt;</code>
        </span>
      </span>
    </example>
  </Docs>
  <Members>
    <Member MemberName="Icon">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlIcon Icon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlIcon Icon" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconCriterion.Icon" />
      <MemberSignature Language="VB.NET" Value="Public Property Icon As XlIcon" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlIcon Icon { Microsoft::Office::Interop::Excel::XlIcon get(); void set(Microsoft::Office::Interop::Excel::XlIcon value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2747)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2747)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2747)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlIcon</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b73b-105">Получает или задает значок условие в значок набора правила условного форматирования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b73b-105">Gets or sets the icon for a criterion in an icon set conditional formatting rule.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="6b73b-106">
            <para>После задания свойств <b>значок</b> критерия значок в значок набора правила условного форматирования, <see cref="P:Microsoft.Office.Interop.Excel.IconSetCondition.IconSet" /> свойство изменяется на <b>xlCustomSet</b>.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6b73b-106">
              <para>After you set the <b>Icon</b> property for the icon criterion in an icon set conditional formatting rule, the <see cref="P:Microsoft.Office.Interop.Excel.IconSetCondition.IconSet" /> property is changed to <b>xlCustomSet</b>.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconCriterion.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(486)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(486)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b73b-107">Получает значение, указывающее, какие пороговое значение представляет критериям.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b73b-107">Gets a value indicating which threshold the criteria represents.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="6b73b-108">
            <para>Для наборов значков это свойство будет возвращать значение «1» для минимальное пороговое значение «2» для следующего порога и так далее.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6b73b-108">
              <para>For an icon set, this property will return a value of "1" for the minimum threshold, "2" for the next threshold, and so on.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Operator">
      <MemberSignature Language="C#" Value="public int Operator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Operator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconCriterion.Operator" />
      <MemberSignature Language="VB.NET" Value="Public Property Operator As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Operator { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(797)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(797)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(797)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b73b-109">Возвращает или задает одной из констант из <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionOperator" /> перечисления, которые указывает, если пороговое значение «больше» или «больше или равно» пороговое значение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b73b-109">Returns or sets one of the constants of the <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionOperator" /> enumeration, which specifes if the threshold is "greater than" or "greater than or equal to" the threshold value.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="6b73b-110">
            <para>Для значка задать правила условного форматирования, это свойство можно задать только один из следующих двух констант: <b>xlGreater</b> или <b>xlGreaterEqual</b>.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6b73b-110">
              <para>For an icon set conditional formatting rule, this property can be set to only one of the following two constants: <b>xlGreater</b> or <b>xlGreaterEqual</b>.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlConditionValueTypes Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlConditionValueTypes Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconCriterion.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As XlConditionValueTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlConditionValueTypes Type { Microsoft::Office::Interop::Excel::XlConditionValueTypes get(); void set(Microsoft::Office::Interop::Excel::XlConditionValueTypes value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlConditionValueTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b73b-111">Возвращает один или константы <see cref="T:Microsoft.Office.Interop.Excel.XlConditionValueTypes" /> перечисление, который определяет, как определяется пороговое значение для наборов значков.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b73b-111">Returns one of the constants of the <see cref="T:Microsoft.Office.Interop.Excel.XlConditionValueTypes" /> enumeration, which specifies how the threshold value for an icon set is determined.</span>
          </span>
          <span data-ttu-id="6b73b-112">Только для чтения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b73b-112">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="6b73b-113">
            <para>Тип пороговое значение для наборов значков может быть номер, процентов, формулу или процентиль. Установка типа процентиль будет использовать процентиль функцию в Excel для определения порогового значения.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6b73b-113">
              <para>The type of threshold value for an icon set can be  a number, percent, formula, or percentile. Setting the type to percentile will use the Percentile function in Excel to determine the threshold value.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconCriterion.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b73b-114">Возвращает или задает пороговое значение для значка в условное форматирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b73b-114">Returns or sets the threshold value for an icon in a conditional format.</span>
          </span>
          <span data-ttu-id="6b73b-115">Чтение и запись <b>типа Variant</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b73b-115">Read/write <b>Variant</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="6b73b-116">
            <para>Можно задать значение только в том случае, если <see cref="P:Microsoft.Office.Interop.Excel.IconCriterion.Type" /> условного форматирования задано значение одной из следующих констант: <b>xlConditionValueNumber</b>, <b>xlConditionValuePercent</b>, <b>xlConditionValuePercentile</b>или <b> xlConditionValueFormula</b>.</para>
            <para>, Если тип пороговое значение формулы, можно задать формулу в <b>строке</b>. Формула должен возвращать одно число.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6b73b-116">
              <para>You can set the value only if the <see cref="P:Microsoft.Office.Interop.Excel.IconCriterion.Type" /> property for the conditional format is set to one of the following constants: <b>xlConditionValueNumber</b>, <b>xlConditionValuePercent</b>, <b>xlConditionValuePercentile</b>, or <b>xlConditionValueFormula</b>.</para>
              <para>If the type of threshold  is a formula, you can set the formula as a <b>String</b>. The formula must return a single number.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>