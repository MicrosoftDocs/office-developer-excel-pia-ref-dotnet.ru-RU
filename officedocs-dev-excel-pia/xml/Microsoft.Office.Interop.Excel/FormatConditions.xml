<Type Name="FormatConditions" FullName="Microsoft.Office.Interop.Excel.FormatConditions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ba5c29fb9f36cf63da85041a757db4dd4b830ce1" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="09/24/2018" />
    <Meta Name="ms.locfileid" Value="20587516" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface FormatConditions : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract FormatConditions implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.FormatConditions" />
  <TypeSignature Language="VB.NET" Value="Public Interface FormatConditions&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class FormatConditions : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00024424-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a7d32-101">Представляет коллекцию условные форматы для одного диапазона.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a7d32-101">Represents the collection of conditional formats for a single range.</span>
      </span>
    </summary>
    <remarks>
      <para>
        <span data-ttu-id="a7d32-102">Коллекция <b>FormatConditions</b> может содержать до трех условные форматы.</span>
        <span class="sxs-lookup">
          <span data-stu-id="a7d32-102">The <b>FormatConditions</b> collection can contain up to three conditional formats.</span>
        </span>
        <span data-ttu-id="a7d32-103">Представленный каждого формата <see cref="T:Microsoft.Office.Interop.Excel.FormatCondition" /> объекта.</span>
        <span class="sxs-lookup">
          <span data-stu-id="a7d32-103">Each format is represented by a <see cref="T:Microsoft.Office.Interop.Excel.FormatCondition" /> object.</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="a7d32-104">Использование <see cref="P:Microsoft.Office.Interop.Excel.Range.FormatConditions" /> свойство возвращает объект <b>FormatConditions</b> .</span>
        <span class="sxs-lookup">
          <span data-stu-id="a7d32-104">Use the <see cref="P:Microsoft.Office.Interop.Excel.Range.FormatConditions" /> property to return a <b>FormatConditions</b> object.</span>
        </span>
        <span data-ttu-id="a7d32-105">Используйте <see cref="M:Microsoft.Office.Interop.Excel.FormatConditions.Add(Microsoft.Office.Interop.Excel.XlFormatConditionType,System.Object,System.Object,System.Object)" /> метод для создания нового условное форматирование и использовать <see cref="M:Microsoft.Office.Interop.Excel.FormatCondition.Modify(Microsoft.Office.Interop.Excel.XlFormatConditionType,System.Object,System.Object,System.Object)" /> метод, чтобы изменить существующий условное форматирование.</span>
        <span class="sxs-lookup">
          <span data-stu-id="a7d32-105">Use the <see cref="M:Microsoft.Office.Interop.Excel.FormatConditions.Add(Microsoft.Office.Interop.Excel.XlFormatConditionType,System.Object,System.Object,System.Object)" /> method to create a new conditional format, and use the <see cref="M:Microsoft.Office.Interop.Excel.FormatCondition.Modify(Microsoft.Office.Interop.Excel.XlFormatConditionType,System.Object,System.Object,System.Object)" /> method to change an existing conditional format.</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="a7d32-106">Если предпринимается попытка создания более трех условные форматы для одного диапазона, происходит сбой метода <b>Add</b> .</span>
        <span class="sxs-lookup">
          <span data-stu-id="a7d32-106">If you try to create more than three conditional formats for a single range, the <b>Add</b> method fails.</span>
        </span>
        <span data-ttu-id="a7d32-107">Если диапазон имеет три формата, можно использовать метод <b>Изменить</b> для изменения один из форматов или можно использовать <see cref="M:Microsoft.Office.Interop.Excel.FormatCondition.Delete" /> метод для удаления формат и затем использовать метод <b>Add</b> для создания нового формата.</span>
        <span class="sxs-lookup">
          <span data-stu-id="a7d32-107">If a range has three formats, you can use the <b>Modify</b> method to change one of the formats, or you can use the <see cref="M:Microsoft.Office.Interop.Excel.FormatCondition.Delete" /> method to delete a format and then use the <b>Add</b> method to create a new format.</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="a7d32-108">Дополнительные сведения о условные форматы можно <see cref="T:Microsoft.Office.Interop.Excel.FormatCondition" /> объекта.</span>
        <span class="sxs-lookup">
          <span data-stu-id="a7d32-108">For more information about conditional formats, see the <see cref="T:Microsoft.Office.Interop.Excel.FormatCondition" /> object.</span>
        </span>
      </para>
      <para></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public object this[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object _Default(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.FormatConditions._Default(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default(Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="a7d32-109">Зарезервировано для внутреннего использования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7d32-109">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public object Add (Microsoft.Office.Interop.Excel.XlFormatConditionType Type, object Operator, object Formula1, object Formula2, object String, object TextOperator, object DateOperator, object ScopeType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Add([in]valuetype Microsoft.Office.Interop.Excel.XlFormatConditionType Type, [in]object Operator, [in]object Formula1, [in]object Formula2, [in]object String, [in]object TextOperator, [in]object DateOperator, [in]object ScopeType) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.FormatConditions.Add(Microsoft.Office.Interop.Excel.XlFormatConditionType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (Type As XlFormatConditionType, Optional Operator As Object, Optional Formula1 As Object, Optional Formula2 As Object, Optional String As Object, Optional TextOperator As Object, Optional DateOperator As Object, Optional ScopeType As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(181)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlFormatConditionType" />
        <Parameter Name="Operator" Type="System.Object" />
        <Parameter Name="Formula1" Type="System.Object" />
        <Parameter Name="Formula2" Type="System.Object" />
        <Parameter Name="String" Type="System.Object" />
        <Parameter Name="TextOperator" Type="System.Object" />
        <Parameter Name="DateOperator" Type="System.Object" />
        <Parameter Name="ScopeType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">
          <span data-ttu-id="a7d32-110">.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7d32-110"></span>
          </span>
          <span data-ttu-id="a7d32-111">(<see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7d32-111"></span>
          </span>
          <span data-ttu-id="a7d32-112">Указывает, будет ли условное форматирование на основе значения ячейки или выражение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7d32-112">Specifies whether the conditional format is based on a cell value or an expression.</span>
          </span>
        </param>
        <param name="Operator">
          <span data-ttu-id="a7d32-113">Оператор условного форматирования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7d32-113">The conditional format operator.</span>
          </span>
          <span data-ttu-id="a7d32-114">Может иметь одно из следующих значений <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionOperator" /> констант: <see cref="F:Microsoft.Office.Interop.Excel.XlFormatConditionOperator.xlBetween" />, <see cref="F:Microsoft.Office.Interop.Excel.XlFormatConditionOperator.xlEqual" />, <see cref="F:Microsoft.Office.Interop.Excel.XlFormatConditionOperator.xlGreater" />, <see cref="F:Microsoft.Office.Interop.Excel.XlFormatConditionOperator.xlGreaterEqual" />, <see cref="F:Microsoft.Office.Interop.Excel.XlFormatConditionOperator.xlLess" />, <see cref="F:Microsoft.Office.Interop.Excel.XlFormatConditionOperator.xlLessEqual" />, <see cref="F:Microsoft.Office.Interop.Excel.XlFormatConditionOperator.xlNotBetween" />, или <see cref="F:Microsoft.Office.Interop.Excel.XlFormatConditionOperator.xlNotEqual" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7d32-114">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionOperator" /> constants: <see cref="F:Microsoft.Office.Interop.Excel.XlFormatConditionOperator.xlBetween" />, <see cref="F:Microsoft.Office.Interop.Excel.XlFormatConditionOperator.xlEqual" />, <see cref="F:Microsoft.Office.Interop.Excel.XlFormatConditionOperator.xlGreater" />, <see cref="F:Microsoft.Office.Interop.Excel.XlFormatConditionOperator.xlGreaterEqual" />, <see cref="F:Microsoft.Office.Interop.Excel.XlFormatConditionOperator.xlLess" />, <see cref="F:Microsoft.Office.Interop.Excel.XlFormatConditionOperator.xlLessEqual" />, <see cref="F:Microsoft.Office.Interop.Excel.XlFormatConditionOperator.xlNotBetween" />, or <see cref="F:Microsoft.Office.Interop.Excel.XlFormatConditionOperator.xlNotEqual" />.</span>
          </span>
          <span data-ttu-id="a7d32-115">Если <paramref name="Type" /> — это <see cref="F:Microsoft.Office.Interop.Excel.XlFormatConditionType.xlExpression" />, <paramref name="Operator" /> аргумент учитывается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7d32-115">If <paramref name="Type" /> is <see cref="F:Microsoft.Office.Interop.Excel.XlFormatConditionType.xlExpression" />, the <paramref name="Operator" /> argument is ignored.</span>
          </span>
        </param>
        <param name="Formula1">
          <span data-ttu-id="a7d32-116">Значение или выражение, связанное с условное форматирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7d32-116">The value or expression associated with the conditional format.</span>
          </span>
          <span data-ttu-id="a7d32-117">Может быть константа, <b>строковое</b> значение, ссылка на ячейку или формулу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7d32-117">Can be a constant value, a <b>String</b> value, a cell reference, or a formula.</span>
          </span>
        </param>
        <param name="Formula2">
          <span data-ttu-id="a7d32-118">Значение или выражение, связанное с вторая часть условного форматирования при <paramref name="Operator" /> — это <see cref="F:Microsoft.Office.Interop.Excel.XlFormatConditionOperator.xlBetween" /> или <see cref="F:Microsoft.Office.Interop.Excel.XlFormatConditionOperator.xlNotBetween" /> (в противном случае этот аргумент игнорируется).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7d32-118">The value or expression associated with the second part of the conditional format when <paramref name="Operator" /> is <see cref="F:Microsoft.Office.Interop.Excel.XlFormatConditionOperator.xlBetween" /> or <see cref="F:Microsoft.Office.Interop.Excel.XlFormatConditionOperator.xlNotBetween" /> (otherwise, this argument is ignored).</span>
          </span>
          <span data-ttu-id="a7d32-119">Может быть константа, строковое значение, ссылка на ячейку или формулу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7d32-119">Can be a constant value, a string value, a cell reference, or a formula.</span>
          </span>
        </param>
        <param name="String">To be added.</param>
        <param name="TextOperator">To be added.</param>
        <param name="DateOperator">To be added.</param>
        <param name="ScopeType">To be added.</param>
        <summary>
          <span data-ttu-id="a7d32-120">Добавляет новый условное форматирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7d32-120">Adds a new conditional format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a7d32-121">A <see cref="T:Microsoft.Office.Interop.Excel.FormatCondition" /> объект, представляющий новый условное форматирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7d32-121">A <see cref="T:Microsoft.Office.Interop.Excel.FormatCondition" /> object that represents the new conditional format.</span>
          </span>
        </returns>
        <remarks>
          <para>
            <span data-ttu-id="a7d32-122">Не удается определить более трех условные форматы для диапазона.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a7d32-122">You cannot define more than three conditional formats for a range.</span>
            </span>
            <span data-ttu-id="a7d32-123">Используйте <see cref="M:Microsoft.Office.Interop.Excel.FormatCondition.Modify(Microsoft.Office.Interop.Excel.XlFormatConditionType,System.Object,System.Object,System.Object)" /> метод для изменения существующего условное форматирование или использовать <see cref="M:Microsoft.Office.Interop.Excel.FormatCondition.Delete" /> метод для удаления существующего формата перед добавлением нового.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a7d32-123">Use the <see cref="M:Microsoft.Office.Interop.Excel.FormatCondition.Modify(Microsoft.Office.Interop.Excel.XlFormatConditionType,System.Object,System.Object,System.Object)" /> method to modify an existing conditional format, or use the <see cref="M:Microsoft.Office.Interop.Excel.FormatCondition.Delete" /> method to delete an existing format before adding a new one.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAboveAverage">
      <MemberSignature Language="C#" Value="public object AddAboveAverage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AddAboveAverage() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.FormatConditions.AddAboveAverage" />
      <MemberSignature Language="VB.NET" Value="Public Function AddAboveAverage () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ AddAboveAverage();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2621)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a7d32-124">Возвращает новый <see cref="T:Microsoft.Office.Interop.Excel.AboveAverage" /> объекта, представляющего правила условного форматирования для указанного диапазона.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7d32-124">Returns a new <see cref="T:Microsoft.Office.Interop.Excel.AboveAverage" /> object representing a conditional formatting rule for the specified range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a7d32-125">
            <see cref="T:Microsoft.Office.Interop.Excel.AboveAverage" />объект</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7d32-125">
              <see cref="T:Microsoft.Office.Interop.Excel.AboveAverage" /> object</span>
          </span>
        </returns>
        <remarks>
          <para>
            <span data-ttu-id="a7d32-126">
              <see cref="T:Microsoft.Office.Interop.Excel.AboveAverage" /> Объект используется для поиска значений выше или ниже среднего или отклонение диапазона ячеек.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a7d32-126">The <see cref="T:Microsoft.Office.Interop.Excel.AboveAverage" /> object is used to find values above or below an average or standard deviation in a range of cells.</span>
            </span>
            <span data-ttu-id="a7d32-127">Например выше среднего исполнители можно найти в ежегодные Обзор производительности или могут находить произведенной материалов, которые могут быть разделены ниже два стандартных отклонения в оценка качества.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a7d32-127">For example, you can find the above average performers in an annual performance review or you can locate manufactured materials that fall below two standard deviations in a quality rating.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddColorScale">
      <MemberSignature Language="C#" Value="public object AddColorScale (int ColorScaleType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AddColorScale([in]int32 ColorScaleType) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.FormatConditions.AddColorScale(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddColorScale (ColorScaleType As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ AddColorScale(int ColorScaleType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2616)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ColorScaleType" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ColorScaleType">
          <span data-ttu-id="a7d32-128">Тип цветовой шкалы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7d32-128">The type of color scale.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7d32-129">Возвращает новый <see cref="T:Microsoft.Office.Interop.Excel.ColorScale" /> объекта, представляющего правила условного форматирования, который использует относительное различия в значений ячеек, включенных в выбранный диапазон градаций в цвета ячеек.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7d32-129">Returns a new <see cref="T:Microsoft.Office.Interop.Excel.ColorScale" /> object representing a conditional formatting rule that uses gradations in cell colors to indicate relative differences in the values of cells included in a selected range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a7d32-130">
            <see cref="T:Microsoft.Office.Interop.Excel.ColorScale" />объект</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7d32-130">
              <see cref="T:Microsoft.Office.Interop.Excel.ColorScale" /> object</span>
          </span>
        </returns>
        <remarks>
          <para>
            <span data-ttu-id="a7d32-131">Цветовые шкалы visual руководства, которые помогут вам понять распределения данных и вариантов.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a7d32-131">Color scales are visual guides that help you understand data distribution and variation.</span>
            </span>
            <span data-ttu-id="a7d32-132">Цветовой шкалы поможет идентифицировать относительный различия в значений ячеек в указанном диапазоне с помощью вариант цвета.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a7d32-132">A color scale helps you identify relative differences in the values of cells in a given range by using color variation.</span>
            </span>
            <span data-ttu-id="a7d32-133">Разные цвета и градациями между цвета представляют различия в значений ячеек.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a7d32-133">Different colors and gradations between colors represent differences in cell values.</span>
            </span>
            <span data-ttu-id="a7d32-134">Например в трехцветные масштаба, можно указать ячейки с помощью большие значения относительно данных зеленый, ячейки с промежуточных значений, желтый и ячейки с наименьшими значениями являются красного.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a7d32-134">For example, in a three-color scale, you can specify that cells with the highest relative data values are green, cells with intermediate values are yellow, and cells with the lowest values are red.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDatabar">
      <MemberSignature Language="C#" Value="public object AddDatabar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AddDatabar() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.FormatConditions.AddDatabar" />
      <MemberSignature Language="VB.NET" Value="Public Function AddDatabar () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ AddDatabar();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2618)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a7d32-135">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Databar" /> объекта, представляющего столбца правила условного форматирования для указанного диапазона данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7d32-135">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Databar" /> object representing a data bar conditional formatting rule for the specified range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a7d32-136">
            <see cref="T:Microsoft.Office.Interop.Excel.Databar" />объект</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7d32-136">
              <see cref="T:Microsoft.Office.Interop.Excel.Databar" /> object</span>
          </span>
        </returns>
        <remarks>
          <para>
            <span data-ttu-id="a7d32-137">Гистограммы позволяют отобразить значение ячейки относительно других ячеек.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a7d32-137">Data bars help you see the value of a cell relative to other cells.</span>
            </span>
            <span data-ttu-id="a7d32-138">Длина полосы гистограммы представляет значение в ячейке.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a7d32-138">The length of the data bar represents the value in the cell.</span>
            </span>
            <span data-ttu-id="a7d32-139">Длинный столбец соответствует более высокое значение и меньшие панели представляет меньшее значение.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a7d32-139">A longer bar represents a higher value and a shorter bar represents a lower value.</span>
            </span>
            <span data-ttu-id="a7d32-140">Гистограммы полезны в посвященный интерфейсу верхний и нижний край номеров особенно с большого объема данных, таких как верхние и нижние продаете toys в в выходные дни отчет о продажах.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a7d32-140">Data bars are useful in spotting higher and lower numbers especially with large amounts of data, such as top and bottom selling toys in a holiday sales report.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddIconSetCondition">
      <MemberSignature Language="C#" Value="public object AddIconSetCondition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AddIconSetCondition() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.FormatConditions.AddIconSetCondition" />
      <MemberSignature Language="VB.NET" Value="Public Function AddIconSetCondition () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ AddIconSetCondition();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2619)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a7d32-141">Возвращает новый <see cref="T:Microsoft.Office.Interop.Excel.IconSetCondition" /> объект, который представляет значок задать правила условного форматирования для указанного диапазона.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7d32-141">Returns a new <see cref="T:Microsoft.Office.Interop.Excel.IconSetCondition" /> object which represents an icon set conditional formatting rule for the specified range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a7d32-142">
            <see cref="T:Microsoft.Office.Interop.Excel.IconSetCondition" />объект</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7d32-142">
              <see cref="T:Microsoft.Office.Interop.Excel.IconSetCondition" /> object</span>
          </span>
        </returns>
        <remarks>
          <para>
            <span data-ttu-id="a7d32-143">Используйте значок, можно создать примечания и классификации данных в трех до пяти категорий, разделенных порогового значения.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a7d32-143">Use an icon set to annotate and classify data into three to five categories separated by a threshold value.</span>
            </span>
            <span data-ttu-id="a7d32-144">Каждый значок, представляющий диапазон значений.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a7d32-144">Each icon represents a range of values.</span>
            </span>
            <span data-ttu-id="a7d32-145">К примеру в наборе 3 значок стрелки, красная стрелка вверх представляет более высокие значения, желтую стрелку сторону — средние значения и зеленая стрелка вниз — меньше значения.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a7d32-145">For example, in the 3 Arrows icon set, the red up arrow represents higher values, the yellow sideways arrow represents middle values, and the green down arrow represents lower values.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTop10">
      <MemberSignature Language="C#" Value="public object AddTop10 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AddTop10() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.FormatConditions.AddTop10" />
      <MemberSignature Language="VB.NET" Value="Public Function AddTop10 () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ AddTop10();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2620)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a7d32-146">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Top10" /> объекта, представляющего правила условного форматирования для указанного диапазона.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7d32-146">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Top10" /> object representing a conditional formatting rule for the specified range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a7d32-147">
            <see cref="T:Microsoft.Office.Interop.Excel.Top10" />объект</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7d32-147">
              <see cref="T:Microsoft.Office.Interop.Excel.Top10" /> object</span>
          </span>
        </returns>
        <remarks>
          <para>
            <span data-ttu-id="a7d32-148">С помощью <see cref="T:Microsoft.Office.Interop.Excel.Top10" /> объекта, можно найти максимального и минимального значений в диапазоне ячеек в зависимости от пороговое значение, которое можно указать.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a7d32-148">Using the <see cref="T:Microsoft.Office.Interop.Excel.Top10" /> object, you can find the highest and lowest values in a range of cells based on a cutoff value that you specify.</span>
            </span>
            <span data-ttu-id="a7d32-149">К примеру верхней пять спросом можно найти в региональных отчетов 15 процентов нижней продуктов в опросе клиентов или верхней 25 Зарплата при анализе персонал отдела.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a7d32-149">For example, you can find the top five selling products in a regional report, the bottom 15 percent of products in a customer survey, or the top 25 salaries in a department personnel analysis.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddUniqueValues">
      <MemberSignature Language="C#" Value="public object AddUniqueValues ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AddUniqueValues() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.FormatConditions.AddUniqueValues" />
      <MemberSignature Language="VB.NET" Value="Public Function AddUniqueValues () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ AddUniqueValues();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2622)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a7d32-150">Возвращает новый <see cref="T:Microsoft.Office.Interop.Excel.UniqueValues" /> объекта, представляющего правила условного форматирования для указанного диапазона.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7d32-150">Returns a new <see cref="T:Microsoft.Office.Interop.Excel.UniqueValues" /> object representing a conditional formatting rule for the specified range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a7d32-151">
            <see cref="T:Microsoft.Office.Interop.Excel.UniqueValues" />объект</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7d32-151">
              <see cref="T:Microsoft.Office.Interop.Excel.UniqueValues" /> object</span>
          </span>
        </returns>
        <remarks>
          <para>
            <span data-ttu-id="a7d32-152">Можно использовать <see cref="T:Microsoft.Office.Interop.Excel.UniqueValues" /> объект, который требуется быстро визуализировать ячейки, содержащие уникальным или повторяющиеся значения.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a7d32-152">You can use the <see cref="T:Microsoft.Office.Interop.Excel.UniqueValues" /> object to quickly visualize cells that contain either unique or duplicate values.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.FormatConditions.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7d32-153">Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Application" /> объект, представляющий приложение Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7d32-153">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.FormatConditions.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7d32-154">Возвращает число объектов в коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7d32-154">Returns the number of objects in the collection.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.FormatConditions.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7d32-155">Возвращает 32-битное целое число, указывающее на приложение, в котором объект был создан.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7d32-155">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="a7d32-156">Если объект был создан в Microsoft Excel, данное свойство возвращает строку XCEL, что эквивалентно шестнадцатеричный номер 5843454C.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a7d32-156">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="a7d32-157">Свойство <b>создателя</b> предназначено для использования в Microsoft Excel для Macintosh, где каждое приложение имеет код создателя четырех символов.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a7d32-157">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span>
            </span>
            <span data-ttu-id="a7d32-158">Например Microsoft Excel содержит код создателя XCEL.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a7d32-158">For example, Microsoft Excel has the creator code XCEL.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.FormatConditions.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a7d32-159">Удаляет объект.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7d32-159">Deletes the object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.FormatConditions.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object Item (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Item([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.FormatConditions.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Item (Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Item(System::Object ^ Index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="a7d32-160">Требуется <b>объект</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7d32-160">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="a7d32-161">Номер индекса для объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7d32-161">The index number for the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7d32-162">Возвращает один объект из коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7d32-162">Returns a single object from a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a7d32-163">
            <b>Объект</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a7d32-163">
              <b>Object</b>
            </span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.FormatConditions.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7d32-164">Возвращает родительский объект для указанного объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7d32-164">Returns the parent object for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>