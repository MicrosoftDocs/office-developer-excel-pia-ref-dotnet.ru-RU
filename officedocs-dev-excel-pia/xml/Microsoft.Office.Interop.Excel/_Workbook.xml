<Type Name="_Workbook" FullName="Microsoft.Office.Interop.Excel._Workbook">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0dc241801e29cd7a9aa2098f883cf029f3c40f54" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="50012679" /></Metadata><TypeSignature Language="C#" Value="public interface _Workbook" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _Workbook" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel._Workbook" />
  <TypeSignature Language="VB.NET" Value="Public Interface _Workbook" />
  <TypeSignature Language="C++ CLI" Value="public interface class _Workbook" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208DA-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4160)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Это основной интерфейс в компонентном классе COM, который требуется управляемому программному коду для взаимодействия с соответствующим объектом COM. Используйте этот основной интерфейс только в тех случаях, когда метод, который предполагается использовать, имеет такое же имя, как событие объекта COM; в таких случаях для вызова метода приведите к этому интерфейсу, для соединения с событием приведите к интерфейсу последних событий. Иначе используйте интерфейс .NET, который создается но основе компонентного класса COM для доступа к методам, свойствам и событиям объекта COM. Дополнительные сведения об объекте COM см. в <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> .</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="_CodeName">
      <MemberSignature Language="C#" Value="public string _CodeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string _CodeName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook._CodeName" />
      <MemberSignature Language="VB.NET" Value="Public Property _CodeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ _CodeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147418112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147418112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-2147418112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Зарезервировано для внутреннего использования.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_PrintOut">
      <MemberSignature Language="C#" Value="public void _PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(905)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(7)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <summary>Зарезервировано для внутреннего использования.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Protect">
      <MemberSignature Language="C#" Value="public void _Protect (object Password, object Structure, object Windows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _Protect([in]object Password, [in]object Structure, [in]object Windows) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook._Protect(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _Protect (Optional Password As Object, Optional Structure As Object, Optional Windows As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(282)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="Structure" Type="System.Object" />
        <Parameter Name="Windows" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password">To be added.</param>
        <param name="Structure">To be added.</param>
        <param name="Windows">To be added.</param>
        <summary>Зарезервировано для внутреннего использования.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_ReadOnlyRecommended">
      <MemberSignature Language="C#" Value="public bool _ReadOnlyRecommended { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool _ReadOnlyRecommended" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook._ReadOnlyRecommended" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property _ReadOnlyRecommended As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool _ReadOnlyRecommended { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(297)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(297)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Зарезервировано для внутреннего использования.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_SaveAs">
      <MemberSignature Language="C#" Value="public void _SaveAs (object Filename, object FileFormat, object Password, object WriteResPassword, object ReadOnlyRecommended, object CreateBackup, Microsoft.Office.Interop.Excel.XlSaveAsAccessMode AccessMode = Microsoft.Office.Interop.Excel.XlSaveAsAccessMode.xlNoChange, object ConflictResolution, object AddToMru, object TextCodepage, object TextVisualLayout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _SaveAs([in]object Filename, [in]object FileFormat, [in]object Password, [in]object WriteResPassword, [in]object ReadOnlyRecommended, [in]object CreateBackup, [in]valuetype Microsoft.Office.Interop.Excel.XlSaveAsAccessMode AccessMode, [in]object ConflictResolution, [in]object AddToMru, [in]object TextCodepage, [in]object TextVisualLayout) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook._SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _SaveAs (Optional Filename As Object, Optional FileFormat As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional ReadOnlyRecommended As Object, Optional CreateBackup As Object, Optional AccessMode As XlSaveAsAccessMode = Microsoft.Office.Interop.Excel.XlSaveAsAccessMode.xlNoChange, Optional ConflictResolution As Object, Optional AddToMru As Object, Optional TextCodepage As Object, Optional TextVisualLayout As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(284)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(11)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="FileFormat" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="ReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="CreateBackup" Type="System.Object" />
        <Parameter Name="AccessMode" Type="Microsoft.Office.Interop.Excel.XlSaveAsAccessMode" />
        <Parameter Name="ConflictResolution" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
        <Parameter Name="TextCodepage" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="FileFormat">To be added.</param>
        <param name="Password">To be added.</param>
        <param name="WriteResPassword">To be added.</param>
        <param name="ReadOnlyRecommended">To be added.</param>
        <param name="CreateBackup">To be added.</param>
        <param name="AccessMode">To be added.</param>
        <param name="ConflictResolution">To be added.</param>
        <param name="AddToMru">To be added.</param>
        <param name="TextCodepage">To be added.</param>
        <param name="TextVisualLayout">To be added.</param>
        <summary>Зарезервировано для внутреннего использования.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptAllChanges">
      <MemberSignature Language="C#" Value="public void AcceptAllChanges (object When, object Who, object Where);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AcceptAllChanges([in]object When, [in]object Who, [in]object Where) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.AcceptAllChanges(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AcceptAllChanges (Optional When As Object, Optional Who As Object, Optional Where As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1466)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="When" Type="System.Object" />
        <Parameter Name="Who" Type="System.Object" />
        <Parameter Name="Where" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="When"><b>Необязательный объект</b>. Указывает, когда принимаются все изменения.</param>
        <param name="Who"><b>Необязательный объект</b>. Указывает, кем принимаются все изменения.</param>
        <param name="Where"><b>Необязательный объект</b>. Указывает, где принимаются все изменения.</param>
        <summary>Принимает все изменения в указанной общей книге.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptLabelsInFormulas">
      <MemberSignature Language="C#" Value="public bool AcceptLabelsInFormulas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptLabelsInFormulas" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.AcceptLabelsInFormulas" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptLabelsInFormulas As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptLabelsInFormulas { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1441)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1441)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1441)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>True,</b> если метки можно использовать в формулах таблиц. Значение по умолчанию — <b>False</b>. Для чтения и записи, <b>Boolean</b>.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccuracyVersion">
      <MemberSignature Language="C#" Value="public int AccuracyVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AccuracyVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property AccuracyVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AccuracyVersion { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2871)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2871)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2871)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает, используют ли некоторые функции таблиц последние алгоритмы точности для вычисления результатов.</summary>
        <value>Указывает, какую версию алгоритмов использовать для определенных функций таблицы.</value>
        <remarks><para>Чтение и запись</para>
          <para>По умолчанию некоторые функции листа из Microsoft Office Excel 2007 и более ранних версий Microsoft Excel используют новые алгоритмы, которые увеличивают их точность. Однако в некоторых случаях новые алгоритмы снижают производительность этих функций относительно их производительности в Microsoft Office Excel 2007 и более ранних версий Excel. Чтобы указать, что эти функции таблиц используют более старые алгоритмы для повышения их производительности, установите для <see cref="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" /> свойства 1. В следующей таблице описываются возможные параметры <see cref="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" /> свойства.</para>
          <list type="table">
            <item>
              <term>0</term>
              <description>Использование последних и наиболее точных алгоритмов (по умолчанию)</description>
            </item>
            <item>
              <term>1 </term>
              <description>Использование Microsoft Office Excel 2007 или более ранних версий</description>
            </item>
            <item>
              <term>2 </term>
              <description>Использование Microsoft Excel 2010, русская версия алгоритмов</description>
            </item>
          </list>
          <para>
            <b>Внимание!</b>Установка для свойства значения, кроме 0, 1 или 2, приведет к <see cref="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" /> неопределению поведения.</para>
          <para>В следующей таблице приводится сет несколько функций, на которые влияет установка для свойства <see cref="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" /> 1. Функции, перечисленные в столбце "Функции, не затронутые", всегда будут использовать последние алгоритмы точности или не были изменены в Excel 2010. Для имен функций, в именах которых содержится точка (.), чтобы определить имя соответствующей функции, реализованной в VBA в качестве метода объекта, замените знак подчеркиваия (_) на этот <see cref="T:Microsoft.Office.Interop.Excel.WorksheetFunction" /> период. Например, метод VBA, соответствующий бета-версии. Методом является функция <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Beta_Dist(System.Double,System.Double,System.Double,System.Boolean,System.Object,System.Object)" /> DIST.</para>
          <list type="table">
            <item>
              <term>BETADIST</term>
              <description>AGGREGATE</description>
            </item>
            <item>
              <term>BETAINV</term>
              <description>Бета-версия. DIST</description>
            </item>
            <item>
              <term>BINOMDIST</term>
              <description>Бета-версия. INV</description>
            </item>
            <item>
              <term>CHIDIST</term>
              <description>BINOM. DIST</description>
            </item>
            <item>
              <term>ХИИНВ</term>
              <description>BINOM. INV</description>
            </item>
            <item>
              <term>CHITEST</term>
              <description>CEILING</description>
            </item>
            <item>
              <term>CONFIDENCE</term>
              <description>CEILING. PRECISE</description>
            </item>
            <item>
              <term>CRITBINOM</term>
              <description>CHISQ. DIST</description>
            </item>
            <item>
              <term>CUMIPMT</term>
              <description>CHISQ. DIST. RT</description>
            </item>
            <item>
              <term>CUMPRINC</term>
              <description>CHISQ. INV</description>
            </item>
            <item>
              <term>ERF</term>
              <description>CHISQ. INV. RT</description>
            </item>
            <item>
              <term>ERFC</term>
              <description>CHISQ. TEST</description>
            </item>
            <item>
              <term>EXPONDIST</term>
              <description>ДОСТОВЕРНОСТЬ. NORM</description>
            </item>
            <item>
              <term>FDIST</term>
              <description>ДОСТОВЕРНОСТЬ. T</description>
            </item>
            <item>
              <term>FINV</term>
              <description>COVAR</description>
            </item>
            <item>
              <term>FTEST</term>
              <description>COVARIANCE. P</description>
            </item>
            <item>
              <term>GAMMADIST</term>
              <description>COVARIANCE. S</description>
            </item>
            <item>
              <term>GAMMALN</term>
              <description>ERF. PRECISE</description>
            </item>
            <item>
              <term>GAMMINV</term>
              <description>ERFC. PRECISE</description>
            </item>
            <item>
              <term>HYPGEOMDIST</term>
              <description>EXPON. DIST</description>
            </item>
            <item>
              <term>IPMT</term>
              <description>F.DIST</description>
            </item>
            <item>
              <term>IRR</term>
              <description>F.DIST. RT</description>
            </item>
            <item>
              <term>LOGINV</term>
              <description>F.INV</description>
            </item>
            <item>
              <term>LOGNORMDIST</term>
              <description>F.INV. RT</description>
            </item>
            <item>
              <term>NEGBINOMDIST</term>
              <description>F.TEST</description>
            </item>
            <item>
              <term>NORMDIST</term>
              <description>FLOOR</description>
            </item>
            <item>
              <term>NORMINV</term>
              <description>FLOOR. PRECISE</description>
            </item>
            <item>
              <term>NORMSDIST</term>
              <description>ГАММА. DIST</description>
            </item>
            <item>
              <term>NORMSINV</term>
              <description>ГАММА. INV</description>
            </item>
            <item>
              <term>PMT</term>
              <description>GAMMALN. PRECISE</description>
            </item>
            <item>
              <term>POISSON</term>
              <description>HYPGEOM. DIST</description>
            </item>
            <item>
              <term>PPMT</term>
              <description>ISO. CEILING</description>
            </item>
            <item>
              <term>STDEV</term>
              <description>LOGNORM. DIST</description>
            </item>
            <item>
              <term>STDEVP</term>
              <description>LOGNORM. INV</description>
            </item>
            <item>
              <term>TDIST</term>
              <description>MOD</description>
            </item>
            <item>
              <term>TINV</term>
              <description>РЕЖИМ</description>
            </item>
            <item>
              <term>TTEST</term>
              <description>MODE. MULT</description>
            </item>
            <item>
              <term>VAR</term>
              <description>MODE. SNGL</description>
            </item>
            <item>
              <term>VARA</term>
              <description>NEGBINOM. DIST</description>
            </item>
            <item>
              <term>VARP</term>
              <description>NETWORKDAYS. INTL</description>
            </item>
            <item>
              <term>VARPA</term>
              <description>НОРМ. DIST</description>
            </item>
            <item>
              <term>WEIBULL</term>
              <description>НОРМ. INV</description>
            </item>
            <item>
              <term>XIRR</term>
              <description>НОРМ. S.DIST</description>
            </item>
            <item>
              <term>ZTEST</term>
              <description>НОРМ. S.INV</description>
            </item>
            <item>
              <term />
              <description>PERCENTILE</description>
            </item>
            <item>
              <term />
              <description>PERCENTILE. EXC</description>
            </item>
            <item>
              <term />
              <description>PERCENTILE. INC</description>
            </item>
            <item>
              <term />
              <description>PERCENTRANK</description>
            </item>
            <item>
              <term />
              <description>PERCENTRANK. EXC</description>
            </item>
            <item>
              <term />
              <description>PERCENTRANK. INC</description>
            </item>
            <item>
              <term />
              <description>POISSON. DIST</description>
            </item>
            <item>
              <term />
              <description>QUARTILE</description>
            </item>
            <item>
              <term />
              <description>КВАРТИЛЬ. EXC</description>
            </item>
            <item>
              <term />
              <description>КВАРТИЛЬ. INC</description>
            </item>
            <item>
              <term />
              <description>RANK</description>
            </item>
            <item>
              <term />
              <description>RANK. AVG</description>
            </item>
            <item>
              <term />
              <description>RANK. EQ</description>
            </item>
            <item>
              <term />
              <description>STDEV. P</description>
            </item>
            <item>
              <term />
              <description>STDEV. S</description>
            </item>
            <item>
              <term />
              <description>T.DIST</description>
            </item>
            <item>
              <term />
              <description>T.DIST.2T</description>
            </item>
            <item>
              <term />
              <description>T.DIST. RT</description>
            </item>
            <item>
              <term />
              <description>T.DIST. RT</description>
            </item>
            <item>
              <term />
              <description>T.INV</description>
            </item>
            <item>
              <term />
              <description>T.INV.2T</description>
            </item>
            <item>
              <term />
              <description>T.INV. RT</description>
            </item>
            <item>
              <term />
              <description>T.TEST</description>
            </item>
            <item>
              <term />
              <description>VAR. P</description>
            </item>
            <item>
              <term />
              <description>VAR. S</description>
            </item>
            <item>
              <term />
              <description>WEEKDAY</description>
            </item>
            <item>
              <term />
              <description>WEEKNUM</description>
            </item>
            <item>
              <term />
              <description>WEIBULL. DIST</description>
            </item>
            <item>
              <term />
              <description>РАБОЧИЙ ДЕНЬ. INTL</description>
            </item>
            <item>
              <term />
              <description>Z.TEST</description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Activate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Activate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Activate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(304)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Активирует первое окно, связанное с книгой. При этом не будут запускаться макрос Auto_Activate или Auto_Deactivate, которые могут быть присоединены к книге (используйте метод для запуска <see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" /> этих макроса).</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveChart">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Chart ActiveChart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Chart ActiveChart" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ActiveChart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveChart As Chart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Chart ^ ActiveChart { Microsoft::Office::Interop::Excel::Chart ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(183)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(183)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Chart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> объект, который представляет активную диаграмму (внедренную диаграмму или лист диаграммы). Внедренная диаграмма считается активной при ее выборе или активации. Если диаграмма не активна, это свойство возвращает <b>nothing</b>. Только для чтения.</summary>
        <value>To be added.</value>
        <remarks><para>Если не указать квалификатор объекта, это свойство возвращает активную диаграмму в активной книге.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveSheet">
      <MemberSignature Language="C#" Value="public object ActiveSheet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ActiveSheet" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ActiveSheet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveSheet As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ActiveSheet { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(307)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(307)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект, представляющий активный лист (лист сверху) в активной книге или в указанном окне или книге. Возвращает значение <b>Nothing</b>, если отсутствует активный лист. Только для чтения.</summary>
        <value>To be added.</value>
        <remarks><para>Если квалификатор объекта не указан, это свойство возвращает активный лист в активной книге.</para>
          <para>Если книга отображается в более чем одном окне, свойство может быть разным <see cref="P:Microsoft.Office.Interop.Excel._Workbook.ActiveSheet" /> в разных окнах.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveSlicer">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Slicer ActiveSlicer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Slicer ActiveSlicer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ActiveSlicer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveSlicer As Slicer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Slicer ^ ActiveSlicer { Microsoft::Office::Interop::Excel::Slicer ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2867)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2867)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Slicer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает объект, который представляет активный срез в активной книге или указанной книге.</summary>
        <value>Объект, который представляет активный срез в активной книге или указанной книге.</value>
        <remarks><para>Возвращает нулевую ссылку (nothing in Visual Basic), если срез не активен.</para>
          <para>Только для чтения.</para>
          <para>Если объект не указан, это свойство возвращает активный срез <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> в активной книге.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToFavorites">
      <MemberSignature Language="C#" Value="public void AddToFavorites ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddToFavorites() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.AddToFavorites" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddToFavorites ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddToFavorites();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1476)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Добавляет ярлык в книгу или гиперссылки в папку "Избранное".</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Если используется без квалификатора объекта, это свойство возвращает объект, который <see cref="T:Microsoft.Office.Interop.Excel.Application" /> представляет приложение Microsoft Excel. Если используется с квалификатором объекта, это свойство возвращает объект <b>Application</b>, который представляет создателя указанного объекта (вы можете задать это свойство с объектом OLE-автоматизации для возврата приложения этого объекта). Только для чтения.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyTheme">
      <MemberSignature Language="C#" Value="public void ApplyTheme (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyTheme([in]string Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ApplyTheme(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyTheme (Filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyTheme(System::String ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2534)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename">Имя темы.</param>
        <summary>Применяет указанную тему к текущей книге.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Author">
      <MemberSignature Language="C#" Value="public string Author { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Author" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Author" />
      <MemberSignature Language="VB.NET" Value="Public Property Author As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Author { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(574)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(574)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(574)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает автора комментария. Только для чтения, <b>String</b>.</summary>
        <value>Возвращает <see cref="T:System.String" /> .</value>
        <remarks>To be added.</remarks>
        <example><para>В этом примере удаляются все комментарии, добавленные к активному листу Сехиной.</para>
          <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code></example>
        <example><para>В этом примере удаляются все комментарии, добавленные к активному листу Сехиной.</para>
          <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code></example>
        <example><para>В этом примере удаляются все комментарии, добавленные к активному листу Сехиной.</para>
          <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code></example>
      </Docs>
    </Member>
    <Member MemberName="AutoUpdateFrequency">
      <MemberSignature Language="C#" Value="public int AutoUpdateFrequency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AutoUpdateFrequency" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.AutoUpdateFrequency" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoUpdateFrequency As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AutoUpdateFrequency { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1442)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1442)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1442)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает время в минутах между автоматическими обновлениями общей книги. Для чтения и записи, <b>Integer</b>.</summary>
        <value>To be added.</value>
        <remarks><para>Чтобы это свойство вступает в силу, свойству <b>AutoUpdateFrequency</b> необходимо установить значение от 5 до 1440.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoUpdateSaveChanges">
      <MemberSignature Language="C#" Value="public bool AutoUpdateSaveChanges { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoUpdateSaveChanges" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.AutoUpdateSaveChanges" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoUpdateSaveChanges As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoUpdateSaveChanges { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1443)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1443)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1443)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>Имеет</b> true, если текущие изменения в общей книге будут опубликованы для других пользователей при автоматическом обновлении книги. <b>False,</b> если изменения не опубликованы (эта книга по-прежнему синхронизируется с изменениями, внесенными другими пользователями). Значение по умолчанию — <b>True</b>. Для чтения и записи, <b>Boolean</b>.</summary>
        <value>To be added.</value>
        <remarks><para>Чтобы это свойство вступает в силу, необходимо установить значение от 5 до <see cref="P:Microsoft.Office.Interop.Excel._Workbook.AutoUpdateFrequency" /> 1440.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="BreakLink">
      <MemberSignature Language="C#" Value="public void BreakLink (string Name, Microsoft.Office.Interop.Excel.XlLinkType Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BreakLink([in]string Name, [in]valuetype Microsoft.Office.Interop.Excel.XlLinkType Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.BreakLink(System.String,Microsoft.Office.Interop.Excel.XlLinkType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BreakLink (Name As String, Type As XlLinkType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BreakLink(System::String ^ Name, Microsoft::Office::Interop::Excel::XlLinkType Type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2047)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlLinkType" />
      </Parameters>
      <Docs>
        <param name="Name">Обязательный атрибут типа <b>String</b>. Имя ссылки.</param>
        <param name="Type">Обязательное <see cref="T:Microsoft.Office.Interop.Excel.XlLinkType" /> . Тип ссылки.</param>
        <summary>Преобразует формулы, связанные с другими источниками Microsoft Excel или источниками OLE, в значения.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuiltinDocumentProperties">
      <MemberSignature Language="C#" Value="public object BuiltinDocumentProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object BuiltinDocumentProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.BuiltinDocumentProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BuiltinDocumentProperties As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ BuiltinDocumentProperties { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1176)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1176)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает коллекцию, представляюную все встроенные свойства документа для <see cref="T:Microsoft.Office.Core.DocumentProperties" /> указанной книги. Только для чтения.</summary>
        <value>To be added.</value>
        <remarks><para>Это свойство возвращает всю коллекцию встроенных свойств документа. Используйте этот метод для возврата одного члена коллекции (объекта), указав либо имя свойства, либо индекс коллекции <see cref="P:Microsoft.Office.Core.DocumentProperties.Item(System.Object)" /> <see cref="T:Microsoft.Office.Core.DocumentProperty" /> (в качестве числа).</para>
          <para>Вы можете ссылаться на свойства документа по значению индекса или по имени. В следующем списке показаны доступные встроенные имена свойств документа:</para>
          <para>Название </para>
          <para>Subject</para>
          <para>Автор</para>
          <para>Ключевые слова</para>
          <para>Комментарии</para>
          <para>Шаблон</para>
          <para>Последний автор</para>
          <para>Номер редакции</para>
          <para>Имя приложения</para>
          <para>Дата последней печати</para>
          <para>Дата создания </para>
          <para>Время последнего сохранения</para>
          <para>Общее время редактирования</para>
          <para>Number of Pages</para>
          <para>Число слов</para>
          <para>Число знаков</para>
          <para>Безопасность</para>
          <para>Category</para>
          <para>Format</para>
          <para>Manager</para>
          <para>Company</para>
          <para>Количество байтов</para>
          <para>Число строк</para>
          <para>Число абзацев</para>
          <para>Число слайдов</para>
          <para>Число заметок</para>
          <para>Число скрытых слайдов</para>
          <para>Количество мультимедийных клипов</para>
          <para>База гиперссылки</para>
          <para>Количество символов (с пробелами)</para>
          <para>Контейнерные приложения не требуются для определения значений для каждого встроенного свойства документа. Если Microsoft Excel не определяет значение для одного из встроенных свойств документа, чтение свойства для этого свойства документа приводит к <see cref="P:Microsoft.Office.Core.DocumentProperty.Value" /> ошибке.</para>
          <para>Метод <b>Item</b> является методом по умолчанию для <b>коллекции DocumentProperties.</b></para>
          <para>Используйте свойство <see cref="P:Microsoft.Office.Interop.Excel._Workbook.CustomDocumentProperties" /> для возврата коллекции настраиваемого свойства документа.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculationVersion">
      <MemberSignature Language="C#" Value="public int CalculationVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CalculationVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CalculationVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CalculationVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CalculationVersion { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1806)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1806)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает число, в правой части которого четыре цифры являются номером версии вычисления, а другие цифры (слева) — основной версией Microsoft Excel. Для объекта это свойство возвращает сведения о версии Excel, в которую книга была в последний раз полностью <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> пересчитана. Только для чтения, <b>Integer</b>.</summary>
        <value>To be added.</value>
        <remarks><para>Если книга была сохранена в более ранней версии Excel и книга не была полностью пересчитана, это свойство возвращает 0.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCheckIn">
      <MemberSignature Language="C#" Value="public bool CanCheckIn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanCheckIn() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.CanCheckIn" />
      <MemberSignature Language="VB.NET" Value="Public Function CanCheckIn () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanCheckIn();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2053)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><b>Имеет</b> true, если Microsoft Excel может получить указанную книгу на сервере.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CaseSensitive">
      <MemberSignature Language="C#" Value="public bool CaseSensitive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CaseSensitive" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CaseSensitive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CaseSensitive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CaseSensitive { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3056)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3056)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>True,</b> если книга различает верхний и нижний дела при сравнении содержимого. <b>Boolean только для чтения</b> (<b>bool</b> в C#).</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeFileAccess">
      <MemberSignature Language="C#" Value="public void ChangeFileAccess (Microsoft.Office.Interop.Excel.XlFileAccess Mode, object WritePassword, object Notify);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ChangeFileAccess([in]valuetype Microsoft.Office.Interop.Excel.XlFileAccess Mode, [in]object WritePassword, [in]object Notify) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ChangeFileAccess(Microsoft.Office.Interop.Excel.XlFileAccess,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChangeFileAccess (Mode As XlFileAccess, Optional WritePassword As Object, Optional Notify As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(989)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Mode" Type="Microsoft.Office.Interop.Excel.XlFileAccess" />
        <Parameter Name="WritePassword" Type="System.Object" />
        <Parameter Name="Notify" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Mode">Обязательное <see cref="T:Microsoft.Office.Interop.Excel.XlFileAccess" /> . Указывает новый режим доступа.</param>
        <param name="WritePassword"><b>Необязательный объект</b>. Указывает зарезервированный для записи пароль, если файл зарезервирован и является <paramref name="Mode" /> <b>xlReadWrite.</b> Игнорируется, если нет пароля для файла или если <paramref name="Mode" /> <b>это xlReadOnly.</b></param>
        <param name="Notify"><b>Необязательный объект</b>. <b>Имеет</b> true (или опущен), чтобы уведомить пользователя, если не удается получить доступ к файлу немедленно.</param>
        <summary>Изменяет разрешения доступа для книги. Для этого может потребоваться загрузка обновленной версии с диска.</summary>
        <remarks><para>Если файл открыт в режиме только для чтения, у вас нет монопольного доступа к файлу. Если вы измените файл с "только чтение" на "только чтение/запись", Microsoft Excel должен загрузить новую копию файла, чтобы убедиться, что во время открытия файла не было внося изменений как "только для чтения".</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeHistoryDuration">
      <MemberSignature Language="C#" Value="public int ChangeHistoryDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ChangeHistoryDuration" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ChangeHistoryDuration" />
      <MemberSignature Language="VB.NET" Value="Public Property ChangeHistoryDuration As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ChangeHistoryDuration { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1444)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1444)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1444)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает количество дней, показанных в журнале изменений общей книги. Для чтения и записи, <b>Integer</b>.</summary>
        <value>To be added.</value>
        <remarks><para>Все изменения в журнале изменений, которые старше параметра этого свойства, удаляются при закрытии книги.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeLink">
      <MemberSignature Language="C#" Value="public void ChangeLink (string Name, string NewName, Microsoft.Office.Interop.Excel.XlLinkType Type = Microsoft.Office.Interop.Excel.XlLinkType.xlLinkTypeExcelLinks);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ChangeLink([in]string Name, [in]string NewName, [in]valuetype Microsoft.Office.Interop.Excel.XlLinkType Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ChangeLink(System.String,System.String,Microsoft.Office.Interop.Excel.XlLinkType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChangeLink (Name As String, NewName As String, Optional Type As XlLinkType = Microsoft.Office.Interop.Excel.XlLinkType.xlLinkTypeExcelLinks)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(802)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="NewName" Type="System.String" />
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlLinkType" />
      </Parameters>
      <Docs>
        <param name="Name">Обязательный атрибут типа <b>String</b>. Имя ссылки Microsoft Excel или DDE/OLE, которая должна быть изменена, так как она была возвращена <see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" /> методом.</param>
        <param name="NewName">Обязательный атрибут типа <b>String</b>. Новое имя ссылки.</param>
        <param name="Type">Необязательный <see cref="T:Microsoft.Office.Interop.Excel.XlLinkType" /> . Тип ссылки.</param>
        <summary>Изменяет ссылку с одного документа на другой.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartDataPointTrack">
      <MemberSignature Language="C#" Value="public bool ChartDataPointTrack { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ChartDataPointTrack" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ChartDataPointTrack" />
      <MemberSignature Language="VB.NET" Value="Public Property ChartDataPointTrack As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ChartDataPointTrack { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2998)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2998)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2998)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>Значение True</b> приведет к тому, что все диаграммы в текущем документе будут отслеживать фактическую точку данных, к которой она прикреплена. <b>False</b> возвращается к отслеживанию индекса точки данных. <b>Boolean</b> (<b>bool</b> in C#) Read/Write.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Charts">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Charts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Charts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Charts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Charts As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Charts { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(121)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(121)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> коллекцию, представляюную все листы диаграммы в указанной книге. Только для чтения.</summary>
        <value>To be added.</value>
        <remarks><para>При использовании этого свойства без квалификатора объекта возвращаются все листы диаграммы в активной книге.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckCompatibility">
      <MemberSignature Language="C#" Value="public bool CheckCompatibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckCompatibility" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CheckCompatibility" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckCompatibility As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckCompatibility { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2528)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2528)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2528)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Управляет автоматическим запуском средства проверки совместимости при экономии книги. Для чтения и записи.</summary>
        <value><b>Boolean</b></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckIn">
      <MemberSignature Language="C#" Value="public void CheckIn (object SaveChanges, object Comments, object MakePublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckIn([in]object SaveChanges, [in]object Comments, [in]object MakePublic) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.CheckIn(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckIn (Optional SaveChanges As Object, Optional Comments As Object, Optional MakePublic As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2051)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SaveChanges" Type="System.Object" />
        <Parameter Name="Comments" Type="System.Object" />
        <Parameter Name="MakePublic" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SaveChanges"><b>Необязательный объект</b>. <b>True</b> сохраняет изменения и проверки в документе. <b>False</b> возвращает документ в состояние возврата без сохранения редакции.</param>
        <param name="Comments"><b>Необязательный объект</b>. Позволяет пользователю вводить комментарии для регистрации для редакции книги, внося в нее данные (применяется только в том случае, <paramref name="SaveChanges" /> если имеется <b>true).</b></param>
        <param name="MakePublic"><b>Необязательный объект</b>. <b>True</b> позволяет пользователю опубликовать книгу после ее регистрации. Это приведет к отправке книги для процесса утверждения, что в конечном итоге может привести к публикации версии книги пользователям с правами только на чтение для книги (применяется, только если равно <paramref name="SaveChanges" /> <b>True).</b></param>
        <summary>Возвращает книгу с локального компьютера на сервер и устанавливает для нее режим "только чтение", чтобы ее нельзя было редактировать локально. Вызов этого метода также закроет книгу.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckInWithVersion">
      <MemberSignature Language="C#" Value="public void CheckInWithVersion (object SaveChanges, object Comments, object MakePublic, object VersionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckInWithVersion([in]object SaveChanges, [in]object Comments, [in]object MakePublic, [in]object VersionType) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.CheckInWithVersion(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckInWithVersion (Optional SaveChanges As Object, Optional Comments As Object, Optional MakePublic As Object, Optional VersionType As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2517)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SaveChanges" Type="System.Object" />
        <Parameter Name="Comments" Type="System.Object" />
        <Parameter Name="MakePublic" Type="System.Object" />
        <Parameter Name="VersionType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SaveChanges"><b>true,</b> чтобы сохранить книгу на сервере. Значение по умолчанию: <b>true</b>.</param>
        <param name="Comments">Комментарии к редакции книги, внося в нее (применяется только в том случае, если <paramref name="SaveChanges" /> установлено <b>true).</b></param>
        <param name="MakePublic"><b>true,</b> чтобы разрешить пользователю публиковать книгу после ее регистрации.</param>
        <param name="VersionType">Указывает сведения о версии для книги.</param>
        <summary>Сохраняет книгу на сервере с локального компьютера и устанавливает для локальной книги режим "только чтение", чтобы ее нельзя было редактировать локально.</summary>
        <remarks><para>Если для параметра установлено true, книга будет отправляться на утверждение, что в конечном итоге может привести к публикации версии книги пользователям с правами только на чтение для книги (применяется только в том случае, если задано <paramref name="MakePublic" /> <b></b> <paramref name="SaveChanges" /> true). <b></b> </para>
          <para>Чтобы воспользоваться преимуществами функций совместной работы, встроенных в Microsoft Excel, документы должны храниться в Microsoft SharePoint Server. </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close (object SaveChanges, object Filename, object RouteWorkbook);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close([in]object SaveChanges, [in]object Filename, [in]object RouteWorkbook) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Close(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close (Optional SaveChanges As Object, Optional Filename As Object, Optional RouteWorkbook As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(277)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SaveChanges" Type="System.Object" />
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="RouteWorkbook" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SaveChanges"><b>Необязательный объект</b>. Если в книге нет изменений, этот аргумент игнорируется. Если в книге есть изменения и она отображается в других открытых окнах, этот аргумент игнорируется. Если в книге есть изменения, но она не отображается в других открытых окнах, этот аргумент указывает, следует ли сохранить изменения, как показано в следующей таблице. ValueAction<b>True</b>сохраняет изменения в книге. Если имя файла, связанного с книгой, еще не существует, <paramref name="FileName" /> используется. Если <paramref name="FileName" /> этот запрос опущен, пользователю будет предложено вставлять имя файла.<b> False</b>не сохраняет изменения в этом файле. OmittedDisplays a dialog box asking the user whether or not to save changes.</param>
        <param name="Filename"><b>Необязательный объект</b>. Сохраните изменения под этим именем файла.</param>
        <param name="RouteWorkbook"><b>Необязательный объект</b>. Если книга не требуется маршрутить следующему получателю (если у нее нет пути маршрутации или она уже была маршрутизна), этот аргумент игнорируется. В противном случае Microsoft Excel маршрутит книгу, как показано в следующей таблице. Значение ValueMeaning<b>True</b>отправляет книгу следующему получателю. <b>False</b> Не отправляет книгу. OmittedDisplays a dialog box asking the user whether the workbook should be sent.</param>
        <summary>Закрывает объект.</summary>
        <remarks><para>Закрытие книги с помощью метода <b>Close</b> не Auto_Close макроса в книге. Используйте этот <see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" /> метод для запуска Auto_Close макроса.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeName">
      <MemberSignature Language="C#" Value="public string CodeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CodeName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CodeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CodeName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1373)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1373)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает имя кода для объекта. Только для чтения, <b>String</b>. Значение, которое вы видите в ячейке справа <b>от (Имя)</b> в окне свойств, — это имя кода выбранного объекта. Во время разработки можно изменить имя кода объекта, изменив это значение. Это свойство нельзя изменить программным путем во время запуска.</summary>
        <value>To be added.</value>
        <remarks><para>Имя кода для объекта можно использовать в качестве имени выражения, возвращаемого объектом.</para>
          <para>Возможно, имя листа отличается от имени кода. При создании листа имя листа и имя кода одинаковы, но изменение имени листа не изменяет имя кода, а изменение имени кода (с помощью окна свойств в редакторе Visual Basic) не изменяет имя листа.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Colors">
      <MemberSignature Language="C#" Value="public object Colors[object Index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Colors(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Colors(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Property Colors(Optional Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Colors[System::Object ^] { System::Object ^ get(System::Object ^ Index); void set(System::Object ^ Index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(286)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(286)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(286)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><b>Необязательный объект</b>. Номер цвета (от 1 до 56). Если этот аргумент не указан, этот метод возвращает массив, содержащий все 56 цветов в палитре.</param>
        <summary>Возвращает или задает цвета в палитре для книги. Палитра включает 56 записей, каждая из которых представлена значением RGB. Объект <b>read/write</b>.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandBars">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CommandBars CommandBars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.CommandBars CommandBars" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CommandBars" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandBars As CommandBars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::CommandBars ^ CommandBars { Microsoft::Office::Core::CommandBars ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1439)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1439)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CommandBars</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект, который представляет командные полосы <see cref="P:Microsoft.Office.Interop.Excel._Workbook.CommandBars" /> Microsoft Excel. Только для чтения.</summary>
        <value>To be added.</value>
        <remarks><para>Если книга внедрена в другое приложение и активирована пользователем, дважды щелкнув книгу, при использовании этого свойства с объектом <b>Workbook</b> возвращается набор полос команд Microsoft Excel, доступных в другом приложении. В остальных случаях использование этого свойства с <b>объектом Workbook</b> не возвращает <b>ничего.</b></para>
          <para>Программный способ возврата набора полос команд, подключенных к книге, не существует.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Comments">
      <MemberSignature Language="C#" Value="public string Comments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Comments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Comments" />
      <MemberSignature Language="VB.NET" Value="Public Property Comments As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Comments { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(575)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(575)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(575)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Comments" /> коллекцию, представляюную все комментарии для указанного таблицы. Только для чтения.</summary>
        <value>Возвращает <see cref="T:System.String" /> .</value>
        <remarks>To be added.</remarks>
        <example><para>В этом примере удаляются все комментарии, добавленные к активному листу Сехиной.</para>
          <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code></example>
        <example><para>В этом примере удаляются все комментарии, добавленные к активному листу Сехиной.</para>
          <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code></example>
        <example><para>В этом примере удаляются все комментарии, добавленные к активному листу Сехиной.</para>
          <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code></example>
      </Docs>
    </Member>
    <Member MemberName="ConflictResolution">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlSaveConflictResolution ConflictResolution { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlSaveConflictResolution ConflictResolution" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ConflictResolution" />
      <MemberSignature Language="VB.NET" Value="Public Property ConflictResolution As XlSaveConflictResolution" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlSaveConflictResolution ConflictResolution { Microsoft::Office::Interop::Excel::XlSaveConflictResolution get(); void set(Microsoft::Office::Interop::Excel::XlSaveConflictResolution value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1175)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1175)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1175)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlSaveConflictResolution</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает способ разрешения конфликтов при обновлении общей книги. Чтение и написание <see cref="T:Microsoft.Office.Interop.Excel.XlSaveConflictResolution" /> .</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Connections">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Connections Connections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Connections Connections" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Connections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connections As Connections" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Connections ^ Connections { Microsoft::Office::Interop::Excel::Connections ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2513)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2513)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Connections</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Свойство устанавливает связь между книгой и ODBC или источником данных OLEDB и обновляет данные без запроса <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Connections" /> пользователя. Только для чтения.</summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.Connections" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionsDisabled">
      <MemberSignature Language="C#" Value="public bool ConnectionsDisabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConnectionsDisabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ConnectionsDisabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConnectionsDisabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConnectionsDisabled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2536)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2536)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Отключает внешние подключения или ссылки в книге. Только для чтения</summary>
        <value><b>Boolean</b></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Container">
      <MemberSignature Language="C#" Value="public object Container { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Container" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Container" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Container As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Container { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1190)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1190)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект, который представляет приложение-контейнер для указанного объекта OLE. Объект только для <b>чтения.</b></summary>
        <value>To be added.</value>
        <remarks><para>Это свойство позволяет получить доступ к объектной модели приложения-контейнера, если книга Excel открыта в хост-приложении, например Microsoft Internet Explorer.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentTypeProperties">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MetaProperties ContentTypeProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.MetaProperties ContentTypeProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ContentTypeProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentTypeProperties As MetaProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MetaProperties ^ ContentTypeProperties { Microsoft::Office::Core::MetaProperties ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2512)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2512)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MetaProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает <see cref="T:Microsoft.Office.Core.MetaProperties" /> коллекцию, описываемую метаданные, хранимые в книге. Только для чтения.</summary>
        <value><b>MetaProperties</b></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBackup">
      <MemberSignature Language="C#" Value="public bool CreateBackup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CreateBackup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CreateBackup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CreateBackup As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CreateBackup { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(287)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(287)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>Имеет</b> true, если файл резервной копии создается при его экономии. Только для чтения, <b>Boolean</b>.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает константу в <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> enumeration, которая указывает приложение, в котором был создан этот объект. Если объект был создан в Microsoft Excel, это свойство возвращает строку XCEL, эквивалентную 5843454C. Только для <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> чтения.</summary>
        <value>To be added.</value>
        <remarks><para>Свойство <b>Creator</b> предназначено для использования в Microsoft Excel для Macintosh, где каждое приложение имеет четырех символьный код создателя. Например, в Microsoft Excel есть код создателя XCEL.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomDocumentProperties">
      <MemberSignature Language="C#" Value="public object CustomDocumentProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CustomDocumentProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CustomDocumentProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomDocumentProperties As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CustomDocumentProperties { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1177)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1177)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает коллекцию, представляюную все настраиваемые свойства документа для <see cref="T:Microsoft.Office.Core.DocumentProperties" /> указанной книги.</summary>
        <value>To be added.</value>
        <remarks><para>Это свойство возвращает всю коллекцию настраиваемого свойства документа. Используйте этот метод для возврата одного члена коллекции (объекта), указав либо имя свойства, либо индекс коллекции <see cref="P:Microsoft.Office.Core.DocumentProperties.Item(System.Object)" /> <see cref="T:Microsoft.Office.Core.DocumentProperty" /> (в качестве числа).</para>
          <para>Метод <b>Item</b> является методом по умолчанию для <b>коллекции DocumentProperties.</b></para>
          <para>Используйте свойство для возврата коллекции встроенных <see cref="P:Microsoft.Office.Interop.Excel._Workbook.BuiltinDocumentProperties" /> свойств документа.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomViews">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CustomViews CustomViews { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.CustomViews CustomViews" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CustomViews" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomViews As CustomViews" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::CustomViews ^ CustomViews { Microsoft::Office::Interop::Excel::CustomViews ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1456)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1456)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CustomViews</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает <see cref="T:Microsoft.Office.Interop.Excel.CustomViews" /> коллекцию, представляюную все настраиваемые представления для книги.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomXMLParts">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CustomXMLParts CustomXMLParts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.CustomXMLParts CustomXMLParts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CustomXMLParts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomXMLParts As CustomXMLParts" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::CustomXMLParts ^ CustomXMLParts { Microsoft::Office::Core::CustomXMLParts ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2530)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2530)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CustomXMLParts</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает A. <see cref="T:Microsoft.Office.Core.CustomXMLParts" /> коллекция, представляюная пользовательский XML-xml в хранилище данных XML. Только для чтения.</summary>
        <value><b>CustomXMLParts</b></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Date1904">
      <MemberSignature Language="C#" Value="public bool Date1904 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Date1904" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Date1904" />
      <MemberSignature Language="VB.NET" Value="Public Property Date1904 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Date1904 { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(403)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(403)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(403)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>True,</b> если книга использует систему дат 1904. Для чтения и записи, <b>Boolean</b>.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultPivotTableStyle">
      <MemberSignature Language="C#" Value="public object DefaultPivotTableStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultPivotTableStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DefaultPivotTableStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultPivotTableStyle As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DefaultPivotTableStyle { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2527)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2527)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2527)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Указывает стиль таблицы из коллекции, используемой в качестве стиля по умолчанию для <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> список. Для чтения и записи.</summary>
        <value><b>Object</b></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSlicerStyle">
      <MemberSignature Language="C#" Value="public object DefaultSlicerStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultSlicerStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DefaultSlicerStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultSlicerStyle As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DefaultSlicerStyle { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2868)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2868)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2868)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает стиль из объекта, который используется в качестве стиля <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> по умолчанию для срезов.</summary>
        <value>Стиль <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> объекта, который используется в качестве стиля по умолчанию для срезов.</value>
        <remarks><para>Для чтения и записи.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultTableStyle">
      <MemberSignature Language="C#" Value="public object DefaultTableStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultTableStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DefaultTableStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultTableStyle As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DefaultTableStyle { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2526)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2526)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2526)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Указывает стиль таблицы из <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> коллекции, используемой в качестве таблицы TableStyle по умолчанию. Чтение и запись</summary>
        <value><b>Object</b></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultTimelineStyle">
      <MemberSignature Language="C#" Value="public object DefaultTimelineStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultTimelineStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DefaultTimelineStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultTimelineStyle As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DefaultTimelineStyle { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3060)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3060)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(3060)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Имя стиля среза книги по умолчанию. <b>Object</b> (<b>object</b> in C#). Чтение и запись</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteNumberFormat">
      <MemberSignature Language="C#" Value="public void DeleteNumberFormat (string NumberFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteNumberFormat([in]string NumberFormat) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.DeleteNumberFormat(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteNumberFormat (NumberFormat As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteNumberFormat(System::String ^ NumberFormat);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(397)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="NumberFormat" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="NumberFormat">Обязательный атрибут типа <b>String</b>. Имена удаляемого формата номеров.</param>
        <summary>Удаляет пользовательский формат номеров из книги.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DialogSheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets DialogSheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets DialogSheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DialogSheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DialogSheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ DialogSheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(764)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(764)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Зарезервировано для внутреннего использования.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDrawingObjects">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlDisplayDrawingObjects DisplayDrawingObjects { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlDisplayDrawingObjects DisplayDrawingObjects" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DisplayDrawingObjects" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayDrawingObjects As XlDisplayDrawingObjects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlDisplayDrawingObjects DisplayDrawingObjects { Microsoft::Office::Interop::Excel::XlDisplayDrawingObjects get(); void set(Microsoft::Office::Interop::Excel::XlDisplayDrawingObjects value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(404)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(404)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(404)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlDisplayDrawingObjects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает отображение фигур. Чтение и написание <see cref="T:Microsoft.Office.Interop.Excel.XlDisplayDrawingObjects" /> .</summary>
        <value>To be added.</value>
        <remarks><para>Может быть одной из следующих констант XlDisplayDrawingObjects.</para>
          <list type="table">
            <item>
              <term>
                <paramref name="xlDisplayShapes" />
              </term>
              <description>Показать все фигуры.</description>
            </item>
            <item>
              <term>
                <paramref name="xlPlaceholders" />
              </term>
              <description>Показывать только замещего.</description>
            </item>
            <item>
              <term>
                <paramref name="xlHide" />
              </term>
              <description>Скрыть все фигуры.</description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayInkComments">
      <MemberSignature Language="C#" Value="public bool DisplayInkComments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayInkComments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DisplayInkComments" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayInkComments As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayInkComments { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2276)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2276)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2276)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>Boolean</b> value that determines whether ink comments are displayed in the workbook. Для чтения и записи, <b>Boolean</b>.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DocumentInspectors">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.DocumentInspectors DocumentInspectors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.DocumentInspectors DocumentInspectors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DocumentInspectors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentInspectors As DocumentInspectors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::DocumentInspectors ^ DocumentInspectors { Microsoft::Office::Core::DocumentInspectors ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2521)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2521)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.DocumentInspectors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает <see cref="T:Microsoft.Office.Core.DocumentInspectors" /> коллекцию, представляюную модули инспектора документов для указанной книги. Только для чтения.</summary>
        <value><b>DocumentInspectors</b></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DocumentLibraryVersions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.DocumentLibraryVersions DocumentLibraryVersions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.DocumentLibraryVersions DocumentLibraryVersions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DocumentLibraryVersions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentLibraryVersions As DocumentLibraryVersions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::DocumentLibraryVersions ^ DocumentLibraryVersions { Microsoft::Office::Core::DocumentLibraryVersions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2274)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2274)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.DocumentLibraryVersions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает коллекцию, представляющую коллекцию версий общей книги с включенной версией и хранящуюся в библиотеке документов <see cref="P:Microsoft.Office.Interop.Excel._Workbook.DocumentLibraryVersions" /> на сервере.</summary>
        <value>To be added.</value>
        <remarks><para>Функции XML, за исключением сохранения файлов в формате электронных таблиц XML, доступны только в Microsoft Office Professional Edition 2003 и Microsoft Office Excel 2003.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DoNotPromptForConvert">
      <MemberSignature Language="C#" Value="public bool DoNotPromptForConvert { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoNotPromptForConvert" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DoNotPromptForConvert" />
      <MemberSignature Language="VB.NET" Value="Public Property DoNotPromptForConvert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DoNotPromptForConvert { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2541)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2541)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2541)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает, должен ли пользователь получить запрос на преобразование книги, если книга содержит функции, которые не поддерживаются версиями Excel более ранних short_Excel2007. Чтение и запись</summary>
        <value>Boolean</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy16">
      <MemberSignature Language="C#" Value="public void Dummy16 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dummy16() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Dummy16" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dummy16 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dummy16();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2048)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Зарезервировано для внутреннего использования.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy17">
      <MemberSignature Language="C#" Value="public void Dummy17 (int calcid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dummy17([in]int32 calcid) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Dummy17(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dummy17 (calcid As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dummy17(int calcid);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2044)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="calcid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="calcid">To be added.</param>
        <summary>Зарезервировано для внутреннего использования.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy26">
      <MemberSignature Language="C#" Value="public void Dummy26 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dummy26() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Dummy26" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dummy26 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dummy26();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2869)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy27">
      <MemberSignature Language="C#" Value="public void Dummy27 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dummy27() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Dummy27" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dummy27 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dummy27();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2870)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableAutoRecover">
      <MemberSignature Language="C#" Value="public bool EnableAutoRecover { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableAutoRecover" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.EnableAutoRecover" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableAutoRecover As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableAutoRecover { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2049)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2049)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2049)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Сохраняет измененные файлы всех форматов с интервалом времени. Для чтения и записи, <b>Boolean</b>.</summary>
        <value>To be added.</value>
        <remarks><para>В случае сбой Microsoft Excel, сбой системы или неправильное завершение работы системы (не позволяя Excel сохранять измененные файлы) открываются файлы, и у пользователя есть возможность сохранить изменения, которые в противном случае были бы потеряны. Когда пользователь перезапускает Excel, откроется окно восстановления документа, в результате этого пользователь сможет восстановить файлы, над которые он работал. Установка для этого <b>свойства значения True</b> (по умолчанию) включает эту функцию.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableConnections">
      <MemberSignature Language="C#" Value="public void EnableConnections ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnableConnections() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.EnableConnections" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnableConnections ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnableConnections();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2537)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Этот метод позволяет разработчикам программно включить подключения к данным в книге <see cref="M:Microsoft.Office.Interop.Excel._Workbook.EnableConnections" /> для пользователя.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptionProvider">
      <MemberSignature Language="C#" Value="public string EncryptionProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EncryptionProvider" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.EncryptionProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property EncryptionProvider As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EncryptionProvider { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2540)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2540)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2540)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает <b>строку,</b> указывав имя поставщика шифрования алгоритма, 1st_Excel12 при шифровании документов. Для чтения и записи.</summary>
        <value><b>s</b></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndReview">
      <MemberSignature Language="C#" Value="public void EndReview ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndReview() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.EndReview" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndReview ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndReview();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2058)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Завершает проверку файла, отправленного для проверки с помощью <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SendForReview(System.Object,System.Object,System.Object,System.Object)" /> этого метода.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnvelopeVisible">
      <MemberSignature Language="C#" Value="public bool EnvelopeVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnvelopeVisible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.EnvelopeVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property EnvelopeVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnvelopeVisible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1824)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1824)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1824)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>True,</b> если заглавная панель композиции электронной почты и панель инструментов конверта видимы. Для чтения и записи, <b>Boolean</b>.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Excel4IntlMacroSheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Excel4IntlMacroSheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Excel4IntlMacroSheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Excel4IntlMacroSheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Excel4IntlMacroSheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Excel4IntlMacroSheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(581)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(581)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает коллекцию, представляюную все международные листы макроса <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> Microsoft Excel 4.0 в указанной книге. Только для чтения.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Excel4MacroSheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Excel4MacroSheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Excel4MacroSheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Excel4MacroSheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Excel4MacroSheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Excel4MacroSheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(579)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(579)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает коллекцию, представляюную все листы макроса <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> Microsoft Excel 4.0 в указанной книге. Только для чтения.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Excel8CompatibilityMode">
      <MemberSignature Language="C#" Value="public bool Excel8CompatibilityMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Excel8CompatibilityMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Excel8CompatibilityMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Excel8CompatibilityMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Excel8CompatibilityMode { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2535)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2535)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Это свойство позволяет разработчикам проверить, находится ли книга в <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Excel8CompatibilityMode" /> режиме совместимости. Только для чтения</summary>
        <value><b>Boolean</b></value>
        <remarks><para>В режиме совместимости некоторые функции отключены или выполняются по-разному.  Например, в short_Excel2007 больше строк и столбцов, чем в предыдущих версиях Excel. Кроме того, структурированные ссылки доступны в short_Excel2007.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ExclusiveAccess">
      <MemberSignature Language="C#" Value="public bool ExclusiveAccess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ExclusiveAccess() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ExclusiveAccess" />
      <MemberSignature Language="VB.NET" Value="Public Function ExclusiveAccess () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ExclusiveAccess();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1168)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Назначает текущему пользователю монопольный доступ к книге, открытой как общий список.</summary>
        <returns>To be added.</returns>
        <remarks><para>Метод <b>ExclusiveAccess</b> сохраняет все изменения, внесенные в книгу, и требует, чтобы другие пользователи, у которых открыта книга, могли сохранить изменения в другом файле.</para>
          <para>Если указанная книга не открыта как общий список, этот метод не работает. Чтобы определить, открыта ли книга как общий список, используйте <see cref="P:Microsoft.Office.Interop.Excel._Workbook.MultiUserEditing" /> свойство.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportAsFixedFormat">
      <MemberSignature Language="C#" Value="public void ExportAsFixedFormat (Microsoft.Office.Interop.Excel.XlFixedFormatType Type, object Filename, object Quality, object IncludeDocProperties, object IgnorePrintAreas, object From, object To, object OpenAfterPublish, object FixedFormatExtClassPtr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportAsFixedFormat([in]valuetype Microsoft.Office.Interop.Excel.XlFixedFormatType Type, [in]object Filename, [in]object Quality, [in]object IncludeDocProperties, [in]object IgnorePrintAreas, [in]object From, [in]object To, [in]object OpenAfterPublish, [in]object FixedFormatExtClassPtr) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExportAsFixedFormat (Type As XlFixedFormatType, Optional Filename As Object, Optional Quality As Object, Optional IncludeDocProperties As Object, Optional IgnorePrintAreas As Object, Optional From As Object, Optional To As Object, Optional OpenAfterPublish As Object, Optional FixedFormatExtClassPtr As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2493)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlFixedFormatType" />
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="Quality" Type="System.Object" />
        <Parameter Name="IncludeDocProperties" Type="System.Object" />
        <Parameter Name="IgnorePrintAreas" Type="System.Object" />
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="OpenAfterPublish" Type="System.Object" />
        <Parameter Name="FixedFormatExtClassPtr" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">Может иметь любой <see cref="F:Microsoft.Office.Interop.Excel.XlFixedFormatType.xlTypePDF" /> или <see cref="F:Microsoft.Office.Interop.Excel.XlFixedFormatType.xlTypeXPS" /> .</param>
        <param name="Filename"><b>Строка,</b> которая указывает имя файла, который необходимо сохранить. Вы можете включить полный или короткий путь.  Excel2007 сохраняет файл в текущей папке.</param>
        <param name="Quality">Может быть установлено как в том, <see cref="F:Microsoft.Office.Interop.Excel.XlFixedFormatQuality.xlQualityStandard" /> так и <see cref="F:Microsoft.Office.Interop.Excel.XlFixedFormatQuality.xlQualityMinimum" /> в .</param>
        <param name="IncludeDocProperties">Установите <b>true,</b> чтобы указать, что свойства документа <b></b> должны быть включены или иметь false, чтобы указать, что они опущены.</param>
        <param name="IgnorePrintAreas">Если <b>задано true,</b>игнорируются все области печати, заданные при публикации. Если <b>задано false,</b>будут использовать области печати, заданные при публикации.</param>
        <param name="From">Номер страницы, на которой нужно начать публикацию. Если этот аргумент опущен, публикация начинается с начала.</param>
        <param name="To">Номер последней страницы для публикации. Если этот аргумент опущен, публикация заканчивается последней страницей</param>
        <param name="OpenAfterPublish">Если <b>задано true,</b> файл отображается в представлении после его публикации. Если <b>задано false,</b> файл публикуется, но не отображается.</param>
        <param name="FixedFormatExtClassPtr">Указатель на класс <b>FixedFormatExt.</b></param>
        <summary>Этот <see cref="M:Microsoft.Office.Interop.Excel._Workbook.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> метод используется для публикации книги в формате PDF или XPS.</summary>
        <remarks>To be added.</remarks>
        <example><para>В следующем примере создается PDF-файл со стандартным качеством в каталоге текущего файла и после публикации файла отображается в просматриваемом файле.</para>
          <para>
            <b>Примечание.</b>Если надстройка PDF в настоящее время не установлена, произойдет ошибка.</para></example>
      </Docs>
    </Member>
    <Member MemberName="FileFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlFileFormat FileFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlFileFormat FileFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.FileFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileFormat As XlFileFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlFileFormat FileFormat { Microsoft::Office::Interop::Excel::XlFileFormat get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(288)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(288)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlFileFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает формат файла и/или тип книги. Только для <see cref="T:Microsoft.Office.Interop.Excel.XlFileFormat" /> чтения.</summary>
        <value>To be added.</value>
        <remarks><para>Некоторые из этих констант могут быть недоступны вам, в зависимости от выбранной или установленной языковой поддержки (например, для английского (США).</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Final">
      <MemberSignature Language="C#" Value="public bool Final { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Final" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Final" />
      <MemberSignature Language="VB.NET" Value="Public Property Final As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Final { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2531)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2531)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2531)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает <b>boolean,</b> который указывает, является ли книга последней. Чтение и запись</summary>
        <value><b>Boolean</b></value>
        <remarks><para>Установка значения <b>True</b> пометит книгу как окончательную, сообщает получателям (если таковой имеется) о том, что книга является последней, и устанавливает для нее значение "только для чтения".</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FollowHyperlink">
      <MemberSignature Language="C#" Value="public void FollowHyperlink (string Address, object SubAddress, object NewWindow, object AddHistory, object ExtraInfo, object Method, object HeaderInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FollowHyperlink([in]string Address, [in]object SubAddress, [in]object NewWindow, [in]object AddHistory, [in]object ExtraInfo, [in]object Method, [in]object HeaderInfo) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.FollowHyperlink(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FollowHyperlink (Address As String, Optional SubAddress As Object, Optional NewWindow As Object, Optional AddHistory As Object, Optional ExtraInfo As Object, Optional Method As Object, Optional HeaderInfo As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1470)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Address" Type="System.String" />
        <Parameter Name="SubAddress" Type="System.Object" />
        <Parameter Name="NewWindow" Type="System.Object" />
        <Parameter Name="AddHistory" Type="System.Object" />
        <Parameter Name="ExtraInfo" Type="System.Object" />
        <Parameter Name="Method" Type="System.Object" />
        <Parameter Name="HeaderInfo" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Address">Обязательный атрибут типа <b>String</b>. Адрес целевого документа.</param>
        <param name="SubAddress"><b>Необязательный объект</b>. Расположение в целевом документе. Значение по умолчанию — пустая строка.</param>
        <param name="NewWindow"><b>Необязательный объект</b>. <b>True,</b> чтобы отобразить конечное приложение в новом окне. Значение по умолчанию — <b>False</b>.</param>
        <param name="AddHistory"><b>Необязательный объект</b>. Не используется. Зарезервировано для последующего использования.</param>
        <param name="ExtraInfo"><b>Необязательный объект</b>. Строка или массив byte, который указывает дополнительные сведения для HTTP, которые будут использовать для разрешения гиперссылки. Например, можно указать координаты карты изображения, содержимое формы или имя <paramref name="ExtraInfo" /> файла FAT.</param>
        <param name="Method"><b>Необязательный объект</b>. Указывает способ <paramref name="ExtraInfo" /> крепится. Может быть одной из <see cref="T:Microsoft.Office.Core.MsoExtraInfoMethod" /> констант.</param>
        <param name="HeaderInfo"><b>Необязательный объект</b>. Строка, которая указывает сведения о загонах для HTTP-запроса. Значение по умолчанию: пустая строка.</param>
        <summary>Отображает кэшный документ, если он уже загружен. В противном случае этот метод разрешит гиперссылки, загрузит целевой документ и отобразит документ в соответствующем приложении.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForceFullCalculation">
      <MemberSignature Language="C#" Value="public bool ForceFullCalculation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ForceFullCalculation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ForceFullCalculation" />
      <MemberSignature Language="VB.NET" Value="Public Property ForceFullCalculation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ForceFullCalculation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2542)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2542)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2542)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Привнося полное вычисление книги. Для чтения и записи.</summary>
        <value><b>Boolean</b></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForwardMailer">
      <MemberSignature Language="C#" Value="public void ForwardMailer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForwardMailer() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ForwardMailer" />
      <MemberSignature Language="VB.NET" Value="Public Sub ForwardMailer ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ForwardMailer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(973)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Вы запросили справку по ключевому слову Visual Basic, используемом только в Macintosh. Сведения об этом ключевом слове можно найти в справочной справке по языку, включенной в Microsoft Office Macintosh Edition.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.FullName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(289)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(289)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает имя объекта, включая его путь на диске, в качестве строки. Только для чтения, <b>String</b>.</summary>
        <value>To be added.</value>
        <remarks><para>Это свойство эквивалентно свойству, за которым следует текущий сепаратор файловой системы, за которым <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Path" /> следует <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Name" /> свойство.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FullNameURLEncoded">
      <MemberSignature Language="C#" Value="public string FullNameURLEncoded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullNameURLEncoded" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.FullNameURLEncoded" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullNameURLEncoded As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullNameURLEncoded { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1927)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1927)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает <b>строку,</b> указывающее имя объекта, включая его путь на диске, в качестве строки. Только для чтения.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowTasks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.WorkflowTasks GetWorkflowTasks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Core.WorkflowTasks GetWorkflowTasks() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.GetWorkflowTasks" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWorkflowTasks () As WorkflowTasks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Core::WorkflowTasks ^ GetWorkflowTasks();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2522)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.WorkflowTasks</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает коллекцию объектов <see cref="T:Microsoft.Office.Core.WorkflowTask" /> для указанной книги.</summary>
        <returns><see cref="T:Microsoft.Office.Core.WorkflowTasks" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowTemplates">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.WorkflowTemplates GetWorkflowTemplates ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Core.WorkflowTemplates GetWorkflowTemplates() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.GetWorkflowTemplates" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWorkflowTemplates () As WorkflowTemplates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Core::WorkflowTemplates ^ GetWorkflowTemplates();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2523)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.WorkflowTemplates</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает коллекцию объектов <see cref="T:Microsoft.Office.Core.WorkflowTemplate" /> для указанной книги.</summary>
        <returns><see cref="T:Microsoft.Office.Core.WorkflowTemplates" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasMailer">
      <MemberSignature Language="C#" Value="public bool HasMailer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasMailer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.HasMailer" />
      <MemberSignature Language="VB.NET" Value="Public Property HasMailer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasMailer { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(976)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(976)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(976)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Зарезервировано для внутреннего использования.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPassword">
      <MemberSignature Language="C#" Value="public bool HasPassword { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasPassword" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.HasPassword" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasPassword As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasPassword { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(290)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(290)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>Имеет</b> true, если в книге есть пароль защиты. Только для чтения, <b>Boolean</b>.</summary>
        <value>To be added.</value>
        <remarks><para>С помощью этого метода можно назначить книге пароль <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> защиты.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="HasRoutingSlip">
      <MemberSignature Language="C#" Value="public bool HasRoutingSlip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasRoutingSlip" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.HasRoutingSlip" />
      <MemberSignature Language="VB.NET" Value="Public Property HasRoutingSlip As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasRoutingSlip { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(950)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(950)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(950)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>Имеет</b> true, если книга имеет маршрутику. Для чтения и записи, <b>Boolean</b>.</summary>
        <value>To be added.</value>
        <remarks><para>При установке для этого <b>свойства значения True</b> создается скольжение маршрутки со значениями по умолчанию. При установке для свойства <b>свойства False</b> удаляется потайка маршрутки.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="HasVBProject">
      <MemberSignature Language="C#" Value="public bool HasVBProject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasVBProject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.HasVBProject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasVBProject As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasVBProject { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2529)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2529)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение <b>boolean,</b> которое представляет, есть ли в книге присоединенный проект Microsoft Visual Basic для приложений. Только для чтения.</summary>
        <value><b>Boolean</b></value>
        <remarks><para>Это свойство наиболее полезно при определении того, требуется ли сохранить книгу в формате файлов с поддержкой макроса. Если сохранить их в другом формате, макрос и проекты кода, содержащиеся в документе, могут быть потеряны.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="HighlightChangesOnScreen">
      <MemberSignature Language="C#" Value="public bool HighlightChangesOnScreen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HighlightChangesOnScreen" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.HighlightChangesOnScreen" />
      <MemberSignature Language="VB.NET" Value="Public Property HighlightChangesOnScreen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HighlightChangesOnScreen { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1461)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1461)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1461)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>True,</b> если изменения в общей книге выделены на экране. Для чтения и записи, <b>Boolean</b>.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HighlightChangesOptions">
      <MemberSignature Language="C#" Value="public void HighlightChangesOptions (object When, object Who, object Where);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void HighlightChangesOptions([in]object When, [in]object Who, [in]object Where) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.HighlightChangesOptions(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub HighlightChangesOptions (Optional When As Object, Optional Who As Object, Optional Where As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1458)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="When" Type="System.Object" />
        <Parameter Name="Who" Type="System.Object" />
        <Parameter Name="Where" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="When"><b>Необязательный объект</b>. Изменения, которые показываются. Может быть одной из следующих констант <b>XlHighlightChangesTime:</b> <b>xlSinceMyLastSave,</b> <b>xlAllChanges</b>или <b>xlNotYetReviewed.</b></param>
        <param name="Who"><b>Необязательный объект</b>. Пользователь или пользователи, изменения которых показаны. Может быть "Все", "Все, кроме меня" или имя одного из пользователей общей книги.</param>
        <param name="Where"><b>Необязательный объект</b>. Ссылка на диапазон в стиле A1, в которую указывается область для проверки на внесение изменений.</param>
        <summary>Управляет тем, как изменения показываются в общей книге.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HTMLProject">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.HTMLProject HTMLProject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.HTMLProject HTMLProject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.HTMLProject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HTMLProject As HTMLProject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::HTMLProject ^ HTMLProject { Microsoft::Office::Core::HTMLProject ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1823)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1823)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.HTMLProject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект в указанной книге, который представляет ветвь проекта верхнего уровня, как в обозревателе <see cref="P:Microsoft.Office.Interop.Excel._Workbook.HTMLProject" /> проектов в редакторе скриптов Майкрософт. Только для чтения.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IconSets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.IconSets IconSets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.IconSets IconSets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.IconSets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IconSets As IconSets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::IconSets ^ IconSets { Microsoft::Office::Interop::Excel::IconSets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2539)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2539)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.IconSets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Это свойство используется для фильтрации данных в книге на основе значка ячейки из <see cref="T:Microsoft.Office.Interop.Excel.IconSets" /> коллекции. Только для чтения.</summary>
        <value><b>IconSets</b></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InactiveListBorderVisible">
      <MemberSignature Language="C#" Value="public bool InactiveListBorderVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InactiveListBorderVisible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.InactiveListBorderVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property InactiveListBorderVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InactiveListBorderVisible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2275)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2275)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2275)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>Boolean</b> value that specifies whether list borders are visible when a list is not active. Возвращает <b>true,</b> если граница видна. Для чтения и записи, <b>Boolean</b>.</summary>
        <value>To be added.</value>
        <remarks><para>Установка этого свойства повлияет на все списки, которые находятся на листе.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAddin">
      <MemberSignature Language="C#" Value="public bool IsAddin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAddin" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.IsAddin" />
      <MemberSignature Language="VB.NET" Value="Public Property IsAddin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAddin { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1445)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1445)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1445)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>Имеет</b> true, если книга работает как надстройка. Для чтения и записи, <b>Boolean</b>.</summary>
        <value>To be added.</value>
        <remarks><para>Если для этого свойства <b>установлено true,</b>книга имеет следующие характеристики:</para>
          <list type="bullet">
            <item>
              <description>Вам не будет предложено сохранить книгу, если во время ее открытия были внесены изменения.</description>
            </item>
            <item>
              <description>Окно книги не будет видно.</description>
            </item>
            <item>
              <description>Макрос в книге не будет отображаться в диалоговом окне макроса (отображается путем нажатия указателя на макрос в меню "Инструменты" и щелчка по макросам).</description>
            </item>
            <item>
              <description>Макрос в книге по-прежнему можно запускать в диалоговом окне макроса, даже если они не видны. Кроме того, имена макроса не должны быть квалифицироваться именем книги.</description>
            </item>
            <item>
              <description>Удерживая клавишу SHIFT при открываемой книге, это не влияет на работу.</description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInplace">
      <MemberSignature Language="C#" Value="public bool IsInplace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInplace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.IsInplace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInplace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInplace { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1769)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1769)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>Имеет</b> true, если указанная книга редактируется на месте. <b>False,</b> если книга была открыта в Microsoft Excel для редактирования. Только для чтения, <b>Boolean</b>.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepChangeHistory">
      <MemberSignature Language="C#" Value="public bool KeepChangeHistory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepChangeHistory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.KeepChangeHistory" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepChangeHistory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepChangeHistory { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1462)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1462)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1462)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>Имеет</b> true, если для общей книги включено отслеживание изменений. Для чтения и записи, <b>Boolean</b>.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Keywords">
      <MemberSignature Language="C#" Value="public string Keywords { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Keywords" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Keywords" />
      <MemberSignature Language="VB.NET" Value="Public Property Keywords As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Keywords { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(577)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(577)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(577)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Зарезервировано для внутреннего использования.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkInfo">
      <MemberSignature Language="C#" Value="public object LinkInfo (string Name, Microsoft.Office.Interop.Excel.XlLinkInfo LinkInfo, object Type, object EditionRef);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object LinkInfo([in]string Name, [in]valuetype Microsoft.Office.Interop.Excel.XlLinkInfo LinkInfo, [in]object Type, [in]object EditionRef) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.LinkInfo(System.String,Microsoft.Office.Interop.Excel.XlLinkInfo,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function LinkInfo (Name As String, LinkInfo As XlLinkInfo, Optional Type As Object, Optional EditionRef As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(807)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="LinkInfo" Type="Microsoft.Office.Interop.Excel.XlLinkInfo" />
        <Parameter Name="Type" Type="System.Object" />
        <Parameter Name="EditionRef" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name"><b>Необязательная строка.</b></param>
        <param name="LinkInfo">Обязательное <see cref="T:Microsoft.Office.Interop.Excel.XlLinkInfo" /> . Тип возвращаемой информации.</param>
        <param name="Type">Необязательный <see cref="T:Microsoft.Office.Interop.Excel.XlLinkInfoType" /> . Тип возвращаемой ссылки.</param>
        <param name="EditionRef"><b>Необязательный объект</b>. Если ссылка является выпуском, этот аргумент указывает ссылку на выпуск в качестве строки в стиле R1C1. Этот аргумент необходим, если в книге имеется несколько издателей или подписчиков с одинаковыми именами.</param>
        <summary>Возвращает дату ссылки и состояние обновления. <b>Объект</b>.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkSources">
      <MemberSignature Language="C#" Value="public object LinkSources (object Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object LinkSources([in]object Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function LinkSources (Optional Type As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(808)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">Необязательный <see cref="T:Microsoft.Office.Interop.Excel.XlLink" /> . Тип возвращаемой ссылки.</param>
        <summary>Возвращает массив ссылок в книге. Имена в массиве — это имена связанных документов, выпусков, DDE- или OLE-серверов. Возвращает <b>пустое,</b> если ссылок нет. <b>Объект</b>.</summary>
        <returns>To be added.</returns>
        <remarks><para>Формат массива — это одномерный массив для всех типов, кроме издателя и подписчика. Возвращенные строки содержат имя источника ссылки в соответствующей нотации для типа ссылки. Например, ссылки DDE используют "Сервер| Документ! Синтаксис item.</para>
          <para>Для ссылок издателя и подписчика возвращаемая массив является двумерной. Первый столбец массива содержит имена выпуска, а второй столбец содержит ссылки на выпуски в виде текста.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ListChangesOnNewSheet">
      <MemberSignature Language="C#" Value="public bool ListChangesOnNewSheet { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ListChangesOnNewSheet" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ListChangesOnNewSheet" />
      <MemberSignature Language="VB.NET" Value="Public Property ListChangesOnNewSheet As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ListChangesOnNewSheet { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1463)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1463)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1463)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>Имеет</b> true, если изменения в общей книге показаны на отдельном сайте. Для чтения и записи, <b>Boolean</b>.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LockServerFile">
      <MemberSignature Language="C#" Value="public void LockServerFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LockServerFile() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.LockServerFile" />
      <MemberSignature Language="VB.NET" Value="Public Sub LockServerFile ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LockServerFile();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2520)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Блокирует книгу на сервере, чтобы предотвратить изменение.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Mailer">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Mailer Mailer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Mailer Mailer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Mailer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Mailer As Mailer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Mailer ^ Mailer { Microsoft::Office::Interop::Excel::Mailer ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(979)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(979)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Mailer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Вы запросили справку по ключевому слову Visual Basic, используемом только в Macintosh. Сведения об этом ключевом слове можно найти в справочной справке по языку, включенной в Microsoft Office Macintosh Edition.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeWorkbook">
      <MemberSignature Language="C#" Value="public void MergeWorkbook (object Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MergeWorkbook([in]object Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.MergeWorkbook(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MergeWorkbook (Filename As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MergeWorkbook(System::Object ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1446)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">Необходимый <b>объект</b>. Имя файла книги, которая содержит изменения, которые необходимо объединить с открытой книгой.</param>
        <summary>Объединяет изменения из одной книги в открытую книгу.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Model">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Model Model { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Model Model" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Model" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Model As Model" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Model ^ Model { Microsoft::Office::Interop::Excel::Model ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3059)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3059)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Model</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект верхнего <see cref="T:Microsoft.Office.Interop.Excel.Model" /> уровня, который является одной моделью данных для книги. Только для чтения</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Modules">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Modules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Modules" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Modules" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Modules As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Modules { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(582)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(582)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Зарезервировано для внутреннего использования.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiUserEditing">
      <MemberSignature Language="C#" Value="public bool MultiUserEditing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MultiUserEditing" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.MultiUserEditing" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MultiUserEditing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MultiUserEditing { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1169)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1169)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>Имеет</b> true, если книга открыта как общий список. Только для чтения, <b>Boolean</b>.</summary>
        <value>To be added.</value>
        <remarks><para>Чтобы сохранить книгу в качестве общего списка, используйте <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> этот метод. Чтобы переключить книгу из общего режима в монопольный режим, используйте <see cref="M:Microsoft.Office.Interop.Excel._Workbook.ExclusiveAccess" /> метод.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает имя объекта. Только для чтения, <b>String</b>.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Names">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Names Names { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Names Names" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Names" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Names As Names" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Names ^ Names { Microsoft::Office::Interop::Excel::Names ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(442)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(442)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Names</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает коллекцию, которая представляет все имена в указанной книге (включая все <see cref="T:Microsoft.Office.Interop.Excel.Names" /> имена, специфификие для таблицы). Объект Names только <b>для</b> чтения.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewWindow">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Window NewWindow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Window NewWindow() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.NewWindow" />
      <MemberSignature Language="VB.NET" Value="Public Function NewWindow () As Window" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Window ^ NewWindow();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(280)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Window</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает новое окно или копию указанного окна.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSave">
      <MemberSignature Language="C#" Value="public string OnSave { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSave" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.OnSave" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSave As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSave { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1178)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1178)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1178)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Зарезервировано для внутреннего использования.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetActivate">
      <MemberSignature Language="C#" Value="public string OnSheetActivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetActivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.OnSheetActivate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSheetActivate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSheetActivate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Зарезервировано для внутреннего использования.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetDeactivate">
      <MemberSignature Language="C#" Value="public string OnSheetDeactivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetDeactivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.OnSheetDeactivate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSheetDeactivate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSheetDeactivate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Зарезервировано для внутреннего использования.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenLinks">
      <MemberSignature Language="C#" Value="public void OpenLinks (string Name, object ReadOnly, object Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OpenLinks([in]string Name, [in]object ReadOnly, [in]object Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.OpenLinks(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OpenLinks (Name As String, Optional ReadOnly As Object, Optional Type As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(803)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="ReadOnly" Type="System.Object" />
        <Parameter Name="Type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">Обязательный атрибут типа <b>String</b>. Имя ссылки Microsoft Excel или DDE/OLE, возвращаемой <see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" /> методом.</param>
        <param name="ReadOnly"><b>Необязательный объект</b>. <b>True,</b> чтобы открывать документы только для чтения. Значение по умолчанию — <b>False</b>.</param>
        <param name="Type">Необязательный <see cref="T:Microsoft.Office.Interop.Excel.XlLink" /> . Тип ссылки.</param>
        <summary>Открывает вспомогательные документы для ссылки или ссылок.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает родительский объект для указанного объекта. Только для чтения.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public string Password { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Password" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Password" />
      <MemberSignature Language="VB.NET" Value="Public Property Password As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Password { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(429)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(429)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(429)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает пароль, который должен быть предоставлен для открытия указанной книги. Для чтения и записи, <b>String</b>.</summary>
        <value>To be added.</value>
        <remarks><para>Используйте надежные пароли, содержащие строчные и прописные буквы, цифры и знаки. В ненадежных паролях не используются сочетания таких элементов. Надежный пароль: Y6dh!et5. Слабый пароль: House27. Используйте надежный пароль, который можно запомнить, чтобы не пришлось его записывать.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordEncryptionAlgorithm">
      <MemberSignature Language="C#" Value="public string PasswordEncryptionAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordEncryptionAlgorithm" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PasswordEncryptionAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PasswordEncryptionAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PasswordEncryptionAlgorithm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2060)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2060)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает <b>строку,</b> указывающее алгоритм, который Microsoft Excel использует для шифрования паролей для указанной книги. Только для чтения.</summary>
        <value>To be added.</value>
        <remarks><para>Используйте этот <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SetPasswordEncryptionOptions(System.Object,System.Object,System.Object,System.Object)" /> метод, чтобы указать, шифрует ли Excel свойства файлов для книг, защищенных паролем.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordEncryptionFileProperties">
      <MemberSignature Language="C#" Value="public bool PasswordEncryptionFileProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PasswordEncryptionFileProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PasswordEncryptionFileProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PasswordEncryptionFileProperties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PasswordEncryptionFileProperties { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2063)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2063)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>True,</b> если Microsoft Excel шифрует свойства файлов для указанной защищенной паролем книги. Только для чтения, <b>Boolean</b>.</summary>
        <value>To be added.</value>
        <remarks><para>Используйте этот <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SetPasswordEncryptionOptions(System.Object,System.Object,System.Object,System.Object)" /> метод, чтобы указать, шифрует ли Excel свойства файла для указанной защищенной паролем книги.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordEncryptionKeyLength">
      <MemberSignature Language="C#" Value="public int PasswordEncryptionKeyLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PasswordEncryptionKeyLength" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PasswordEncryptionKeyLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PasswordEncryptionKeyLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PasswordEncryptionKeyLength { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2061)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2061)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает <b>значение,</b> указывающее длину ключа алгоритма, который Microsoft Excel использует при шифровании паролей для указанной книги. Только для чтения.</summary>
        <value>To be added.</value>
        <remarks><para>Используйте этот <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SetPasswordEncryptionOptions(System.Object,System.Object,System.Object,System.Object)" /> метод, чтобы указать, шифрует ли Excel свойства файла для указанной защищенной паролем книги.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordEncryptionProvider">
      <MemberSignature Language="C#" Value="public string PasswordEncryptionProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordEncryptionProvider" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PasswordEncryptionProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PasswordEncryptionProvider As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PasswordEncryptionProvider { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2059)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2059)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает <b>строку,</b> указывав имя поставщика шифрования алгоритма, который Microsoft Excel использует при шифровании паролей для указанной книги. Только для чтения.</summary>
        <value><b>Строка</b></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Path" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(291)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(291)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает полный путь к приложению, за исключением конечного сепаратора и имени приложения. Только для чтения, <b>String</b>.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Permission">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.Permission Permission { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.Permission Permission" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Permission" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Permission As Permission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::Permission ^ Permission { Microsoft::Office::Core::Permission ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2264)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2264)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.Permission</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает <see cref="T:Microsoft.Office.Core.Permission" /> объект, который представляет параметры разрешений в указанной книге.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PersonalViewListSettings">
      <MemberSignature Language="C#" Value="public bool PersonalViewListSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PersonalViewListSettings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PersonalViewListSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property PersonalViewListSettings As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PersonalViewListSettings { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1447)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1447)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1447)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>True,</b> если параметры фильтрации и сортировки для списков включены в личное представление общей книги пользователя. Для чтения и записи, <b>Boolean</b>.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PersonalViewPrintSettings">
      <MemberSignature Language="C#" Value="public bool PersonalViewPrintSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PersonalViewPrintSettings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PersonalViewPrintSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property PersonalViewPrintSettings As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PersonalViewPrintSettings { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1448)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1448)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1448)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>True,</b> если параметры печати включены в личное представление общей книги пользователя. Read-write <b>Boolean</b>.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotCaches">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotCaches PivotCaches ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.PivotCaches PivotCaches() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.PivotCaches" />
      <MemberSignature Language="VB.NET" Value="Public Function PivotCaches () As PivotCaches" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::PivotCaches ^ PivotCaches();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1449)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotCaches</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает <see cref="T:Microsoft.Office.Interop.Excel.PivotCaches" /> коллекцию, представляюную все кэши pivotTable в указанной книге. Только для чтения.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotTables">
      <MemberSignature Language="C#" Value="public object PivotTables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object PivotTables" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PivotTables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PivotTables As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ PivotTables { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(690)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(690)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект, который представляет коллекцию всех отчетов pivotTable на этом сайте. Только для чтения.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotTableWizard">
      <MemberSignature Language="C#" Value="public void PivotTableWizard (object SourceType, object SourceData, object TableDestination, object TableName, object RowGrand, object ColumnGrand, object SaveData, object HasAutoFormat, object AutoPage, object Reserved, object BackgroundQuery, object OptimizeCache, object PageFieldOrder, object PageFieldWrapCount, object ReadData, object Connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PivotTableWizard([in]object SourceType, [in]object SourceData, [in]object TableDestination, [in]object TableName, [in]object RowGrand, [in]object ColumnGrand, [in]object SaveData, [in]object HasAutoFormat, [in]object AutoPage, [in]object Reserved, [in]object BackgroundQuery, [in]object OptimizeCache, [in]object PageFieldOrder, [in]object PageFieldWrapCount, [in]object ReadData, [in]object Connection) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.PivotTableWizard(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PivotTableWizard (Optional SourceType As Object, Optional SourceData As Object, Optional TableDestination As Object, Optional TableName As Object, Optional RowGrand As Object, Optional ColumnGrand As Object, Optional SaveData As Object, Optional HasAutoFormat As Object, Optional AutoPage As Object, Optional Reserved As Object, Optional BackgroundQuery As Object, Optional OptimizeCache As Object, Optional PageFieldOrder As Object, Optional PageFieldWrapCount As Object, Optional ReadData As Object, Optional Connection As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(684)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(16)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SourceType" Type="System.Object" />
        <Parameter Name="SourceData" Type="System.Object" />
        <Parameter Name="TableDestination" Type="System.Object" />
        <Parameter Name="TableName" Type="System.Object" />
        <Parameter Name="RowGrand" Type="System.Object" />
        <Parameter Name="ColumnGrand" Type="System.Object" />
        <Parameter Name="SaveData" Type="System.Object" />
        <Parameter Name="HasAutoFormat" Type="System.Object" />
        <Parameter Name="AutoPage" Type="System.Object" />
        <Parameter Name="Reserved" Type="System.Object" />
        <Parameter Name="BackgroundQuery" Type="System.Object" />
        <Parameter Name="OptimizeCache" Type="System.Object" />
        <Parameter Name="PageFieldOrder" Type="System.Object" />
        <Parameter Name="PageFieldWrapCount" Type="System.Object" />
        <Parameter Name="ReadData" Type="System.Object" />
        <Parameter Name="Connection" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SourceType">To be added.</param>
        <param name="SourceData">To be added.</param>
        <param name="TableDestination">To be added.</param>
        <param name="TableName">To be added.</param>
        <param name="RowGrand">To be added.</param>
        <param name="ColumnGrand">To be added.</param>
        <param name="SaveData">To be added.</param>
        <param name="HasAutoFormat">To be added.</param>
        <param name="AutoPage">To be added.</param>
        <param name="Reserved">To be added.</param>
        <param name="BackgroundQuery">To be added.</param>
        <param name="OptimizeCache">To be added.</param>
        <param name="PageFieldOrder">To be added.</param>
        <param name="PageFieldWrapCount">To be added.</param>
        <param name="ReadData">To be added.</param>
        <param name="Connection">To be added.</param>
        <summary>Зарезервировано для внутреннего использования.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Post">
      <MemberSignature Language="C#" Value="public void Post (object DestName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Post([in]object DestName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Post(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Post (Optional DestName As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1166)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DestName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="DestName"><b>Необязательный объект</b>. Этот аргумент игнорируется. Метод <b>Post</b> указывает пользователю указать назначение книги.</param>
        <summary>Публикует указанную книгу в общедоступных папках. Этот метод работает только с клиентом Microsoft Exchange, подключенным к серверу Microsoft Exchange.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrecisionAsDisplayed">
      <MemberSignature Language="C#" Value="public bool PrecisionAsDisplayed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PrecisionAsDisplayed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PrecisionAsDisplayed" />
      <MemberSignature Language="VB.NET" Value="Public Property PrecisionAsDisplayed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PrecisionAsDisplayed { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(405)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(405)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(405)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>True,</b> если вычисления в этой книге будут произведены с использованием только точности отображаемого числа. Для чтения и записи, <b>Boolean</b>.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOut">
      <MemberSignature Language="C#" Value="public void PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From"><b>Необязательный объект</b>. Номер страницы, на которой начинается печать. Если этот аргумент опущен, печать начинается с начала.</param>
        <param name="To"><b>Необязательный объект</b>. Номер последней страницы для печати. Если этот аргумент опущен, печать заканчивается последней страницей.</param>
        <param name="Copies"><b>Необязательный объект</b>. Количество копий для печати. Если этот аргумент опущен, печатается одна копия.</param>
        <param name="Preview"><b>Необязательный объект</b>. <b>Имеет</b> true, чтобы Microsoft Excel вызывал предварительный просмотр печати перед печатью объекта. <b>False</b> (или пропущен) для немедленной печати объекта.</param>
        <param name="ActivePrinter"><b>Необязательный объект</b>. Задает имя активного принтера.</param>
        <param name="PrintToFile"><b>Необязательный объект</b>. <b>True</b> для печати в файл. Если он не указан, Microsoft Excel запросит у пользователя ввести <paramref name="PrToFileName" /> имя выходного файла.</param>
        <param name="Collate"><b>Необязательный объект</b>. <b>True</b> для совме-ации нескольких копий.</param>
        <param name="PrToFileName"><b>Необязательный объект</b>. Если <paramref name="PrintToFile" /> задано <b>true,</b>этот аргумент указывает имя файла, в который нужно напечатать.</param>
        <summary>Печатает объект.</summary>
        <remarks><para>"Страницы" в описаниях и ссылается на печатные страницы, а не на общие страницы <paramref name="From" /> <paramref name="To" /> на листе или в книге.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOutEx">
      <MemberSignature Language="C#" Value="public void PrintOutEx (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName, object IgnorePrintAreas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOutEx([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName, [in]object IgnorePrintAreas) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintOutEx (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object, Optional IgnorePrintAreas As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2361)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(9)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
        <Parameter Name="IgnorePrintAreas" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <param name="PrToFileName">To be added.</param>
        <param name="IgnorePrintAreas">To be added.</param>
        <summary>Зарезервировано для внутреннего использования.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintPreview">
      <MemberSignature Language="C#" Value="public void PrintPreview (object EnableChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintPreview([in]object EnableChanges) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.PrintPreview(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintPreview (Optional EnableChanges As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(281)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EnableChanges" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="EnableChanges">Включает изменения объекта.</param>
        <summary>Отображает предварительный просмотр объекта, как бы он выглядел при печати.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Protect">
      <MemberSignature Language="C#" Value="public void Protect (object Password, object Structure, object Windows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Protect([in]object Password, [in]object Structure, [in]object Windows) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Protect (Optional Password As Object, Optional Structure As Object, Optional Windows As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2029)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="Structure" Type="System.Object" />
        <Parameter Name="Windows" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password"><b>Необязательный объект</b>. Строка, которая указывает пароль для электронной таблицы или книги с учетом конкретного случая. Если этот аргумент опущен, можно отобразить таблицу или книгу без использования пароля. В противном случае необходимо указать пароль, чтобы отопрестить рабочий таблицу или книгу. Если вы забудете пароль, вы не сможете отопрестить рабочий или электронный таблицу. Лучше хранить список паролей и соответствующих им имен документов в надежном месте.</param>
        <param name="Structure"><b>Необязательный объект</b>. <b>True</b> для защиты структуры книги (относительного положения листов). Значение по умолчанию — <b>False</b>.</param>
        <param name="Windows"><b>Необязательный объект</b>. <b>True</b> для защиты окон книг. Если этот аргумент опущен, окна не защищены.</param>
        <summary>Защищает книгу, чтобы ее нельзя было изменить.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectSharing">
      <MemberSignature Language="C#" Value="public void ProtectSharing (object Filename, object Password, object WriteResPassword, object ReadOnlyRecommended, object CreateBackup, object SharingPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProtectSharing([in]object Filename, [in]object Password, [in]object WriteResPassword, [in]object ReadOnlyRecommended, [in]object CreateBackup, [in]object SharingPassword) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ProtectSharing(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProtectSharing (Optional Filename As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional ReadOnlyRecommended As Object, Optional CreateBackup As Object, Optional SharingPassword As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1450)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="ReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="CreateBackup" Type="System.Object" />
        <Parameter Name="SharingPassword" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename"><b>Необязательный объект</b>. Строка, указывающая имя сохраненного файла. Можно включить полный путь; Если этого не делать, Microsoft Excel сохраняет файл в текущей папке.</param>
        <param name="Password"><b>Необязательный объект</b>. Строка с учетом дела, указывающая пароль защиты, который необходимо наводить на файл. Не должно быть больше 15 символов.</param>
        <param name="WriteResPassword"><b>Необязательный объект</b>. Строка, указывающая пароль резервирования записи для этого файла. Если файл сохранен с паролем, а пароль не предоставляется при его открытие, файл открывается только для чтения.</param>
        <param name="ReadOnlyRecommended"><b>Необязательный объект</b>. <b>Имеет</b> true, чтобы отобразить сообщение при его открытом файле, чтобы он был открыт только для чтения.</param>
        <param name="CreateBackup"><b>Необязательный объект</b>. <b>True</b> для создания файла резервной копии.</param>
        <param name="SharingPassword"><b>Необязательный объект</b>. Строка, указывающая пароль, используемый для защиты файла для общего доступа.</param>
        <summary>Сохраняет книгу и защищает ее для общего доступа.</summary>
        <remarks><para>Используйте надежные пароли, содержащие строчные и прописные буквы, цифры и знаки. В ненадежных паролях не используются сочетания таких элементов. Надежный пароль: Y6dh!et5. Слабый пароль: House27. Используйте надежный пароль, который можно запомнить, чтобы не пришлось его записывать.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectSharingEx">
      <MemberSignature Language="C#" Value="public void ProtectSharingEx (object Filename, object Password, object WriteResPassword, object ReadOnlyRecommended, object CreateBackup, object SharingPassword, object FileFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProtectSharingEx([in]object Filename, [in]object Password, [in]object WriteResPassword, [in]object ReadOnlyRecommended, [in]object CreateBackup, [in]object SharingPassword, [in]object FileFormat) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ProtectSharingEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProtectSharingEx (Optional Filename As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional ReadOnlyRecommended As Object, Optional CreateBackup As Object, Optional SharingPassword As Object, Optional FileFormat As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2543)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="ReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="CreateBackup" Type="System.Object" />
        <Parameter Name="SharingPassword" Type="System.Object" />
        <Parameter Name="FileFormat" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="Password">To be added.</param>
        <param name="WriteResPassword">To be added.</param>
        <param name="ReadOnlyRecommended">To be added.</param>
        <param name="CreateBackup">To be added.</param>
        <param name="SharingPassword">To be added.</param>
        <param name="FileFormat">To be added.</param>
        <summary>Зарезервировано для внутреннего использования.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectStructure">
      <MemberSignature Language="C#" Value="public bool ProtectStructure { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectStructure" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ProtectStructure" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectStructure As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectStructure { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(588)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(588)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>Имеет</b> true, если порядок листов в книге защищен. Только для чтения, <b>Boolean</b>.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectWindows">
      <MemberSignature Language="C#" Value="public bool ProtectWindows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectWindows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ProtectWindows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectWindows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectWindows { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(295)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(295)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>True,</b> если окна книги защищены. Только для чтения, <b>Boolean</b>.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PublishObjects">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PublishObjects PublishObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PublishObjects PublishObjects" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PublishObjects" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PublishObjects As PublishObjects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PublishObjects ^ PublishObjects { Microsoft::Office::Interop::Excel::PublishObjects ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1819)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1819)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PublishObjects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает <see cref="T:Microsoft.Office.Interop.Excel.PublishObjects" /> коллекцию. Только для чтения.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PurgeChangeHistoryNow">
      <MemberSignature Language="C#" Value="public void PurgeChangeHistoryNow (int Days, object SharingPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PurgeChangeHistoryNow([in]int32 Days, [in]object SharingPassword) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.PurgeChangeHistoryNow(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PurgeChangeHistoryNow (Days As Integer, Optional SharingPassword As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1464)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Days" Type="System.Int32" />
        <Parameter Name="SharingPassword" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Days">Обязательный атрибут типа <b>Integer</b>. Количество дней, в течение которое изменения сохраняются в журнале изменений.</param>
        <param name="SharingPassword"><b>Необязательный объект</b>. Пароль, который не защищит книгу для общего доступа. Если книга защищена для общего доступа с паролем и этот аргумент опущен, пользователю будет предложено вводить пароль.</param>
        <summary>Удаляет записи из журнала изменений для указанной книги.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(296)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(296)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает <b>true,</b> если объект открыт только для чтения. Только для чтения, <b>Boolean</b>.</summary>
        <value>To be added.</value>
        <remarks><para>Это свойство используется только для списков, связанных с сайтом SharePoint.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadOnlyRecommended">
      <MemberSignature Language="C#" Value="public bool ReadOnlyRecommended { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnlyRecommended" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ReadOnlyRecommended" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnlyRecommended As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnlyRecommended { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2005)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2005)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2005)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>True,</b> если книга была сохранена как рекомендуется только для чтения. Только для чтения, <b>Boolean</b>.</summary>
        <value>To be added.</value>
        <remarks><para>Когда вы открываете книгу, которая была сохранена как рекомендованная только для чтения, в Microsoft Excel отображается сообщение с рекомендациями открыть книгу как открытую только для чтения.</para>
          <para>Используйте метод <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> для изменения этого свойства.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RecheckSmartTags">
      <MemberSignature Language="C#" Value="public void RecheckSmartTags ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RecheckSmartTags() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.RecheckSmartTags" />
      <MemberSignature Language="VB.NET" Value="Public Sub RecheckSmartTags ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RecheckSmartTags();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2065)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Вызывает проверку смарт-тега переднего плана, автоматически занося примечания к данным, которые ранее не были заметены.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshAll">
      <MemberSignature Language="C#" Value="public void RefreshAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RefreshAll() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.RefreshAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub RefreshAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RefreshAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1452)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Обновляет все диапазоны внешних данных и отчеты pivotTable в указанной книге.</summary>
        <remarks><para>Объекты со <see cref="P:Microsoft.Office.Interop.Excel.PivotCache.BackgroundQuery" /> свойством <b>True</b> обновляются в фоновом режиме.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RejectAllChanges">
      <MemberSignature Language="C#" Value="public void RejectAllChanges (object When, object Who, object Where);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RejectAllChanges([in]object When, [in]object Who, [in]object Where) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.RejectAllChanges(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RejectAllChanges (Optional When As Object, Optional Who As Object, Optional Where As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1467)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="When" Type="System.Object" />
        <Parameter Name="Who" Type="System.Object" />
        <Parameter Name="Where" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="When"><b>Необязательный объект</b>. Указывает, когда все изменения отклоняется.</param>
        <param name="Who"><b>Необязательный объект</b>. Указывает, кем будут отклониться все изменения.</param>
        <param name="Where"><b>Необязательный объект</b>. Указывает место, в котором все изменения отклоняется.</param>
        <summary>Отклоняет все изменения в указанной общей книге.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReloadAs">
      <MemberSignature Language="C#" Value="public void ReloadAs (Microsoft.Office.Core.MsoEncoding Encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReloadAs([in]valuetype Microsoft.Office.Core.MsoEncoding Encoding) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ReloadAs(Microsoft.Office.Core.MsoEncoding)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReloadAs (Encoding As MsoEncoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReloadAs(Microsoft::Office::Core::MsoEncoding Encoding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1821)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Encoding" Type="Microsoft.Office.Core.MsoEncoding" />
      </Parameters>
      <Docs>
        <param name="Encoding">Обязательное <see cref="T:Microsoft.Office.Core.MsoEncoding" /> . Кодивную кодику, которая должна быть применена к книге.</param>
        <summary>Перезагружает книгу на основе HTML-документа с использованием указанной кодии документа.</summary>
        <remarks><para>Только <b>константы msoEncoding,</b> применимые к HTML, работают с методом <b>ReloadAs.</b></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveDocumentInformation">
      <MemberSignature Language="C#" Value="public void RemoveDocumentInformation (Microsoft.Office.Interop.Excel.XlRemoveDocInfoType RemoveDocInfoType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveDocumentInformation([in]valuetype Microsoft.Office.Interop.Excel.XlRemoveDocInfoType RemoveDocInfoType) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.RemoveDocumentInformation(Microsoft.Office.Interop.Excel.XlRemoveDocInfoType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveDocumentInformation (RemoveDocInfoType As XlRemoveDocInfoType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveDocumentInformation(Microsoft::Office::Interop::Excel::XlRemoveDocInfoType RemoveDocInfoType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2514)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RemoveDocInfoType" Type="Microsoft.Office.Interop.Excel.XlRemoveDocInfoType" />
      </Parameters>
      <Docs>
        <param name="RemoveDocInfoType">Одно из <see cref="T:Microsoft.Office.Interop.Excel.XlRemoveDocInfoType" /> значений, указывающее тип удаляемой информации.</param>
        <summary>Удаляет из книги все сведения указанного типа.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePersonalInformation">
      <MemberSignature Language="C#" Value="public bool RemovePersonalInformation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RemovePersonalInformation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.RemovePersonalInformation" />
      <MemberSignature Language="VB.NET" Value="Public Property RemovePersonalInformation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RemovePersonalInformation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2050)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2050)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2050)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>True,</b> если персональные данные можно удалить из указанной книги. Значение по умолчанию — <b>False</b>. Для чтения и записи, <b>Boolean</b>.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveUser">
      <MemberSignature Language="C#" Value="public void RemoveUser (int Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveUser([in]int32 Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.RemoveUser(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveUser (Index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveUser(int Index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1453)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Index">Обязательный атрибут типа <b>Integer</b>. Индекс пользователя.</param>
        <summary>Отключает указанного пользователя от общей книги.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reply">
      <MemberSignature Language="C#" Value="public void Reply ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reply() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Reply" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reply ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reply();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(977)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Вы запросили справку по ключевому слову Visual Basic, используемом только в Macintosh. Сведения об этом ключевом слове можно найти в справочной справке по языку, включенной в Microsoft Office Macintosh Edition.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplyAll">
      <MemberSignature Language="C#" Value="public void ReplyAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReplyAll() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ReplyAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReplyAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReplyAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(978)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Вы запросили справку по ключевому слову Visual Basic, используемом только в Macintosh. Сведения об этом ключевом слове можно найти в справочной справке по языку, включенной в Microsoft Office Macintosh Edition.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplyWithChanges">
      <MemberSignature Language="C#" Value="public void ReplyWithChanges (object ShowMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReplyWithChanges([in]object ShowMessage) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ReplyWithChanges(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReplyWithChanges (Optional ShowMessage As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2057)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ShowMessage" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ShowMessage"><b>Необязательный объект</b>. <b>False</b> не отображает сообщение. <b>True</b> отображает сообщение.</param>
        <summary>Отправляет сообщение электронной почты автору книги, которая была отправлена на проверку, уведомляя его о том, что проверяющий завершил проверку книги.</summary>
        <remarks><para>Используйте этот <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SendForReview(System.Object,System.Object,System.Object,System.Object)" /> метод для запуска совместной проверки книги. Если метод <b>ReplyWithChanges</b> выполняется в книге, которая не является частью цикла совместной проверки, пользователь получит сообщение об ошибке.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Research">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Research Research { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Research Research" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Research" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Research As Research" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Research ^ Research { Microsoft::Office::Interop::Excel::Research ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2532)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2532)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Research</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Research" /> объект, который представляет исследовательскую службу для книги. Только для чтения.</summary>
        <value><b>Research</b></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetColors">
      <MemberSignature Language="C#" Value="public void ResetColors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetColors() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ResetColors" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetColors ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetColors();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1468)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Сбрасывает цветовую палитру до цветов по умолчанию.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RevisionNumber">
      <MemberSignature Language="C#" Value="public int RevisionNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RevisionNumber" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.RevisionNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RevisionNumber As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RevisionNumber { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1172)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1172)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает количество сбереганий книги при открытом в общем списке. Если книга открыта в монопольном режиме, это свойство возвращает значение 0 (ноль). Только для чтения, <b>Integer</b>.</summary>
        <value>To be added.</value>
        <remarks><para>Свойство <b>RevisionNumber</b> обновляется только при сэкономлении локальной копии книги, а не при удалении копий.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Route">
      <MemberSignature Language="C#" Value="public void Route ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Route() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Route" />
      <MemberSignature Language="VB.NET" Value="Public Sub Route ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Route();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(946)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Маршруты книги, используя текущую маршрутику книги.</summary>
        <remarks><para>При маршрутике книги свойству <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Routed" /> заносится true. <b></b></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Routed">
      <MemberSignature Language="C#" Value="public bool Routed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Routed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Routed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Routed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Routed { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(951)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(951)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>Имеет</b> true, если книга была перенаададовна следующему получателю. <b>False,</b> если книга должна быть маршрутифна. Только для чтения, <b>Boolean</b>.</summary>
        <value>To be added.</value>
        <remarks><para>Если книга не была направлена текущему получателю, это свойство всегда имеет состояние <b>False</b> (например, если в документе нет ни поскакив, ни если только что была создана помещающая маршрутка).</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RoutingSlip">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.RoutingSlip RoutingSlip { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.RoutingSlip RoutingSlip" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.RoutingSlip" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RoutingSlip As RoutingSlip" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::RoutingSlip ^ RoutingSlip { Microsoft::Office::Interop::Excel::RoutingSlip ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(949)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(949)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.RoutingSlip</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект, который представляет собой помещающий <see cref="T:Microsoft.Office.Interop.Excel.RoutingSlip" /> маршрут для книги. Чтение этого свойства, если не существует скольжения маршрутирования, приводит к ошибке (сначала <see cref="P:Microsoft.Office.Interop.Excel._Workbook.HasRoutingSlip" /> проверьте свойство). Только для чтения.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RunAutoMacros">
      <MemberSignature Language="C#" Value="public void RunAutoMacros (Microsoft.Office.Interop.Excel.XlRunAutoMacro Which);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RunAutoMacros([in]valuetype Microsoft.Office.Interop.Excel.XlRunAutoMacro Which) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RunAutoMacros (Which As XlRunAutoMacro)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RunAutoMacros(Microsoft::Office::Interop::Excel::XlRunAutoMacro Which);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(634)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Which" Type="Microsoft.Office.Interop.Excel.XlRunAutoMacro" />
      </Parameters>
      <Docs>
        <param name="Which">Обязательное <see cref="T:Microsoft.Office.Interop.Excel.XlRunAutoMacro" /> .</param>
        <summary>Запускает Auto_Open, Auto_Close, Auto_Activate или Auto_Deactivate, подключенных к книге. Этот метод включен для обеспечения обратной совместимости. Вместо этих макроса следует использовать события Open, Close, Activate и Deactivate.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Save" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(283)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Сохраняет изменения в указанной книге.</summary>
        <remarks><para>Чтобы открыть файл книги, используйте <see cref="M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> метод.</para>
          <para>Чтобы пометить книгу как сохраненную без записи на диск, установите для ее <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Saved" /> свойства true. <b></b></para>
          <para>При первом сохранения книги используйте метод, чтобы <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> указать имя файла.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public void SaveAs (object Filename, object FileFormat, object Password, object WriteResPassword, object ReadOnlyRecommended, object CreateBackup, Microsoft.Office.Interop.Excel.XlSaveAsAccessMode AccessMode = Microsoft.Office.Interop.Excel.XlSaveAsAccessMode.xlNoChange, object ConflictResolution, object AddToMru, object TextCodepage, object TextVisualLayout, object Local);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveAs([in]object Filename, [in]object FileFormat, [in]object Password, [in]object WriteResPassword, [in]object ReadOnlyRecommended, [in]object CreateBackup, [in]valuetype Microsoft.Office.Interop.Excel.XlSaveAsAccessMode AccessMode, [in]object ConflictResolution, [in]object AddToMru, [in]object TextCodepage, [in]object TextVisualLayout, [in]object Local) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAs (Optional Filename As Object, Optional FileFormat As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional ReadOnlyRecommended As Object, Optional CreateBackup As Object, Optional AccessMode As XlSaveAsAccessMode = Microsoft.Office.Interop.Excel.XlSaveAsAccessMode.xlNoChange, Optional ConflictResolution As Object, Optional AddToMru As Object, Optional TextCodepage As Object, Optional TextVisualLayout As Object, Optional Local As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1925)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(12)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="FileFormat" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="ReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="CreateBackup" Type="System.Object" />
        <Parameter Name="AccessMode" Type="Microsoft.Office.Interop.Excel.XlSaveAsAccessMode" />
        <Parameter Name="ConflictResolution" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
        <Parameter Name="TextCodepage" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
        <Parameter Name="Local" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename"><b>Необязательный объект</b>. Строка, которая указывает имя файла, который необходимо сохранить. Можно включить полный путь; Если этого не делать, Microsoft Excel сохраняет файл в текущей папке.</param>
        <param name="FileFormat"><b>Необязательный объект</b>. Формат файла, который будет применяться при его сохранения. Список допустимого варианта см. в <see cref="P:Microsoft.Office.Interop.Excel._Workbook.FileFormat" /> свойстве. Для существующего файла форматом по умолчанию является последний указанный формат; для нового файла по умолчанию используется формат используемой версии Excel.</param>
        <param name="Password"><b>Необязательный объект</b>. Строка с учетом дела (не более 15 символов), которая указывает пароль защиты, который необходимо указать в файле.</param>
        <param name="WriteResPassword"><b>Необязательный объект</b>. Строка, которая указывает пароль резервирования записи для этого файла. Если файл сохранен с паролем, а пароль не предоставляется при его открытие, файл открывается только для чтения.</param>
        <param name="ReadOnlyRecommended"><b>Необязательный объект</b>. <b>Имеет</b> true, чтобы отобразить сообщение при его открытом файле, чтобы он был открыт только для чтения.</param>
        <param name="CreateBackup"><b>Необязательный объект</b>. <b>True</b> для создания файла резервной копии.</param>
        <param name="AccessMode">Необязательный <see cref="T:Microsoft.Office.Interop.Excel.XlSaveAsAccessMode" /> .</param>
        <param name="ConflictResolution">Необязательный <see cref="T:Microsoft.Office.Interop.Excel.XlSaveConflictResolution" /> .</param>
        <param name="AddToMru"><b>Необязательный объект</b>. <b>True,</b> чтобы добавить эту книгу в список недавно использованных файлов. Значение по умолчанию — <b>False</b>.</param>
        <param name="TextCodepage"><b>Необязательный объект</b>. Не используется в U.S. English Microsoft Excel.</param>
        <param name="TextVisualLayout"><b>Необязательный объект</b>. Не используется в U.S. English Microsoft Excel.</param>
        <param name="Local"><b>Необязательный объект</b>. <b>True</b> сохраняет файлы на языке Microsoft Excel (включая параметры панели управления). Значение <b>False</b> (по умолчанию) сохраняет файлы на языке Visual Basic для приложений (VBA), который обычно является английским (США), если проект VBA, в котором запускается Workbooks.Open, не является старым международным проектом VBA XL5/95.</param>
        <summary>Сохраняет изменения в книге в другом файле.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAsXMLData">
      <MemberSignature Language="C#" Value="public void SaveAsXMLData (string Filename, Microsoft.Office.Interop.Excel.XmlMap Map);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveAsXMLData([in]string Filename, [in]class Microsoft.Office.Interop.Excel.XmlMap Map) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SaveAsXMLData(System.String,Microsoft.Office.Interop.Excel.XmlMap)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAsXMLData (Filename As String, Map As XmlMap)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveAsXMLData(System::String ^ Filename, Microsoft::Office::Interop::Excel::XmlMap ^ Map);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2278)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="Map" Type="Microsoft.Office.Interop.Excel.XmlMap" />
      </Parameters>
      <Docs>
        <param name="Filename">Обязательный атрибут типа <b>String</b>. Строка, которая указывает имя файла, который необходимо сохранить. Можно включить полный путь; Если этого не делать, Microsoft Excel сохраняет файл в текущей папке.</param>
        <param name="Map">Необходимый <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> объект. Карта схемы, применяемая к данным.</param>
        <summary>Экспортирует данные, которые были соеданы с указанной картой схемы XML в XML-файл данных.</summary>
        <remarks><para>Функции XML, за исключением сохранения файлов в формате электронной таблицы XML, доступны только в Microsoft Office Professional Edition 2003 и Microsoft Office Excel 2003.</para>
          <para>Этот метод приведет к ошибке во время работы, если Excel не может экспортировать данные с указанной картой схемы. Чтобы проверить, может ли Excel использовать указанную карту схемы для экспорта данных, используйте <see cref="P:Microsoft.Office.Interop.Excel.XmlMap.IsExportable" /> свойство.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveCopyAs">
      <MemberSignature Language="C#" Value="public void SaveCopyAs (object Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveCopyAs([in]object Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SaveCopyAs(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveCopyAs (Optional Filename As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(175)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">Обязательный. Указывает имя файла для копии.</param>
        <summary>Сохраняет копию книги в файл, но не изменяет открытую книгу в памяти.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Saved">
      <MemberSignature Language="C#" Value="public bool Saved { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Saved" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Saved" />
      <MemberSignature Language="VB.NET" Value="Public Property Saved As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Saved { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(298)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(298)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(298)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>Имеет</b> true, если указанной книге не было внося изменений с момента последнего с момента ее с сохранения. Для чтения и записи, <b>Boolean</b>.</summary>
        <value>To be added.</value>
        <remarks><para>Если книга никогда не была сохранена, ее <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Path" /> свойство возвращает пустую строку ("").</para>
          <para>Это свойство можно установить <b>в</b> true, если вы хотите закрыть измененную книгу без сохранения или запроса на сохранение.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveLinkValues">
      <MemberSignature Language="C#" Value="public bool SaveLinkValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SaveLinkValues" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.SaveLinkValues" />
      <MemberSignature Language="VB.NET" Value="Public Property SaveLinkValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SaveLinkValues { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(406)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(406)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(406)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>Значение true,</b> если Microsoft Excel сохраняет значения внешних ссылок в книге. Для чтения и записи, <b>Boolean</b>.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="sblt">
      <MemberSignature Language="C#" Value="public void sblt (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void sblt([in]string s) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.sblt(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub sblt (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void sblt(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1826)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <summary>Зарезервировано для внутреннего использования.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendFaxOverInternet">
      <MemberSignature Language="C#" Value="public void SendFaxOverInternet (object Recipients, object Subject, object ShowMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendFaxOverInternet([in]object Recipients, [in]object Subject, [in]object ShowMessage) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SendFaxOverInternet(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendFaxOverInternet (Optional Recipients As Object, Optional Subject As Object, Optional ShowMessage As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2267)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Recipients" Type="System.Object" />
        <Parameter Name="Subject" Type="System.Object" />
        <Parameter Name="ShowMessage" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Recipients"><b>Необязательный объект</b>. Строка, которая представляет номера факсов и адреса электронной почты людей, которым будет отправлен факс. Разделять нескольких получателей с зачетом.</param>
        <param name="Subject"><b>Необязательный объект</b>. Строка, представляютив строку темы для факсимилного документа.</param>
        <param name="ShowMessage"><b>Необязательный объект</b>. <b>True</b> отображает факс-сообщение перед отправкой. <b>False</b> отправляет факс без отображения факс-сообщения.</param>
        <summary>Отправляет таблицу в качестве факса указанным получателям.</summary>
        <remarks><para>Для использования <b>метода SendFaxOverInternet</b> необходимо включить службу факсов на компьютере пользователя.</para>
          <para>Формат, используемый для указания номеров факсов в <paramref name="Recipients" /> параметре: или <paramref name="recipientsfaxnumber@usersfaxprovider" /> <paramref name="recipientsname@recipientsfaxnumber" /> . Вы можете получить доступ к сведениям о поставщике факсов пользователя, используя следующий путь в реестре:</para>
          <para>HKEY_CURRENT_USER\Software\Microsoft\Office\11.0\Common\Services\Fax</para>
          <para>Используйте значение ключа FaxAddress в этом пути реестра, чтобы определить формат, который будет применяться для получателя.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SendForReview">
      <MemberSignature Language="C#" Value="public void SendForReview (object Recipients, object Subject, object ShowMessage, object IncludeAttachment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendForReview([in]object Recipients, [in]object Subject, [in]object ShowMessage, [in]object IncludeAttachment) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SendForReview(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendForReview (Optional Recipients As Object, Optional Subject As Object, Optional ShowMessage As Object, Optional IncludeAttachment As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2054)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Recipients" Type="System.Object" />
        <Parameter Name="Subject" Type="System.Object" />
        <Parameter Name="ShowMessage" Type="System.Object" />
        <Parameter Name="IncludeAttachment" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Recipients"><b>Необязательный объект</b>. Строка, в которой перечислены люди, которым необходимо отправить сообщение. Это могут быть не разрешенные имена и псевдонимы в телефонной книге электронной почты или полных адресах электронной почты. Разделять нескольких получателей точками с затменной за ;). Если оставить это сообщение пустым и иметь false, вы получите сообщение об ошибке, и сообщение не <paramref name="ShowMessage" /> будет отправлено. <b></b></param>
        <param name="Subject"><b>Необязательный объект</b>. Строка для темы сообщения. Если оставить пустым, тема будет: "Пожалуйста, просмотрите" <paramref name="filename" /> ".</param>
        <param name="ShowMessage"><b>Необязательный объект</b>. <b>Boolean</b> value that indicates whether the message should be displayed when the method is executed. Значение по умолчанию — <b>True</b>. Если за <b>установлено false,</b>сообщение автоматически отправляется получателям без показа сообщения отправителю.</param>
        <param name="IncludeAttachment"><b>Необязательный объект</b>. <b>Boolean</b> value that indicates whether the message should include an attachment or a link to a server location. Значение по умолчанию — <b>True</b>. Если за <b>установлено false,</b>документ должен храниться в общем расположении.</param>
        <summary>Отправляет книгу в сообщении электронной почты для проверки указанным получателям.</summary>
        <remarks><para>Метод <b>SendForReview</b> запускает цикл совместной проверки. Используйте этот <see cref="M:Microsoft.Office.Interop.Excel._Workbook.EndReview" /> метод для окончания цикла проверки.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SendMail">
      <MemberSignature Language="C#" Value="public void SendMail (object Recipients, object Subject, object ReturnReceipt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendMail([in]object Recipients, [in]object Subject, [in]object ReturnReceipt) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SendMail(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendMail (Recipients As Object, Optional Subject As Object, Optional ReturnReceipt As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(947)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Recipients" Type="System.Object" />
        <Parameter Name="Subject" Type="System.Object" />
        <Parameter Name="ReturnReceipt" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Recipients">Необходимый <b>объект</b>. Указывает имя получателя в виде текста или массива текстовых строк, если получателей несколько. Должен быть указан по крайней мере один получатель, и все получатели добавляются в качестве получателей.</param>
        <param name="Subject"><b>Необязательный объект</b>. Указывает тему сообщения. Если этот аргумент опущен, используется имя документа.</param>
        <param name="ReturnReceipt"><b>Необязательный объект</b>. <b>True,</b> чтобы запросить квитанцию возврата. <b>False,</b> чтобы не запрашивать квитанцию возврата. Значение по умолчанию — <b>False</b>.</param>
        <summary>Отправляет книгу с помощью установленной почтовой системы.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendMailer">
      <MemberSignature Language="C#" Value="public void SendMailer (object FileFormat, Microsoft.Office.Interop.Excel.XlPriority Priority = Microsoft.Office.Interop.Excel.XlPriority.xlPriorityNormal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendMailer([in]object FileFormat, [in]valuetype Microsoft.Office.Interop.Excel.XlPriority Priority) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SendMailer(System.Object,Microsoft.Office.Interop.Excel.XlPriority)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendMailer (Optional FileFormat As Object, Optional Priority As XlPriority = Microsoft.Office.Interop.Excel.XlPriority.xlPriorityNormal)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(980)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileFormat" Type="System.Object" />
        <Parameter Name="Priority" Type="Microsoft.Office.Interop.Excel.XlPriority" />
      </Parameters>
      <Docs>
        <param name="FileFormat">Этот параметр предназначен только для Macintosh и его не следует использовать.</param>
        <param name="Priority">Этот параметр предназначен только для Macintosh и его не следует использовать.</param>
        <summary>Вы запросили справку по ключевому слову Visual Basic, используемом только в Macintosh. Сведения об этом ключевом слове можно найти в справочной справке по языку, включенной в Microsoft Office Macintosh Edition.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerPolicy">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.ServerPolicy ServerPolicy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.ServerPolicy ServerPolicy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ServerPolicy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServerPolicy As ServerPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::ServerPolicy ^ ServerPolicy { Microsoft::Office::Core::ServerPolicy ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2519)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2519)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.ServerPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект, который представляет политику, указанную для книги, хранимой на сервере с <see cref="T:Microsoft.Office.Core.ServerPolicy" /> 2nd_OSS_NoVersion 2007. Только для чтения.</summary>
        <value><b>ServerPolicy</b></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerViewableItems">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ServerViewableItems ServerViewableItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ServerViewableItems ServerViewableItems" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ServerViewableItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServerViewableItems As ServerViewableItems" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ServerViewableItems ^ ServerViewableItems { Microsoft::Office::Interop::Excel::ServerViewableItems ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2524)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2524)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ServerViewableItems</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Позволяет разработчику взаимодействовать со списком опубликованных объектов в книге, которые показаны на сервере. Только для чтения.</summary>
        <value><see cref="P:Microsoft.Office.Interop.Excel._Workbook.ServerViewableItems" /></value>
        <remarks><para>Это свойство возвращает коллекцию элементов, которые можно опубликовать в службы Excel.  Он может включать в себя таблицы, списки, именуемые диапазоны и диаграммы.  Он также может содержать листы, если он не является сочетанием листов и ранее упомянутого списка.  </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLinkOnData">
      <MemberSignature Language="C#" Value="public void SetLinkOnData (string Name, object Procedure);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLinkOnData([in]string Name, [in]object Procedure) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SetLinkOnData(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLinkOnData (Name As String, Optional Procedure As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(809)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="Procedure" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">Обязательный атрибут типа <b>String</b>. Имя ссылки DDE/OLE, возвращаемой <see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" /> методом.</param>
        <param name="Procedure">Обязательный атрибут типа <b>String</b>. Имя процедуры, которая будет запускаться при обновлении ссылки. Это может быть макрос Microsoft Excel 4.0 или Visual Basic. Установите для этого аргумента пустую строку (""), чтобы указать, что при обновлении ссылки процедуры не следует запускать.</param>
        <summary>Задает имя процедуры, которая выполняется при обновлении ссылки DDE.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPasswordEncryptionOptions">
      <MemberSignature Language="C#" Value="public void SetPasswordEncryptionOptions (object PasswordEncryptionProvider, object PasswordEncryptionAlgorithm, object PasswordEncryptionKeyLength, object PasswordEncryptionFileProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPasswordEncryptionOptions([in]object PasswordEncryptionProvider, [in]object PasswordEncryptionAlgorithm, [in]object PasswordEncryptionKeyLength, [in]object PasswordEncryptionFileProperties) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SetPasswordEncryptionOptions(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPasswordEncryptionOptions (Optional PasswordEncryptionProvider As Object, Optional PasswordEncryptionAlgorithm As Object, Optional PasswordEncryptionKeyLength As Object, Optional PasswordEncryptionFileProperties As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2062)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PasswordEncryptionProvider" Type="System.Object" />
        <Parameter Name="PasswordEncryptionAlgorithm" Type="System.Object" />
        <Parameter Name="PasswordEncryptionKeyLength" Type="System.Object" />
        <Parameter Name="PasswordEncryptionFileProperties" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="PasswordEncryptionProvider"><b>Необязательный объект</b>. Строка с чувствительным к делу поставщиком шифрования.</param>
        <param name="PasswordEncryptionAlgorithm"><b>Необязательный объект</b>. Строка с чувствительным к делу коротким именем алгоритма (например, "RC4").</param>
        <param name="PasswordEncryptionKeyLength"><b>Необязательный объект</b>. Длина ключа шифрования, кратное 8 (40 или более).</param>
        <param name="PasswordEncryptionFileProperties"><b>Необязательный объект</b>. <b>Значение True</b> (по умолчанию) для шифрования свойств файла.</param>
        <summary>Задает параметры шифрования книг с помощью паролей.</summary>
        <remarks><para>Аргументы <paramref name="PasswordEncryptionProvider" /> <paramref name="PasswordEncryptionAlgorithm" /> и аргументы не <paramref name="PasswordEncryptionKeyLength" /> зависят друг от друга. Выбранный поставщик шифрования ограничивает набор алгоритмов и длину ключа, которые можно выбрать.</para>
          <para>Для <paramref name="PasswordEncryptionKeyLength" /> аргумента не существует ограничений по диапазону длины ключа. Диапазон определяется поставщиком служб шифрования, который также определяет алгоритм шифрования.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SharedWorkspace">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.SharedWorkspace SharedWorkspace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.SharedWorkspace SharedWorkspace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.SharedWorkspace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SharedWorkspace As SharedWorkspace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::SharedWorkspace ^ SharedWorkspace { Microsoft::Office::Core::SharedWorkspace ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2265)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2265)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.SharedWorkspace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект, который представляет область документов, в которой расположен указанный <see cref="T:Microsoft.Office.Core.SharedWorkspace" /> документ. Только для чтения.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Sheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Sheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Sheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Sheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(485)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(485)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> коллекцию, представляюную все листы в указанной книге. Объект <b>Sheets</b> только для чтения.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowConflictHistory">
      <MemberSignature Language="C#" Value="public bool ShowConflictHistory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowConflictHistory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ShowConflictHistory" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowConflictHistory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowConflictHistory { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1171)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1171)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1171)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>Имеет</b> true, если лист "Журнал конфликтов" отображается в книге, открытой как общий список. Для чтения и записи, <b>Boolean</b>.</summary>
        <value>To be added.</value>
        <remarks><para>Если указанная книга не открыта как общий список, это свойство не работает. Чтобы определить, открыта ли книга как общий список, используйте <see cref="P:Microsoft.Office.Interop.Excel._Workbook.MultiUserEditing" /> свойство.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowPivotChartActiveFields">
      <MemberSignature Language="C#" Value="public bool ShowPivotChartActiveFields { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowPivotChartActiveFields" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ShowPivotChartActiveFields" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowPivotChartActiveFields As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowPivotChartActiveFields { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2538)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2538)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2538)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Это свойство управляет видимостью сводная диаграмма фильтра. Для чтения и записи.</summary>
        <value><b>Boolean</b></value>
        <remarks><para>Это свойство управляет видимостью области сводная диаграмма фильтра (отключает или отключает ее).  Чтобы он был видимым, <b></b> необходимо выбрать сводная диаграмма объекта. </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowPivotTableFieldList">
      <MemberSignature Language="C#" Value="public bool ShowPivotTableFieldList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowPivotTableFieldList" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ShowPivotTableFieldList" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowPivotTableFieldList As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowPivotTableFieldList { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2046)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2046)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2046)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>Значение true</b> (по умолчанию), если может быть показан список полей pivotTable. Для чтения и записи, <b>Boolean</b>.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Signatures">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.SignatureSet Signatures { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.SignatureSet Signatures" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Signatures" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Signatures As SignatureSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::SignatureSet ^ Signatures { Microsoft::Office::Core::SignatureSet ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2516)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2516)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.SignatureSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает цифровые подписи для книги. Только для чтения.</summary>
        <value><see cref="T:Microsoft.Office.Core.SignatureSet" /></value>
        <remarks><para>Для цифровой подписи книг Excel2007 и проверки других подписей в них потребуется Microsoft CryptoAPI и уникальный сертификат цифровой подписи. CryptoAPI устанавливается вместе с Microsoft Internet Explorer 4.01 или более поздней. Сертификат цифровой подписи можно получить в сертификации.
</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SlicerCaches">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SlicerCaches SlicerCaches { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SlicerCaches SlicerCaches" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.SlicerCaches" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SlicerCaches As SlicerCaches" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SlicerCaches ^ SlicerCaches { Microsoft::Office::Interop::Excel::SlicerCaches ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2866)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2866)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SlicerCaches</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает <see cref="T:Microsoft.Office.Interop.Excel.SlicerCaches" /> объект, связанный с книгой.</summary>
        <value>Объект, <see cref="T:Microsoft.Office.Interop.Excel.SlicerCaches" /> связанный с книгой.</value>
        <remarks><para>Для чтения и записи.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartDocument">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.SmartDocument SmartDocument { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.SmartDocument SmartDocument" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.SmartDocument" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartDocument As SmartDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::SmartDocument ^ SmartDocument { Microsoft::Office::Core::SmartDocument ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2273)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2273)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.SmartDocument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает <see cref="T:Microsoft.Office.Core.SmartDocument" /> объект, который представляет параметры решения интеллектуального документа. Только для чтения.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartTagOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SmartTagOptions SmartTagOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SmartTagOptions SmartTagOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.SmartTagOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartTagOptions As SmartTagOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SmartTagOptions ^ SmartTagOptions { Microsoft::Office::Interop::Excel::SmartTagOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2064)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2064)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SmartTagOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает <see cref="T:Microsoft.Office.Interop.Excel.SmartTagOptions" /> объект, представляющий параметры, которые можно выполнить с помощью смарт-тега.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Styles">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Styles Styles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Styles Styles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Styles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Styles As Styles" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Styles ^ Styles { Microsoft::Office::Interop::Excel::Styles ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(493)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(493)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Styles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Styles" /> коллекцию, представляюную все стили в указанной книге. Только для чтения.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subject">
      <MemberSignature Language="C#" Value="public string Subject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Subject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Subject" />
      <MemberSignature Language="VB.NET" Value="Public Property Subject As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Subject { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(953)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(953)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(953)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Зарезервировано для внутреннего использования.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sync">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.Sync Sync { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.Sync Sync" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Sync" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sync As Sync" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::Sync ^ Sync { Microsoft::Office::Core::Sync ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2266)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2266)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.Sync</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект, который предоставляет доступ к методам и свойствам документов, которые являются частью рабочей области <see cref="T:Microsoft.Office.Core.Sync" /> документов.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TableStyles">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.TableStyles TableStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.TableStyles TableStyles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.TableStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TableStyles As TableStyles" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::TableStyles ^ TableStyles { Microsoft::Office::Interop::Excel::TableStyles ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2525)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2525)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.TableStyles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект коллекции для текущей книги, который ссылается на стили, <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> используемые в текущей книге. Только для чтения.</summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /></value>
        <remarks><para>Можно управлять стилями таблиц, возвращаемой свойством.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="TemplateRemoveExtData">
      <MemberSignature Language="C#" Value="public bool TemplateRemoveExtData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TemplateRemoveExtData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.TemplateRemoveExtData" />
      <MemberSignature Language="VB.NET" Value="Public Property TemplateRemoveExtData As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TemplateRemoveExtData { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1457)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1457)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1457)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>Имеет</b> true, если ссылки на внешние данные удаляются, когда книга сохранена в качестве шаблона. Для чтения и записи, <b>Boolean</b>.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Theme">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.OfficeTheme Theme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.OfficeTheme Theme" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Theme" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Theme As OfficeTheme" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::OfficeTheme ^ Theme { Microsoft::Office::Core::OfficeTheme ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2533)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2533)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.OfficeTheme</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает тему, примененную к текущей книге. Только для чтения.</summary>
        <value><see cref="T:Microsoft.Office.Core.OfficeTheme" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(199)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(199)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(199)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Зарезервировано для внутреннего использования.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleFormsDesign">
      <MemberSignature Language="C#" Value="public void ToggleFormsDesign ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ToggleFormsDesign() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ToggleFormsDesign" />
      <MemberSignature Language="VB.NET" Value="Public Sub ToggleFormsDesign ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ToggleFormsDesign();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2279)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Отключение или выключение режима конструктора формы.</summary>
        <remarks><para>Когда Excel находится в режиме конструктора формы, отображается панель инструментов панели инструментов для управления. Эту панель инструментов можно использовать для вставки ActiveX элементов управления, таких как кнопки команд, полосы прокрутки и кнопки выбора. В режиме конструктора формы процедуры обработки событий не запускаются, и при нажатии внедренного управления отображаются работки размеров.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Unprotect">
      <MemberSignature Language="C#" Value="public void Unprotect (object Password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unprotect([in]object Password) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Unprotect(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unprotect (Optional Password As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(285)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password"><b>Необязательный объект</b>. Строка, обозначая пароль с учетом дела, который будет применяться для сноски листа или книги. Если лист или книга не защищены паролем, этот аргумент игнорируется. Если опустить этот аргумент для листа, защищенного паролем, вам будет предложено вводить пароль. Если опустить этот аргумент для книги, защищенной паролем, метод не будет работать.</param>
        <summary>Удаляет защиту с листа или книги. Этот метод не действует, если лист или книга не защищены.</summary>
        <remarks><para>Если вы забудете пароль, вы не сможете отклонить лист или книгу. Лучше хранить список паролей и соответствующих им имен документов в надежном месте.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="UnprotectSharing">
      <MemberSignature Language="C#" Value="public void UnprotectSharing (object SharingPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnprotectSharing([in]object SharingPassword) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.UnprotectSharing(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnprotectSharing (Optional SharingPassword As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1455)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SharingPassword" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SharingPassword"><b>Необязательный объект</b>. Пароль книги.</param>
        <summary>Отключает защиту для общего доступа и сохраняет книгу.</summary>
        <remarks><para>Используйте надежные пароли, содержащие строчные и прописные буквы, цифры и знаки. В ненадежных паролях не используются сочетания таких элементов. Надежный пароль: Y6dh!et5. Слабый пароль: House27. Используйте надежный пароль, который можно запомнить, чтобы не пришлось его записывать.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateFromFile">
      <MemberSignature Language="C#" Value="public void UpdateFromFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateFromFile() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.UpdateFromFile" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateFromFile ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateFromFile();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(995)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Обновляет книгу только для чтения из сохраненной версии диска книги, если версия диска более новая, чем копия книги, загруженная в память. Если дисковая копия не изменилась с момента загрузки книги, копия книги в памяти не будет перезагружена.</summary>
        <remarks><para>Этот метод полезен, когда пользователь А открывает книгу как открытую только для чтения, а пользователь Б — как книгу для чтения и записи. Если пользователь Б сохраняет более новую версию книги на диск, а пользователь А по-прежнему открывает книгу, пользователь А не может получить обновленную копию без закрытия и повторного открытия книги и потери параметров представления. Метод <b>UpdateFromFile</b> обновляет копию книги в памяти из файла диска.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateLink">
      <MemberSignature Language="C#" Value="public void UpdateLink (object Name, object Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateLink([in]object Name, [in]object Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.UpdateLink(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateLink (Optional Name As Object, Optional Type As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(804)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
        <Parameter Name="Type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name"><b>Необязательный объект</b>. Имя обновляемой ссылки Microsoft Excel или DDE/OLE, возвращаемой <see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" /> методом.</param>
        <param name="Type">Необязательный <see cref="T:Microsoft.Office.Interop.Excel.XlLinkType" /> .</param>
        <summary>Обновляет ссылку Microsoft Excel, DDE или OLE (или ссылки).</summary>
        <remarks><para>Если метод <b>UpdateLink</b> вызван без параметров, Excel по умолчанию обновляет все ссылки на таблицы.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateLinks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlUpdateLinks UpdateLinks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlUpdateLinks UpdateLinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.UpdateLinks" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateLinks As XlUpdateLinks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlUpdateLinks UpdateLinks { Microsoft::Office::Interop::Excel::XlUpdateLinks get(); void set(Microsoft::Office::Interop::Excel::XlUpdateLinks value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(864)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(864)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(864)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlUpdateLinks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает константы, указывающие параметр книги для <see cref="T:Microsoft.Office.Interop.Excel.XlUpdateLinks" /> обновления внедренных ссылок OLE. Для чтения и записи.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateRemoteReferences">
      <MemberSignature Language="C#" Value="public bool UpdateRemoteReferences { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UpdateRemoteReferences" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.UpdateRemoteReferences" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateRemoteReferences As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UpdateRemoteReferences { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(411)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(411)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(411)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>True,</b> если Microsoft Excel обновляет удаленные ссылки в книге. Для чтения и записи, <b>Boolean</b>.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserControl">
      <MemberSignature Language="C#" Value="public bool UserControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UserControl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.UserControl" />
      <MemberSignature Language="VB.NET" Value="Public Property UserControl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UserControl { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1210)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1210)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1210)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Зарезервировано для внутреннего использования.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserStatus">
      <MemberSignature Language="C#" Value="public object UserStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object UserStatus" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.UserStatus" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserStatus As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ UserStatus { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1173)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1173)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает одномерный двумерный массив, который предоставляет сведения о каждом пользователе, у которого книга открыта как общий список. Первый элемент второго измерения — это имя пользователя, второй — дата и время последнего открытия книги пользователем, а третий элемент — число, указывающее тип списка (1 означает монопольное, а 2 — общее). Объект только для <b>чтения.</b></summary>
        <value>To be added.</value>
        <remarks><para>Свойство <b>UserStatus</b> не возвращает сведения о пользователях, для которых указанная книга открыта только для чтения.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="UseWholeCellCriteria">
      <MemberSignature Language="C#" Value="public bool UseWholeCellCriteria { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseWholeCellCriteria" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.UseWholeCellCriteria" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UseWholeCellCriteria As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseWholeCellCriteria { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3057)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3057)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>Имеет</b> true, если книга использует шаблоны поиска, которые соответствуют всему содержимому ячейки. <b>Boolean только для чтения</b> (<b>bool</b> в C#).</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseWildcards">
      <MemberSignature Language="C#" Value="public bool UseWildcards { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseWildcards" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.UseWildcards" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UseWildcards As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseWildcards { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3058)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3058)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>True,</b> если книга включает поддиапные знаки для сравнения строк символов и поиска. <b>Boolean только для чтения</b> (<b>bool</b> в C#).</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VBASigned">
      <MemberSignature Language="C#" Value="public bool VBASigned { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool VBASigned" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.VBASigned" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VBASigned As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool VBASigned { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1828)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1828)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>Имеет</b> Visual Basic для приложений, если проект указанной книги имеет цифровую подпись. Только для чтения, <b>Boolean</b>.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VBProject">
      <MemberSignature Language="C#" Value="public Microsoft.Vbe.Interop.VBProject VBProject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Vbe.Interop.VBProject VBProject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.VBProject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VBProject As VBProject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Vbe::Interop::VBProject ^ VBProject { Microsoft::Vbe::Interop::VBProject ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1469)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1469)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Vbe.Interop.VBProject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект <b>VBProject,</b> который представляет Visual Basic в указанной книге. Только для чтения.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WebOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.WebOptions WebOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.WebOptions WebOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.WebOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WebOptions As WebOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::WebOptions ^ WebOptions { Microsoft::Office::Interop::Excel::WebOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1820)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1820)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.WebOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает коллекцию, которая содержит атрибуты уровня книги, используемые Microsoft Excel при сохранения документа в качестве <see cref="T:Microsoft.Office.Interop.Excel.WebOptions" /> веб-страницы или открытия веб-страницы. Только для чтения.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WebPagePreview">
      <MemberSignature Language="C#" Value="public void WebPagePreview ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WebPagePreview() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.WebPagePreview" />
      <MemberSignature Language="VB.NET" Value="Public Sub WebPagePreview ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WebPagePreview();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1818)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Отображает предварительный просмотр указанной книги, как бы она выглядела, если бы она была сохранена как веб-страница.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Windows">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Windows Windows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Windows Windows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Windows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Windows As Windows" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Windows ^ Windows { Microsoft::Office::Interop::Excel::Windows ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(430)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(430)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Windows</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Windows" /> коллекцию, представляюную все окна в указанной книге. Объект <b>Windows</b> только для чтения.</summary>
        <value>To be added.</value>
        <remarks><para>Это свойство возвращает коллекцию видимых и скрытых окон.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Worksheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Worksheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Worksheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Worksheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Worksheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Worksheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(494)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(494)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> коллекцию, представляюную все таблицы в указанной книге. Объект <b>Sheets, только для</b> чтения.</summary>
        <value>To be added.</value>
        <remarks><para>При использовании этого свойства без квалификатора объекта возвращаются все таблицы в активной книге.</para>
          <para>Это свойство не возвращает листы макроса; используйте <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Excel4MacroSheets" /> свойство или <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Excel4IntlMacroSheets" /> свойство для возврата этих листов.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="WritePassword">
      <MemberSignature Language="C#" Value="public string WritePassword { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WritePassword" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.WritePassword" />
      <MemberSignature Language="VB.NET" Value="Public Property WritePassword As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WritePassword { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1128)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1128)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1128)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает <b>строку</b> для пароля записи книги. Для чтения и записи.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteReserved">
      <MemberSignature Language="C#" Value="public bool WriteReserved { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WriteReserved" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.WriteReserved" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WriteReserved As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WriteReserved { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(299)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(299)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>Имеет</b> true, если книга зарезервирована для записи. Только для чтения, <b>Boolean</b>.</summary>
        <value>To be added.</value>
        <remarks><para>Используйте <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> метод, чтобы установить это свойство.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteReservedBy">
      <MemberSignature Language="C#" Value="public string WriteReservedBy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WriteReservedBy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.WriteReservedBy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WriteReservedBy As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WriteReservedBy { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(300)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(300)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает имя пользователя, у которого в настоящее время есть разрешение на написание книги. Только для чтения, <b>String</b>.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlImport">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlXmlImportResult XmlImport (string Url, out Microsoft.Office.Interop.Excel.XmlMap ImportMap, object Overwrite, object Destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.Office.Interop.Excel.XlXmlImportResult XmlImport([in]string Url, [out] class Microsoft.Office.Interop.Excel.XmlMap&amp; ImportMap, [in]object Overwrite, [in]object Destination) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.XmlImport(System.String,Microsoft.Office.Interop.Excel.XmlMap@,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function XmlImport (Url As String, ByRef ImportMap As XmlMap, Optional Overwrite As Object, Optional Destination As Object) As XlXmlImportResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2270)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlXmlImportResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Url" Type="System.String" />
        <Parameter Name="ImportMap" Type="Microsoft.Office.Interop.Excel.XmlMap&amp;" RefType="out" />
        <Parameter Name="Overwrite" Type="System.Object" />
        <Parameter Name="Destination" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Url">Обязательный атрибут типа <b>String</b>. URL-адрес или UNC-путь к XML-файлу данных.</param>
        <param name="ImportMap">Обязательное <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> . Карта схемы, применяемая при импорте файла.</param>
        <param name="Overwrite"><b>Необязательный boolean</b>. Если значение параметра не задано, этот параметр указывает, следует ли переописывать данные, которые были соеданы с картой схемы, указанной в <paramref name="Destination" /> <paramref name="ImportMap" /> параметре. Установите <b>true,</b> чтобы переописать данные, или <b>False,</b> чтобы примедить новые данные к существующим данным. Значение по умолчанию — <b>True</b>. Если для параметра задано значение, этот параметр указывает, следует ли <paramref name="Destination" /> переописывать существующие данные. Установите <b>true,</b> чтобы перезаписать существующие данные, или <b>False,</b> чтобы отменить импорт, если данные будут перезаписаны. Значение по умолчанию — <b>True</b>.</param>
        <param name="Destination">Необязательный <see cref="T:Microsoft.Office.Interop.Excel.Range" /> . Данные будут импортироваться в новый XML-список в указанном диапазоне.</param>
        <summary>Импортирует XML-файл данных в текущую книгу. Возвращает <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" /> .</summary>
        <returns>To be added.</returns>
        <remarks><para>Функции XML, за исключением сохранения файлов в формате электронной таблицы XML, доступны только в Microsoft Office Professional Edition 2003 и Microsoft Office Excel 2003.</para>
          <para>Не указыйте значение для параметра, если вы хотите импортировать данные <paramref name="Destination" /> в существующее сопоставление.</para>
          <para>Следующие условия приводят к тому, что метод <b>XMLImport</b> генерирует ошибки во время работы:</para>
          <list type="bullet">
            <item>
              <description>Указанные XML-данные содержат ошибки синтаксиса.</description>
            </item>
            <item>
              <description>Процесс импорта был отменен, так как указанные данные не могут вместить их в таблицу.</description>
            </item>
          </list>
          <para>Используйте метод <see cref="M:Microsoft.Office.Interop.Excel._Workbook.XmlImportXml(System.String,Microsoft.Office.Interop.Excel.XmlMap@,System.Object,System.Object)" /> объекта <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> для импорта XML-данных, ранее загруженных в память.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlImportXml">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlXmlImportResult XmlImportXml (string Data, out Microsoft.Office.Interop.Excel.XmlMap ImportMap, object Overwrite, object Destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.Office.Interop.Excel.XlXmlImportResult XmlImportXml([in]string Data, [out] class Microsoft.Office.Interop.Excel.XmlMap&amp; ImportMap, [in]object Overwrite, [in]object Destination) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.XmlImportXml(System.String,Microsoft.Office.Interop.Excel.XmlMap@,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function XmlImportXml (Data As String, ByRef ImportMap As XmlMap, Optional Overwrite As Object, Optional Destination As Object) As XlXmlImportResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2277)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlXmlImportResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Data" Type="System.String" />
        <Parameter Name="ImportMap" Type="Microsoft.Office.Interop.Excel.XmlMap&amp;" RefType="out" />
        <Parameter Name="Overwrite" Type="System.Object" />
        <Parameter Name="Destination" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Data">Обязательный атрибут типа <b>String</b>. Импортируемые данные.</param>
        <param name="ImportMap">Обязательное <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> . Карта схемы, применяемая при импорте файла.</param>
        <param name="Overwrite"><b>Необязательный boolean</b>. Если значение параметра не задано, этот параметр указывает, следует ли переописывать данные, которые были соеданы с картой схемы, указанной в <paramref name="Destination" /> <paramref name="ImportMap" /> параметре. Установите <b>true,</b> чтобы переописать данные, или <b>False,</b> чтобы примедить новые данные к существующим данным. Значение по умолчанию — <b>True</b>. Если для параметра задано значение, этот параметр указывает, следует ли <paramref name="Destination" /> переописывать существующие данные. Установите <b>true,</b> чтобы перезаписать существующие данные, или <b>False,</b> чтобы отменить импорт, если данные будут перезаписаны. Значение по умолчанию — <b>True</b>.</param>
        <param name="Destination">Необязательный <see cref="T:Microsoft.Office.Interop.Excel.Range" /> . Данные будут импортироваться в новый XML-список в указанном диапазоне.</param>
        <summary>Импортирует XML-поток данных, ранее загруженный в память. Возвращает <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" /> .</summary>
        <returns>To be added.</returns>
        <remarks><para>Функции XML, за исключением сохранения файлов в формате электронных таблиц XML, доступны только в Microsoft Office Professional Edition 2003 и Microsoft Office Excel 2003.</para>
          <para>Не укажите значение параметра, если необходимо импортировать данные <paramref name="Destination" /> в существующее сопоставление.</para>
          <para>Следующие условия приводят к тому, что метод <b>XMLImport</b> генерирует ошибки во время работы:</para>
          <list type="bullet">
            <item>
              <description>Указанные XML-данные содержат ошибки синтаксиса.</description>
            </item>
            <item>
              <description>Процесс импорта был отменен, так как указанные данные не могут вместить их в таблицу.</description>
            </item>
          </list>
          <para>Используйте метод объекта для импорта XML-файла данных <see cref="M:Microsoft.Office.Interop.Excel._Workbook.XmlImport(System.String,Microsoft.Office.Interop.Excel.XmlMap@,System.Object,System.Object)" /> <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> в текущую книгу.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlMaps">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XmlMaps XmlMaps { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.XmlMaps XmlMaps" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.XmlMaps" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlMaps As XmlMaps" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XmlMaps ^ XmlMaps { Microsoft::Office::Interop::Excel::XmlMaps ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2269)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2269)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XmlMaps</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает <see cref="T:Microsoft.Office.Interop.Excel.XmlMaps" /> коллекцию, представляюную карты схемы, добавленные в указанную книгу. Только для чтения.</summary>
        <value>To be added.</value>
        <remarks><para>Функции XML, за исключением сохранения файлов в формате электронной таблицы XML, доступны только в Microsoft Office Professional Edition 2003 и Microsoft Office Excel 2003.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlNamespaces">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XmlNamespaces XmlNamespaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.XmlNamespaces XmlNamespaces" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.XmlNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlNamespaces As XmlNamespaces" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XmlNamespaces ^ XmlNamespaces { Microsoft::Office::Interop::Excel::XmlNamespaces ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2268)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2268)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XmlNamespaces</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает <see cref="T:Microsoft.Office.Interop.Excel.XmlNamespaces" /> коллекцию, представляюную пространства имен XML, содержащиеся в указанной книге. Только для чтения.</summary>
        <value>To be added.</value>
        <remarks><para>Функции XML, за исключением сохранения файлов в формате электронной таблицы XML, доступны только в Microsoft Office Professional Edition 2003 и Microsoft Office Excel 2003.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
